
Testing fib under Wasm PBChunk
Compiling...
./bench: line 174: wasm_pbchunk_comp: command not found
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 174: wasm_pbchunk_comp: command not found
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 174: wasm_pbchunk_comp: command not found
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
cat: (scheme-start (main)): No such file or directory
Compiling...
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 196: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 196: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
./bench: line 195: ../../../petit-larceny: No such file or directory
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> 
Exception: variable /tmp/larcenous/fib.scm.so is not bound
> 
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> 
Exception: variable /tmp/larcenous/fib.so is not bound
> 
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> 
Exception in make-boot-file: ("petite") is not a string
> 
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/fib.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/fib.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 468
instruction range for chunk: 468 496
instruction range for chunk: 512 520
instruction range for chunk: 520 532
instruction range for chunk: 536 540
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 504")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 444")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 468
i: 384
end-i: 468
at header: 384
i: 400
end-i: 468
i: 404
end-i: 468
i: 408
end-i: 468
i: 420
end-i: 468
i: 432
end-i: 468
i: 444
end-i: 468
i: 456
end-i: 468
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;456: r8 <- r5, 0x5\n")
(comment . ";;460: r4 <- 0x3")
(comment . ";;464: b r5, 13")
chunklet-i: 468; chunklet-start-i: 468; chunklet-end-i: 496
i: 468
end-i: 496
i: 468
end-i: 496
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
at header: 496
(comment . ";;468: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;476: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;492: b r6")
chunklet-i: 496; chunklet-start-i: 512; chunklet-end-i: 520
i: 496
end-i: 520
at header: 496
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;512: r1 <- r1, r8")
(comment . ";;516 b -496")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 532
i: 520
end-i: 532
i: 520
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 532; chunklet-start-i: 536; chunklet-end-i: 540
i: 532
end-i: 540
i: 536
end-i: 540
i: 540
end-i: 540
i:540 HIT CHUNK END
(comment . ";; instruction 532 not included")
(comment . ";;536 b -524")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: fib
instruction range for chunk: 0 12
instruction range for chunk: 12 24
instruction range for chunk: 24 32
instruction range for chunk: 32 36
instruction range for chunk: 36 48
instruction range for chunk: 48 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 152
instruction range for chunk: 152 160
instruction range for chunk: 160 200
instruction range for chunk: 216 240
instruction range for chunk: 240 248
instruction range for chunk: 248 256
instruction range for chunk: 256 280
instruction range for chunk: 280 320
instruction range for chunk: 336 352
instruction range for chunk: 352 392
instruction range for chunk: 408 424
instruction range for chunk: 424 456
instruction range for chunk: 472 484
instruction range for chunk: 484 496
instruction range for chunk: 500 504
instruction range for chunk: 504 512
instruction range for chunk: 512 544
instruction range for chunk: 560 568
instruction range for chunk: 568 608
instruction range for chunk: 624 644
instruction range for chunk: 644 648
instruction range for chunk: 648 664
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 636")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;12: r4 <- 0x9")
(comment . ";;16: r4 <- 0x7")
(comment . ";;20 b 480")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;24: r4 <- 0x10")
(comment . ";;28 b 4")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: b r1, 0")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 48
i: 36
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;36: r15 <- r0, 0x58\n")
(comment . ";;40: r1 <- r15")
(comment . ";;44 b 436")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 56
i: 48
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";;48: r3 <- r3, 0x1\n")
(comment . ";;52 b 368")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r4 <- 0x7")
(comment . ";;60 b 288")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r4, 0x8\n")
(comment . ";;68 b 280")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r4 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 152
i: 112
end-i: 152
at header: 112
i: 128
end-i: 152
i: 132
end-i: 152
i: 136
end-i: 152
i: 140
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r9 <- 0x4")
(comment . ";;136: r4 <- r1, 0x8\n")
(comment . ";;140: r15 <- 0x9")
(comment . ";;144: r4 <- 0x7")
(comment . ";;148 b 128")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r9 <- r4, 0x10\n")
(comment . ";;156 b 120")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 200
i: 160
end-i: 200
i: 160
end-i: 200
i: 164
end-i: 200
i: 168
end-i: 200
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
at header: 200
(comment . ";;160: r15 <- r1, 0x10\n")
(comment . ";;164: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;180: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;188: r15 <- r1, 0x0\n")
(comment . ";;192: r4 <- 0x1")
(comment . ";;196: b r5, 13")
chunklet-i: 200; chunklet-start-i: 216; chunklet-end-i: 240
i: 200
end-i: 240
at header: 200
i: 216
end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 228
end-i: 240
i: 232
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
i:240 HIT CHUNK END
(comment . ";;216: r1 <- r1, r8")
(comment . ";;220: r15 <- r1, 0x10\n")
(comment . ";;224: r14 <- r15, r4")
(comment . ";;228: r14 <- 0x7")
(comment . ";;236 b 16")
chunklet-i: 240; chunklet-start-i: 240; chunklet-end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;240: r14 <- r15, r4")
(comment . ";;244 b 8")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r4 <- 0xE")
(comment . ";;252: b r1, 0")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 280
i: 256
end-i: 280
i: 256
end-i: 280
i: 260
end-i: 280
i: 264
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";;256: r9 <- 0xF")
(comment . ";;260: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;276: b r6")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 320
i: 280
end-i: 320
i: 280
end-i: 320
i: 284
end-i: 320
i: 288
end-i: 320
i: 292
end-i: 320
i: 296
end-i: 320
i: 300
end-i: 320
i: 304
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
at header: 320
(comment . ";;280: r9 <- 0x4")
(comment . ";;284: r10 <- 0x10")
(comment . ";;288: r15 <- r1, 0x10\n")
(comment . ";;292: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;300: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;316: b r6")
chunklet-i: 320; chunklet-start-i: 336; chunklet-end-i: 352
i: 320
end-i: 352
at header: 320
i: 336
end-i: 352
i: 340
end-i: 352
i: 344
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";;336: r1 <- r1, r8")
(comment . ";;340: r9 <- 0x4")
(comment . ";;344: r15 <- r1, 0x10\n")
(comment . ";;348 b -192")
chunklet-i: 352; chunklet-start-i: 352; chunklet-end-i: 392
i: 352
end-i: 392
i: 352
end-i: 392
i: 356
end-i: 392
i: 360
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;352: r9 <- 0x4")
(comment . ";;356: r10 <- 0x8")
(comment . ";;360: r4 <- r1, 0x8\n")
(comment . ";;364: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 424
i: 392
end-i: 424
at header: 392
i: 408
end-i: 424
i: 412
end-i: 424
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;408: r1 <- r1, r0")
(comment . ";;412: r9 <- 0x4")
(comment . ";;416: r4 <- r1, 0x8\n")
(comment . ";;420 b -352")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 456
i: 424
end-i: 456
i: 424
end-i: 456
i: 428
end-i: 456
i: 432
end-i: 456
i: 436
end-i: 456
i: 440
end-i: 456
i: 452
end-i: 456
i: 456
end-i: 456
at header: 456
(comment . ";;424: r4 <- r1, 0x8\n")
(comment . ";;428: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;452: b r6")
chunklet-i: 456; chunklet-start-i: 472; chunklet-end-i: 484
i: 456
end-i: 484
at header: 456
i: 472
end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;472: r1 <- r1, r0")
(comment . ";;476: r4 <- r1, 0x8\n")
(comment . ";;480 b -428")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 496
i: 484
end-i: 496
i: 484
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 496; chunklet-start-i: 500; chunklet-end-i: 504
i: 496
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
i:504 HIT CHUNK END
(comment . ";; instruction 496 not included")
(comment . ";;500 b -456")
chunklet-i: 504; chunklet-start-i: 504; chunklet-end-i: 512
i: 504
end-i: 512
i: 504
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;504: r3 <- r3, 0x1\n")
(comment . ";;508 b 56")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 544
i: 512
end-i: 544
i: 516
end-i: 544
i: 520
end-i: 544
i: 524
end-i: 544
i: 528
end-i: 544
i: 540
end-i: 544
i: 544
end-i: 544
at header: 544
(comment . ";;512: r4 <- r1, 0x8\n")
(comment . ";;516: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;524: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;540: b r6")
chunklet-i: 544; chunklet-start-i: 560; chunklet-end-i: 568
i: 544
end-i: 568
at header: 544
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;560: r1 <- r1, r0")
(comment . ";;564: r4 <- r1, 0x8\n")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 608
i: 568
end-i: 608
i: 568
end-i: 608
i: 572
end-i: 608
i: 576
end-i: 608
i: 580
end-i: 608
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
at header: 608
(comment . ";;568: r9 <- 0x4")
(comment . ";;572: r10 <- 0x10")
(comment . ";;576: r4 <- r1, 0x8\n")
(comment . ";;580: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;604: b r6")
chunklet-i: 608; chunklet-start-i: 624; chunklet-end-i: 644
i: 608
end-i: 644
at header: 608
i: 624
end-i: 644
i: 628
end-i: 644
i: 632
end-i: 644
i: 636
end-i: 644
i: 640
end-i: 644
i: 644
end-i: 644
i:644 HIT CHUNK END
(comment . ";;624: r1 <- r1, r0")
(comment . ";;628: r15 <- 0x4")
(comment . ";;632: r4 <- r1, 0x8\n")
(comment . ";;636: r15 <- 0x6")
(comment . ";;640 b -608")
chunklet-i: 644; chunklet-start-i: 644; chunklet-end-i: 648
i: 644
end-i: 648
i: 648
end-i: 648
i:648 HIT CHUNK END
(comment . ";;644 b -616")
chunklet-i: 648; chunklet-start-i: 648; chunklet-end-i: 664
i: 648
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
i:664 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;660: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 28
instruction range for chunk: 28 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 96
instruction range for chunk: 112 124
instruction range for chunk: 124 140
instruction range for chunk: 140 156
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 128")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 28
i: 12
end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;12: r10 <- r8, 0xB\n")
(comment . ";;16: r15 <- r9, r10")
(comment . ";;20: r15 <- 0x7")
(comment . ";;24 b 24")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r9 <- r10")
(comment . ";;32 b 8")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r4 <- 0xE")
(comment . ";;40: b r1, 0")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r4 <- 0x6")
(comment . ";;48: b r1, 0")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r3 <- r3, 0x1\n")
(comment . ";;56 b 64")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r9 <- r1, 0x8\n")
(comment . ";;64: r10 <- r1, 0x10\n")
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 124
i: 96
end-i: 124
at header: 96
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116: r9 <- r1, 0x8\n")
(comment . ";;120: r10 <- r1, 0x10\n")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 140
i: 124
end-i: 140
i: 124
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;136: b r6")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 56
instruction range for chunk: 72 104
instruction range for chunk: 104 108
instruction range for chunk: 108 136
instruction range for chunk: 152 160
instruction range for chunk: 160 172
instruction range for chunk: 176 180
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;0: r15 <- r0, 0x58\n")
(comment . ";;4: r1 <- r15")
(comment . ";;8 b 148")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r3 <- r3, 0x1\n")
(comment . ";;16 b 88")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 56
i: 20
end-i: 56
i: 20
end-i: 56
i: 24
end-i: 56
i: 36
end-i: 56
i: 40
end-i: 56
i: 44
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
at header: 56
(comment . ";;20: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;36: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;44: r15 <- r1, 0x0\n")
(comment . ";;48: r4 <- 0x0")
(comment . ";;52: b r5, 13")
chunklet-i: 56; chunklet-start-i: 72; chunklet-end-i: 104
i: 56
end-i: 104
at header: 56
i: 72
end-i: 104
i: 76
end-i: 104
i: 80
end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;72: r1 <- r1, r8")
(comment . ";;76: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";;96: r4 <- 0x1")
(comment . ";;100: b r5, 13")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 136
i: 108
end-i: 136
i: 108
end-i: 136
i: 112
end-i: 136
i: 116
end-i: 136
i: 120
end-i: 136
i: 132
end-i: 136
i: 136
end-i: 136
at header: 136
(comment . ";;108: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;116: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;132: b r6")
chunklet-i: 136; chunklet-start-i: 152; chunklet-end-i: 160
i: 136
end-i: 160
at header: 136
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r1 <- r1, r8")
(comment . ";;156 b -140")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 172
i: 160
end-i: 172
i: 160
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 172; chunklet-start-i: 176; chunklet-end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";; instruction 172 not included")
(comment . ";;176 b -168")
Configuring for pb64l in em-pb64l
bin/zuo em-pb64l MAKE="/Applications/Xcode.app/Contents/Developer/usr/bin/make"
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_fib0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
wat2wasm -r -o em-pb64l/c/pbchunk_fib0.wasm pbchunk-out/pbchunk_fib0.wat
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_fib0.wasm
missing input file: "pbchunk-out/bench.boot"
 in build-input-or-unbuilt
 in do-build
 in foldl
 in build-unbuilt {2}
 in target em-pb64l/bin/pb64l/scheme.html
 in target build
 in do-build
 in foldl
 in build-unbuilt {2}
 in target build
 in do-build
 in build-one
 in loop
 in module->hash
make: *** [build] Error 1
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/fib.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/fib.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 468
instruction range for chunk: 468 496
instruction range for chunk: 512 520
instruction range for chunk: 520 532
instruction range for chunk: 536 540
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 504")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 444")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 468
i: 384
end-i: 468
at header: 384
i: 400
end-i: 468
i: 404
end-i: 468
i: 408
end-i: 468
i: 420
end-i: 468
i: 432
end-i: 468
i: 444
end-i: 468
i: 456
end-i: 468
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;456: r8 <- r5, 0x5\n")
(comment . ";;460: r4 <- 0x3")
(comment . ";;464: b r5, 13")
chunklet-i: 468; chunklet-start-i: 468; chunklet-end-i: 496
i: 468
end-i: 496
i: 468
end-i: 496
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
at header: 496
(comment . ";;468: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;476: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;492: b r6")
chunklet-i: 496; chunklet-start-i: 512; chunklet-end-i: 520
i: 496
end-i: 520
at header: 496
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;512: r1 <- r1, r8")
(comment . ";;516 b -496")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 532
i: 520
end-i: 532
i: 520
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 532; chunklet-start-i: 536; chunklet-end-i: 540
i: 532
end-i: 540
i: 536
end-i: 540
i: 540
end-i: 540
i:540 HIT CHUNK END
(comment . ";; instruction 532 not included")
(comment . ";;536 b -524")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: fib
instruction range for chunk: 0 12
instruction range for chunk: 12 24
instruction range for chunk: 24 32
instruction range for chunk: 32 36
instruction range for chunk: 36 48
instruction range for chunk: 48 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 152
instruction range for chunk: 152 160
instruction range for chunk: 160 200
instruction range for chunk: 216 240
instruction range for chunk: 240 248
instruction range for chunk: 248 256
instruction range for chunk: 256 280
instruction range for chunk: 280 320
instruction range for chunk: 336 352
instruction range for chunk: 352 392
instruction range for chunk: 408 424
instruction range for chunk: 424 456
instruction range for chunk: 472 484
instruction range for chunk: 484 496
instruction range for chunk: 500 504
instruction range for chunk: 504 512
instruction range for chunk: 512 544
instruction range for chunk: 560 568
instruction range for chunk: 568 608
instruction range for chunk: 624 644
instruction range for chunk: 644 648
instruction range for chunk: 648 664
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 636")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;12: r4 <- 0x9")
(comment . ";;16: r4 <- 0x7")
(comment . ";;20 b 480")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;24: r4 <- 0x10")
(comment . ";;28 b 4")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: b r1, 0")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 48
i: 36
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;36: r15 <- r0, 0x58\n")
(comment . ";;40: r1 <- r15")
(comment . ";;44 b 436")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 56
i: 48
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";;48: r3 <- r3, 0x1\n")
(comment . ";;52 b 368")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r4 <- 0x7")
(comment . ";;60 b 288")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r4, 0x8\n")
(comment . ";;68 b 280")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r4 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 152
i: 112
end-i: 152
at header: 112
i: 128
end-i: 152
i: 132
end-i: 152
i: 136
end-i: 152
i: 140
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r9 <- 0x4")
(comment . ";;136: r4 <- r1, 0x8\n")
(comment . ";;140: r15 <- 0x9")
(comment . ";;144: r4 <- 0x7")
(comment . ";;148 b 128")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r9 <- r4, 0x10\n")
(comment . ";;156 b 120")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 200
i: 160
end-i: 200
i: 160
end-i: 200
i: 164
end-i: 200
i: 168
end-i: 200
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
at header: 200
(comment . ";;160: r15 <- r1, 0x10\n")
(comment . ";;164: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;180: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;188: r15 <- r1, 0x0\n")
(comment . ";;192: r4 <- 0x1")
(comment . ";;196: b r5, 13")
chunklet-i: 200; chunklet-start-i: 216; chunklet-end-i: 240
i: 200
end-i: 240
at header: 200
i: 216
end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 228
end-i: 240
i: 232
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
i:240 HIT CHUNK END
(comment . ";;216: r1 <- r1, r8")
(comment . ";;220: r15 <- r1, 0x10\n")
(comment . ";;224: r14 <- r15, r4")
(comment . ";;228: r14 <- 0x7")
(comment . ";;236 b 16")
chunklet-i: 240; chunklet-start-i: 240; chunklet-end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;240: r14 <- r15, r4")
(comment . ";;244 b 8")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r4 <- 0xE")
(comment . ";;252: b r1, 0")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 280
i: 256
end-i: 280
i: 256
end-i: 280
i: 260
end-i: 280
i: 264
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";;256: r9 <- 0xF")
(comment . ";;260: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;276: b r6")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 320
i: 280
end-i: 320
i: 280
end-i: 320
i: 284
end-i: 320
i: 288
end-i: 320
i: 292
end-i: 320
i: 296
end-i: 320
i: 300
end-i: 320
i: 304
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
at header: 320
(comment . ";;280: r9 <- 0x4")
(comment . ";;284: r10 <- 0x10")
(comment . ";;288: r15 <- r1, 0x10\n")
(comment . ";;292: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;300: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;316: b r6")
chunklet-i: 320; chunklet-start-i: 336; chunklet-end-i: 352
i: 320
end-i: 352
at header: 320
i: 336
end-i: 352
i: 340
end-i: 352
i: 344
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";;336: r1 <- r1, r8")
(comment . ";;340: r9 <- 0x4")
(comment . ";;344: r15 <- r1, 0x10\n")
(comment . ";;348 b -192")
chunklet-i: 352; chunklet-start-i: 352; chunklet-end-i: 392
i: 352
end-i: 392
i: 352
end-i: 392
i: 356
end-i: 392
i: 360
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;352: r9 <- 0x4")
(comment . ";;356: r10 <- 0x8")
(comment . ";;360: r4 <- r1, 0x8\n")
(comment . ";;364: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 424
i: 392
end-i: 424
at header: 392
i: 408
end-i: 424
i: 412
end-i: 424
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;408: r1 <- r1, r0")
(comment . ";;412: r9 <- 0x4")
(comment . ";;416: r4 <- r1, 0x8\n")
(comment . ";;420 b -352")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 456
i: 424
end-i: 456
i: 424
end-i: 456
i: 428
end-i: 456
i: 432
end-i: 456
i: 436
end-i: 456
i: 440
end-i: 456
i: 452
end-i: 456
i: 456
end-i: 456
at header: 456
(comment . ";;424: r4 <- r1, 0x8\n")
(comment . ";;428: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;452: b r6")
chunklet-i: 456; chunklet-start-i: 472; chunklet-end-i: 484
i: 456
end-i: 484
at header: 456
i: 472
end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;472: r1 <- r1, r0")
(comment . ";;476: r4 <- r1, 0x8\n")
(comment . ";;480 b -428")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 496
i: 484
end-i: 496
i: 484
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 496; chunklet-start-i: 500; chunklet-end-i: 504
i: 496
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
i:504 HIT CHUNK END
(comment . ";; instruction 496 not included")
(comment . ";;500 b -456")
chunklet-i: 504; chunklet-start-i: 504; chunklet-end-i: 512
i: 504
end-i: 512
i: 504
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;504: r3 <- r3, 0x1\n")
(comment . ";;508 b 56")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 544
i: 512
end-i: 544
i: 516
end-i: 544
i: 520
end-i: 544
i: 524
end-i: 544
i: 528
end-i: 544
i: 540
end-i: 544
i: 544
end-i: 544
at header: 544
(comment . ";;512: r4 <- r1, 0x8\n")
(comment . ";;516: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;524: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;540: b r6")
chunklet-i: 544; chunklet-start-i: 560; chunklet-end-i: 568
i: 544
end-i: 568
at header: 544
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;560: r1 <- r1, r0")
(comment . ";;564: r4 <- r1, 0x8\n")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 608
i: 568
end-i: 608
i: 568
end-i: 608
i: 572
end-i: 608
i: 576
end-i: 608
i: 580
end-i: 608
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
at header: 608
(comment . ";;568: r9 <- 0x4")
(comment . ";;572: r10 <- 0x10")
(comment . ";;576: r4 <- r1, 0x8\n")
(comment . ";;580: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;604: b r6")
chunklet-i: 608; chunklet-start-i: 624; chunklet-end-i: 644
i: 608
end-i: 644
at header: 608
i: 624
end-i: 644
i: 628
end-i: 644
i: 632
end-i: 644
i: 636
end-i: 644
i: 640
end-i: 644
i: 644
end-i: 644
i:644 HIT CHUNK END
(comment . ";;624: r1 <- r1, r0")
(comment . ";;628: r15 <- 0x4")
(comment . ";;632: r4 <- r1, 0x8\n")
(comment . ";;636: r15 <- 0x6")
(comment . ";;640 b -608")
chunklet-i: 644; chunklet-start-i: 644; chunklet-end-i: 648
i: 644
end-i: 648
i: 648
end-i: 648
i:648 HIT CHUNK END
(comment . ";;644 b -616")
chunklet-i: 648; chunklet-start-i: 648; chunklet-end-i: 664
i: 648
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
i:664 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;660: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 28
instruction range for chunk: 28 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 96
instruction range for chunk: 112 124
instruction range for chunk: 124 140
instruction range for chunk: 140 156
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 128")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 28
i: 12
end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;12: r10 <- r8, 0xB\n")
(comment . ";;16: r15 <- r9, r10")
(comment . ";;20: r15 <- 0x7")
(comment . ";;24 b 24")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r9 <- r10")
(comment . ";;32 b 8")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r4 <- 0xE")
(comment . ";;40: b r1, 0")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r4 <- 0x6")
(comment . ";;48: b r1, 0")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r3 <- r3, 0x1\n")
(comment . ";;56 b 64")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r9 <- r1, 0x8\n")
(comment . ";;64: r10 <- r1, 0x10\n")
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 124
i: 96
end-i: 124
at header: 96
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116: r9 <- r1, 0x8\n")
(comment . ";;120: r10 <- r1, 0x10\n")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 140
i: 124
end-i: 140
i: 124
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;136: b r6")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 56
instruction range for chunk: 72 104
instruction range for chunk: 104 108
instruction range for chunk: 108 136
instruction range for chunk: 152 160
instruction range for chunk: 160 172
instruction range for chunk: 176 180
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;0: r15 <- r0, 0x58\n")
(comment . ";;4: r1 <- r15")
(comment . ";;8 b 148")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r3 <- r3, 0x1\n")
(comment . ";;16 b 88")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 56
i: 20
end-i: 56
i: 20
end-i: 56
i: 24
end-i: 56
i: 36
end-i: 56
i: 40
end-i: 56
i: 44
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
at header: 56
(comment . ";;20: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;36: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;44: r15 <- r1, 0x0\n")
(comment . ";;48: r4 <- 0x0")
(comment . ";;52: b r5, 13")
chunklet-i: 56; chunklet-start-i: 72; chunklet-end-i: 104
i: 56
end-i: 104
at header: 56
i: 72
end-i: 104
i: 76
end-i: 104
i: 80
end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;72: r1 <- r1, r8")
(comment . ";;76: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";;96: r4 <- 0x1")
(comment . ";;100: b r5, 13")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 136
i: 108
end-i: 136
i: 108
end-i: 136
i: 112
end-i: 136
i: 116
end-i: 136
i: 120
end-i: 136
i: 132
end-i: 136
i: 136
end-i: 136
at header: 136
(comment . ";;108: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;116: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;132: b r6")
chunklet-i: 136; chunklet-start-i: 152; chunklet-end-i: 160
i: 136
end-i: 160
at header: 136
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r1 <- r1, r8")
(comment . ";;156 b -140")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 172
i: 160
end-i: 172
i: 160
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 172; chunklet-start-i: 176; chunklet-end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";; instruction 172 not included")
(comment . ";;176 b -168")
Configuring for pb64l in em-pb64l
bin/zuo em-pb64l MAKE="/Applications/Xcode.app/Contents/Developer/usr/bin/make"
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_fib0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_fib0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
missing input file: "pbchunk-out/BOOT_NAME"
 in build-input-or-unbuilt
 in do-build
 in foldl
 in build-unbuilt {2}
 in target em-pb64l/bin/pb64l/scheme.html
 in target build
 in do-build
 in foldl
 in build-unbuilt {2}
 in target build
 in do-build
 in build-one
 in loop
 in module->hash
make: *** [build] Error 1
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/fib.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/fib.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 468
instruction range for chunk: 468 496
instruction range for chunk: 512 520
instruction range for chunk: 520 532
instruction range for chunk: 536 540
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 504")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 444")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 468
i: 384
end-i: 468
at header: 384
i: 400
end-i: 468
i: 404
end-i: 468
i: 408
end-i: 468
i: 420
end-i: 468
i: 432
end-i: 468
i: 444
end-i: 468
i: 456
end-i: 468
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;456: r8 <- r5, 0x5\n")
(comment . ";;460: r4 <- 0x3")
(comment . ";;464: b r5, 13")
chunklet-i: 468; chunklet-start-i: 468; chunklet-end-i: 496
i: 468
end-i: 496
i: 468
end-i: 496
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
at header: 496
(comment . ";;468: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;476: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;492: b r6")
chunklet-i: 496; chunklet-start-i: 512; chunklet-end-i: 520
i: 496
end-i: 520
at header: 496
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;512: r1 <- r1, r8")
(comment . ";;516 b -496")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 532
i: 520
end-i: 532
i: 520
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 532; chunklet-start-i: 536; chunklet-end-i: 540
i: 532
end-i: 540
i: 536
end-i: 540
i: 540
end-i: 540
i:540 HIT CHUNK END
(comment . ";; instruction 532 not included")
(comment . ";;536 b -524")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: fib
instruction range for chunk: 0 12
instruction range for chunk: 12 24
instruction range for chunk: 24 32
instruction range for chunk: 32 36
instruction range for chunk: 36 48
instruction range for chunk: 48 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 152
instruction range for chunk: 152 160
instruction range for chunk: 160 200
instruction range for chunk: 216 240
instruction range for chunk: 240 248
instruction range for chunk: 248 256
instruction range for chunk: 256 280
instruction range for chunk: 280 320
instruction range for chunk: 336 352
instruction range for chunk: 352 392
instruction range for chunk: 408 424
instruction range for chunk: 424 456
instruction range for chunk: 472 484
instruction range for chunk: 484 496
instruction range for chunk: 500 504
instruction range for chunk: 504 512
instruction range for chunk: 512 544
instruction range for chunk: 560 568
instruction range for chunk: 568 608
instruction range for chunk: 624 644
instruction range for chunk: 644 648
instruction range for chunk: 648 664
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 636")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;12: r4 <- 0x9")
(comment . ";;16: r4 <- 0x7")
(comment . ";;20 b 480")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;24: r4 <- 0x10")
(comment . ";;28 b 4")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: b r1, 0")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 48
i: 36
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;36: r15 <- r0, 0x58\n")
(comment . ";;40: r1 <- r15")
(comment . ";;44 b 436")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 56
i: 48
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";;48: r3 <- r3, 0x1\n")
(comment . ";;52 b 368")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r4 <- 0x7")
(comment . ";;60 b 288")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r4, 0x8\n")
(comment . ";;68 b 280")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r4 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 152
i: 112
end-i: 152
at header: 112
i: 128
end-i: 152
i: 132
end-i: 152
i: 136
end-i: 152
i: 140
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r9 <- 0x4")
(comment . ";;136: r4 <- r1, 0x8\n")
(comment . ";;140: r15 <- 0x9")
(comment . ";;144: r4 <- 0x7")
(comment . ";;148 b 128")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r9 <- r4, 0x10\n")
(comment . ";;156 b 120")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 200
i: 160
end-i: 200
i: 160
end-i: 200
i: 164
end-i: 200
i: 168
end-i: 200
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
at header: 200
(comment . ";;160: r15 <- r1, 0x10\n")
(comment . ";;164: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;180: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;188: r15 <- r1, 0x0\n")
(comment . ";;192: r4 <- 0x1")
(comment . ";;196: b r5, 13")
chunklet-i: 200; chunklet-start-i: 216; chunklet-end-i: 240
i: 200
end-i: 240
at header: 200
i: 216
end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 228
end-i: 240
i: 232
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
i:240 HIT CHUNK END
(comment . ";;216: r1 <- r1, r8")
(comment . ";;220: r15 <- r1, 0x10\n")
(comment . ";;224: r14 <- r15, r4")
(comment . ";;228: r14 <- 0x7")
(comment . ";;236 b 16")
chunklet-i: 240; chunklet-start-i: 240; chunklet-end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;240: r14 <- r15, r4")
(comment . ";;244 b 8")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r4 <- 0xE")
(comment . ";;252: b r1, 0")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 280
i: 256
end-i: 280
i: 256
end-i: 280
i: 260
end-i: 280
i: 264
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";;256: r9 <- 0xF")
(comment . ";;260: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;276: b r6")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 320
i: 280
end-i: 320
i: 280
end-i: 320
i: 284
end-i: 320
i: 288
end-i: 320
i: 292
end-i: 320
i: 296
end-i: 320
i: 300
end-i: 320
i: 304
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
at header: 320
(comment . ";;280: r9 <- 0x4")
(comment . ";;284: r10 <- 0x10")
(comment . ";;288: r15 <- r1, 0x10\n")
(comment . ";;292: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;300: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;316: b r6")
chunklet-i: 320; chunklet-start-i: 336; chunklet-end-i: 352
i: 320
end-i: 352
at header: 320
i: 336
end-i: 352
i: 340
end-i: 352
i: 344
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";;336: r1 <- r1, r8")
(comment . ";;340: r9 <- 0x4")
(comment . ";;344: r15 <- r1, 0x10\n")
(comment . ";;348 b -192")
chunklet-i: 352; chunklet-start-i: 352; chunklet-end-i: 392
i: 352
end-i: 392
i: 352
end-i: 392
i: 356
end-i: 392
i: 360
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;352: r9 <- 0x4")
(comment . ";;356: r10 <- 0x8")
(comment . ";;360: r4 <- r1, 0x8\n")
(comment . ";;364: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 424
i: 392
end-i: 424
at header: 392
i: 408
end-i: 424
i: 412
end-i: 424
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;408: r1 <- r1, r0")
(comment . ";;412: r9 <- 0x4")
(comment . ";;416: r4 <- r1, 0x8\n")
(comment . ";;420 b -352")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 456
i: 424
end-i: 456
i: 424
end-i: 456
i: 428
end-i: 456
i: 432
end-i: 456
i: 436
end-i: 456
i: 440
end-i: 456
i: 452
end-i: 456
i: 456
end-i: 456
at header: 456
(comment . ";;424: r4 <- r1, 0x8\n")
(comment . ";;428: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;452: b r6")
chunklet-i: 456; chunklet-start-i: 472; chunklet-end-i: 484
i: 456
end-i: 484
at header: 456
i: 472
end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;472: r1 <- r1, r0")
(comment . ";;476: r4 <- r1, 0x8\n")
(comment . ";;480 b -428")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 496
i: 484
end-i: 496
i: 484
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 496; chunklet-start-i: 500; chunklet-end-i: 504
i: 496
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
i:504 HIT CHUNK END
(comment . ";; instruction 496 not included")
(comment . ";;500 b -456")
chunklet-i: 504; chunklet-start-i: 504; chunklet-end-i: 512
i: 504
end-i: 512
i: 504
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;504: r3 <- r3, 0x1\n")
(comment . ";;508 b 56")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 544
i: 512
end-i: 544
i: 516
end-i: 544
i: 520
end-i: 544
i: 524
end-i: 544
i: 528
end-i: 544
i: 540
end-i: 544
i: 544
end-i: 544
at header: 544
(comment . ";;512: r4 <- r1, 0x8\n")
(comment . ";;516: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;524: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;540: b r6")
chunklet-i: 544; chunklet-start-i: 560; chunklet-end-i: 568
i: 544
end-i: 568
at header: 544
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;560: r1 <- r1, r0")
(comment . ";;564: r4 <- r1, 0x8\n")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 608
i: 568
end-i: 608
i: 568
end-i: 608
i: 572
end-i: 608
i: 576
end-i: 608
i: 580
end-i: 608
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
at header: 608
(comment . ";;568: r9 <- 0x4")
(comment . ";;572: r10 <- 0x10")
(comment . ";;576: r4 <- r1, 0x8\n")
(comment . ";;580: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;604: b r6")
chunklet-i: 608; chunklet-start-i: 624; chunklet-end-i: 644
i: 608
end-i: 644
at header: 608
i: 624
end-i: 644
i: 628
end-i: 644
i: 632
end-i: 644
i: 636
end-i: 644
i: 640
end-i: 644
i: 644
end-i: 644
i:644 HIT CHUNK END
(comment . ";;624: r1 <- r1, r0")
(comment . ";;628: r15 <- 0x4")
(comment . ";;632: r4 <- r1, 0x8\n")
(comment . ";;636: r15 <- 0x6")
(comment . ";;640 b -608")
chunklet-i: 644; chunklet-start-i: 644; chunklet-end-i: 648
i: 644
end-i: 648
i: 648
end-i: 648
i:648 HIT CHUNK END
(comment . ";;644 b -616")
chunklet-i: 648; chunklet-start-i: 648; chunklet-end-i: 664
i: 648
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
i:664 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;660: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 28
instruction range for chunk: 28 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 96
instruction range for chunk: 112 124
instruction range for chunk: 124 140
instruction range for chunk: 140 156
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 128")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 28
i: 12
end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;12: r10 <- r8, 0xB\n")
(comment . ";;16: r15 <- r9, r10")
(comment . ";;20: r15 <- 0x7")
(comment . ";;24 b 24")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r9 <- r10")
(comment . ";;32 b 8")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r4 <- 0xE")
(comment . ";;40: b r1, 0")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r4 <- 0x6")
(comment . ";;48: b r1, 0")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r3 <- r3, 0x1\n")
(comment . ";;56 b 64")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r9 <- r1, 0x8\n")
(comment . ";;64: r10 <- r1, 0x10\n")
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 124
i: 96
end-i: 124
at header: 96
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116: r9 <- r1, 0x8\n")
(comment . ";;120: r10 <- r1, 0x10\n")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 140
i: 124
end-i: 140
i: 124
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;136: b r6")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 56
instruction range for chunk: 72 104
instruction range for chunk: 104 108
instruction range for chunk: 108 136
instruction range for chunk: 152 160
instruction range for chunk: 160 172
instruction range for chunk: 176 180
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;0: r15 <- r0, 0x58\n")
(comment . ";;4: r1 <- r15")
(comment . ";;8 b 148")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r3 <- r3, 0x1\n")
(comment . ";;16 b 88")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 56
i: 20
end-i: 56
i: 20
end-i: 56
i: 24
end-i: 56
i: 36
end-i: 56
i: 40
end-i: 56
i: 44
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
at header: 56
(comment . ";;20: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;36: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;44: r15 <- r1, 0x0\n")
(comment . ";;48: r4 <- 0x0")
(comment . ";;52: b r5, 13")
chunklet-i: 56; chunklet-start-i: 72; chunklet-end-i: 104
i: 56
end-i: 104
at header: 56
i: 72
end-i: 104
i: 76
end-i: 104
i: 80
end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;72: r1 <- r1, r8")
(comment . ";;76: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";;96: r4 <- 0x1")
(comment . ";;100: b r5, 13")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 136
i: 108
end-i: 136
i: 108
end-i: 136
i: 112
end-i: 136
i: 116
end-i: 136
i: 120
end-i: 136
i: 132
end-i: 136
i: 136
end-i: 136
at header: 136
(comment . ";;108: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;116: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;132: b r6")
chunklet-i: 136; chunklet-start-i: 152; chunklet-end-i: 160
i: 136
end-i: 160
at header: 136
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r1 <- r1, r8")
(comment . ";;156 b -140")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 172
i: 160
end-i: 172
i: 160
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 172; chunklet-start-i: 176; chunklet-end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";; instruction 172 not included")
(comment . ";;176 b -168")
Configuring for pb64l in em-pb64l
bin/zuo em-pb64l MAKE="/Applications/Xcode.app/Contents/Developer/usr/bin/make"
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_fib0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_fib0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
missing input file: "pbchunk-out/tmp/larcenous/fib.boot"
 in build-input-or-unbuilt
 in do-build
 in foldl
 in build-unbuilt {2}
 in target em-pb64l/bin/pb64l/scheme.html
 in target build
 in do-build
 in foldl
 in build-unbuilt {2}
 in target build
 in do-build
 in build-one
 in loop
 in module->hash
make: *** [build] Error 1
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/fib.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/fib.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 468
instruction range for chunk: 468 496
instruction range for chunk: 512 520
instruction range for chunk: 520 532
instruction range for chunk: 536 540
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 504")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 444")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 468
i: 384
end-i: 468
at header: 384
i: 400
end-i: 468
i: 404
end-i: 468
i: 408
end-i: 468
i: 420
end-i: 468
i: 432
end-i: 468
i: 444
end-i: 468
i: 456
end-i: 468
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;456: r8 <- r5, 0x5\n")
(comment . ";;460: r4 <- 0x3")
(comment . ";;464: b r5, 13")
chunklet-i: 468; chunklet-start-i: 468; chunklet-end-i: 496
i: 468
end-i: 496
i: 468
end-i: 496
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
at header: 496
(comment . ";;468: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;476: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;492: b r6")
chunklet-i: 496; chunklet-start-i: 512; chunklet-end-i: 520
i: 496
end-i: 520
at header: 496
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;512: r1 <- r1, r8")
(comment . ";;516 b -496")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 532
i: 520
end-i: 532
i: 520
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 532; chunklet-start-i: 536; chunklet-end-i: 540
i: 532
end-i: 540
i: 536
end-i: 540
i: 540
end-i: 540
i:540 HIT CHUNK END
(comment . ";; instruction 532 not included")
(comment . ";;536 b -524")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: fib
instruction range for chunk: 0 12
instruction range for chunk: 12 24
instruction range for chunk: 24 32
instruction range for chunk: 32 36
instruction range for chunk: 36 48
instruction range for chunk: 48 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 152
instruction range for chunk: 152 160
instruction range for chunk: 160 200
instruction range for chunk: 216 240
instruction range for chunk: 240 248
instruction range for chunk: 248 256
instruction range for chunk: 256 280
instruction range for chunk: 280 320
instruction range for chunk: 336 352
instruction range for chunk: 352 392
instruction range for chunk: 408 424
instruction range for chunk: 424 456
instruction range for chunk: 472 484
instruction range for chunk: 484 496
instruction range for chunk: 500 504
instruction range for chunk: 504 512
instruction range for chunk: 512 544
instruction range for chunk: 560 568
instruction range for chunk: 568 608
instruction range for chunk: 624 644
instruction range for chunk: 644 648
instruction range for chunk: 648 664
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 636")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;12: r4 <- 0x9")
(comment . ";;16: r4 <- 0x7")
(comment . ";;20 b 480")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;24: r4 <- 0x10")
(comment . ";;28 b 4")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: b r1, 0")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 48
i: 36
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;36: r15 <- r0, 0x58\n")
(comment . ";;40: r1 <- r15")
(comment . ";;44 b 436")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 56
i: 48
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";;48: r3 <- r3, 0x1\n")
(comment . ";;52 b 368")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r4 <- 0x7")
(comment . ";;60 b 288")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r4, 0x8\n")
(comment . ";;68 b 280")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r4 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 152
i: 112
end-i: 152
at header: 112
i: 128
end-i: 152
i: 132
end-i: 152
i: 136
end-i: 152
i: 140
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r9 <- 0x4")
(comment . ";;136: r4 <- r1, 0x8\n")
(comment . ";;140: r15 <- 0x9")
(comment . ";;144: r4 <- 0x7")
(comment . ";;148 b 128")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r9 <- r4, 0x10\n")
(comment . ";;156 b 120")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 200
i: 160
end-i: 200
i: 160
end-i: 200
i: 164
end-i: 200
i: 168
end-i: 200
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
at header: 200
(comment . ";;160: r15 <- r1, 0x10\n")
(comment . ";;164: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;180: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;188: r15 <- r1, 0x0\n")
(comment . ";;192: r4 <- 0x1")
(comment . ";;196: b r5, 13")
chunklet-i: 200; chunklet-start-i: 216; chunklet-end-i: 240
i: 200
end-i: 240
at header: 200
i: 216
end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 228
end-i: 240
i: 232
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
i:240 HIT CHUNK END
(comment . ";;216: r1 <- r1, r8")
(comment . ";;220: r15 <- r1, 0x10\n")
(comment . ";;224: r14 <- r15, r4")
(comment . ";;228: r14 <- 0x7")
(comment . ";;236 b 16")
chunklet-i: 240; chunklet-start-i: 240; chunklet-end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;240: r14 <- r15, r4")
(comment . ";;244 b 8")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r4 <- 0xE")
(comment . ";;252: b r1, 0")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 280
i: 256
end-i: 280
i: 256
end-i: 280
i: 260
end-i: 280
i: 264
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";;256: r9 <- 0xF")
(comment . ";;260: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;276: b r6")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 320
i: 280
end-i: 320
i: 280
end-i: 320
i: 284
end-i: 320
i: 288
end-i: 320
i: 292
end-i: 320
i: 296
end-i: 320
i: 300
end-i: 320
i: 304
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
at header: 320
(comment . ";;280: r9 <- 0x4")
(comment . ";;284: r10 <- 0x10")
(comment . ";;288: r15 <- r1, 0x10\n")
(comment . ";;292: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;300: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;316: b r6")
chunklet-i: 320; chunklet-start-i: 336; chunklet-end-i: 352
i: 320
end-i: 352
at header: 320
i: 336
end-i: 352
i: 340
end-i: 352
i: 344
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";;336: r1 <- r1, r8")
(comment . ";;340: r9 <- 0x4")
(comment . ";;344: r15 <- r1, 0x10\n")
(comment . ";;348 b -192")
chunklet-i: 352; chunklet-start-i: 352; chunklet-end-i: 392
i: 352
end-i: 392
i: 352
end-i: 392
i: 356
end-i: 392
i: 360
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;352: r9 <- 0x4")
(comment . ";;356: r10 <- 0x8")
(comment . ";;360: r4 <- r1, 0x8\n")
(comment . ";;364: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 424
i: 392
end-i: 424
at header: 392
i: 408
end-i: 424
i: 412
end-i: 424
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;408: r1 <- r1, r0")
(comment . ";;412: r9 <- 0x4")
(comment . ";;416: r4 <- r1, 0x8\n")
(comment . ";;420 b -352")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 456
i: 424
end-i: 456
i: 424
end-i: 456
i: 428
end-i: 456
i: 432
end-i: 456
i: 436
end-i: 456
i: 440
end-i: 456
i: 452
end-i: 456
i: 456
end-i: 456
at header: 456
(comment . ";;424: r4 <- r1, 0x8\n")
(comment . ";;428: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;452: b r6")
chunklet-i: 456; chunklet-start-i: 472; chunklet-end-i: 484
i: 456
end-i: 484
at header: 456
i: 472
end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;472: r1 <- r1, r0")
(comment . ";;476: r4 <- r1, 0x8\n")
(comment . ";;480 b -428")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 496
i: 484
end-i: 496
i: 484
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 496; chunklet-start-i: 500; chunklet-end-i: 504
i: 496
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
i:504 HIT CHUNK END
(comment . ";; instruction 496 not included")
(comment . ";;500 b -456")
chunklet-i: 504; chunklet-start-i: 504; chunklet-end-i: 512
i: 504
end-i: 512
i: 504
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;504: r3 <- r3, 0x1\n")
(comment . ";;508 b 56")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 544
i: 512
end-i: 544
i: 516
end-i: 544
i: 520
end-i: 544
i: 524
end-i: 544
i: 528
end-i: 544
i: 540
end-i: 544
i: 544
end-i: 544
at header: 544
(comment . ";;512: r4 <- r1, 0x8\n")
(comment . ";;516: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;524: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;540: b r6")
chunklet-i: 544; chunklet-start-i: 560; chunklet-end-i: 568
i: 544
end-i: 568
at header: 544
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;560: r1 <- r1, r0")
(comment . ";;564: r4 <- r1, 0x8\n")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 608
i: 568
end-i: 608
i: 568
end-i: 608
i: 572
end-i: 608
i: 576
end-i: 608
i: 580
end-i: 608
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
at header: 608
(comment . ";;568: r9 <- 0x4")
(comment . ";;572: r10 <- 0x10")
(comment . ";;576: r4 <- r1, 0x8\n")
(comment . ";;580: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;604: b r6")
chunklet-i: 608; chunklet-start-i: 624; chunklet-end-i: 644
i: 608
end-i: 644
at header: 608
i: 624
end-i: 644
i: 628
end-i: 644
i: 632
end-i: 644
i: 636
end-i: 644
i: 640
end-i: 644
i: 644
end-i: 644
i:644 HIT CHUNK END
(comment . ";;624: r1 <- r1, r0")
(comment . ";;628: r15 <- 0x4")
(comment . ";;632: r4 <- r1, 0x8\n")
(comment . ";;636: r15 <- 0x6")
(comment . ";;640 b -608")
chunklet-i: 644; chunklet-start-i: 644; chunklet-end-i: 648
i: 644
end-i: 648
i: 648
end-i: 648
i:648 HIT CHUNK END
(comment . ";;644 b -616")
chunklet-i: 648; chunklet-start-i: 648; chunklet-end-i: 664
i: 648
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
i:664 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;660: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 28
instruction range for chunk: 28 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 96
instruction range for chunk: 112 124
instruction range for chunk: 124 140
instruction range for chunk: 140 156
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 128")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 28
i: 12
end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;12: r10 <- r8, 0xB\n")
(comment . ";;16: r15 <- r9, r10")
(comment . ";;20: r15 <- 0x7")
(comment . ";;24 b 24")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r9 <- r10")
(comment . ";;32 b 8")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r4 <- 0xE")
(comment . ";;40: b r1, 0")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r4 <- 0x6")
(comment . ";;48: b r1, 0")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r3 <- r3, 0x1\n")
(comment . ";;56 b 64")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r9 <- r1, 0x8\n")
(comment . ";;64: r10 <- r1, 0x10\n")
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 124
i: 96
end-i: 124
at header: 96
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116: r9 <- r1, 0x8\n")
(comment . ";;120: r10 <- r1, 0x10\n")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 140
i: 124
end-i: 140
i: 124
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;136: b r6")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 56
instruction range for chunk: 72 104
instruction range for chunk: 104 108
instruction range for chunk: 108 136
instruction range for chunk: 152 160
instruction range for chunk: 160 172
instruction range for chunk: 176 180
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;0: r15 <- r0, 0x58\n")
(comment . ";;4: r1 <- r15")
(comment . ";;8 b 148")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r3 <- r3, 0x1\n")
(comment . ";;16 b 88")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 56
i: 20
end-i: 56
i: 20
end-i: 56
i: 24
end-i: 56
i: 36
end-i: 56
i: 40
end-i: 56
i: 44
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
at header: 56
(comment . ";;20: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;36: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;44: r15 <- r1, 0x0\n")
(comment . ";;48: r4 <- 0x0")
(comment . ";;52: b r5, 13")
chunklet-i: 56; chunklet-start-i: 72; chunklet-end-i: 104
i: 56
end-i: 104
at header: 56
i: 72
end-i: 104
i: 76
end-i: 104
i: 80
end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;72: r1 <- r1, r8")
(comment . ";;76: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";;96: r4 <- 0x1")
(comment . ";;100: b r5, 13")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 136
i: 108
end-i: 136
i: 108
end-i: 136
i: 112
end-i: 136
i: 116
end-i: 136
i: 120
end-i: 136
i: 132
end-i: 136
i: 136
end-i: 136
at header: 136
(comment . ";;108: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;116: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;132: b r6")
chunklet-i: 136; chunklet-start-i: 152; chunklet-end-i: 160
i: 136
end-i: 160
at header: 136
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r1 <- r1, r8")
(comment . ";;156 b -140")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 172
i: 160
end-i: 172
i: 160
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 172; chunklet-start-i: 176; chunklet-end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";; instruction 172 not included")
(comment . ";;176 b -168")
Configuring for pb64l in em-pb64l
bin/zuo em-pb64l MAKE="/Applications/Xcode.app/Contents/Developer/usr/bin/make"
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_fib0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_fib0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
missing input file: "pbchunk-out/tmp/larcenous/fib.scm"
 in build-input-or-unbuilt
 in do-build
 in foldl
 in build-unbuilt {2}
 in target em-pb64l/bin/pb64l/scheme.html
 in target build
 in do-build
 in foldl
 in build-unbuilt {2}
 in target build
 in do-build
 in build-one
 in loop
 in module->hash
make: *** [build] Error 1
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/fib.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/fib.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 468
instruction range for chunk: 468 496
instruction range for chunk: 512 520
instruction range for chunk: 520 532
instruction range for chunk: 536 540
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 504")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 444")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 468
i: 384
end-i: 468
at header: 384
i: 400
end-i: 468
i: 404
end-i: 468
i: 408
end-i: 468
i: 420
end-i: 468
i: 432
end-i: 468
i: 444
end-i: 468
i: 456
end-i: 468
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;456: r8 <- r5, 0x5\n")
(comment . ";;460: r4 <- 0x3")
(comment . ";;464: b r5, 13")
chunklet-i: 468; chunklet-start-i: 468; chunklet-end-i: 496
i: 468
end-i: 496
i: 468
end-i: 496
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
at header: 496
(comment . ";;468: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;476: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;492: b r6")
chunklet-i: 496; chunklet-start-i: 512; chunklet-end-i: 520
i: 496
end-i: 520
at header: 496
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;512: r1 <- r1, r8")
(comment . ";;516 b -496")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 532
i: 520
end-i: 532
i: 520
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 532; chunklet-start-i: 536; chunklet-end-i: 540
i: 532
end-i: 540
i: 536
end-i: 540
i: 540
end-i: 540
i:540 HIT CHUNK END
(comment . ";; instruction 532 not included")
(comment . ";;536 b -524")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: fib
instruction range for chunk: 0 12
instruction range for chunk: 12 24
instruction range for chunk: 24 32
instruction range for chunk: 32 36
instruction range for chunk: 36 48
instruction range for chunk: 48 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 152
instruction range for chunk: 152 160
instruction range for chunk: 160 200
instruction range for chunk: 216 240
instruction range for chunk: 240 248
instruction range for chunk: 248 256
instruction range for chunk: 256 280
instruction range for chunk: 280 320
instruction range for chunk: 336 352
instruction range for chunk: 352 392
instruction range for chunk: 408 424
instruction range for chunk: 424 456
instruction range for chunk: 472 484
instruction range for chunk: 484 496
instruction range for chunk: 500 504
instruction range for chunk: 504 512
instruction range for chunk: 512 544
instruction range for chunk: 560 568
instruction range for chunk: 568 608
instruction range for chunk: 624 644
instruction range for chunk: 644 648
instruction range for chunk: 648 664
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 636")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;12: r4 <- 0x9")
(comment . ";;16: r4 <- 0x7")
(comment . ";;20 b 480")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;24: r4 <- 0x10")
(comment . ";;28 b 4")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: b r1, 0")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 48
i: 36
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;36: r15 <- r0, 0x58\n")
(comment . ";;40: r1 <- r15")
(comment . ";;44 b 436")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 56
i: 48
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";;48: r3 <- r3, 0x1\n")
(comment . ";;52 b 368")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r4 <- 0x7")
(comment . ";;60 b 288")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r4, 0x8\n")
(comment . ";;68 b 280")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r4 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 152
i: 112
end-i: 152
at header: 112
i: 128
end-i: 152
i: 132
end-i: 152
i: 136
end-i: 152
i: 140
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r9 <- 0x4")
(comment . ";;136: r4 <- r1, 0x8\n")
(comment . ";;140: r15 <- 0x9")
(comment . ";;144: r4 <- 0x7")
(comment . ";;148 b 128")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r9 <- r4, 0x10\n")
(comment . ";;156 b 120")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 200
i: 160
end-i: 200
i: 160
end-i: 200
i: 164
end-i: 200
i: 168
end-i: 200
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
at header: 200
(comment . ";;160: r15 <- r1, 0x10\n")
(comment . ";;164: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;180: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;188: r15 <- r1, 0x0\n")
(comment . ";;192: r4 <- 0x1")
(comment . ";;196: b r5, 13")
chunklet-i: 200; chunklet-start-i: 216; chunklet-end-i: 240
i: 200
end-i: 240
at header: 200
i: 216
end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 228
end-i: 240
i: 232
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
i:240 HIT CHUNK END
(comment . ";;216: r1 <- r1, r8")
(comment . ";;220: r15 <- r1, 0x10\n")
(comment . ";;224: r14 <- r15, r4")
(comment . ";;228: r14 <- 0x7")
(comment . ";;236 b 16")
chunklet-i: 240; chunklet-start-i: 240; chunklet-end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;240: r14 <- r15, r4")
(comment . ";;244 b 8")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r4 <- 0xE")
(comment . ";;252: b r1, 0")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 280
i: 256
end-i: 280
i: 256
end-i: 280
i: 260
end-i: 280
i: 264
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";;256: r9 <- 0xF")
(comment . ";;260: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;276: b r6")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 320
i: 280
end-i: 320
i: 280
end-i: 320
i: 284
end-i: 320
i: 288
end-i: 320
i: 292
end-i: 320
i: 296
end-i: 320
i: 300
end-i: 320
i: 304
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
at header: 320
(comment . ";;280: r9 <- 0x4")
(comment . ";;284: r10 <- 0x10")
(comment . ";;288: r15 <- r1, 0x10\n")
(comment . ";;292: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;300: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;316: b r6")
chunklet-i: 320; chunklet-start-i: 336; chunklet-end-i: 352
i: 320
end-i: 352
at header: 320
i: 336
end-i: 352
i: 340
end-i: 352
i: 344
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";;336: r1 <- r1, r8")
(comment . ";;340: r9 <- 0x4")
(comment . ";;344: r15 <- r1, 0x10\n")
(comment . ";;348 b -192")
chunklet-i: 352; chunklet-start-i: 352; chunklet-end-i: 392
i: 352
end-i: 392
i: 352
end-i: 392
i: 356
end-i: 392
i: 360
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;352: r9 <- 0x4")
(comment . ";;356: r10 <- 0x8")
(comment . ";;360: r4 <- r1, 0x8\n")
(comment . ";;364: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 424
i: 392
end-i: 424
at header: 392
i: 408
end-i: 424
i: 412
end-i: 424
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;408: r1 <- r1, r0")
(comment . ";;412: r9 <- 0x4")
(comment . ";;416: r4 <- r1, 0x8\n")
(comment . ";;420 b -352")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 456
i: 424
end-i: 456
i: 424
end-i: 456
i: 428
end-i: 456
i: 432
end-i: 456
i: 436
end-i: 456
i: 440
end-i: 456
i: 452
end-i: 456
i: 456
end-i: 456
at header: 456
(comment . ";;424: r4 <- r1, 0x8\n")
(comment . ";;428: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;452: b r6")
chunklet-i: 456; chunklet-start-i: 472; chunklet-end-i: 484
i: 456
end-i: 484
at header: 456
i: 472
end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;472: r1 <- r1, r0")
(comment . ";;476: r4 <- r1, 0x8\n")
(comment . ";;480 b -428")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 496
i: 484
end-i: 496
i: 484
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 496; chunklet-start-i: 500; chunklet-end-i: 504
i: 496
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
i:504 HIT CHUNK END
(comment . ";; instruction 496 not included")
(comment . ";;500 b -456")
chunklet-i: 504; chunklet-start-i: 504; chunklet-end-i: 512
i: 504
end-i: 512
i: 504
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;504: r3 <- r3, 0x1\n")
(comment . ";;508 b 56")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 544
i: 512
end-i: 544
i: 516
end-i: 544
i: 520
end-i: 544
i: 524
end-i: 544
i: 528
end-i: 544
i: 540
end-i: 544
i: 544
end-i: 544
at header: 544
(comment . ";;512: r4 <- r1, 0x8\n")
(comment . ";;516: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;524: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;540: b r6")
chunklet-i: 544; chunklet-start-i: 560; chunklet-end-i: 568
i: 544
end-i: 568
at header: 544
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;560: r1 <- r1, r0")
(comment . ";;564: r4 <- r1, 0x8\n")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 608
i: 568
end-i: 608
i: 568
end-i: 608
i: 572
end-i: 608
i: 576
end-i: 608
i: 580
end-i: 608
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
at header: 608
(comment . ";;568: r9 <- 0x4")
(comment . ";;572: r10 <- 0x10")
(comment . ";;576: r4 <- r1, 0x8\n")
(comment . ";;580: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;604: b r6")
chunklet-i: 608; chunklet-start-i: 624; chunklet-end-i: 644
i: 608
end-i: 644
at header: 608
i: 624
end-i: 644
i: 628
end-i: 644
i: 632
end-i: 644
i: 636
end-i: 644
i: 640
end-i: 644
i: 644
end-i: 644
i:644 HIT CHUNK END
(comment . ";;624: r1 <- r1, r0")
(comment . ";;628: r15 <- 0x4")
(comment . ";;632: r4 <- r1, 0x8\n")
(comment . ";;636: r15 <- 0x6")
(comment . ";;640 b -608")
chunklet-i: 644; chunklet-start-i: 644; chunklet-end-i: 648
i: 644
end-i: 648
i: 648
end-i: 648
i:648 HIT CHUNK END
(comment . ";;644 b -616")
chunklet-i: 648; chunklet-start-i: 648; chunklet-end-i: 664
i: 648
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
i:664 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;660: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 28
instruction range for chunk: 28 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 96
instruction range for chunk: 112 124
instruction range for chunk: 124 140
instruction range for chunk: 140 156
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 128")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 28
i: 12
end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;12: r10 <- r8, 0xB\n")
(comment . ";;16: r15 <- r9, r10")
(comment . ";;20: r15 <- 0x7")
(comment . ";;24 b 24")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r9 <- r10")
(comment . ";;32 b 8")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r4 <- 0xE")
(comment . ";;40: b r1, 0")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r4 <- 0x6")
(comment . ";;48: b r1, 0")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r3 <- r3, 0x1\n")
(comment . ";;56 b 64")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r9 <- r1, 0x8\n")
(comment . ";;64: r10 <- r1, 0x10\n")
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 124
i: 96
end-i: 124
at header: 96
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116: r9 <- r1, 0x8\n")
(comment . ";;120: r10 <- r1, 0x10\n")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 140
i: 124
end-i: 140
i: 124
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;136: b r6")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 56
instruction range for chunk: 72 104
instruction range for chunk: 104 108
instruction range for chunk: 108 136
instruction range for chunk: 152 160
instruction range for chunk: 160 172
instruction range for chunk: 176 180
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;0: r15 <- r0, 0x58\n")
(comment . ";;4: r1 <- r15")
(comment . ";;8 b 148")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r3 <- r3, 0x1\n")
(comment . ";;16 b 88")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 56
i: 20
end-i: 56
i: 20
end-i: 56
i: 24
end-i: 56
i: 36
end-i: 56
i: 40
end-i: 56
i: 44
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
at header: 56
(comment . ";;20: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;36: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;44: r15 <- r1, 0x0\n")
(comment . ";;48: r4 <- 0x0")
(comment . ";;52: b r5, 13")
chunklet-i: 56; chunklet-start-i: 72; chunklet-end-i: 104
i: 56
end-i: 104
at header: 56
i: 72
end-i: 104
i: 76
end-i: 104
i: 80
end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;72: r1 <- r1, r8")
(comment . ";;76: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";;96: r4 <- 0x1")
(comment . ";;100: b r5, 13")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 136
i: 108
end-i: 136
i: 108
end-i: 136
i: 112
end-i: 136
i: 116
end-i: 136
i: 120
end-i: 136
i: 132
end-i: 136
i: 136
end-i: 136
at header: 136
(comment . ";;108: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;116: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;132: b r6")
chunklet-i: 136; chunklet-start-i: 152; chunklet-end-i: 160
i: 136
end-i: 160
at header: 136
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r1 <- r1, r8")
(comment . ";;156 b -140")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 172
i: 160
end-i: 172
i: 160
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 172; chunklet-start-i: 176; chunklet-end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";; instruction 172 not included")
(comment . ";;176 b -168")
Configuring for pb64l in em-pb64l
bin/zuo em-pb64l MAKE="/Applications/Xcode.app/Contents/Developer/usr/bin/make"
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_fib0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_fib0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
emcc -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -o em-pb64l/bin/pb64l/scheme.html em-pb64l/boot/pb64l/main.o em-pb64l/boot/pb64l/libkernel.a em-pb64l/lz4/lib/liblz4.a --preload-file em-pb64l/boot/pb64l/petite.boot'@'petite.boot --preload-file em-pb64l/boot/pb64l/scheme.boot'@'scheme.boot --preload-file pbchunk-out/fib.boot'@'fib.boot -s EXIT_RUNTIME=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_ZLIB=1
: em-pb64l/bin/pb64l/scheme.html
em-pb64l/bin/pb64l/petite.html is up to date
Running...
./bench: line 179: wasm_pbchunk_exec: command not found

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/fib.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/fib.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 468
instruction range for chunk: 468 496
instruction range for chunk: 512 520
instruction range for chunk: 520 532
instruction range for chunk: 536 540
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 504")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 444")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 468
i: 384
end-i: 468
at header: 384
i: 400
end-i: 468
i: 404
end-i: 468
i: 408
end-i: 468
i: 420
end-i: 468
i: 432
end-i: 468
i: 444
end-i: 468
i: 456
end-i: 468
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;456: r8 <- r5, 0x5\n")
(comment . ";;460: r4 <- 0x3")
(comment . ";;464: b r5, 13")
chunklet-i: 468; chunklet-start-i: 468; chunklet-end-i: 496
i: 468
end-i: 496
i: 468
end-i: 496
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
at header: 496
(comment . ";;468: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;476: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;492: b r6")
chunklet-i: 496; chunklet-start-i: 512; chunklet-end-i: 520
i: 496
end-i: 520
at header: 496
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;512: r1 <- r1, r8")
(comment . ";;516 b -496")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 532
i: 520
end-i: 532
i: 520
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 532; chunklet-start-i: 536; chunklet-end-i: 540
i: 532
end-i: 540
i: 536
end-i: 540
i: 540
end-i: 540
i:540 HIT CHUNK END
(comment . ";; instruction 532 not included")
(comment . ";;536 b -524")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: fib
instruction range for chunk: 0 12
instruction range for chunk: 12 24
instruction range for chunk: 24 32
instruction range for chunk: 32 36
instruction range for chunk: 36 48
instruction range for chunk: 48 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 152
instruction range for chunk: 152 160
instruction range for chunk: 160 200
instruction range for chunk: 216 240
instruction range for chunk: 240 248
instruction range for chunk: 248 256
instruction range for chunk: 256 280
instruction range for chunk: 280 320
instruction range for chunk: 336 352
instruction range for chunk: 352 392
instruction range for chunk: 408 424
instruction range for chunk: 424 456
instruction range for chunk: 472 484
instruction range for chunk: 484 496
instruction range for chunk: 500 504
instruction range for chunk: 504 512
instruction range for chunk: 512 544
instruction range for chunk: 560 568
instruction range for chunk: 568 608
instruction range for chunk: 624 644
instruction range for chunk: 644 648
instruction range for chunk: 648 664
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 636")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;12: r4 <- 0x9")
(comment . ";;16: r4 <- 0x7")
(comment . ";;20 b 480")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;24: r4 <- 0x10")
(comment . ";;28 b 4")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: b r1, 0")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 48
i: 36
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;36: r15 <- r0, 0x58\n")
(comment . ";;40: r1 <- r15")
(comment . ";;44 b 436")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 56
i: 48
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";;48: r3 <- r3, 0x1\n")
(comment . ";;52 b 368")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r4 <- 0x7")
(comment . ";;60 b 288")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r4, 0x8\n")
(comment . ";;68 b 280")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r4 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 152
i: 112
end-i: 152
at header: 112
i: 128
end-i: 152
i: 132
end-i: 152
i: 136
end-i: 152
i: 140
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r9 <- 0x4")
(comment . ";;136: r4 <- r1, 0x8\n")
(comment . ";;140: r15 <- 0x9")
(comment . ";;144: r4 <- 0x7")
(comment . ";;148 b 128")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r9 <- r4, 0x10\n")
(comment . ";;156 b 120")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 200
i: 160
end-i: 200
i: 160
end-i: 200
i: 164
end-i: 200
i: 168
end-i: 200
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
at header: 200
(comment . ";;160: r15 <- r1, 0x10\n")
(comment . ";;164: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;180: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;188: r15 <- r1, 0x0\n")
(comment . ";;192: r4 <- 0x1")
(comment . ";;196: b r5, 13")
chunklet-i: 200; chunklet-start-i: 216; chunklet-end-i: 240
i: 200
end-i: 240
at header: 200
i: 216
end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 228
end-i: 240
i: 232
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
i:240 HIT CHUNK END
(comment . ";;216: r1 <- r1, r8")
(comment . ";;220: r15 <- r1, 0x10\n")
(comment . ";;224: r14 <- r15, r4")
(comment . ";;228: r14 <- 0x7")
(comment . ";;236 b 16")
chunklet-i: 240; chunklet-start-i: 240; chunklet-end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;240: r14 <- r15, r4")
(comment . ";;244 b 8")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r4 <- 0xE")
(comment . ";;252: b r1, 0")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 280
i: 256
end-i: 280
i: 256
end-i: 280
i: 260
end-i: 280
i: 264
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";;256: r9 <- 0xF")
(comment . ";;260: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;276: b r6")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 320
i: 280
end-i: 320
i: 280
end-i: 320
i: 284
end-i: 320
i: 288
end-i: 320
i: 292
end-i: 320
i: 296
end-i: 320
i: 300
end-i: 320
i: 304
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
at header: 320
(comment . ";;280: r9 <- 0x4")
(comment . ";;284: r10 <- 0x10")
(comment . ";;288: r15 <- r1, 0x10\n")
(comment . ";;292: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;300: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;316: b r6")
chunklet-i: 320; chunklet-start-i: 336; chunklet-end-i: 352
i: 320
end-i: 352
at header: 320
i: 336
end-i: 352
i: 340
end-i: 352
i: 344
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";;336: r1 <- r1, r8")
(comment . ";;340: r9 <- 0x4")
(comment . ";;344: r15 <- r1, 0x10\n")
(comment . ";;348 b -192")
chunklet-i: 352; chunklet-start-i: 352; chunklet-end-i: 392
i: 352
end-i: 392
i: 352
end-i: 392
i: 356
end-i: 392
i: 360
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;352: r9 <- 0x4")
(comment . ";;356: r10 <- 0x8")
(comment . ";;360: r4 <- r1, 0x8\n")
(comment . ";;364: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 424
i: 392
end-i: 424
at header: 392
i: 408
end-i: 424
i: 412
end-i: 424
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;408: r1 <- r1, r0")
(comment . ";;412: r9 <- 0x4")
(comment . ";;416: r4 <- r1, 0x8\n")
(comment . ";;420 b -352")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 456
i: 424
end-i: 456
i: 424
end-i: 456
i: 428
end-i: 456
i: 432
end-i: 456
i: 436
end-i: 456
i: 440
end-i: 456
i: 452
end-i: 456
i: 456
end-i: 456
at header: 456
(comment . ";;424: r4 <- r1, 0x8\n")
(comment . ";;428: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;452: b r6")
chunklet-i: 456; chunklet-start-i: 472; chunklet-end-i: 484
i: 456
end-i: 484
at header: 456
i: 472
end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;472: r1 <- r1, r0")
(comment . ";;476: r4 <- r1, 0x8\n")
(comment . ";;480 b -428")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 496
i: 484
end-i: 496
i: 484
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 496; chunklet-start-i: 500; chunklet-end-i: 504
i: 496
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
i:504 HIT CHUNK END
(comment . ";; instruction 496 not included")
(comment . ";;500 b -456")
chunklet-i: 504; chunklet-start-i: 504; chunklet-end-i: 512
i: 504
end-i: 512
i: 504
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;504: r3 <- r3, 0x1\n")
(comment . ";;508 b 56")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 544
i: 512
end-i: 544
i: 516
end-i: 544
i: 520
end-i: 544
i: 524
end-i: 544
i: 528
end-i: 544
i: 540
end-i: 544
i: 544
end-i: 544
at header: 544
(comment . ";;512: r4 <- r1, 0x8\n")
(comment . ";;516: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;524: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;540: b r6")
chunklet-i: 544; chunklet-start-i: 560; chunklet-end-i: 568
i: 544
end-i: 568
at header: 544
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;560: r1 <- r1, r0")
(comment . ";;564: r4 <- r1, 0x8\n")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 608
i: 568
end-i: 608
i: 568
end-i: 608
i: 572
end-i: 608
i: 576
end-i: 608
i: 580
end-i: 608
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
at header: 608
(comment . ";;568: r9 <- 0x4")
(comment . ";;572: r10 <- 0x10")
(comment . ";;576: r4 <- r1, 0x8\n")
(comment . ";;580: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;604: b r6")
chunklet-i: 608; chunklet-start-i: 624; chunklet-end-i: 644
i: 608
end-i: 644
at header: 608
i: 624
end-i: 644
i: 628
end-i: 644
i: 632
end-i: 644
i: 636
end-i: 644
i: 640
end-i: 644
i: 644
end-i: 644
i:644 HIT CHUNK END
(comment . ";;624: r1 <- r1, r0")
(comment . ";;628: r15 <- 0x4")
(comment . ";;632: r4 <- r1, 0x8\n")
(comment . ";;636: r15 <- 0x6")
(comment . ";;640 b -608")
chunklet-i: 644; chunklet-start-i: 644; chunklet-end-i: 648
i: 644
end-i: 648
i: 648
end-i: 648
i:648 HIT CHUNK END
(comment . ";;644 b -616")
chunklet-i: 648; chunklet-start-i: 648; chunklet-end-i: 664
i: 648
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
i:664 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;660: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 28
instruction range for chunk: 28 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 96
instruction range for chunk: 112 124
instruction range for chunk: 124 140
instruction range for chunk: 140 156
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 128")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 28
i: 12
end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;12: r10 <- r8, 0xB\n")
(comment . ";;16: r15 <- r9, r10")
(comment . ";;20: r15 <- 0x7")
(comment . ";;24 b 24")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r9 <- r10")
(comment . ";;32 b 8")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r4 <- 0xE")
(comment . ";;40: b r1, 0")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r4 <- 0x6")
(comment . ";;48: b r1, 0")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r3 <- r3, 0x1\n")
(comment . ";;56 b 64")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r9 <- r1, 0x8\n")
(comment . ";;64: r10 <- r1, 0x10\n")
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 124
i: 96
end-i: 124
at header: 96
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116: r9 <- r1, 0x8\n")
(comment . ";;120: r10 <- r1, 0x10\n")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 140
i: 124
end-i: 140
i: 124
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;136: b r6")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 32
instruction range for chunk: 32 36
instruction range for chunk: 36 60
instruction range for chunk: 60 88
instruction range for chunk: 104 116
instruction range for chunk: 116 144
instruction range for chunk: 160 168
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 108")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 32
i: 8
end-i: 32
i: 8
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;20: r15 <- r9, 0x5\n")
(comment . ";;24: r15 <- 0x1E")
(comment . ";;28 b 28")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: r9 <- 0xF")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r5")
(comment . ";;48: r8 <- r5, 0x5\n")
(comment . ";;52: r4 <- 0x1")
(comment . ";;56: b r5, 13")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 88
i: 60
end-i: 88
i: 60
end-i: 88
i: 64
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";;60: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;84: b r6")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 116
i: 88
end-i: 116
at header: 88
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r1 <- r1, r8")
(comment . ";;108: r9 <- 0x4")
(comment . ";;112 b -80")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 144
i: 116
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 168
i: 144
end-i: 168
at header: 144
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164 b -160")
Configuring for pb64l in em-pb64l
bin/zuo em-pb64l MAKE="/Applications/Xcode.app/Contents/Developer/usr/bin/make"
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_fib0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
wat2wasm -r -o em-pb64l/c/pbchunk_fib0.wasm pbchunk-out/pbchunk_fib0.wat
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_fib0.wasm
emcc -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -o em-pb64l/bin/pb64l/scheme.html em-pb64l/boot/pb64l/main.o em-pb64l/boot/pb64l/libkernel.a em-pb64l/lz4/lib/liblz4.a --preload-file em-pb64l/boot/pb64l/petite.boot'@'petite.boot --preload-file em-pb64l/boot/pb64l/scheme.boot'@'scheme.boot --preload-file pbchunk-out/fib.boot'@'fib.boot -s EXIT_RUNTIME=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_ZLIB=1
: em-pb64l/bin/pb64l/scheme.html
em-pb64l/bin/pb64l/petite.html is up to date
Running...
node:internal/modules/cjs/loader:1073
  throw err;
  ^

Error: Cannot find module '/Users/adamperlin/Dev/racket/racket/src/em-pb64l/bin/pb64l/scheme.js'
    at Module._resolveFilename (node:internal/modules/cjs/loader:1070:15)
    at Module._load (node:internal/modules/cjs/loader:923:27)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)
    at node:internal/main/run_main_module:23:47 {
  code: 'MODULE_NOT_FOUND',
  requireStack: []
}

Node.js v20.2.0

real	0m0.114s
user	0m0.022s
sys	0m0.016s

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/fib.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/fib.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 468
instruction range for chunk: 468 496
instruction range for chunk: 512 520
instruction range for chunk: 520 532
instruction range for chunk: 536 540
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 504")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 444")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 468
i: 384
end-i: 468
at header: 384
i: 400
end-i: 468
i: 404
end-i: 468
i: 408
end-i: 468
i: 420
end-i: 468
i: 432
end-i: 468
i: 444
end-i: 468
i: 456
end-i: 468
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;456: r8 <- r5, 0x5\n")
(comment . ";;460: r4 <- 0x3")
(comment . ";;464: b r5, 13")
chunklet-i: 468; chunklet-start-i: 468; chunklet-end-i: 496
i: 468
end-i: 496
i: 468
end-i: 496
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
at header: 496
(comment . ";;468: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;476: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;492: b r6")
chunklet-i: 496; chunklet-start-i: 512; chunklet-end-i: 520
i: 496
end-i: 520
at header: 496
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;512: r1 <- r1, r8")
(comment . ";;516 b -496")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 532
i: 520
end-i: 532
i: 520
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 532; chunklet-start-i: 536; chunklet-end-i: 540
i: 532
end-i: 540
i: 536
end-i: 540
i: 540
end-i: 540
i:540 HIT CHUNK END
(comment . ";; instruction 532 not included")
(comment . ";;536 b -524")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: fib
instruction range for chunk: 0 12
instruction range for chunk: 12 24
instruction range for chunk: 24 32
instruction range for chunk: 32 36
instruction range for chunk: 36 48
instruction range for chunk: 48 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 152
instruction range for chunk: 152 160
instruction range for chunk: 160 200
instruction range for chunk: 216 240
instruction range for chunk: 240 248
instruction range for chunk: 248 256
instruction range for chunk: 256 280
instruction range for chunk: 280 320
instruction range for chunk: 336 352
instruction range for chunk: 352 392
instruction range for chunk: 408 424
instruction range for chunk: 424 456
instruction range for chunk: 472 484
instruction range for chunk: 484 496
instruction range for chunk: 500 504
instruction range for chunk: 504 512
instruction range for chunk: 512 544
instruction range for chunk: 560 568
instruction range for chunk: 568 608
instruction range for chunk: 624 644
instruction range for chunk: 644 648
instruction range for chunk: 648 664
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 636")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;12: r4 <- 0x9")
(comment . ";;16: r4 <- 0x7")
(comment . ";;20 b 480")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;24: r4 <- 0x10")
(comment . ";;28 b 4")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: b r1, 0")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 48
i: 36
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;36: r15 <- r0, 0x58\n")
(comment . ";;40: r1 <- r15")
(comment . ";;44 b 436")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 56
i: 48
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";;48: r3 <- r3, 0x1\n")
(comment . ";;52 b 368")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r4 <- 0x7")
(comment . ";;60 b 288")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r4, 0x8\n")
(comment . ";;68 b 280")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r4 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 152
i: 112
end-i: 152
at header: 112
i: 128
end-i: 152
i: 132
end-i: 152
i: 136
end-i: 152
i: 140
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r9 <- 0x4")
(comment . ";;136: r4 <- r1, 0x8\n")
(comment . ";;140: r15 <- 0x9")
(comment . ";;144: r4 <- 0x7")
(comment . ";;148 b 128")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r9 <- r4, 0x10\n")
(comment . ";;156 b 120")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 200
i: 160
end-i: 200
i: 160
end-i: 200
i: 164
end-i: 200
i: 168
end-i: 200
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
at header: 200
(comment . ";;160: r15 <- r1, 0x10\n")
(comment . ";;164: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;180: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;188: r15 <- r1, 0x0\n")
(comment . ";;192: r4 <- 0x1")
(comment . ";;196: b r5, 13")
chunklet-i: 200; chunklet-start-i: 216; chunklet-end-i: 240
i: 200
end-i: 240
at header: 200
i: 216
end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 228
end-i: 240
i: 232
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
i:240 HIT CHUNK END
(comment . ";;216: r1 <- r1, r8")
(comment . ";;220: r15 <- r1, 0x10\n")
(comment . ";;224: r14 <- r15, r4")
(comment . ";;228: r14 <- 0x7")
(comment . ";;236 b 16")
chunklet-i: 240; chunklet-start-i: 240; chunklet-end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;240: r14 <- r15, r4")
(comment . ";;244 b 8")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r4 <- 0xE")
(comment . ";;252: b r1, 0")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 280
i: 256
end-i: 280
i: 256
end-i: 280
i: 260
end-i: 280
i: 264
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";;256: r9 <- 0xF")
(comment . ";;260: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;276: b r6")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 320
i: 280
end-i: 320
i: 280
end-i: 320
i: 284
end-i: 320
i: 288
end-i: 320
i: 292
end-i: 320
i: 296
end-i: 320
i: 300
end-i: 320
i: 304
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
at header: 320
(comment . ";;280: r9 <- 0x4")
(comment . ";;284: r10 <- 0x10")
(comment . ";;288: r15 <- r1, 0x10\n")
(comment . ";;292: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;300: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;316: b r6")
chunklet-i: 320; chunklet-start-i: 336; chunklet-end-i: 352
i: 320
end-i: 352
at header: 320
i: 336
end-i: 352
i: 340
end-i: 352
i: 344
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";;336: r1 <- r1, r8")
(comment . ";;340: r9 <- 0x4")
(comment . ";;344: r15 <- r1, 0x10\n")
(comment . ";;348 b -192")
chunklet-i: 352; chunklet-start-i: 352; chunklet-end-i: 392
i: 352
end-i: 392
i: 352
end-i: 392
i: 356
end-i: 392
i: 360
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;352: r9 <- 0x4")
(comment . ";;356: r10 <- 0x8")
(comment . ";;360: r4 <- r1, 0x8\n")
(comment . ";;364: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 424
i: 392
end-i: 424
at header: 392
i: 408
end-i: 424
i: 412
end-i: 424
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;408: r1 <- r1, r0")
(comment . ";;412: r9 <- 0x4")
(comment . ";;416: r4 <- r1, 0x8\n")
(comment . ";;420 b -352")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 456
i: 424
end-i: 456
i: 424
end-i: 456
i: 428
end-i: 456
i: 432
end-i: 456
i: 436
end-i: 456
i: 440
end-i: 456
i: 452
end-i: 456
i: 456
end-i: 456
at header: 456
(comment . ";;424: r4 <- r1, 0x8\n")
(comment . ";;428: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;452: b r6")
chunklet-i: 456; chunklet-start-i: 472; chunklet-end-i: 484
i: 456
end-i: 484
at header: 456
i: 472
end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;472: r1 <- r1, r0")
(comment . ";;476: r4 <- r1, 0x8\n")
(comment . ";;480 b -428")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 496
i: 484
end-i: 496
i: 484
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 496; chunklet-start-i: 500; chunklet-end-i: 504
i: 496
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
i:504 HIT CHUNK END
(comment . ";; instruction 496 not included")
(comment . ";;500 b -456")
chunklet-i: 504; chunklet-start-i: 504; chunklet-end-i: 512
i: 504
end-i: 512
i: 504
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;504: r3 <- r3, 0x1\n")
(comment . ";;508 b 56")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 544
i: 512
end-i: 544
i: 516
end-i: 544
i: 520
end-i: 544
i: 524
end-i: 544
i: 528
end-i: 544
i: 540
end-i: 544
i: 544
end-i: 544
at header: 544
(comment . ";;512: r4 <- r1, 0x8\n")
(comment . ";;516: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;524: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;540: b r6")
chunklet-i: 544; chunklet-start-i: 560; chunklet-end-i: 568
i: 544
end-i: 568
at header: 544
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;560: r1 <- r1, r0")
(comment . ";;564: r4 <- r1, 0x8\n")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 608
i: 568
end-i: 608
i: 568
end-i: 608
i: 572
end-i: 608
i: 576
end-i: 608
i: 580
end-i: 608
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
at header: 608
(comment . ";;568: r9 <- 0x4")
(comment . ";;572: r10 <- 0x10")
(comment . ";;576: r4 <- r1, 0x8\n")
(comment . ";;580: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;604: b r6")
chunklet-i: 608; chunklet-start-i: 624; chunklet-end-i: 644
i: 608
end-i: 644
at header: 608
i: 624
end-i: 644
i: 628
end-i: 644
i: 632
end-i: 644
i: 636
end-i: 644
i: 640
end-i: 644
i: 644
end-i: 644
i:644 HIT CHUNK END
(comment . ";;624: r1 <- r1, r0")
(comment . ";;628: r15 <- 0x4")
(comment . ";;632: r4 <- r1, 0x8\n")
(comment . ";;636: r15 <- 0x6")
(comment . ";;640 b -608")
chunklet-i: 644; chunklet-start-i: 644; chunklet-end-i: 648
i: 644
end-i: 648
i: 648
end-i: 648
i:648 HIT CHUNK END
(comment . ";;644 b -616")
chunklet-i: 648; chunklet-start-i: 648; chunklet-end-i: 664
i: 648
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
i:664 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;660: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 28
instruction range for chunk: 28 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 96
instruction range for chunk: 112 124
instruction range for chunk: 124 140
instruction range for chunk: 140 156
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 128")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 28
i: 12
end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;12: r10 <- r8, 0xB\n")
(comment . ";;16: r15 <- r9, r10")
(comment . ";;20: r15 <- 0x7")
(comment . ";;24 b 24")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r9 <- r10")
(comment . ";;32 b 8")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r4 <- 0xE")
(comment . ";;40: b r1, 0")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r4 <- 0x6")
(comment . ";;48: b r1, 0")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r3 <- r3, 0x1\n")
(comment . ";;56 b 64")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r9 <- r1, 0x8\n")
(comment . ";;64: r10 <- r1, 0x10\n")
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 124
i: 96
end-i: 124
at header: 96
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116: r9 <- r1, 0x8\n")
(comment . ";;120: r10 <- r1, 0x10\n")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 140
i: 124
end-i: 140
i: 124
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;136: b r6")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 32
instruction range for chunk: 32 36
instruction range for chunk: 36 60
instruction range for chunk: 60 88
instruction range for chunk: 104 116
instruction range for chunk: 116 144
instruction range for chunk: 160 168
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 108")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 32
i: 8
end-i: 32
i: 8
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;20: r15 <- r9, 0x5\n")
(comment . ";;24: r15 <- 0x1E")
(comment . ";;28 b 28")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: r9 <- 0xF")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r5")
(comment . ";;48: r8 <- r5, 0x5\n")
(comment . ";;52: r4 <- 0x1")
(comment . ";;56: b r5, 13")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 88
i: 60
end-i: 88
i: 60
end-i: 88
i: 64
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";;60: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;84: b r6")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 116
i: 88
end-i: 116
at header: 88
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r1 <- r1, r8")
(comment . ";;108: r9 <- 0x4")
(comment . ";;112 b -80")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 144
i: 116
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 168
i: 144
end-i: 168
at header: 144
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164 b -160")
Configuring for pb64l in em-pb64l
bin/zuo em-pb64l MAKE="/Applications/Xcode.app/Contents/Developer/usr/bin/make"
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_fib0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
em-pb64l/bin/pb64l/scheme.html is up to date
em-pb64l/bin/pb64l/petite.html is up to date
Running...
./bench: line 210: cd: ../em-pb64l/bin/pb64l: No such file or directory
node:internal/modules/cjs/loader:1073
  throw err;
  ^

Error: Cannot find module '/Users/adamperlin/Dev/racket/racket/src/ChezScheme/scheme.js'
    at Module._resolveFilename (node:internal/modules/cjs/loader:1070:15)
    at Module._load (node:internal/modules/cjs/loader:923:27)
    at Function.executeUserEntryPoint [as runMain] (node:internal/modules/run_main:83:12)
    at node:internal/main/run_main_module:23:47 {
  code: 'MODULE_NOT_FOUND',
  requireStack: []
}

Node.js v20.2.0

real	0m0.043s
user	0m0.026s
sys	0m0.011s

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/fib.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/fib.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 468
instruction range for chunk: 468 496
instruction range for chunk: 512 520
instruction range for chunk: 520 532
instruction range for chunk: 536 540
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 504")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 444")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 468
i: 384
end-i: 468
at header: 384
i: 400
end-i: 468
i: 404
end-i: 468
i: 408
end-i: 468
i: 420
end-i: 468
i: 432
end-i: 468
i: 444
end-i: 468
i: 456
end-i: 468
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;456: r8 <- r5, 0x5\n")
(comment . ";;460: r4 <- 0x3")
(comment . ";;464: b r5, 13")
chunklet-i: 468; chunklet-start-i: 468; chunklet-end-i: 496
i: 468
end-i: 496
i: 468
end-i: 496
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
at header: 496
(comment . ";;468: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;476: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;492: b r6")
chunklet-i: 496; chunklet-start-i: 512; chunklet-end-i: 520
i: 496
end-i: 520
at header: 496
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;512: r1 <- r1, r8")
(comment . ";;516 b -496")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 532
i: 520
end-i: 532
i: 520
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 532; chunklet-start-i: 536; chunklet-end-i: 540
i: 532
end-i: 540
i: 536
end-i: 540
i: 540
end-i: 540
i:540 HIT CHUNK END
(comment . ";; instruction 532 not included")
(comment . ";;536 b -524")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: fib
instruction range for chunk: 0 12
instruction range for chunk: 12 24
instruction range for chunk: 24 32
instruction range for chunk: 32 36
instruction range for chunk: 36 48
instruction range for chunk: 48 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 152
instruction range for chunk: 152 160
instruction range for chunk: 160 200
instruction range for chunk: 216 240
instruction range for chunk: 240 248
instruction range for chunk: 248 256
instruction range for chunk: 256 280
instruction range for chunk: 280 320
instruction range for chunk: 336 352
instruction range for chunk: 352 392
instruction range for chunk: 408 424
instruction range for chunk: 424 456
instruction range for chunk: 472 484
instruction range for chunk: 484 496
instruction range for chunk: 500 504
instruction range for chunk: 504 512
instruction range for chunk: 512 544
instruction range for chunk: 560 568
instruction range for chunk: 568 608
instruction range for chunk: 624 644
instruction range for chunk: 644 648
instruction range for chunk: 648 664
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 636")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;12: r4 <- 0x9")
(comment . ";;16: r4 <- 0x7")
(comment . ";;20 b 480")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;24: r4 <- 0x10")
(comment . ";;28 b 4")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: b r1, 0")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 48
i: 36
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;36: r15 <- r0, 0x58\n")
(comment . ";;40: r1 <- r15")
(comment . ";;44 b 436")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 56
i: 48
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";;48: r3 <- r3, 0x1\n")
(comment . ";;52 b 368")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r4 <- 0x7")
(comment . ";;60 b 288")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r4, 0x8\n")
(comment . ";;68 b 280")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r4 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 152
i: 112
end-i: 152
at header: 112
i: 128
end-i: 152
i: 132
end-i: 152
i: 136
end-i: 152
i: 140
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r9 <- 0x4")
(comment . ";;136: r4 <- r1, 0x8\n")
(comment . ";;140: r15 <- 0x9")
(comment . ";;144: r4 <- 0x7")
(comment . ";;148 b 128")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r9 <- r4, 0x10\n")
(comment . ";;156 b 120")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 200
i: 160
end-i: 200
i: 160
end-i: 200
i: 164
end-i: 200
i: 168
end-i: 200
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
at header: 200
(comment . ";;160: r15 <- r1, 0x10\n")
(comment . ";;164: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;180: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;188: r15 <- r1, 0x0\n")
(comment . ";;192: r4 <- 0x1")
(comment . ";;196: b r5, 13")
chunklet-i: 200; chunklet-start-i: 216; chunklet-end-i: 240
i: 200
end-i: 240
at header: 200
i: 216
end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 228
end-i: 240
i: 232
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
i:240 HIT CHUNK END
(comment . ";;216: r1 <- r1, r8")
(comment . ";;220: r15 <- r1, 0x10\n")
(comment . ";;224: r14 <- r15, r4")
(comment . ";;228: r14 <- 0x7")
(comment . ";;236 b 16")
chunklet-i: 240; chunklet-start-i: 240; chunklet-end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;240: r14 <- r15, r4")
(comment . ";;244 b 8")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r4 <- 0xE")
(comment . ";;252: b r1, 0")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 280
i: 256
end-i: 280
i: 256
end-i: 280
i: 260
end-i: 280
i: 264
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";;256: r9 <- 0xF")
(comment . ";;260: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;276: b r6")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 320
i: 280
end-i: 320
i: 280
end-i: 320
i: 284
end-i: 320
i: 288
end-i: 320
i: 292
end-i: 320
i: 296
end-i: 320
i: 300
end-i: 320
i: 304
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
at header: 320
(comment . ";;280: r9 <- 0x4")
(comment . ";;284: r10 <- 0x10")
(comment . ";;288: r15 <- r1, 0x10\n")
(comment . ";;292: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;300: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;316: b r6")
chunklet-i: 320; chunklet-start-i: 336; chunklet-end-i: 352
i: 320
end-i: 352
at header: 320
i: 336
end-i: 352
i: 340
end-i: 352
i: 344
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";;336: r1 <- r1, r8")
(comment . ";;340: r9 <- 0x4")
(comment . ";;344: r15 <- r1, 0x10\n")
(comment . ";;348 b -192")
chunklet-i: 352; chunklet-start-i: 352; chunklet-end-i: 392
i: 352
end-i: 392
i: 352
end-i: 392
i: 356
end-i: 392
i: 360
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;352: r9 <- 0x4")
(comment . ";;356: r10 <- 0x8")
(comment . ";;360: r4 <- r1, 0x8\n")
(comment . ";;364: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 424
i: 392
end-i: 424
at header: 392
i: 408
end-i: 424
i: 412
end-i: 424
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;408: r1 <- r1, r0")
(comment . ";;412: r9 <- 0x4")
(comment . ";;416: r4 <- r1, 0x8\n")
(comment . ";;420 b -352")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 456
i: 424
end-i: 456
i: 424
end-i: 456
i: 428
end-i: 456
i: 432
end-i: 456
i: 436
end-i: 456
i: 440
end-i: 456
i: 452
end-i: 456
i: 456
end-i: 456
at header: 456
(comment . ";;424: r4 <- r1, 0x8\n")
(comment . ";;428: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;452: b r6")
chunklet-i: 456; chunklet-start-i: 472; chunklet-end-i: 484
i: 456
end-i: 484
at header: 456
i: 472
end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;472: r1 <- r1, r0")
(comment . ";;476: r4 <- r1, 0x8\n")
(comment . ";;480 b -428")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 496
i: 484
end-i: 496
i: 484
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 496; chunklet-start-i: 500; chunklet-end-i: 504
i: 496
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
i:504 HIT CHUNK END
(comment . ";; instruction 496 not included")
(comment . ";;500 b -456")
chunklet-i: 504; chunklet-start-i: 504; chunklet-end-i: 512
i: 504
end-i: 512
i: 504
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;504: r3 <- r3, 0x1\n")
(comment . ";;508 b 56")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 544
i: 512
end-i: 544
i: 516
end-i: 544
i: 520
end-i: 544
i: 524
end-i: 544
i: 528
end-i: 544
i: 540
end-i: 544
i: 544
end-i: 544
at header: 544
(comment . ";;512: r4 <- r1, 0x8\n")
(comment . ";;516: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;524: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;540: b r6")
chunklet-i: 544; chunklet-start-i: 560; chunklet-end-i: 568
i: 544
end-i: 568
at header: 544
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;560: r1 <- r1, r0")
(comment . ";;564: r4 <- r1, 0x8\n")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 608
i: 568
end-i: 608
i: 568
end-i: 608
i: 572
end-i: 608
i: 576
end-i: 608
i: 580
end-i: 608
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
at header: 608
(comment . ";;568: r9 <- 0x4")
(comment . ";;572: r10 <- 0x10")
(comment . ";;576: r4 <- r1, 0x8\n")
(comment . ";;580: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;604: b r6")
chunklet-i: 608; chunklet-start-i: 624; chunklet-end-i: 644
i: 608
end-i: 644
at header: 608
i: 624
end-i: 644
i: 628
end-i: 644
i: 632
end-i: 644
i: 636
end-i: 644
i: 640
end-i: 644
i: 644
end-i: 644
i:644 HIT CHUNK END
(comment . ";;624: r1 <- r1, r0")
(comment . ";;628: r15 <- 0x4")
(comment . ";;632: r4 <- r1, 0x8\n")
(comment . ";;636: r15 <- 0x6")
(comment . ";;640 b -608")
chunklet-i: 644; chunklet-start-i: 644; chunklet-end-i: 648
i: 644
end-i: 648
i: 648
end-i: 648
i:648 HIT CHUNK END
(comment . ";;644 b -616")
chunklet-i: 648; chunklet-start-i: 648; chunklet-end-i: 664
i: 648
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
i:664 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;660: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 28
instruction range for chunk: 28 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 96
instruction range for chunk: 112 124
instruction range for chunk: 124 140
instruction range for chunk: 140 156
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 128")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 28
i: 12
end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;12: r10 <- r8, 0xB\n")
(comment . ";;16: r15 <- r9, r10")
(comment . ";;20: r15 <- 0x7")
(comment . ";;24 b 24")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r9 <- r10")
(comment . ";;32 b 8")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r4 <- 0xE")
(comment . ";;40: b r1, 0")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r4 <- 0x6")
(comment . ";;48: b r1, 0")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r3 <- r3, 0x1\n")
(comment . ";;56 b 64")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r9 <- r1, 0x8\n")
(comment . ";;64: r10 <- r1, 0x10\n")
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 124
i: 96
end-i: 124
at header: 96
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116: r9 <- r1, 0x8\n")
(comment . ";;120: r10 <- r1, 0x10\n")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 140
i: 124
end-i: 140
i: 124
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;136: b r6")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 32
instruction range for chunk: 32 36
instruction range for chunk: 36 60
instruction range for chunk: 60 88
instruction range for chunk: 104 116
instruction range for chunk: 116 144
instruction range for chunk: 160 168
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 108")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 32
i: 8
end-i: 32
i: 8
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;20: r15 <- r9, 0x5\n")
(comment . ";;24: r15 <- 0x1E")
(comment . ";;28 b 28")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: r9 <- 0xF")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r5")
(comment . ";;48: r8 <- r5, 0x5\n")
(comment . ";;52: r4 <- 0x1")
(comment . ";;56: b r5, 13")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 88
i: 60
end-i: 88
i: 60
end-i: 88
i: 64
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";;60: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;84: b r6")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 116
i: 88
end-i: 116
at header: 88
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r1 <- r1, r8")
(comment . ";;108: r9 <- 0x4")
(comment . ";;112 b -80")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 144
i: 116
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 168
i: 144
end-i: 168
at header: 144
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164 b -160")
Configuring for pb64l in em-pb64l
bin/zuo em-pb64l MAKE="/Applications/Xcode.app/Contents/Developer/usr/bin/make"
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_fib0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
em-pb64l/bin/pb64l/scheme.html is up to date
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./fib.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running fib:40:1

real	0m34.640s
user	0m34.636s
sys	0m0.297s

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/fib.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/fib.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 468
instruction range for chunk: 468 496
instruction range for chunk: 512 520
instruction range for chunk: 520 532
instruction range for chunk: 536 540
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 504")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 444")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 468
i: 384
end-i: 468
at header: 384
i: 400
end-i: 468
i: 404
end-i: 468
i: 408
end-i: 468
i: 420
end-i: 468
i: 432
end-i: 468
i: 444
end-i: 468
i: 456
end-i: 468
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;456: r8 <- r5, 0x5\n")
(comment . ";;460: r4 <- 0x3")
(comment . ";;464: b r5, 13")
chunklet-i: 468; chunklet-start-i: 468; chunklet-end-i: 496
i: 468
end-i: 496
i: 468
end-i: 496
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
at header: 496
(comment . ";;468: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;476: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;492: b r6")
chunklet-i: 496; chunklet-start-i: 512; chunklet-end-i: 520
i: 496
end-i: 520
at header: 496
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;512: r1 <- r1, r8")
(comment . ";;516 b -496")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 532
i: 520
end-i: 532
i: 520
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 532; chunklet-start-i: 536; chunklet-end-i: 540
i: 532
end-i: 540
i: 536
end-i: 540
i: 540
end-i: 540
i:540 HIT CHUNK END
(comment . ";; instruction 532 not included")
(comment . ";;536 b -524")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: fib
instruction range for chunk: 0 12
instruction range for chunk: 12 24
instruction range for chunk: 24 32
instruction range for chunk: 32 36
instruction range for chunk: 36 48
instruction range for chunk: 48 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 152
instruction range for chunk: 152 160
instruction range for chunk: 160 200
instruction range for chunk: 216 240
instruction range for chunk: 240 248
instruction range for chunk: 248 256
instruction range for chunk: 256 280
instruction range for chunk: 280 320
instruction range for chunk: 336 352
instruction range for chunk: 352 392
instruction range for chunk: 408 424
instruction range for chunk: 424 456
instruction range for chunk: 472 484
instruction range for chunk: 484 496
instruction range for chunk: 500 504
instruction range for chunk: 504 512
instruction range for chunk: 512 544
instruction range for chunk: 560 568
instruction range for chunk: 568 608
instruction range for chunk: 624 644
instruction range for chunk: 644 648
instruction range for chunk: 648 664
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 636")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;12: r4 <- 0x9")
(comment . ";;16: r4 <- 0x7")
(comment . ";;20 b 480")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;24: r4 <- 0x10")
(comment . ";;28 b 4")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: b r1, 0")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 48
i: 36
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;36: r15 <- r0, 0x58\n")
(comment . ";;40: r1 <- r15")
(comment . ";;44 b 436")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 56
i: 48
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";;48: r3 <- r3, 0x1\n")
(comment . ";;52 b 368")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r4 <- 0x7")
(comment . ";;60 b 288")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r4, 0x8\n")
(comment . ";;68 b 280")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r4 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 152
i: 112
end-i: 152
at header: 112
i: 128
end-i: 152
i: 132
end-i: 152
i: 136
end-i: 152
i: 140
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r9 <- 0x4")
(comment . ";;136: r4 <- r1, 0x8\n")
(comment . ";;140: r15 <- 0x9")
(comment . ";;144: r4 <- 0x7")
(comment . ";;148 b 128")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r9 <- r4, 0x10\n")
(comment . ";;156 b 120")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 200
i: 160
end-i: 200
i: 160
end-i: 200
i: 164
end-i: 200
i: 168
end-i: 200
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
at header: 200
(comment . ";;160: r15 <- r1, 0x10\n")
(comment . ";;164: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;180: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;188: r15 <- r1, 0x0\n")
(comment . ";;192: r4 <- 0x1")
(comment . ";;196: b r5, 13")
chunklet-i: 200; chunklet-start-i: 216; chunklet-end-i: 240
i: 200
end-i: 240
at header: 200
i: 216
end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 228
end-i: 240
i: 232
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
i:240 HIT CHUNK END
(comment . ";;216: r1 <- r1, r8")
(comment . ";;220: r15 <- r1, 0x10\n")
(comment . ";;224: r14 <- r15, r4")
(comment . ";;228: r14 <- 0x7")
(comment . ";;236 b 16")
chunklet-i: 240; chunklet-start-i: 240; chunklet-end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;240: r14 <- r15, r4")
(comment . ";;244 b 8")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r4 <- 0xE")
(comment . ";;252: b r1, 0")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 280
i: 256
end-i: 280
i: 256
end-i: 280
i: 260
end-i: 280
i: 264
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";;256: r9 <- 0xF")
(comment . ";;260: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;276: b r6")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 320
i: 280
end-i: 320
i: 280
end-i: 320
i: 284
end-i: 320
i: 288
end-i: 320
i: 292
end-i: 320
i: 296
end-i: 320
i: 300
end-i: 320
i: 304
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
at header: 320
(comment . ";;280: r9 <- 0x4")
(comment . ";;284: r10 <- 0x10")
(comment . ";;288: r15 <- r1, 0x10\n")
(comment . ";;292: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;300: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;316: b r6")
chunklet-i: 320; chunklet-start-i: 336; chunklet-end-i: 352
i: 320
end-i: 352
at header: 320
i: 336
end-i: 352
i: 340
end-i: 352
i: 344
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";;336: r1 <- r1, r8")
(comment . ";;340: r9 <- 0x4")
(comment . ";;344: r15 <- r1, 0x10\n")
(comment . ";;348 b -192")
chunklet-i: 352; chunklet-start-i: 352; chunklet-end-i: 392
i: 352
end-i: 392
i: 352
end-i: 392
i: 356
end-i: 392
i: 360
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;352: r9 <- 0x4")
(comment . ";;356: r10 <- 0x8")
(comment . ";;360: r4 <- r1, 0x8\n")
(comment . ";;364: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 424
i: 392
end-i: 424
at header: 392
i: 408
end-i: 424
i: 412
end-i: 424
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;408: r1 <- r1, r0")
(comment . ";;412: r9 <- 0x4")
(comment . ";;416: r4 <- r1, 0x8\n")
(comment . ";;420 b -352")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 456
i: 424
end-i: 456
i: 424
end-i: 456
i: 428
end-i: 456
i: 432
end-i: 456
i: 436
end-i: 456
i: 440
end-i: 456
i: 452
end-i: 456
i: 456
end-i: 456
at header: 456
(comment . ";;424: r4 <- r1, 0x8\n")
(comment . ";;428: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;452: b r6")
chunklet-i: 456; chunklet-start-i: 472; chunklet-end-i: 484
i: 456
end-i: 484
at header: 456
i: 472
end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;472: r1 <- r1, r0")
(comment . ";;476: r4 <- r1, 0x8\n")
(comment . ";;480 b -428")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 496
i: 484
end-i: 496
i: 484
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 496; chunklet-start-i: 500; chunklet-end-i: 504
i: 496
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
i:504 HIT CHUNK END
(comment . ";; instruction 496 not included")
(comment . ";;500 b -456")
chunklet-i: 504; chunklet-start-i: 504; chunklet-end-i: 512
i: 504
end-i: 512
i: 504
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;504: r3 <- r3, 0x1\n")
(comment . ";;508 b 56")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 544
i: 512
end-i: 544
i: 516
end-i: 544
i: 520
end-i: 544
i: 524
end-i: 544
i: 528
end-i: 544
i: 540
end-i: 544
i: 544
end-i: 544
at header: 544
(comment . ";;512: r4 <- r1, 0x8\n")
(comment . ";;516: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;524: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;540: b r6")
chunklet-i: 544; chunklet-start-i: 560; chunklet-end-i: 568
i: 544
end-i: 568
at header: 544
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;560: r1 <- r1, r0")
(comment . ";;564: r4 <- r1, 0x8\n")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 608
i: 568
end-i: 608
i: 568
end-i: 608
i: 572
end-i: 608
i: 576
end-i: 608
i: 580
end-i: 608
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
at header: 608
(comment . ";;568: r9 <- 0x4")
(comment . ";;572: r10 <- 0x10")
(comment . ";;576: r4 <- r1, 0x8\n")
(comment . ";;580: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;604: b r6")
chunklet-i: 608; chunklet-start-i: 624; chunklet-end-i: 644
i: 608
end-i: 644
at header: 608
i: 624
end-i: 644
i: 628
end-i: 644
i: 632
end-i: 644
i: 636
end-i: 644
i: 640
end-i: 644
i: 644
end-i: 644
i:644 HIT CHUNK END
(comment . ";;624: r1 <- r1, r0")
(comment . ";;628: r15 <- 0x4")
(comment . ";;632: r4 <- r1, 0x8\n")
(comment . ";;636: r15 <- 0x6")
(comment . ";;640 b -608")
chunklet-i: 644; chunklet-start-i: 644; chunklet-end-i: 648
i: 644
end-i: 648
i: 648
end-i: 648
i:648 HIT CHUNK END
(comment . ";;644 b -616")
chunklet-i: 648; chunklet-start-i: 648; chunklet-end-i: 664
i: 648
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
i:664 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;660: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 28
instruction range for chunk: 28 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 96
instruction range for chunk: 112 124
instruction range for chunk: 124 140
instruction range for chunk: 140 156
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 128")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 28
i: 12
end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;12: r10 <- r8, 0xB\n")
(comment . ";;16: r15 <- r9, r10")
(comment . ";;20: r15 <- 0x7")
(comment . ";;24 b 24")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r9 <- r10")
(comment . ";;32 b 8")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r4 <- 0xE")
(comment . ";;40: b r1, 0")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r4 <- 0x6")
(comment . ";;48: b r1, 0")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r3 <- r3, 0x1\n")
(comment . ";;56 b 64")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r9 <- r1, 0x8\n")
(comment . ";;64: r10 <- r1, 0x10\n")
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 124
i: 96
end-i: 124
at header: 96
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116: r9 <- r1, 0x8\n")
(comment . ";;120: r10 <- r1, 0x10\n")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 140
i: 124
end-i: 140
i: 124
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;136: b r6")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 32
instruction range for chunk: 32 36
instruction range for chunk: 36 60
instruction range for chunk: 60 88
instruction range for chunk: 104 116
instruction range for chunk: 116 144
instruction range for chunk: 160 168
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 108")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 32
i: 8
end-i: 32
i: 8
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;20: r15 <- r9, 0x5\n")
(comment . ";;24: r15 <- 0x1E")
(comment . ";;28 b 28")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: r9 <- 0xF")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r5")
(comment . ";;48: r8 <- r5, 0x5\n")
(comment . ";;52: r4 <- 0x1")
(comment . ";;56: b r5, 13")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 88
i: 60
end-i: 88
i: 60
end-i: 88
i: 64
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";;60: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;84: b r6")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 116
i: 88
end-i: 116
at header: 88
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r1 <- r1, r8")
(comment . ";;108: r9 <- 0x4")
(comment . ";;112 b -80")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 144
i: 116
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 168
i: 144
end-i: 168
at header: 144
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164 b -160")
Configuring for pb64l in em-pb64l
bin/zuo em-pb64l MAKE="/Applications/Xcode.app/Contents/Developer/usr/bin/make"
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_fib0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
em-pb64l/bin/pb64l/scheme.html is up to date
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./fib.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running fib:40:1

real	0m34.920s
user	0m34.814s
sys	0m0.319s

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/fib.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/fib.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 468
instruction range for chunk: 468 496
instruction range for chunk: 512 520
instruction range for chunk: 520 532
instruction range for chunk: 536 540
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 504")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 444")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 468
i: 384
end-i: 468
at header: 384
i: 400
end-i: 468
i: 404
end-i: 468
i: 408
end-i: 468
i: 420
end-i: 468
i: 432
end-i: 468
i: 444
end-i: 468
i: 456
end-i: 468
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;456: r8 <- r5, 0x5\n")
(comment . ";;460: r4 <- 0x3")
(comment . ";;464: b r5, 13")
chunklet-i: 468; chunklet-start-i: 468; chunklet-end-i: 496
i: 468
end-i: 496
i: 468
end-i: 496
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
at header: 496
(comment . ";;468: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;476: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;492: b r6")
chunklet-i: 496; chunklet-start-i: 512; chunklet-end-i: 520
i: 496
end-i: 520
at header: 496
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;512: r1 <- r1, r8")
(comment . ";;516 b -496")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 532
i: 520
end-i: 532
i: 520
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 532; chunklet-start-i: 536; chunklet-end-i: 540
i: 532
end-i: 540
i: 536
end-i: 540
i: 540
end-i: 540
i:540 HIT CHUNK END
(comment . ";; instruction 532 not included")
(comment . ";;536 b -524")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: fib
instruction range for chunk: 0 12
instruction range for chunk: 12 24
instruction range for chunk: 24 32
instruction range for chunk: 32 36
instruction range for chunk: 36 48
instruction range for chunk: 48 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 152
instruction range for chunk: 152 160
instruction range for chunk: 160 200
instruction range for chunk: 216 240
instruction range for chunk: 240 248
instruction range for chunk: 248 256
instruction range for chunk: 256 280
instruction range for chunk: 280 320
instruction range for chunk: 336 352
instruction range for chunk: 352 392
instruction range for chunk: 408 424
instruction range for chunk: 424 456
instruction range for chunk: 472 484
instruction range for chunk: 484 496
instruction range for chunk: 500 504
instruction range for chunk: 504 512
instruction range for chunk: 512 544
instruction range for chunk: 560 568
instruction range for chunk: 568 608
instruction range for chunk: 624 644
instruction range for chunk: 644 648
instruction range for chunk: 648 664
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 636")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;12: r4 <- 0x9")
(comment . ";;16: r4 <- 0x7")
(comment . ";;20 b 480")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;24: r4 <- 0x10")
(comment . ";;28 b 4")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: b r1, 0")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 48
i: 36
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;36: r15 <- r0, 0x58\n")
(comment . ";;40: r1 <- r15")
(comment . ";;44 b 436")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 56
i: 48
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";;48: r3 <- r3, 0x1\n")
(comment . ";;52 b 368")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r4 <- 0x7")
(comment . ";;60 b 288")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r4, 0x8\n")
(comment . ";;68 b 280")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r4 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 152
i: 112
end-i: 152
at header: 112
i: 128
end-i: 152
i: 132
end-i: 152
i: 136
end-i: 152
i: 140
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r9 <- 0x4")
(comment . ";;136: r4 <- r1, 0x8\n")
(comment . ";;140: r15 <- 0x9")
(comment . ";;144: r4 <- 0x7")
(comment . ";;148 b 128")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r9 <- r4, 0x10\n")
(comment . ";;156 b 120")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 200
i: 160
end-i: 200
i: 160
end-i: 200
i: 164
end-i: 200
i: 168
end-i: 200
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
at header: 200
(comment . ";;160: r15 <- r1, 0x10\n")
(comment . ";;164: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;180: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;188: r15 <- r1, 0x0\n")
(comment . ";;192: r4 <- 0x1")
(comment . ";;196: b r5, 13")
chunklet-i: 200; chunklet-start-i: 216; chunklet-end-i: 240
i: 200
end-i: 240
at header: 200
i: 216
end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 228
end-i: 240
i: 232
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
i:240 HIT CHUNK END
(comment . ";;216: r1 <- r1, r8")
(comment . ";;220: r15 <- r1, 0x10\n")
(comment . ";;224: r14 <- r15, r4")
(comment . ";;228: r14 <- 0x7")
(comment . ";;236 b 16")
chunklet-i: 240; chunklet-start-i: 240; chunklet-end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;240: r14 <- r15, r4")
(comment . ";;244 b 8")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r4 <- 0xE")
(comment . ";;252: b r1, 0")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 280
i: 256
end-i: 280
i: 256
end-i: 280
i: 260
end-i: 280
i: 264
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";;256: r9 <- 0xF")
(comment . ";;260: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;276: b r6")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 320
i: 280
end-i: 320
i: 280
end-i: 320
i: 284
end-i: 320
i: 288
end-i: 320
i: 292
end-i: 320
i: 296
end-i: 320
i: 300
end-i: 320
i: 304
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
at header: 320
(comment . ";;280: r9 <- 0x4")
(comment . ";;284: r10 <- 0x10")
(comment . ";;288: r15 <- r1, 0x10\n")
(comment . ";;292: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;300: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;316: b r6")
chunklet-i: 320; chunklet-start-i: 336; chunklet-end-i: 352
i: 320
end-i: 352
at header: 320
i: 336
end-i: 352
i: 340
end-i: 352
i: 344
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";;336: r1 <- r1, r8")
(comment . ";;340: r9 <- 0x4")
(comment . ";;344: r15 <- r1, 0x10\n")
(comment . ";;348 b -192")
chunklet-i: 352; chunklet-start-i: 352; chunklet-end-i: 392
i: 352
end-i: 392
i: 352
end-i: 392
i: 356
end-i: 392
i: 360
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;352: r9 <- 0x4")
(comment . ";;356: r10 <- 0x8")
(comment . ";;360: r4 <- r1, 0x8\n")
(comment . ";;364: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 424
i: 392
end-i: 424
at header: 392
i: 408
end-i: 424
i: 412
end-i: 424
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;408: r1 <- r1, r0")
(comment . ";;412: r9 <- 0x4")
(comment . ";;416: r4 <- r1, 0x8\n")
(comment . ";;420 b -352")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 456
i: 424
end-i: 456
i: 424
end-i: 456
i: 428
end-i: 456
i: 432
end-i: 456
i: 436
end-i: 456
i: 440
end-i: 456
i: 452
end-i: 456
i: 456
end-i: 456
at header: 456
(comment . ";;424: r4 <- r1, 0x8\n")
(comment . ";;428: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;452: b r6")
chunklet-i: 456; chunklet-start-i: 472; chunklet-end-i: 484
i: 456
end-i: 484
at header: 456
i: 472
end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;472: r1 <- r1, r0")
(comment . ";;476: r4 <- r1, 0x8\n")
(comment . ";;480 b -428")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 496
i: 484
end-i: 496
i: 484
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 496; chunklet-start-i: 500; chunklet-end-i: 504
i: 496
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
i:504 HIT CHUNK END
(comment . ";; instruction 496 not included")
(comment . ";;500 b -456")
chunklet-i: 504; chunklet-start-i: 504; chunklet-end-i: 512
i: 504
end-i: 512
i: 504
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;504: r3 <- r3, 0x1\n")
(comment . ";;508 b 56")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 544
i: 512
end-i: 544
i: 516
end-i: 544
i: 520
end-i: 544
i: 524
end-i: 544
i: 528
end-i: 544
i: 540
end-i: 544
i: 544
end-i: 544
at header: 544
(comment . ";;512: r4 <- r1, 0x8\n")
(comment . ";;516: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;524: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;540: b r6")
chunklet-i: 544; chunklet-start-i: 560; chunklet-end-i: 568
i: 544
end-i: 568
at header: 544
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;560: r1 <- r1, r0")
(comment . ";;564: r4 <- r1, 0x8\n")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 608
i: 568
end-i: 608
i: 568
end-i: 608
i: 572
end-i: 608
i: 576
end-i: 608
i: 580
end-i: 608
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
at header: 608
(comment . ";;568: r9 <- 0x4")
(comment . ";;572: r10 <- 0x10")
(comment . ";;576: r4 <- r1, 0x8\n")
(comment . ";;580: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;604: b r6")
chunklet-i: 608; chunklet-start-i: 624; chunklet-end-i: 644
i: 608
end-i: 644
at header: 608
i: 624
end-i: 644
i: 628
end-i: 644
i: 632
end-i: 644
i: 636
end-i: 644
i: 640
end-i: 644
i: 644
end-i: 644
i:644 HIT CHUNK END
(comment . ";;624: r1 <- r1, r0")
(comment . ";;628: r15 <- 0x4")
(comment . ";;632: r4 <- r1, 0x8\n")
(comment . ";;636: r15 <- 0x6")
(comment . ";;640 b -608")
chunklet-i: 644; chunklet-start-i: 644; chunklet-end-i: 648
i: 644
end-i: 648
i: 648
end-i: 648
i:648 HIT CHUNK END
(comment . ";;644 b -616")
chunklet-i: 648; chunklet-start-i: 648; chunklet-end-i: 664
i: 648
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
i:664 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;660: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 28
instruction range for chunk: 28 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 96
instruction range for chunk: 112 124
instruction range for chunk: 124 140
instruction range for chunk: 140 156
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 128")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 28
i: 12
end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;12: r10 <- r8, 0xB\n")
(comment . ";;16: r15 <- r9, r10")
(comment . ";;20: r15 <- 0x7")
(comment . ";;24 b 24")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r9 <- r10")
(comment . ";;32 b 8")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r4 <- 0xE")
(comment . ";;40: b r1, 0")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r4 <- 0x6")
(comment . ";;48: b r1, 0")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r3 <- r3, 0x1\n")
(comment . ";;56 b 64")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r9 <- r1, 0x8\n")
(comment . ";;64: r10 <- r1, 0x10\n")
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 124
i: 96
end-i: 124
at header: 96
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116: r9 <- r1, 0x8\n")
(comment . ";;120: r10 <- r1, 0x10\n")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 140
i: 124
end-i: 140
i: 124
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;136: b r6")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 32
instruction range for chunk: 32 36
instruction range for chunk: 36 60
instruction range for chunk: 60 88
instruction range for chunk: 104 116
instruction range for chunk: 116 144
instruction range for chunk: 160 168
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 108")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 32
i: 8
end-i: 32
i: 8
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;20: r15 <- r9, 0x5\n")
(comment . ";;24: r15 <- 0x1E")
(comment . ";;28 b 28")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: r9 <- 0xF")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r5")
(comment . ";;48: r8 <- r5, 0x5\n")
(comment . ";;52: r4 <- 0x1")
(comment . ";;56: b r5, 13")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 88
i: 60
end-i: 88
i: 60
end-i: 88
i: 64
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";;60: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;84: b r6")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 116
i: 88
end-i: 116
at header: 88
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r1 <- r1, r8")
(comment . ";;108: r9 <- 0x4")
(comment . ";;112 b -80")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 144
i: 116
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 168
i: 144
end-i: 168
at header: 144
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164 b -160")
Configuring for pb64l in em-pb64l
bin/zuo em-pb64l MAKE="/Applications/Xcode.app/Contents/Developer/usr/bin/make"
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_fib0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
em-pb64l/bin/pb64l/scheme.html is up to date
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./fib.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running fib:40:1

real	0m33.922s
user	0m33.967s
sys	0m0.283s

Testing sum under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/sum.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/sum.scm with output to /tmp/larcenous/sum.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/sum.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/sum.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 468
instruction range for chunk: 468 496
instruction range for chunk: 512 520
instruction range for chunk: 520 532
instruction range for chunk: 536 540
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 504")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 444")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 468
i: 384
end-i: 468
at header: 384
i: 400
end-i: 468
i: 404
end-i: 468
i: 408
end-i: 468
i: 420
end-i: 468
i: 432
end-i: 468
i: 444
end-i: 468
i: 456
end-i: 468
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;456: r8 <- r5, 0x5\n")
(comment . ";;460: r4 <- 0x3")
(comment . ";;464: b r5, 13")
chunklet-i: 468; chunklet-start-i: 468; chunklet-end-i: 496
i: 468
end-i: 496
i: 468
end-i: 496
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
at header: 496
(comment . ";;468: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;476: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;492: b r6")
chunklet-i: 496; chunklet-start-i: 512; chunklet-end-i: 520
i: 496
end-i: 520
at header: 496
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;512: r1 <- r1, r8")
(comment . ";;516 b -496")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 532
i: 520
end-i: 532
i: 520
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 532; chunklet-start-i: 536; chunklet-end-i: 540
i: 532
end-i: 540
i: 536
end-i: 540
i: 540
end-i: 540
i:540 HIT CHUNK END
(comment . ";; instruction 532 not included")
(comment . ";;536 b -524")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 44
instruction range for chunk: 44 60
instruction range for chunk: 60 76
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 52")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x1")
(comment . ";;12 b 28")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;16: r10 <- r8, 0xB\n")
(comment . ";; literal r5")
(comment . ";;32: r8 <- r5, 0x5\n")
(comment . ";;36: r4 <- 0x2")
(comment . ";;40: b r5, 13")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 60
i: 44
end-i: 60
i: 44
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;56: b r6")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 76
i: 60
end-i: 76
i: 60
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;72: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 32
instruction range for chunk: 32 36
instruction range for chunk: 36 60
instruction range for chunk: 60 88
instruction range for chunk: 104 116
instruction range for chunk: 116 144
instruction range for chunk: 160 168
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 108")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 32
i: 8
end-i: 32
i: 8
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;20: r15 <- r9, 0x5\n")
(comment . ";;24: r15 <- 0x1E")
(comment . ";;28 b 28")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: r9 <- 0xF")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r5")
(comment . ";;48: r8 <- r5, 0x5\n")
(comment . ";;52: r4 <- 0x1")
(comment . ";;56: b r5, 13")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 88
i: 60
end-i: 88
i: 60
end-i: 88
i: 64
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";;60: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;84: b r6")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 116
i: 88
end-i: 116
at header: 88
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r1 <- r1, r8")
(comment . ";;108: r9 <- 0x4")
(comment . ";;112 b -80")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 144
i: 116
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 168
i: 144
end-i: 168
at header: 144
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164 b -160")
Configuring for pb64l in em-pb64l
bin/zuo em-pb64l MAKE="/Applications/Xcode.app/Contents/Developer/usr/bin/make"
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_sum0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
wat2wasm -r -o em-pb64l/c/pbchunk_sum0.wasm pbchunk-out/pbchunk_sum0.wat
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_sum0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
emcc -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -o em-pb64l/bin/pb64l/scheme.html em-pb64l/boot/pb64l/main.o em-pb64l/boot/pb64l/libkernel.a em-pb64l/lz4/lib/liblz4.a --preload-file em-pb64l/boot/pb64l/petite.boot'@'petite.boot --preload-file em-pb64l/boot/pb64l/scheme.boot'@'scheme.boot --preload-file pbchunk-out/sum.boot'@'sum.boot -s EXIT_RUNTIME=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_ZLIB=1
: em-pb64l/bin/pb64l/scheme.html
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./sum.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running sum:10000:100000

real	1m3.976s
user	1m3.396s
sys	0m0.505s

Testing mbrot under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/mbrot.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/mbrot.scm with output to /tmp/larcenous/mbrot.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/mbrot.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/mbrot.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 480
instruction range for chunk: 496 576
instruction range for chunk: 592 672
instruction range for chunk: 688 768
instruction range for chunk: 784 852
instruction range for chunk: 852 880
instruction range for chunk: 896 904
instruction range for chunk: 904 916
instruction range for chunk: 920 924
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 888")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 828")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 480
i: 384
end-i: 480
at header: 384
i: 400
end-i: 480
i: 404
end-i: 480
i: 408
end-i: 480
i: 420
end-i: 480
i: 432
end-i: 480
i: 444
end-i: 480
i: 448
end-i: 480
i: 460
end-i: 480
i: 464
end-i: 480
i: 468
end-i: 480
i: 472
end-i: 480
i: 476
end-i: 480
i: 480
end-i: 480
at header: 480
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;444: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;460: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;468: r15 <- r1, 0x0\n")
(comment . ";;472: r4 <- 0x3")
(comment . ";;476: b r5, 13")
chunklet-i: 480; chunklet-start-i: 496; chunklet-end-i: 576
i: 480
end-i: 576
at header: 480
i: 496
end-i: 576
i: 500
end-i: 576
i: 504
end-i: 576
i: 516
end-i: 576
i: 528
end-i: 576
i: 540
end-i: 576
i: 544
end-i: 576
i: 556
end-i: 576
i: 560
end-i: 576
i: 564
end-i: 576
i: 568
end-i: 576
i: 572
end-i: 576
i: 576
end-i: 576
at header: 576
(comment . ";;500: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;540: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;556: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;564: r15 <- r1, 0x0\n")
(comment . ";;568: r4 <- 0x3")
(comment . ";;572: b r5, 13")
chunklet-i: 576; chunklet-start-i: 592; chunklet-end-i: 672
i: 576
end-i: 672
at header: 576
i: 592
end-i: 672
i: 596
end-i: 672
i: 600
end-i: 672
i: 612
end-i: 672
i: 624
end-i: 672
i: 636
end-i: 672
i: 640
end-i: 672
i: 652
end-i: 672
i: 656
end-i: 672
i: 660
end-i: 672
i: 664
end-i: 672
i: 668
end-i: 672
i: 672
end-i: 672
at header: 672
(comment . ";;596: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;636: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;652: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;660: r15 <- r1, 0x0\n")
(comment . ";;664: r4 <- 0x3")
(comment . ";;668: b r5, 13")
chunklet-i: 672; chunklet-start-i: 688; chunklet-end-i: 768
i: 672
end-i: 768
at header: 672
i: 688
end-i: 768
i: 692
end-i: 768
i: 696
end-i: 768
i: 708
end-i: 768
i: 720
end-i: 768
i: 732
end-i: 768
i: 736
end-i: 768
i: 748
end-i: 768
i: 752
end-i: 768
i: 756
end-i: 768
i: 760
end-i: 768
i: 764
end-i: 768
i: 768
end-i: 768
at header: 768
(comment . ";;692: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;732: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;748: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;756: r15 <- r1, 0x0\n")
(comment . ";;760: r4 <- 0x3")
(comment . ";;764: b r5, 13")
chunklet-i: 768; chunklet-start-i: 784; chunklet-end-i: 852
i: 768
end-i: 852
at header: 768
i: 784
end-i: 852
i: 788
end-i: 852
i: 792
end-i: 852
i: 804
end-i: 852
i: 816
end-i: 852
i: 828
end-i: 852
i: 840
end-i: 852
i: 844
end-i: 852
i: 848
end-i: 852
i: 852
end-i: 852
i:852 HIT CHUNK END
(comment . ";;788: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;840: r8 <- r5, 0x5\n")
(comment . ";;844: r4 <- 0x3")
(comment . ";;848: b r5, 13")
chunklet-i: 852; chunklet-start-i: 852; chunklet-end-i: 880
i: 852
end-i: 880
i: 852
end-i: 880
i: 856
end-i: 880
i: 860
end-i: 880
i: 864
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
at header: 880
(comment . ";;852: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;860: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;876: b r6")
chunklet-i: 880; chunklet-start-i: 896; chunklet-end-i: 904
i: 880
end-i: 904
at header: 880
i: 896
end-i: 904
i: 900
end-i: 904
i: 904
end-i: 904
i:904 HIT CHUNK END
(comment . ";;896: r1 <- r1, r8")
(comment . ";;900 b -880")
chunklet-i: 904; chunklet-start-i: 904; chunklet-end-i: 916
i: 904
end-i: 916
i: 904
end-i: 916
i: 916
end-i: 916
i:916 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 916; chunklet-start-i: 920; chunklet-end-i: 924
i: 916
end-i: 924
i: 920
end-i: 924
i: 924
end-i: 924
i:924 HIT CHUNK END
(comment . ";; instruction 916 not included")
(comment . ";;920 b -908")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: count
instruction range for chunk: 0 8
instruction range for chunk: 8 40
instruction range for chunk: 40 48
instruction range for chunk: 48 60
instruction range for chunk: 60 120
instruction range for chunk: 136 168
instruction range for chunk: 168 180
instruction range for chunk: 180 208
instruction range for chunk: 208 264
instruction range for chunk: 280 312
instruction range for chunk: 312 324
instruction range for chunk: 324 352
instruction range for chunk: 352 360
instruction range for chunk: 360 368
instruction range for chunk: 368 404
instruction range for chunk: 404 408
instruction range for chunk: 408 416
instruction range for chunk: 416 460
instruction range for chunk: 460 468
instruction range for chunk: 468 476
instruction range for chunk: 476 528
instruction range for chunk: 544 568
instruction range for chunk: 568 624
instruction range for chunk: 640 676
instruction range for chunk: 676 680
instruction range for chunk: 680 688
instruction range for chunk: 688 736
instruction range for chunk: 752 776
instruction range for chunk: 776 832
instruction range for chunk: 848 888
instruction range for chunk: 888 892
instruction range for chunk: 892 912
instruction range for chunk: 912 936
instruction range for chunk: 936 956
instruction range for chunk: 956 976
instruction range for chunk: 976 1024
instruction range for chunk: 1040 1068
instruction range for chunk: 1068 1080
instruction range for chunk: 1084 1088
instruction range for chunk: 1088 1104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x5")
(comment . ";;4 b 1080")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 40
i: 8
end-i: 40
i: 12
end-i: 40
i: 16
end-i: 40
i: 20
end-i: 40
i: 24
end-i: 40
i: 28
end-i: 40
i: 32
end-i: 40
i: 36
end-i: 40
i: 40
end-i: 40
i:40 HIT CHUNK END
(comment . ";;8: r15 <- 0x9")
(comment . ";;12: r9 <- 0xA")
(comment . ";;16: r10 <- 0xB")
(comment . ";;20: r14 <- r1, 0x8\n")
(comment . ";;24: r13 <- r1, 0x10\n")
(comment . ";;28: r12 <- r0, 0x58\n")
(comment . ";;32: r1 <- r12")
(comment . ";;36 b 1028")
chunklet-i: 40; chunklet-start-i: 40; chunklet-end-i: 48
i: 40
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;40: r3 <- r3, 0x1\n")
(comment . ";;44 b 928")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 60
i: 48
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;48: r12 <- r9, r7")
(comment . ";;52: r12 <- 0x2")
(comment . ";;56 b 896")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 120
i: 60
end-i: 120
i: 64
end-i: 120
i: 68
end-i: 120
i: 72
end-i: 120
i: 76
end-i: 120
i: 80
end-i: 120
i: 84
end-i: 120
i: 88
end-i: 120
i: 100
end-i: 120
i: 104
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
at header: 120
(comment . ";;60: r7 <- r9, 0x6\n")
(comment . ";;64: r9 <- 0xD")
(comment . ";;68: r15 <- r1, 0x18\n")
(comment . ";;72: r10 <- r1, 0x28\n")
(comment . ";;76: r14 <- r1, 0x8\n")
(comment . ";;80: r7 <- r1, 0x30\n")
(comment . ";;84: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;100: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;108: r15 <- r1, 0x0\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 136; chunklet-end-i: 168
i: 120
end-i: 168
at header: 120
i: 136
end-i: 168
i: 140
end-i: 168
i: 144
end-i: 168
i: 148
end-i: 168
i: 152
end-i: 168
i: 156
end-i: 168
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;136: r1 <- r1, r8")
(comment . ";;140: r15 <- r1, 0x18\n")
(comment . ";;144: r10 <- r1, 0x28\n")
(comment . ";;148: r14 <- r1, 0x8\n")
(comment . ";;152: r7 <- r1, 0x30\n")
(comment . ";;156: r13 <- r4, r7")
(comment . ";;160: r13 <- 0x2")
(comment . ";;164 b 768")
chunklet-i: 168; chunklet-start-i: 168; chunklet-end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";;168: r13 <- r10, r7")
(comment . ";;172: r13 <- 0x2")
(comment . ";;176 b 756")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 208
i: 180
end-i: 208
i: 184
end-i: 208
i: 188
end-i: 208
i: 192
end-i: 208
i: 196
end-i: 208
i: 200
end-i: 208
i: 204
end-i: 208
i: 208
end-i: 208
i:208 HIT CHUNK END
(comment . ";;180: r5 <- r4, 0x6\n")
(comment . ";;184: r6 <- r10, 0x6\n")
(comment . ";;188: r6 <- r5, r6")
(comment . ";;192: r6 <- r7, r6")
(comment . ";;196: r13 <- r15, r7")
(comment . ";;200: r13 <- 0x2")
(comment . ";;204 b 704")
chunklet-i: 208; chunklet-start-i: 208; chunklet-end-i: 264
i: 208
end-i: 264
i: 212
end-i: 264
i: 216
end-i: 264
i: 220
end-i: 264
i: 224
end-i: 264
i: 228
end-i: 264
i: 232
end-i: 264
i: 244
end-i: 264
i: 248
end-i: 264
i: 252
end-i: 264
i: 256
end-i: 264
i: 260
end-i: 264
i: 264
end-i: 264
at header: 264
(comment . ";;208: r7 <- r15, 0x6\n")
(comment . ";;212: r9 <- 0xE")
(comment . ";;216: r10 <- r1, 0x28\n")
(comment . ";;220: r7 <- r1, 0x30\n")
(comment . ";;224: r6 <- r1, 0x38\n")
(comment . ";;228: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;244: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;252: r15 <- r1, 0x0\n")
(comment . ";;256: r4 <- 0x1")
(comment . ";;260: b r5, 13")
chunklet-i: 264; chunklet-start-i: 280; chunklet-end-i: 312
i: 264
end-i: 312
at header: 264
i: 280
end-i: 312
i: 284
end-i: 312
i: 288
end-i: 312
i: 292
end-i: 312
i: 296
end-i: 312
i: 300
end-i: 312
i: 304
end-i: 312
i: 308
end-i: 312
i: 312
end-i: 312
i:312 HIT CHUNK END
(comment . ";;280: r1 <- r1, r0")
(comment . ";;284: r10 <- r1, 0x28\n")
(comment . ";;288: r7 <- r1, 0x30\n")
(comment . ";;292: r6 <- r1, 0x38\n")
(comment . ";;296: r15 <- r4, r7")
(comment . ";;300: r15 <- 0x2")
(comment . ";;308 b 580")
chunklet-i: 312; chunklet-start-i: 312; chunklet-end-i: 324
i: 312
end-i: 324
i: 316
end-i: 324
i: 320
end-i: 324
i: 324
end-i: 324
i:324 HIT CHUNK END
(comment . ";;312: r15 <- r10, r7")
(comment . ";;316: r15 <- 0x2")
(comment . ";;320 b 568")
chunklet-i: 324; chunklet-start-i: 324; chunklet-end-i: 352
i: 324
end-i: 352
i: 328
end-i: 352
i: 332
end-i: 352
i: 336
end-i: 352
i: 340
end-i: 352
i: 344
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";;324: r4 <- r4, 0x6\n")
(comment . ";;328: r5 <- r10, 0x6\n")
(comment . ";;332: r5 <- r4, r5")
(comment . ";;336: r7 <- r7, r5")
(comment . ";;340: r4 <- 0x0")
(comment . ";;344: r4 <- r6")
(comment . ";;348: r5 <- r7")
chunklet-i: 352; chunklet-start-i: 352; chunklet-end-i: 360
i: 352
end-i: 360
i: 352
end-i: 360
i: 356
end-i: 360
i: 360
end-i: 360
i:360 HIT CHUNK END
(comment . ";;352: r4 <- 0x7")
(comment . ";;356 b 320")
chunklet-i: 360; chunklet-start-i: 360; chunklet-end-i: 368
i: 360
end-i: 368
i: 364
end-i: 368
i: 368
end-i: 368
i:368 HIT CHUNK END
(comment . ";;360: r4 <- 0x200")
(comment . ";;364 b 308")
chunklet-i: 368; chunklet-start-i: 368; chunklet-end-i: 404
i: 368
end-i: 404
i: 368
end-i: 404
i: 372
end-i: 404
i: 376
end-i: 404
i: 380
end-i: 404
i: 392
end-i: 404
i: 396
end-i: 404
i: 400
end-i: 404
i: 404
end-i: 404
i:404 HIT CHUNK END
(comment . ";;368: r2 <- r4, r4")
(comment . ";;372: r3 <- r5, r5")
(comment . ";;376: r1 <- r3, r2")
(comment . ";; literal r15")
(comment . ";;392: r0 <- r15, 0x6\n")
(comment . ";;396: r0 <- r1")
(comment . ";;400 b 4")
chunklet-i: 404; chunklet-start-i: 404; chunklet-end-i: 408
i: 404
end-i: 408
i: 408
end-i: 408
i:408 HIT CHUNK END
(comment . ";;404: b r1, 0")
chunklet-i: 408; chunklet-start-i: 408; chunklet-end-i: 416
i: 408
end-i: 416
i: 408
end-i: 416
i: 412
end-i: 416
i: 416
end-i: 416
i:416 HIT CHUNK END
(comment . ";;408: r3 <- r3, 0x1\n")
(comment . ";;412 b 152")
chunklet-i: 416; chunklet-start-i: 416; chunklet-end-i: 460
i: 416
end-i: 460
i: 416
end-i: 460
i: 420
end-i: 460
i: 432
end-i: 460
i: 436
end-i: 460
i: 440
end-i: 460
i: 444
end-i: 460
i: 448
end-i: 460
i: 452
end-i: 460
i: 456
end-i: 460
i: 460
end-i: 460
i:460 HIT CHUNK END
(comment . ";;416: r5 <- r5, r4")
(comment . ";; literal r15")
(comment . ";;432: r4 <- r15, 0x6\n")
(comment . ";;436: r5 <- r4, r5")
(comment . ";;440: r4 <- r5, r6")
(comment . ";;444: r5 <- r3, r2")
(comment . ";;448: r5 <- r5, r7")
(comment . ";;452: r4 <- 0x7")
(comment . ";;456 b 16")
chunklet-i: 460; chunklet-start-i: 460; chunklet-end-i: 468
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
(comment . ";;460: r15 <- r4, 0x8\n")
(comment . ";;464 b 8")
chunklet-i: 468; chunklet-start-i: 468; chunklet-end-i: 476
i: 468
end-i: 476
i: 472
end-i: 476
i: 476
end-i: 476
i:476 HIT CHUNK END
(comment . ";;468: r4 <- 0xF")
(comment . ";;472 b -124")
chunklet-i: 476; chunklet-start-i: 476; chunklet-end-i: 528
i: 476
end-i: 528
i: 476
end-i: 528
i: 480
end-i: 528
i: 484
end-i: 528
i: 488
end-i: 528
i: 492
end-i: 528
i: 496
end-i: 528
i: 500
end-i: 528
i: 504
end-i: 528
i: 508
end-i: 528
i: 512
end-i: 528
i: 524
end-i: 528
i: 528
end-i: 528
at header: 528
(comment . ";;476: r9 <- 0x8")
(comment . ";;480: r10 <- 0x4")
(comment . ";;484: r7 <- r1, 0x30\n")
(comment . ";;488: r6 <- r1, 0x38\n")
(comment . ";;492: r5 <- r1, 0x40\n")
(comment . ";;496: r4 <- r1, 0x48\n")
(comment . ";;500: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;508: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;524: b r6")
chunklet-i: 528; chunklet-start-i: 544; chunklet-end-i: 568
i: 528
end-i: 568
at header: 528
i: 544
end-i: 568
i: 548
end-i: 568
i: 552
end-i: 568
i: 556
end-i: 568
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;544: r1 <- r1, r0")
(comment . ";;548: r7 <- r1, 0x30\n")
(comment . ";;552: r6 <- r1, 0x38\n")
(comment . ";;556: r5 <- r1, 0x40\n")
(comment . ";;560: r4 <- r1, 0x48\n")
(comment . ";;564 b -216")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 624
i: 568
end-i: 624
i: 568
end-i: 624
i: 572
end-i: 624
i: 576
end-i: 624
i: 580
end-i: 624
i: 584
end-i: 624
i: 588
end-i: 624
i: 592
end-i: 624
i: 596
end-i: 624
i: 600
end-i: 624
i: 604
end-i: 624
i: 608
end-i: 624
i: 620
end-i: 624
i: 624
end-i: 624
at header: 624
(comment . ";;568: r7 <- r1, 0x30\n")
(comment . ";;572: r6 <- r1, 0x38\n")
(comment . ";;576: r5 <- r1, 0x40\n")
(comment . ";;580: r4 <- r1, 0x48\n")
(comment . ";;584: r4 <- r1, 0x8\n")
(comment . ";;588: r3 <- r1, 0x50\n")
(comment . ";;592: r2 <- r1, 0x58\n")
(comment . ";;596: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;604: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;620: b r6")
chunklet-i: 624; chunklet-start-i: 640; chunklet-end-i: 676
i: 624
end-i: 676
at header: 624
i: 640
end-i: 676
i: 644
end-i: 676
i: 648
end-i: 676
i: 652
end-i: 676
i: 656
end-i: 676
i: 660
end-i: 676
i: 664
end-i: 676
i: 668
end-i: 676
i: 672
end-i: 676
i: 676
end-i: 676
i:676 HIT CHUNK END
(comment . ";;640: r1 <- r1, r0")
(comment . ";;644: r7 <- r1, 0x30\n")
(comment . ";;648: r6 <- r1, 0x38\n")
(comment . ";;652: r5 <- r1, 0x40\n")
(comment . ";;656: r4 <- r1, 0x48\n")
(comment . ";;660: r4 <- r1, 0x8\n")
(comment . ";;664: r3 <- r1, 0x50\n")
(comment . ";;668: r2 <- r1, 0x58\n")
(comment . ";;672 b -260")
chunklet-i: 676; chunklet-start-i: 676; chunklet-end-i: 680
i: 676
end-i: 680
i: 676
end-i: 680
i: 680
end-i: 680
i:680 HIT CHUNK END
(comment . ";;676: b r1, 0")
chunklet-i: 680; chunklet-start-i: 680; chunklet-end-i: 688
i: 680
end-i: 688
i: 680
end-i: 688
i: 684
end-i: 688
i: 688
end-i: 688
i:688 HIT CHUNK END
(comment . ";;680: r3 <- r3, 0x1\n")
(comment . ";;684 b 88")
chunklet-i: 688; chunklet-start-i: 688; chunklet-end-i: 736
i: 688
end-i: 736
i: 692
end-i: 736
i: 696
end-i: 736
i: 700
end-i: 736
i: 704
end-i: 736
i: 708
end-i: 736
i: 712
end-i: 736
i: 716
end-i: 736
i: 720
end-i: 736
i: 732
end-i: 736
i: 736
end-i: 736
at header: 736
(comment . ";;688: r7 <- r1, 0x30\n")
(comment . ";;692: r6 <- r1, 0x38\n")
(comment . ";;696: r5 <- r1, 0x40\n")
(comment . ";;700: r4 <- r1, 0x48\n")
(comment . ";;704: r4 <- r1, 0x8\n")
(comment . ";;708: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;716: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;732: b r6")
chunklet-i: 736; chunklet-start-i: 752; chunklet-end-i: 776
i: 736
end-i: 776
at header: 736
i: 752
end-i: 776
i: 756
end-i: 776
i: 760
end-i: 776
i: 764
end-i: 776
i: 768
end-i: 776
i: 772
end-i: 776
i: 776
end-i: 776
i:776 HIT CHUNK END
(comment . ";;752: r1 <- r1, r0")
(comment . ";;756: r7 <- r1, 0x30\n")
(comment . ";;760: r6 <- r1, 0x38\n")
(comment . ";;764: r5 <- r1, 0x40\n")
(comment . ";;768: r4 <- r1, 0x48\n")
(comment . ";;772: r4 <- r1, 0x8\n")
chunklet-i: 776; chunklet-start-i: 776; chunklet-end-i: 832
i: 776
end-i: 832
i: 776
end-i: 832
i: 780
end-i: 832
i: 784
end-i: 832
i: 788
end-i: 832
i: 792
end-i: 832
i: 796
end-i: 832
i: 800
end-i: 832
i: 804
end-i: 832
i: 808
end-i: 832
i: 812
end-i: 832
i: 816
end-i: 832
i: 828
end-i: 832
i: 832
end-i: 832
at header: 832
(comment . ";;776: r9 <- 0x4")
(comment . ";;780: r10 <- 0x200")
(comment . ";;784: r7 <- r1, 0x30\n")
(comment . ";;788: r6 <- r1, 0x38\n")
(comment . ";;792: r5 <- r1, 0x40\n")
(comment . ";;796: r4 <- r1, 0x48\n")
(comment . ";;800: r4 <- r1, 0x8\n")
(comment . ";;804: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;812: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;828: b r6")
chunklet-i: 832; chunklet-start-i: 848; chunklet-end-i: 888
i: 832
end-i: 888
at header: 832
i: 848
end-i: 888
i: 852
end-i: 888
i: 856
end-i: 888
i: 860
end-i: 888
i: 864
end-i: 888
i: 868
end-i: 888
i: 872
end-i: 888
i: 876
end-i: 888
i: 880
end-i: 888
i: 884
end-i: 888
i: 888
end-i: 888
i:888 HIT CHUNK END
(comment . ";;848: r1 <- r1, r0")
(comment . ";;852: r15 <- 0x4")
(comment . ";;856: r7 <- r1, 0x30\n")
(comment . ";;860: r6 <- r1, 0x38\n")
(comment . ";;864: r5 <- r1, 0x40\n")
(comment . ";;868: r4 <- r1, 0x48\n")
(comment . ";;872: r4 <- r1, 0x8\n")
(comment . ";;876: r15 <- 0x6")
(comment . ";;884 b -520")
chunklet-i: 888; chunklet-start-i: 888; chunklet-end-i: 892
i: 888
end-i: 892
i: 892
end-i: 892
i:892 HIT CHUNK END
(comment . ";;888 b -216")
chunklet-i: 892; chunklet-start-i: 892; chunklet-end-i: 912
i: 892
end-i: 912
i: 892
end-i: 912
i: 896
end-i: 912
i: 908
end-i: 912
i: 912
end-i: 912
i:912 HIT CHUNK END
(comment . ";;892: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;908: b r6")
chunklet-i: 912; chunklet-start-i: 912; chunklet-end-i: 936
i: 912
end-i: 936
i: 912
end-i: 936
i: 916
end-i: 936
i: 920
end-i: 936
i: 932
end-i: 936
i: 936
end-i: 936
i:936 HIT CHUNK END
(comment . ";;912: r9 <- 0xF")
(comment . ";;916: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;932: b r6")
chunklet-i: 936; chunklet-start-i: 936; chunklet-end-i: 956
i: 936
end-i: 956
i: 936
end-i: 956
i: 940
end-i: 956
i: 952
end-i: 956
i: 956
end-i: 956
i:956 HIT CHUNK END
(comment . ";;936: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;952: b r6")
chunklet-i: 956; chunklet-start-i: 956; chunklet-end-i: 976
i: 956
end-i: 976
i: 956
end-i: 976
i: 960
end-i: 976
i: 972
end-i: 976
i: 976
end-i: 976
i:976 HIT CHUNK END
(comment . ";;956: r10 <- 0x9")
(comment . ";; literal r6")
(comment . ";;972: b r6")
chunklet-i: 976; chunklet-start-i: 976; chunklet-end-i: 1024
i: 976
end-i: 1024
i: 976
end-i: 1024
i: 980
end-i: 1024
i: 984
end-i: 1024
i: 988
end-i: 1024
i: 992
end-i: 1024
i: 996
end-i: 1024
i: 1000
end-i: 1024
i: 1004
end-i: 1024
i: 1008
end-i: 1024
i: 1020
end-i: 1024
i: 1024
end-i: 1024
at header: 1024
(comment . ";;976: r15 <- r1, 0x18\n")
(comment . ";;980: r9 <- r1, 0x20\n")
(comment . ";;984: r10 <- r1, 0x28\n")
(comment . ";;988: r14 <- r1, 0x8\n")
(comment . ";;992: r13 <- r1, 0x10\n")
(comment . ";;996: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1004: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1020: b r6")
chunklet-i: 1024; chunklet-start-i: 1040; chunklet-end-i: 1068
i: 1024
end-i: 1068
at header: 1024
i: 1040
end-i: 1068
i: 1044
end-i: 1068
i: 1048
end-i: 1068
i: 1052
end-i: 1068
i: 1056
end-i: 1068
i: 1060
end-i: 1068
i: 1064
end-i: 1068
i: 1068
end-i: 1068
i:1068 HIT CHUNK END
(comment . ";;1040: r1 <- r1, r0")
(comment . ";;1044: r15 <- r1, 0x18\n")
(comment . ";;1048: r9 <- r1, 0x20\n")
(comment . ";;1052: r10 <- r1, 0x28\n")
(comment . ";;1056: r14 <- r1, 0x8\n")
(comment . ";;1060: r13 <- r1, 0x10\n")
(comment . ";;1064 b -1020")
chunklet-i: 1068; chunklet-start-i: 1068; chunklet-end-i: 1080
i: 1068
end-i: 1080
i: 1068
end-i: 1080
i: 1080
end-i: 1080
i:1080 HIT CHUNK END
(comment . ";; literal r12")
chunklet-i: 1080; chunklet-start-i: 1084; chunklet-end-i: 1088
i: 1080
end-i: 1088
i: 1084
end-i: 1088
i: 1088
end-i: 1088
i:1088 HIT CHUNK END
(comment . ";; instruction 1080 not included")
(comment . ";;1084 b -1048")
chunklet-i: 1088; chunklet-start-i: 1088; chunklet-end-i: 1104
i: 1088
end-i: 1104
i: 1088
end-i: 1104
i: 1100
end-i: 1104
i: 1104
end-i: 1104
i:1104 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;1100: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: mbrot
instruction range for chunk: 0 12
instruction range for chunk: 12 36
instruction range for chunk: 36 48
instruction range for chunk: 48 60
instruction range for chunk: 60 68
instruction range for chunk: 68 76
instruction range for chunk: 76 88
instruction range for chunk: 88 100
instruction range for chunk: 100 108
instruction range for chunk: 108 116
instruction range for chunk: 116 124
instruction range for chunk: 124 136
instruction range for chunk: 136 156
instruction range for chunk: 156 168
instruction range for chunk: 168 248
instruction range for chunk: 264 300
instruction range for chunk: 300 312
instruction range for chunk: 312 320
instruction range for chunk: 320 336
instruction range for chunk: 336 356
instruction range for chunk: 356 368
instruction range for chunk: 368 380
instruction range for chunk: 380 388
instruction range for chunk: 388 396
instruction range for chunk: 396 404
instruction range for chunk: 404 448
instruction range for chunk: 464 488
instruction range for chunk: 488 500
instruction range for chunk: 504 512
instruction range for chunk: 512 536
instruction range for chunk: 536 560
instruction range for chunk: 560 568
instruction range for chunk: 568 576
instruction range for chunk: 576 584
instruction range for chunk: 584 624
instruction range for chunk: 640 656
instruction range for chunk: 656 704
instruction range for chunk: 720 748
instruction range for chunk: 748 752
instruction range for chunk: 752 792
instruction range for chunk: 808 828
instruction range for chunk: 828 836
instruction range for chunk: 836 872
instruction range for chunk: 888 900
instruction range for chunk: 900 944
instruction range for chunk: 960 980
instruction range for chunk: 980 988
instruction range for chunk: 988 996
instruction range for chunk: 996 1032
instruction range for chunk: 1048 1060
instruction range for chunk: 1060 1104
instruction range for chunk: 1120 1148
instruction range for chunk: 1148 1152
instruction range for chunk: 1152 1160
instruction range for chunk: 1160 1192
instruction range for chunk: 1208 1216
instruction range for chunk: 1216 1256
instruction range for chunk: 1272 1284
instruction range for chunk: 1284 1296
instruction range for chunk: 1300 1304
instruction range for chunk: 1304 1320
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x5")
(comment . ";;8 b 1292")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 36
i: 12
end-i: 36
i: 16
end-i: 36
i: 20
end-i: 36
i: 24
end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;12: r14 <- 0x9")
(comment . ";;16: r10 <- r1, 0x28\n")
(comment . ";;20: r11 <- r1, 0x30\n")
(comment . ";;24: r15 <- r0, 0x58\n")
(comment . ";;28: r1 <- r15")
(comment . ";;32 b 1248")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 48
i: 36
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;36: r15 <- r1, 0x10\n")
(comment . ";;40: r15 <- 0x7")
(comment . ";;44 b 1104")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;48: r15 <- r1, 0x10\n")
(comment . ";;52: r4 <- r15, 0x8\n")
(comment . ";;56 b 1092")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 68
i: 60
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";;60: r4 <- 0x7")
(comment . ";;64 b 920")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;68: r4 <- 0x0")
(comment . ";;72 b 904")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 88
i: 76
end-i: 88
i: 76
end-i: 88
i: 80
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
i:88 HIT CHUNK END
(comment . ";;76: r15 <- r1, 0x10\n")
(comment . ";;80: r15 <- 0x7")
(comment . ";;84 b 740")
chunklet-i: 88; chunklet-start-i: 88; chunklet-end-i: 100
i: 88
end-i: 100
i: 92
end-i: 100
i: 96
end-i: 100
i: 100
end-i: 100
i:100 HIT CHUNK END
(comment . ";;88: r15 <- r1, 0x10\n")
(comment . ";;92: r15 <- r15, 0x8\n")
(comment . ";;96 b 728")
chunklet-i: 100; chunklet-start-i: 100; chunklet-end-i: 108
i: 100
end-i: 108
i: 100
end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
(comment . ";;100: r3 <- r3, 0x1\n")
(comment . ";;104 b 644")
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 116
i: 108
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;108: r15 <- 0x7")
(comment . ";;112 b 540")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;116: r15 <- 0x0")
(comment . ";;120 b 436")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 136
i: 124
end-i: 136
i: 124
end-i: 136
i: 128
end-i: 136
i: 132
end-i: 136
i: 136
end-i: 136
i:136 HIT CHUNK END
(comment . ";;124: r13 <- r14, r7")
(comment . ";;128: r13 <- 0x7")
(comment . ";;132 b 400")
chunklet-i: 136; chunklet-start-i: 136; chunklet-end-i: 156
i: 136
end-i: 156
i: 140
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;136: r12 <- r14, 0x1\n")
(comment . ";;140: r13 <- r12, r1")
(comment . ";;144: r13 <- r13, r8")
(comment . ";;148: r15 <- r13")
(comment . ";;152 b 380")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 168
i: 156
end-i: 168
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;156: r13 <- r15, r12")
(comment . ";;160: r13 <- 0x7")
(comment . ";;164 b 368")
chunklet-i: 168; chunklet-start-i: 168; chunklet-end-i: 248
i: 168
end-i: 248
i: 172
end-i: 248
i: 176
end-i: 248
i: 180
end-i: 248
i: 184
end-i: 248
i: 188
end-i: 248
i: 192
end-i: 248
i: 196
end-i: 248
i: 200
end-i: 248
i: 204
end-i: 248
i: 208
end-i: 248
i: 212
end-i: 248
i: 216
end-i: 248
i: 228
end-i: 248
i: 232
end-i: 248
i: 236
end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
at header: 248
(comment . ";;168: r13 <- r15, r9")
(comment . ";;172: r13 <- r14, r13")
(comment . ";;176: r15 <- r1, 0x50\n")
(comment . ";;180: r4 <- r1, 0x58\n")
(comment . ";;184: r9 <- r1, 0x28\n")
(comment . ";;188: r10 <- r1, 0x30\n")
(comment . ";;192: r11 <- r1, 0x8\n")
(comment . ";;196: r14 <- r1, 0x20\n")
(comment . ";;200: r4 <- r1, 0x38\n")
(comment . ";;204: r15 <- r1, 0x18\n")
(comment . ";;208: r13 <- r1, 0x40\n")
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;228: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;236: r15 <- r1, 0x0\n")
(comment . ";;240: r4 <- 0x5")
(comment . ";;244: b r5, 13")
chunklet-i: 248; chunklet-start-i: 264; chunklet-end-i: 300
i: 248
end-i: 300
at header: 248
i: 264
end-i: 300
i: 268
end-i: 300
i: 272
end-i: 300
i: 276
end-i: 300
i: 280
end-i: 300
i: 284
end-i: 300
i: 288
end-i: 300
i: 292
end-i: 300
i: 296
end-i: 300
i: 300
end-i: 300
i:300 HIT CHUNK END
(comment . ";;264: r1 <- r1, r8")
(comment . ";;268: r11 <- 0x4")
(comment . ";;272: r14 <- r1, 0x20\n")
(comment . ";;276: r4 <- r1, 0x38\n")
(comment . ";;280: r15 <- r1, 0x18\n")
(comment . ";;284: r13 <- r1, 0x40\n")
(comment . ";;288: r12 <- r13, r7")
(comment . ";;292: r12 <- 0x7")
(comment . ";;296 b 212")
chunklet-i: 300; chunklet-start-i: 300; chunklet-end-i: 312
i: 300
end-i: 312
i: 304
end-i: 312
i: 308
end-i: 312
i: 312
end-i: 312
i:312 HIT CHUNK END
(comment . ";;300: r12 <- r13, 0x1\n")
(comment . ";;304: r12 <- 0xF")
(comment . ";;308 b 200")
chunklet-i: 312; chunklet-start-i: 312; chunklet-end-i: 320
i: 312
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
i:320 HIT CHUNK END
(comment . ";;312: r4 <- 0x7")
(comment . ";;316 b 192")
chunklet-i: 320; chunklet-start-i: 320; chunklet-end-i: 336
i: 320
end-i: 336
i: 324
end-i: 336
i: 328
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
i:336 HIT CHUNK END
(comment . ";;320: r12 <- r12, r1")
(comment . ";;324: r12 <- r12, r8")
(comment . ";;328: r4 <- r12")
(comment . ";;332 b 176")
chunklet-i: 336; chunklet-start-i: 336; chunklet-end-i: 356
i: 336
end-i: 356
i: 340
end-i: 356
i: 344
end-i: 356
i: 348
end-i: 356
i: 352
end-i: 356
i: 356
end-i: 356
i:356 HIT CHUNK END
(comment . ";;336: r13 <- r13, r9")
(comment . ";;340: r13 <- r4, r13")
(comment . ";;344: r11 <- r13, 0x0\n")
(comment . ";;348: r11 <- 0x7")
(comment . ";;352 b 24")
chunklet-i: 356; chunklet-start-i: 356; chunklet-end-i: 368
i: 356
end-i: 368
i: 360
end-i: 368
i: 364
end-i: 368
i: 368
end-i: 368
i:368 HIT CHUNK END
(comment . ";;356: r7 <- r0, 0x68\n")
(comment . ";;360: r2 <- r7")
(comment . ";;364 b 120")
chunklet-i: 368; chunklet-start-i: 368; chunklet-end-i: 380
i: 368
end-i: 380
i: 368
end-i: 380
i: 372
end-i: 380
i: 376
end-i: 380
i: 380
end-i: 380
i:380 HIT CHUNK END
(comment . ";;368: r7 <- r7, r8")
(comment . ";;372: r7 <- r0, 0x68\n")
(comment . ";;376: r13 <- r7, 0x0\n")
chunklet-i: 380; chunklet-start-i: 380; chunklet-end-i: 388
i: 380
end-i: 388
i: 380
end-i: 388
i: 384
end-i: 388
i: 388
end-i: 388
i:388 HIT CHUNK END
(comment . ";;380: r15 <- 0x7")
(comment . ";;384 b 16")
chunklet-i: 388; chunklet-start-i: 388; chunklet-end-i: 396
i: 388
end-i: 396
i: 392
end-i: 396
i: 396
end-i: 396
i:396 HIT CHUNK END
(comment . ";;388: r13 <- r15, 0x8\n")
(comment . ";;392 b 8")
chunklet-i: 396; chunklet-start-i: 396; chunklet-end-i: 404
i: 396
end-i: 404
i: 400
end-i: 404
i: 404
end-i: 404
i:404 HIT CHUNK END
(comment . ";;396: r15 <- 0xD")
(comment . ";;400 b -304")
chunklet-i: 404; chunklet-start-i: 404; chunklet-end-i: 448
i: 404
end-i: 448
i: 404
end-i: 448
i: 408
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 420
end-i: 448
i: 424
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;404: r9 <- 0xF")
(comment . ";;408: r10 <- 0x8")
(comment . ";;412: r14 <- r1, 0x20\n")
(comment . ";;416: r4 <- r1, 0x38\n")
(comment . ";;420: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;444: b r6")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 488
i: 448
end-i: 488
at header: 448
i: 464
end-i: 488
i: 468
end-i: 488
i: 472
end-i: 488
i: 476
end-i: 488
i: 480
end-i: 488
i: 484
end-i: 488
i: 488
end-i: 488
i:488 HIT CHUNK END
(comment . ";;464: r1 <- r1, r0")
(comment . ";;468: r15 <- 0x4")
(comment . ";;472: r14 <- r1, 0x20\n")
(comment . ";;476: r4 <- r1, 0x38\n")
(comment . ";;484 b -388")
chunklet-i: 488; chunklet-start-i: 488; chunklet-end-i: 500
i: 488
end-i: 500
i: 488
end-i: 500
i: 500
end-i: 500
i:500 HIT CHUNK END
(comment . ";; literal r12")
chunklet-i: 500; chunklet-start-i: 504; chunklet-end-i: 512
i: 500
end-i: 512
i: 504
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";; instruction 500 not included")
(comment . ";;504: r7 <- r0, 0x68\n")
(comment . ";;508 b -144")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 536
i: 512
end-i: 536
i: 512
end-i: 536
i: 516
end-i: 536
i: 520
end-i: 536
i: 532
end-i: 536
i: 536
end-i: 536
i:536 HIT CHUNK END
(comment . ";;512: r9 <- 0xD")
(comment . ";;516: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;532: b r6")
chunklet-i: 536; chunklet-start-i: 536; chunklet-end-i: 560
i: 536
end-i: 560
i: 536
end-i: 560
i: 540
end-i: 560
i: 544
end-i: 560
i: 556
end-i: 560
i: 560
end-i: 560
i:560 HIT CHUNK END
(comment . ";;536: r9 <- 0xE")
(comment . ";;540: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;556: b r6")
chunklet-i: 560; chunklet-start-i: 560; chunklet-end-i: 568
i: 560
end-i: 568
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;560: r4 <- 0x7")
(comment . ";;564 b 16")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 576
i: 568
end-i: 576
i: 572
end-i: 576
i: 576
end-i: 576
i:576 HIT CHUNK END
(comment . ";;568: r15 <- r4, 0x8\n")
(comment . ";;572 b 8")
chunklet-i: 576; chunklet-start-i: 576; chunklet-end-i: 584
i: 576
end-i: 584
i: 580
end-i: 584
i: 584
end-i: 584
i:584 HIT CHUNK END
(comment . ";;576: r4 <- 0xF")
(comment . ";;580 b -524")
chunklet-i: 584; chunklet-start-i: 584; chunklet-end-i: 624
i: 584
end-i: 624
i: 584
end-i: 624
i: 588
end-i: 624
i: 592
end-i: 624
i: 596
end-i: 624
i: 600
end-i: 624
i: 604
end-i: 624
i: 608
end-i: 624
i: 620
end-i: 624
i: 624
end-i: 624
at header: 624
(comment . ";;584: r9 <- 0x4")
(comment . ";;588: r10 <- 0x8")
(comment . ";;592: r14 <- r1, 0x20\n")
(comment . ";;596: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;604: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;620: b r6")
chunklet-i: 624; chunklet-start-i: 640; chunklet-end-i: 656
i: 624
end-i: 656
at header: 624
i: 640
end-i: 656
i: 644
end-i: 656
i: 648
end-i: 656
i: 652
end-i: 656
i: 656
end-i: 656
i:656 HIT CHUNK END
(comment . ";;640: r1 <- r1, r8")
(comment . ";;644: r14 <- r1, 0x20\n")
(comment . ";;652 b -596")
chunklet-i: 656; chunklet-start-i: 656; chunklet-end-i: 704
i: 656
end-i: 704
i: 656
end-i: 704
i: 660
end-i: 704
i: 664
end-i: 704
i: 668
end-i: 704
i: 672
end-i: 704
i: 676
end-i: 704
i: 680
end-i: 704
i: 684
end-i: 704
i: 688
end-i: 704
i: 700
end-i: 704
i: 704
end-i: 704
at header: 704
(comment . ";;656: r9 <- 0xF")
(comment . ";;660: r10 <- 0x0")
(comment . ";;664: r14 <- r1, 0x20\n")
(comment . ";;668: r4 <- r1, 0x38\n")
(comment . ";;672: r15 <- r1, 0x18\n")
(comment . ";;676: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;684: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;700: b r6")
chunklet-i: 704; chunklet-start-i: 720; chunklet-end-i: 748
i: 704
end-i: 748
at header: 704
i: 720
end-i: 748
i: 724
end-i: 748
i: 728
end-i: 748
i: 732
end-i: 748
i: 736
end-i: 748
i: 740
end-i: 748
i: 744
end-i: 748
i: 748
end-i: 748
i:748 HIT CHUNK END
(comment . ";;720: r1 <- r1, r0")
(comment . ";;724: r13 <- 0x4")
(comment . ";;728: r14 <- r1, 0x20\n")
(comment . ";;732: r4 <- r1, 0x38\n")
(comment . ";;736: r15 <- r1, 0x18\n")
(comment . ";;740: r13 <- 0x6")
(comment . ";;744 b -188")
chunklet-i: 748; chunklet-start-i: 748; chunklet-end-i: 752
i: 748
end-i: 752
i: 752
end-i: 752
i:752 HIT CHUNK END
(comment . ";;748 b -628")
chunklet-i: 752; chunklet-start-i: 752; chunklet-end-i: 792
i: 752
end-i: 792
i: 752
end-i: 792
i: 756
end-i: 792
i: 760
end-i: 792
i: 764
end-i: 792
i: 768
end-i: 792
i: 772
end-i: 792
i: 776
end-i: 792
i: 788
end-i: 792
i: 792
end-i: 792
at header: 792
(comment . ";;752: r14 <- r1, 0x20\n")
(comment . ";;756: r4 <- r1, 0x38\n")
(comment . ";;760: r15 <- r1, 0x18\n")
(comment . ";;764: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;772: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;788: b r6")
chunklet-i: 792; chunklet-start-i: 808; chunklet-end-i: 828
i: 792
end-i: 828
at header: 792
i: 808
end-i: 828
i: 812
end-i: 828
i: 816
end-i: 828
i: 820
end-i: 828
i: 824
end-i: 828
i: 828
end-i: 828
i:828 HIT CHUNK END
(comment . ";;808: r1 <- r1, r0")
(comment . ";;812: r14 <- r1, 0x20\n")
(comment . ";;816: r4 <- r1, 0x38\n")
(comment . ";;820: r15 <- r1, 0x18\n")
(comment . ";;824 b -720")
chunklet-i: 828; chunklet-start-i: 828; chunklet-end-i: 836
i: 828
end-i: 836
i: 828
end-i: 836
i: 832
end-i: 836
i: 836
end-i: 836
i:836 HIT CHUNK END
(comment . ";;828: r3 <- r3, 0x1\n")
(comment . ";;832 b 64")
chunklet-i: 836; chunklet-start-i: 836; chunklet-end-i: 872
i: 836
end-i: 872
i: 840
end-i: 872
i: 844
end-i: 872
i: 848
end-i: 872
i: 852
end-i: 872
i: 856
end-i: 872
i: 868
end-i: 872
i: 872
end-i: 872
at header: 872
(comment . ";;836: r14 <- r1, 0x20\n")
(comment . ";;840: r4 <- r1, 0x38\n")
(comment . ";;844: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;852: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;868: b r6")
chunklet-i: 872; chunklet-start-i: 888; chunklet-end-i: 900
i: 872
end-i: 900
at header: 872
i: 888
end-i: 900
i: 892
end-i: 900
i: 896
end-i: 900
i: 900
end-i: 900
i:900 HIT CHUNK END
(comment . ";;888: r1 <- r1, r0")
(comment . ";;892: r14 <- r1, 0x20\n")
(comment . ";;896: r4 <- r1, 0x38\n")
chunklet-i: 900; chunklet-start-i: 900; chunklet-end-i: 944
i: 900
end-i: 944
i: 900
end-i: 944
i: 904
end-i: 944
i: 908
end-i: 944
i: 912
end-i: 944
i: 916
end-i: 944
i: 920
end-i: 944
i: 924
end-i: 944
i: 928
end-i: 944
i: 940
end-i: 944
i: 944
end-i: 944
at header: 944
(comment . ";;900: r9 <- r1, 0x10\n")
(comment . ";;904: r10 <- 0x8")
(comment . ";;908: r14 <- r1, 0x20\n")
(comment . ";;912: r4 <- r1, 0x38\n")
(comment . ";;916: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;924: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;940: b r6")
chunklet-i: 944; chunklet-start-i: 960; chunklet-end-i: 980
i: 944
end-i: 980
at header: 944
i: 960
end-i: 980
i: 964
end-i: 980
i: 968
end-i: 980
i: 972
end-i: 980
i: 976
end-i: 980
i: 980
end-i: 980
i:980 HIT CHUNK END
(comment . ";;960: r1 <- r1, r0")
(comment . ";;964: r15 <- 0x4")
(comment . ";;968: r14 <- r1, 0x20\n")
(comment . ";;972: r4 <- r1, 0x38\n")
(comment . ";;976 b -880")
chunklet-i: 980; chunklet-start-i: 980; chunklet-end-i: 988
i: 980
end-i: 988
i: 980
end-i: 988
i: 984
end-i: 988
i: 988
end-i: 988
i:988 HIT CHUNK END
(comment . ";;980: r4 <- 0x2E")
(comment . ";;984: b r1, 0")
chunklet-i: 988; chunklet-start-i: 988; chunklet-end-i: 996
i: 988
end-i: 996
i: 988
end-i: 996
i: 992
end-i: 996
i: 996
end-i: 996
i:996 HIT CHUNK END
(comment . ";;988: r3 <- r3, 0x1\n")
(comment . ";;992 b 64")
chunklet-i: 996; chunklet-start-i: 996; chunklet-end-i: 1032
i: 996
end-i: 1032
i: 1000
end-i: 1032
i: 1004
end-i: 1032
i: 1008
end-i: 1032
i: 1012
end-i: 1032
i: 1016
end-i: 1032
i: 1028
end-i: 1032
i: 1032
end-i: 1032
at header: 1032
(comment . ";;996: r14 <- r1, 0x20\n")
(comment . ";;1000: r4 <- r1, 0x38\n")
(comment . ";;1004: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1012: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1028: b r6")
chunklet-i: 1032; chunklet-start-i: 1048; chunklet-end-i: 1060
i: 1032
end-i: 1060
at header: 1032
i: 1048
end-i: 1060
i: 1052
end-i: 1060
i: 1056
end-i: 1060
i: 1060
end-i: 1060
i:1060 HIT CHUNK END
(comment . ";;1048: r1 <- r1, r0")
(comment . ";;1052: r14 <- r1, 0x20\n")
(comment . ";;1056: r4 <- r1, 0x38\n")
chunklet-i: 1060; chunklet-start-i: 1060; chunklet-end-i: 1104
i: 1060
end-i: 1104
i: 1060
end-i: 1104
i: 1064
end-i: 1104
i: 1068
end-i: 1104
i: 1072
end-i: 1104
i: 1076
end-i: 1104
i: 1080
end-i: 1104
i: 1084
end-i: 1104
i: 1088
end-i: 1104
i: 1100
end-i: 1104
i: 1104
end-i: 1104
at header: 1104
(comment . ";;1060: r9 <- 0x4")
(comment . ";;1064: r10 <- 0x0")
(comment . ";;1068: r14 <- r1, 0x20\n")
(comment . ";;1072: r4 <- r1, 0x38\n")
(comment . ";;1076: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1084: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1100: b r6")
chunklet-i: 1104; chunklet-start-i: 1120; chunklet-end-i: 1148
i: 1104
end-i: 1148
at header: 1104
i: 1120
end-i: 1148
i: 1124
end-i: 1148
i: 1128
end-i: 1148
i: 1132
end-i: 1148
i: 1136
end-i: 1148
i: 1140
end-i: 1148
i: 1144
end-i: 1148
i: 1148
end-i: 1148
i:1148 HIT CHUNK END
(comment . ";;1120: r1 <- r1, r0")
(comment . ";;1124: r15 <- 0x4")
(comment . ";;1128: r14 <- r1, 0x20\n")
(comment . ";;1132: r4 <- r1, 0x38\n")
(comment . ";;1136: r15 <- 0x6")
(comment . ";;1144 b -168")
chunklet-i: 1148; chunklet-start-i: 1148; chunklet-end-i: 1152
i: 1148
end-i: 1152
i: 1152
end-i: 1152
i:1152 HIT CHUNK END
(comment . ";;1148 b -1076")
chunklet-i: 1152; chunklet-start-i: 1152; chunklet-end-i: 1160
i: 1152
end-i: 1160
i: 1152
end-i: 1160
i: 1156
end-i: 1160
i: 1160
end-i: 1160
i:1160 HIT CHUNK END
(comment . ";;1152: r3 <- r3, 0x1\n")
(comment . ";;1156 b 56")
chunklet-i: 1160; chunklet-start-i: 1160; chunklet-end-i: 1192
i: 1160
end-i: 1192
i: 1164
end-i: 1192
i: 1168
end-i: 1192
i: 1172
end-i: 1192
i: 1176
end-i: 1192
i: 1188
end-i: 1192
i: 1192
end-i: 1192
at header: 1192
(comment . ";;1160: r14 <- r1, 0x20\n")
(comment . ";;1164: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1172: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1188: b r6")
chunklet-i: 1192; chunklet-start-i: 1208; chunklet-end-i: 1216
i: 1192
end-i: 1216
at header: 1192
i: 1208
end-i: 1216
i: 1212
end-i: 1216
i: 1216
end-i: 1216
i:1216 HIT CHUNK END
(comment . ";;1208: r1 <- r1, r8")
(comment . ";;1212: r14 <- r1, 0x20\n")
chunklet-i: 1216; chunklet-start-i: 1216; chunklet-end-i: 1256
i: 1216
end-i: 1256
i: 1216
end-i: 1256
i: 1220
end-i: 1256
i: 1224
end-i: 1256
i: 1228
end-i: 1256
i: 1232
end-i: 1256
i: 1236
end-i: 1256
i: 1240
end-i: 1256
i: 1252
end-i: 1256
i: 1256
end-i: 1256
at header: 1256
(comment . ";;1216: r9 <- r1, 0x10\n")
(comment . ";;1220: r10 <- 0x8")
(comment . ";;1224: r14 <- r1, 0x20\n")
(comment . ";;1228: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1236: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1252: b r6")
chunklet-i: 1256; chunklet-start-i: 1272; chunklet-end-i: 1284
i: 1256
end-i: 1284
at header: 1256
i: 1272
end-i: 1284
i: 1276
end-i: 1284
i: 1280
end-i: 1284
i: 1284
end-i: 1284
i:1284 HIT CHUNK END
(comment . ";;1272: r1 <- r1, r8")
(comment . ";;1276: r14 <- r1, 0x20\n")
(comment . ";;1280 b -1224")
chunklet-i: 1284; chunklet-start-i: 1284; chunklet-end-i: 1296
i: 1284
end-i: 1296
i: 1284
end-i: 1296
i: 1296
end-i: 1296
i:1296 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 1296; chunklet-start-i: 1300; chunklet-end-i: 1304
i: 1296
end-i: 1304
i: 1300
end-i: 1304
i: 1304
end-i: 1304
i:1304 HIT CHUNK END
(comment . ";; instruction 1296 not included")
(comment . ";;1300 b -1268")
chunklet-i: 1304; chunklet-start-i: 1304; chunklet-end-i: 1320
i: 1304
end-i: 1320
i: 1304
end-i: 1320
i: 1316
end-i: 1320
i: 1320
end-i: 1320
i:1320 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;1316: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: test
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
instruction range for chunk: 32 72
instruction range for chunk: 88 108
instruction range for chunk: 108 120
instruction range for chunk: 120 128
instruction range for chunk: 128 136
instruction range for chunk: 136 144
instruction range for chunk: 144 192
instruction range for chunk: 208 240
instruction range for chunk: 240 252
instruction range for chunk: 252 260
instruction range for chunk: 260 276
instruction range for chunk: 276 296
instruction range for chunk: 296 308
instruction range for chunk: 308 320
instruction range for chunk: 320 328
instruction range for chunk: 328 336
instruction range for chunk: 336 344
instruction range for chunk: 344 384
instruction range for chunk: 400 420
instruction range for chunk: 420 432
instruction range for chunk: 436 444
instruction range for chunk: 444 468
instruction range for chunk: 468 504
instruction range for chunk: 520 540
instruction range for chunk: 540 632
instruction range for chunk: 648 672
instruction range for chunk: 672 684
instruction range for chunk: 684 692
instruction range for chunk: 692 708
instruction range for chunk: 708 720
instruction range for chunk: 720 728
instruction range for chunk: 728 736
instruction range for chunk: 736 756
instruction range for chunk: 756 780
instruction range for chunk: 780 788
instruction range for chunk: 788 824
instruction range for chunk: 840 852
instruction range for chunk: 852 896
instruction range for chunk: 912 940
instruction range for chunk: 940 944
instruction range for chunk: 944 984
instruction range for chunk: 1000 1016
instruction range for chunk: 1016 1028
instruction range for chunk: 1032 1036
instruction range for chunk: 1036 1052
instruction range for chunk: 1052 1068
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 1044")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x1")
(comment . ";;12 b 1020")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;16: r9 <- r1, 0x8\n")
(comment . ";;20: r15 <- r0, 0x58\n")
(comment . ";;24: r1 <- r15")
(comment . ";;28 b 984")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 72
i: 32
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;32: r9 <- r1, 0x8\n")
(comment . ";;36: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x1")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 108
i: 72
end-i: 108
at header: 72
i: 88
end-i: 108
i: 92
end-i: 108
i: 96
end-i: 108
i: 100
end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
(comment . ";;88: r1 <- r1, r0")
(comment . ";;92: r15 <- r1, 0x8\n")
(comment . ";;96: r15 <- 0x7")
(comment . ";;104 b 836")
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;108: r15 <- r1, 0x8\n")
(comment . ";;112: r15 <- r15, 0x8\n")
(comment . ";;116 b 824")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 128
i: 120
end-i: 128
i: 120
end-i: 128
i: 124
end-i: 128
i: 128
end-i: 128
i:128 HIT CHUNK END
(comment . ";;120: r15 <- 0x7")
(comment . ";;124 b 652")
chunklet-i: 128; chunklet-start-i: 128; chunklet-end-i: 136
i: 128
end-i: 136
i: 132
end-i: 136
i: 136
end-i: 136
i:136 HIT CHUNK END
(comment . ";;128: r15 <- 0x0")
(comment . ";;132 b 404")
chunklet-i: 136; chunklet-start-i: 136; chunklet-end-i: 144
i: 136
end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
i:144 HIT CHUNK END
(comment . ";;136: r3 <- r3, 0x1\n")
(comment . ";;140 b 324")
chunklet-i: 144; chunklet-start-i: 144; chunklet-end-i: 192
i: 144
end-i: 192
i: 144
end-i: 192
i: 148
end-i: 192
i: 152
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;144: r9 <- r1, 0x8\n")
(comment . ";;148: r4 <- r1, 0x10\n")
(comment . ";;152: r15 <- r1, 0x18\n")
(comment . ";;156: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x1")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 240
i: 192
end-i: 240
at header: 192
i: 208
end-i: 240
i: 212
end-i: 240
i: 216
end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 228
end-i: 240
i: 232
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
i:240 HIT CHUNK END
(comment . ";;208: r1 <- r1, r0")
(comment . ";;212: r11 <- 0x4")
(comment . ";;216: r4 <- r1, 0x10\n")
(comment . ";;220: r15 <- r1, 0x18\n")
(comment . ";;224: r14 <- r4, r7")
(comment . ";;228: r14 <- 0x7")
(comment . ";;236 b 204")
chunklet-i: 240; chunklet-start-i: 240; chunklet-end-i: 252
i: 240
end-i: 252
i: 244
end-i: 252
i: 248
end-i: 252
i: 252
end-i: 252
i:252 HIT CHUNK END
(comment . ";;240: r14 <- r4, 0x1\n")
(comment . ";;244: r14 <- 0xF")
(comment . ";;248 b 192")
chunklet-i: 252; chunklet-start-i: 252; chunklet-end-i: 260
i: 252
end-i: 260
i: 256
end-i: 260
i: 260
end-i: 260
i:260 HIT CHUNK END
(comment . ";;252: r15 <- 0x7")
(comment . ";;256 b 184")
chunklet-i: 260; chunklet-start-i: 260; chunklet-end-i: 276
i: 260
end-i: 276
i: 264
end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";;260: r14 <- r14, r1")
(comment . ";;264: r14 <- r14, r8")
(comment . ";;268: r15 <- r14")
(comment . ";;272 b 168")
chunklet-i: 276; chunklet-start-i: 276; chunklet-end-i: 296
i: 276
end-i: 296
i: 280
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";;276: r14 <- r4, r9")
(comment . ";;280: r14 <- r15, r14")
(comment . ";;284: r11 <- r14, 0x0\n")
(comment . ";;288: r11 <- 0x7")
(comment . ";;292 b 24")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 308
i: 296
end-i: 308
i: 300
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;296: r7 <- r0, 0x68\n")
(comment . ";;300: r2 <- r7")
(comment . ";;304 b 112")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 320
i: 308
end-i: 320
i: 308
end-i: 320
i: 312
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
i:320 HIT CHUNK END
(comment . ";;308: r7 <- r7, r8")
(comment . ";;312: r7 <- r0, 0x68\n")
(comment . ";;316: r14 <- r7, 0x0\n")
chunklet-i: 320; chunklet-start-i: 320; chunklet-end-i: 328
i: 320
end-i: 328
i: 320
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
i:328 HIT CHUNK END
(comment . ";;320: r15 <- 0x7")
(comment . ";;324 b 16")
chunklet-i: 328; chunklet-start-i: 328; chunklet-end-i: 336
i: 328
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
i:336 HIT CHUNK END
(comment . ";;328: r14 <- r15, 0x8\n")
(comment . ";;332 b 8")
chunklet-i: 336; chunklet-start-i: 336; chunklet-end-i: 344
i: 336
end-i: 344
i: 340
end-i: 344
i: 344
end-i: 344
i:344 HIT CHUNK END
(comment . ";;336: r15 <- 0xE")
(comment . ";;340 b -224")
chunklet-i: 344; chunklet-start-i: 344; chunklet-end-i: 384
i: 344
end-i: 384
i: 344
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 356
end-i: 384
i: 360
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;344: r9 <- 0xF")
(comment . ";;348: r10 <- 0x8")
(comment . ";;352: r4 <- r1, 0x10\n")
(comment . ";;356: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;364: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;380: b r6")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 420
i: 384
end-i: 420
at header: 384
i: 400
end-i: 420
i: 404
end-i: 420
i: 408
end-i: 420
i: 412
end-i: 420
i: 416
end-i: 420
i: 420
end-i: 420
i:420 HIT CHUNK END
(comment . ";;400: r1 <- r1, r8")
(comment . ";;404: r15 <- 0x4")
(comment . ";;408: r4 <- r1, 0x10\n")
(comment . ";;416 b -300")
chunklet-i: 420; chunklet-start-i: 420; chunklet-end-i: 432
i: 420
end-i: 432
i: 420
end-i: 432
i: 432
end-i: 432
i:432 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 432; chunklet-start-i: 436; chunklet-end-i: 444
i: 432
end-i: 444
i: 436
end-i: 444
i: 440
end-i: 444
i: 444
end-i: 444
i:444 HIT CHUNK END
(comment . ";; instruction 432 not included")
(comment . ";;436: r7 <- r0, 0x68\n")
(comment . ";;440 b -136")
chunklet-i: 444; chunklet-start-i: 444; chunklet-end-i: 468
i: 444
end-i: 468
i: 444
end-i: 468
i: 448
end-i: 468
i: 452
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
(comment . ";;444: r9 <- 0x4")
(comment . ";;448: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;464: b r6")
chunklet-i: 468; chunklet-start-i: 468; chunklet-end-i: 504
i: 468
end-i: 504
i: 468
end-i: 504
i: 472
end-i: 504
i: 476
end-i: 504
i: 480
end-i: 504
i: 484
end-i: 504
i: 488
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
at header: 504
(comment . ";;468: r4 <- r1, 0x10\n")
(comment . ";;472: r15 <- r1, 0x18\n")
(comment . ";;476: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;484: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;500: b r6")
chunklet-i: 504; chunklet-start-i: 520; chunklet-end-i: 540
i: 504
end-i: 540
at header: 504
i: 520
end-i: 540
i: 524
end-i: 540
i: 528
end-i: 540
i: 532
end-i: 540
i: 536
end-i: 540
i: 540
end-i: 540
i:540 HIT CHUNK END
(comment . ";;524: r1 <- r1, r0")
(comment . ";;528: r4 <- r1, 0x10\n")
(comment . ";;532: r15 <- r1, 0x18\n")
(comment . ";;536 b -396")
chunklet-i: 540; chunklet-start-i: 540; chunklet-end-i: 632
i: 540
end-i: 632
i: 540
end-i: 632
i: 552
end-i: 632
i: 556
end-i: 632
i: 560
end-i: 632
i: 564
end-i: 632
i: 568
end-i: 632
i: 580
end-i: 632
i: 592
end-i: 632
i: 596
end-i: 632
i: 600
end-i: 632
i: 612
end-i: 632
i: 616
end-i: 632
i: 620
end-i: 632
i: 624
end-i: 632
i: 628
end-i: 632
i: 632
end-i: 632
at header: 632
(comment . ";; literal r15")
(comment . ";;552: r15 <- r1, 0x20\n")
(comment . ";;556: r15 <- r1, 0x8\n")
(comment . ";;560: r15 <- r1, 0x28\n")
(comment . ";;564: r9 <- 0x4")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;592: r4 <- r1, 0x10\n")
(comment . ";;596: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;612: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;620: r15 <- r1, 0x0\n")
(comment . ";;624: r4 <- 0x5")
(comment . ";;628: b r5, 13")
chunklet-i: 632; chunklet-start-i: 648; chunklet-end-i: 672
i: 632
end-i: 672
at header: 632
i: 648
end-i: 672
i: 652
end-i: 672
i: 656
end-i: 672
i: 660
end-i: 672
i: 664
end-i: 672
i: 668
end-i: 672
i: 672
end-i: 672
i:672 HIT CHUNK END
(comment . ";;652: r1 <- r1, r8")
(comment . ";;656: r4 <- r1, 0x10\n")
(comment . ";;660: r15 <- r4, r7")
(comment . ";;664: r15 <- 0x7")
(comment . ";;668 b 84")
chunklet-i: 672; chunklet-start-i: 672; chunklet-end-i: 684
i: 672
end-i: 684
i: 676
end-i: 684
i: 680
end-i: 684
i: 684
end-i: 684
i:684 HIT CHUNK END
(comment . ";;672: r15 <- r4, 0x1\n")
(comment . ";;676: r15 <- 0x8")
(comment . ";;680 b 72")
chunklet-i: 684; chunklet-start-i: 684; chunklet-end-i: 692
i: 684
end-i: 692
i: 688
end-i: 692
i: 692
end-i: 692
i:692 HIT CHUNK END
(comment . ";;684: r15 <- 0x7")
(comment . ";;688 b 64")
chunklet-i: 692; chunklet-start-i: 692; chunklet-end-i: 708
i: 692
end-i: 708
i: 696
end-i: 708
i: 700
end-i: 708
i: 704
end-i: 708
i: 708
end-i: 708
i:708 HIT CHUNK END
(comment . ";;692: r9 <- r4, 0x9\n")
(comment . ";;696: r15 <- r9, r7")
(comment . ";;700: r15 <- 0x7")
(comment . ";;704 b 28")
chunklet-i: 708; chunklet-start-i: 708; chunklet-end-i: 720
i: 708
end-i: 720
i: 712
end-i: 720
i: 716
end-i: 720
i: 720
end-i: 720
i:720 HIT CHUNK END
(comment . ";;708: r15 <- r9, 0x1\n")
(comment . ";;712: r15 <- 0x8")
(comment . ";;716 b 16")
chunklet-i: 720; chunklet-start-i: 720; chunklet-end-i: 728
i: 720
end-i: 728
i: 724
end-i: 728
i: 728
end-i: 728
i:728 HIT CHUNK END
(comment . ";;720: r15 <- 0x7")
(comment . ";;724 b 8")
chunklet-i: 728; chunklet-start-i: 728; chunklet-end-i: 736
i: 728
end-i: 736
i: 732
end-i: 736
i: 736
end-i: 736
i:736 HIT CHUNK END
(comment . ";;728: r4 <- r9, 0x9\n")
(comment . ";;732: b r1, 0")
chunklet-i: 736; chunklet-start-i: 736; chunklet-end-i: 756
i: 736
end-i: 756
i: 736
end-i: 756
i: 740
end-i: 756
i: 752
end-i: 756
i: 756
end-i: 756
i:756 HIT CHUNK END
(comment . ";;736: r10 <- 0x0")
(comment . ";; literal r6")
(comment . ";;752: b r6")
chunklet-i: 756; chunklet-start-i: 756; chunklet-end-i: 780
i: 756
end-i: 780
i: 756
end-i: 780
i: 760
end-i: 780
i: 764
end-i: 780
i: 776
end-i: 780
i: 780
end-i: 780
i:780 HIT CHUNK END
(comment . ";;756: r9 <- 0x4")
(comment . ";;760: r10 <- 0x0")
(comment . ";; literal r6")
(comment . ";;776: b r6")
chunklet-i: 780; chunklet-start-i: 780; chunklet-end-i: 788
i: 780
end-i: 788
i: 780
end-i: 788
i: 784
end-i: 788
i: 788
end-i: 788
i:788 HIT CHUNK END
(comment . ";;780: r3 <- r3, 0x1\n")
(comment . ";;784 b 64")
chunklet-i: 788; chunklet-start-i: 788; chunklet-end-i: 824
i: 788
end-i: 824
i: 792
end-i: 824
i: 796
end-i: 824
i: 800
end-i: 824
i: 804
end-i: 824
i: 808
end-i: 824
i: 820
end-i: 824
i: 824
end-i: 824
at header: 824
(comment . ";;788: r4 <- r1, 0x10\n")
(comment . ";;792: r15 <- r1, 0x18\n")
(comment . ";;796: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;804: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;820: b r6")
chunklet-i: 824; chunklet-start-i: 840; chunklet-end-i: 852
i: 824
end-i: 852
at header: 824
i: 840
end-i: 852
i: 844
end-i: 852
i: 848
end-i: 852
i: 852
end-i: 852
i:852 HIT CHUNK END
(comment . ";;840: r1 <- r1, r0")
(comment . ";;844: r4 <- r1, 0x10\n")
(comment . ";;848: r15 <- r1, 0x18\n")
chunklet-i: 852; chunklet-start-i: 852; chunklet-end-i: 896
i: 852
end-i: 896
i: 852
end-i: 896
i: 856
end-i: 896
i: 860
end-i: 896
i: 864
end-i: 896
i: 868
end-i: 896
i: 872
end-i: 896
i: 876
end-i: 896
i: 880
end-i: 896
i: 892
end-i: 896
i: 896
end-i: 896
at header: 896
(comment . ";;852: r9 <- 0xF")
(comment . ";;856: r10 <- 0x0")
(comment . ";;860: r4 <- r1, 0x10\n")
(comment . ";;864: r15 <- r1, 0x18\n")
(comment . ";;868: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;876: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;892: b r6")
chunklet-i: 896; chunklet-start-i: 912; chunklet-end-i: 940
i: 896
end-i: 940
at header: 896
i: 912
end-i: 940
i: 916
end-i: 940
i: 920
end-i: 940
i: 924
end-i: 940
i: 928
end-i: 940
i: 932
end-i: 940
i: 936
end-i: 940
i: 940
end-i: 940
i:940 HIT CHUNK END
(comment . ";;912: r1 <- r1, r0")
(comment . ";;916: r14 <- 0x4")
(comment . ";;920: r4 <- r1, 0x10\n")
(comment . ";;924: r15 <- r1, 0x18\n")
(comment . ";;928: r14 <- 0x6")
(comment . ";;936 b -400")
chunklet-i: 940; chunklet-start-i: 940; chunklet-end-i: 944
i: 940
end-i: 944
i: 944
end-i: 944
i:944 HIT CHUNK END
(comment . ";;940 b -808")
chunklet-i: 944; chunklet-start-i: 944; chunklet-end-i: 984
i: 944
end-i: 984
i: 944
end-i: 984
i: 948
end-i: 984
i: 952
end-i: 984
i: 956
end-i: 984
i: 960
end-i: 984
i: 964
end-i: 984
i: 968
end-i: 984
i: 980
end-i: 984
i: 984
end-i: 984
at header: 984
(comment . ";;944: r9 <- r1, 0x8\n")
(comment . ";;948: r10 <- 0x8")
(comment . ";;952: r4 <- r1, 0x10\n")
(comment . ";;956: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;964: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;980: b r6")
chunklet-i: 984; chunklet-start-i: 1000; chunklet-end-i: 1016
i: 984
end-i: 1016
at header: 984
i: 1000
end-i: 1016
i: 1004
end-i: 1016
i: 1008
end-i: 1016
i: 1012
end-i: 1016
i: 1016
end-i: 1016
i:1016 HIT CHUNK END
(comment . ";;1000: r1 <- r1, r8")
(comment . ";;1004: r15 <- 0x4")
(comment . ";;1008: r4 <- r1, 0x10\n")
(comment . ";;1012 b -896")
chunklet-i: 1016; chunklet-start-i: 1016; chunklet-end-i: 1028
i: 1016
end-i: 1028
i: 1016
end-i: 1028
i: 1028
end-i: 1028
i:1028 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 1028; chunklet-start-i: 1032; chunklet-end-i: 1036
i: 1028
end-i: 1036
i: 1032
end-i: 1036
i: 1036
end-i: 1036
i:1036 HIT CHUNK END
(comment . ";; instruction 1028 not included")
(comment . ";;1032 b -1004")
chunklet-i: 1036; chunklet-start-i: 1036; chunklet-end-i: 1052
i: 1036
end-i: 1052
i: 1036
end-i: 1052
i: 1048
end-i: 1052
i: 1052
end-i: 1052
i:1052 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;1048: b r6")
chunklet-i: 1052; chunklet-start-i: 1052; chunklet-end-i: 1068
i: 1052
end-i: 1068
i: 1052
end-i: 1068
i: 1064
end-i: 1068
i: 1068
end-i: 1068
i:1068 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;1064: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 28
instruction range for chunk: 28 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 96
instruction range for chunk: 112 124
instruction range for chunk: 124 140
instruction range for chunk: 140 156
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 128")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 28
i: 12
end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;12: r10 <- r8, 0xB\n")
(comment . ";;16: r15 <- r9, r10")
(comment . ";;20: r15 <- 0x7")
(comment . ";;24 b 24")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r9 <- r10")
(comment . ";;32 b 8")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r4 <- 0xE")
(comment . ";;40: b r1, 0")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r4 <- 0x6")
(comment . ";;48: b r1, 0")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r3 <- r3, 0x1\n")
(comment . ";;56 b 64")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r9 <- r1, 0x8\n")
(comment . ";;64: r10 <- r1, 0x10\n")
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 124
i: 96
end-i: 124
at header: 96
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116: r9 <- r1, 0x8\n")
(comment . ";;120: r10 <- r1, 0x10\n")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 140
i: 124
end-i: 140
i: 124
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;136: b r6")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 32
instruction range for chunk: 32 36
instruction range for chunk: 36 60
instruction range for chunk: 60 88
instruction range for chunk: 104 116
instruction range for chunk: 116 144
instruction range for chunk: 160 168
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 108")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 32
i: 8
end-i: 32
i: 8
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;20: r15 <- r9, 0x5\n")
(comment . ";;24: r15 <- 0x1E")
(comment . ";;28 b 28")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: r9 <- 0xF")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r5")
(comment . ";;48: r8 <- r5, 0x5\n")
(comment . ";;52: r4 <- 0x1")
(comment . ";;56: b r5, 13")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 88
i: 60
end-i: 88
i: 60
end-i: 88
i: 64
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";;60: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;84: b r6")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 116
i: 88
end-i: 116
at header: 88
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r1 <- r1, r8")
(comment . ";;108: r9 <- 0x4")
(comment . ";;112 b -80")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 144
i: 116
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 168
i: 144
end-i: 168
at header: 144
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164 b -160")
Configuring for pb64l in em-pb64l
bin/zuo em-pb64l MAKE="/Applications/Xcode.app/Contents/Developer/usr/bin/make"
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_mbrot0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
wat2wasm -r -o em-pb64l/c/pbchunk_mbrot0.wasm pbchunk-out/pbchunk_mbrot0.wat
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_mbrot0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
emcc -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -o em-pb64l/bin/pb64l/scheme.html em-pb64l/boot/pb64l/main.o em-pb64l/boot/pb64l/libkernel.a em-pb64l/lz4/lib/liblz4.a --preload-file em-pb64l/boot/pb64l/petite.boot'@'petite.boot --preload-file em-pb64l/boot/pb64l/scheme.boot'@'scheme.boot --preload-file pbchunk-out/mbrot.boot'@'mbrot.boot -s EXIT_RUNTIME=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_ZLIB=1
: em-pb64l/bin/pb64l/scheme.html
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./mbrot.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running mbrot:75:1000

real	0m18.420s
user	0m18.539s
sys	0m0.350s

Testing pnpoly under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/pnpoly.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/pnpoly.scm with output to /tmp/larcenous/pnpoly.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/pnpoly.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/pnpoly.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 480
instruction range for chunk: 496 576
instruction range for chunk: 592 672
instruction range for chunk: 688 768
instruction range for chunk: 784 852
instruction range for chunk: 852 880
instruction range for chunk: 896 904
instruction range for chunk: 904 916
instruction range for chunk: 920 924
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 888")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 828")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 480
i: 384
end-i: 480
at header: 384
i: 400
end-i: 480
i: 404
end-i: 480
i: 408
end-i: 480
i: 420
end-i: 480
i: 432
end-i: 480
i: 444
end-i: 480
i: 448
end-i: 480
i: 460
end-i: 480
i: 464
end-i: 480
i: 468
end-i: 480
i: 472
end-i: 480
i: 476
end-i: 480
i: 480
end-i: 480
at header: 480
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;444: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;460: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;468: r15 <- r1, 0x0\n")
(comment . ";;472: r4 <- 0x3")
(comment . ";;476: b r5, 13")
chunklet-i: 480; chunklet-start-i: 496; chunklet-end-i: 576
i: 480
end-i: 576
at header: 480
i: 496
end-i: 576
i: 500
end-i: 576
i: 504
end-i: 576
i: 516
end-i: 576
i: 528
end-i: 576
i: 540
end-i: 576
i: 544
end-i: 576
i: 556
end-i: 576
i: 560
end-i: 576
i: 564
end-i: 576
i: 568
end-i: 576
i: 572
end-i: 576
i: 576
end-i: 576
at header: 576
(comment . ";;500: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;540: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;556: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;564: r15 <- r1, 0x0\n")
(comment . ";;568: r4 <- 0x3")
(comment . ";;572: b r5, 13")
chunklet-i: 576; chunklet-start-i: 592; chunklet-end-i: 672
i: 576
end-i: 672
at header: 576
i: 592
end-i: 672
i: 596
end-i: 672
i: 600
end-i: 672
i: 612
end-i: 672
i: 624
end-i: 672
i: 636
end-i: 672
i: 640
end-i: 672
i: 652
end-i: 672
i: 656
end-i: 672
i: 660
end-i: 672
i: 664
end-i: 672
i: 668
end-i: 672
i: 672
end-i: 672
at header: 672
(comment . ";;596: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;636: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;652: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;660: r15 <- r1, 0x0\n")
(comment . ";;664: r4 <- 0x3")
(comment . ";;668: b r5, 13")
chunklet-i: 672; chunklet-start-i: 688; chunklet-end-i: 768
i: 672
end-i: 768
at header: 672
i: 688
end-i: 768
i: 692
end-i: 768
i: 696
end-i: 768
i: 708
end-i: 768
i: 720
end-i: 768
i: 732
end-i: 768
i: 736
end-i: 768
i: 748
end-i: 768
i: 752
end-i: 768
i: 756
end-i: 768
i: 760
end-i: 768
i: 764
end-i: 768
i: 768
end-i: 768
at header: 768
(comment . ";;692: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;732: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;748: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;756: r15 <- r1, 0x0\n")
(comment . ";;760: r4 <- 0x3")
(comment . ";;764: b r5, 13")
chunklet-i: 768; chunklet-start-i: 784; chunklet-end-i: 852
i: 768
end-i: 852
at header: 768
i: 784
end-i: 852
i: 788
end-i: 852
i: 792
end-i: 852
i: 804
end-i: 852
i: 816
end-i: 852
i: 828
end-i: 852
i: 840
end-i: 852
i: 844
end-i: 852
i: 848
end-i: 852
i: 852
end-i: 852
i:852 HIT CHUNK END
(comment . ";;788: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;840: r8 <- r5, 0x5\n")
(comment . ";;844: r4 <- 0x3")
(comment . ";;848: b r5, 13")
chunklet-i: 852; chunklet-start-i: 852; chunklet-end-i: 880
i: 852
end-i: 880
i: 852
end-i: 880
i: 856
end-i: 880
i: 860
end-i: 880
i: 864
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
at header: 880
(comment . ";;852: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;860: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;876: b r6")
chunklet-i: 880; chunklet-start-i: 896; chunklet-end-i: 904
i: 880
end-i: 904
at header: 880
i: 896
end-i: 904
i: 900
end-i: 904
i: 904
end-i: 904
i:904 HIT CHUNK END
(comment . ";;896: r1 <- r1, r8")
(comment . ";;900 b -880")
chunklet-i: 904; chunklet-start-i: 904; chunklet-end-i: 916
i: 904
end-i: 916
i: 904
end-i: 916
i: 916
end-i: 916
i:916 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 916; chunklet-start-i: 920; chunklet-end-i: 924
i: 916
end-i: 924
i: 920
end-i: 924
i: 924
end-i: 924
i:924 HIT CHUNK END
(comment . ";; instruction 916 not included")
(comment . ";;920 b -908")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: pt-in-poly2
instruction range for chunk: 0 12
instruction range for chunk: 12 44
instruction range for chunk: 44 56
instruction range for chunk: 56 72
instruction range for chunk: 72 80
instruction range for chunk: 80 84
instruction range for chunk: 84 100
instruction range for chunk: 100 108
instruction range for chunk: 108 116
instruction range for chunk: 116 128
instruction range for chunk: 128 148
instruction range for chunk: 148 160
instruction range for chunk: 160 180
instruction range for chunk: 180 192
instruction range for chunk: 192 208
instruction range for chunk: 208 220
instruction range for chunk: 220 240
instruction range for chunk: 240 252
instruction range for chunk: 252 272
instruction range for chunk: 272 284
instruction range for chunk: 284 300
instruction range for chunk: 300 308
instruction range for chunk: 308 316
instruction range for chunk: 316 376
instruction range for chunk: 392 432
instruction range for chunk: 432 444
instruction range for chunk: 444 464
instruction range for chunk: 464 476
instruction range for chunk: 476 496
instruction range for chunk: 496 508
instruction range for chunk: 508 524
instruction range for chunk: 524 536
instruction range for chunk: 536 548
instruction range for chunk: 548 568
instruction range for chunk: 568 580
instruction range for chunk: 580 600
instruction range for chunk: 600 616
instruction range for chunk: 616 636
instruction range for chunk: 636 648
instruction range for chunk: 648 668
instruction range for chunk: 668 688
instruction range for chunk: 688 700
instruction range for chunk: 700 720
instruction range for chunk: 720 732
instruction range for chunk: 732 756
instruction range for chunk: 756 776
instruction range for chunk: 776 788
instruction range for chunk: 788 808
instruction range for chunk: 808 820
instruction range for chunk: 820 848
instruction range for chunk: 848 868
instruction range for chunk: 868 880
instruction range for chunk: 880 900
instruction range for chunk: 900 920
instruction range for chunk: 920 932
instruction range for chunk: 932 952
instruction range for chunk: 952 964
instruction range for chunk: 964 996
instruction range for chunk: 996 1004
instruction range for chunk: 1004 1012
instruction range for chunk: 1012 1020
instruction range for chunk: 1020 1028
instruction range for chunk: 1028 1036
instruction range for chunk: 1036 1096
instruction range for chunk: 1112 1152
instruction range for chunk: 1152 1168
instruction range for chunk: 1168 1192
instruction range for chunk: 1192 1216
instruction range for chunk: 1216 1236
instruction range for chunk: 1236 1260
instruction range for chunk: 1260 1276
instruction range for chunk: 1276 1300
instruction range for chunk: 1300 1324
instruction range for chunk: 1324 1344
instruction range for chunk: 1344 1368
instruction range for chunk: 1368 1392
instruction range for chunk: 1392 1412
instruction range for chunk: 1412 1436
instruction range for chunk: 1436 1456
instruction range for chunk: 1456 1480
instruction range for chunk: 1480 1492
instruction range for chunk: 1492 1512
instruction range for chunk: 1512 1524
instruction range for chunk: 1524 1544
instruction range for chunk: 1544 1556
instruction range for chunk: 1556 1572
instruction range for chunk: 1572 1576
instruction range for chunk: 1576 1596
instruction range for chunk: 1596 1620
instruction range for chunk: 1620 1640
instruction range for chunk: 1640 1664
instruction range for chunk: 1664 1720
instruction range for chunk: 1736 1776
instruction range for chunk: 1776 1784
instruction range for chunk: 1784 1792
instruction range for chunk: 1792 1848
instruction range for chunk: 1864 1896
instruction range for chunk: 1896 1960
instruction range for chunk: 1976 2024
instruction range for chunk: 2024 2028
instruction range for chunk: 2028 2036
instruction range for chunk: 2036 2088
instruction range for chunk: 2104 2132
instruction range for chunk: 2132 2184
instruction range for chunk: 2200 2232
instruction range for chunk: 2232 2252
instruction range for chunk: 2252 2268
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x4")
(comment . ";;8 b 2240")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 24
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;12: r14 <- 0x9")
(comment . ";;16: r15 <- 0xA")
(comment . ";;20: r8 <- 0xB")
(comment . ";;24: r13 <- r1, 0x8\n")
(comment . ";;28: r4 <- 0x0")
(comment . ";;32: r12 <- r14, r7")
(comment . ";;36: r12 <- 0x7")
(comment . ";;40 b 2188")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 56
i: 44
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";;44: r12 <- r14, 0x1\n")
(comment . ";;48: r12 <- 0x7")
(comment . ";;52 b 2176")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;56: r12 <- r12, r1")
(comment . ";;60: r9 <- r12, r8")
(comment . ";;64: r9 <- 0x7")
(comment . ";;68 b 1956")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;72: r10 <- r9, 0x8\n")
(comment . ";;76 b 1948")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 84
i: 80
end-i: 84
i: 80
end-i: 84
i: 84
end-i: 84
i:84 HIT CHUNK END
(comment . ";;80: r11 <- 0x6")
chunklet-i: 84; chunklet-start-i: 84; chunklet-end-i: 100
i: 84
end-i: 100
i: 84
end-i: 100
i: 88
end-i: 100
i: 92
end-i: 100
i: 96
end-i: 100
i: 100
end-i: 100
i:100 HIT CHUNK END
(comment . ";;84: r12 <- 0x4")
(comment . ";;88: r4 <- 0xA")
(comment . ";;92: r4 <- 0x7")
(comment . ";;96 b 1684")
chunklet-i: 100; chunklet-start-i: 100; chunklet-end-i: 108
i: 100
end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
(comment . ";;100: r4 <- 0x0")
(comment . ";;104 b 1668")
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 116
i: 108
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;108: r3 <- r3, 0x1\n")
(comment . ";;112 b 1548")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 128
i: 116
end-i: 128
i: 116
end-i: 128
i: 120
end-i: 128
i: 124
end-i: 128
i: 128
end-i: 128
i:128 HIT CHUNK END
(comment . ";;116: r10 <- r15, r7")
(comment . ";;120: r10 <- 0x7")
(comment . ";;124 b 1512")
chunklet-i: 128; chunklet-start-i: 128; chunklet-end-i: 148
i: 128
end-i: 148
i: 132
end-i: 148
i: 136
end-i: 148
i: 140
end-i: 148
i: 144
end-i: 148
i: 148
end-i: 148
i:148 HIT CHUNK END
(comment . ";;128: r9 <- r15, 0x1\n")
(comment . ";;132: r10 <- r9, r1")
(comment . ";;136: r10 <- r10, r8")
(comment . ";;140: r4 <- r10")
(comment . ";;144 b 1492")
chunklet-i: 148; chunklet-start-i: 148; chunklet-end-i: 160
i: 148
end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;148: r10 <- r4, r9")
(comment . ";;152: r10 <- 0x7")
(comment . ";;156 b 1480")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 180
i: 160
end-i: 180
i: 164
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";;160: r10 <- r4, r9")
(comment . ";;164: r9 <- r15, r10")
(comment . ";;168: r10 <- r9, r7")
(comment . ";;172: r10 <- 0x2")
(comment . ";;176 b 1440")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";;180: r10 <- r13, r7")
(comment . ";;184: r10 <- 0x2")
(comment . ";;188 b 1428")
chunklet-i: 192; chunklet-start-i: 192; chunklet-end-i: 208
i: 192
end-i: 208
i: 196
end-i: 208
i: 200
end-i: 208
i: 204
end-i: 208
i: 208
end-i: 208
i:208 HIT CHUNK END
(comment . ";;192: r6 <- r13, 0x6\n")
(comment . ";;196: r7 <- r9, 0x6\n")
(comment . ";;200: r6 <- r7")
(comment . ";;204 b 1272")
chunklet-i: 208; chunklet-start-i: 208; chunklet-end-i: 220
i: 208
end-i: 220
i: 208
end-i: 220
i: 212
end-i: 220
i: 216
end-i: 220
i: 220
end-i: 220
i:220 HIT CHUNK END
(comment . ";;208: r10 <- r15, r7")
(comment . ";;212: r10 <- 0x7")
(comment . ";;216 b 1236")
chunklet-i: 220; chunklet-start-i: 220; chunklet-end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 228
end-i: 240
i: 232
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
i:240 HIT CHUNK END
(comment . ";;220: r9 <- r15, 0x1\n")
(comment . ";;224: r10 <- r9, r1")
(comment . ";;228: r10 <- r10, r8")
(comment . ";;232: r12 <- r10")
(comment . ";;236 b 1216")
chunklet-i: 240; chunklet-start-i: 240; chunklet-end-i: 252
i: 240
end-i: 252
i: 244
end-i: 252
i: 248
end-i: 252
i: 252
end-i: 252
i:252 HIT CHUNK END
(comment . ";;240: r10 <- r12, r9")
(comment . ";;244: r10 <- 0x7")
(comment . ";;248 b 1204")
chunklet-i: 252; chunklet-start-i: 252; chunklet-end-i: 272
i: 252
end-i: 272
i: 256
end-i: 272
i: 260
end-i: 272
i: 264
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
i:272 HIT CHUNK END
(comment . ";;252: r10 <- r12, r9")
(comment . ";;256: r9 <- r15, r10")
(comment . ";;260: r10 <- r9, r7")
(comment . ";;264: r10 <- 0x2")
(comment . ";;268 b 1164")
chunklet-i: 272; chunklet-start-i: 272; chunklet-end-i: 284
i: 272
end-i: 284
i: 276
end-i: 284
i: 280
end-i: 284
i: 284
end-i: 284
i:284 HIT CHUNK END
(comment . ";;272: r10 <- r13, r7")
(comment . ";;276: r10 <- 0x2")
(comment . ";;280 b 1152")
chunklet-i: 284; chunklet-start-i: 284; chunklet-end-i: 300
i: 284
end-i: 300
i: 288
end-i: 300
i: 292
end-i: 300
i: 296
end-i: 300
i: 300
end-i: 300
i:300 HIT CHUNK END
(comment . ";;284: r6 <- r13, 0x6\n")
(comment . ";;288: r7 <- r9, 0x6\n")
(comment . ";;292: r6 <- r7")
(comment . ";;296 b 132")
chunklet-i: 300; chunklet-start-i: 300; chunklet-end-i: 308
i: 300
end-i: 308
i: 300
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;300: r4 <- 0x7")
(comment . ";;304 b 8")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 316
i: 308
end-i: 316
i: 312
end-i: 316
i: 316
end-i: 316
i:316 HIT CHUNK END
(comment . ";;308: r10 <- r4, 0x8\n")
(comment . ";;312 b -232")
chunklet-i: 316; chunklet-start-i: 316; chunklet-end-i: 376
i: 316
end-i: 376
i: 316
end-i: 376
i: 320
end-i: 376
i: 324
end-i: 376
i: 328
end-i: 376
i: 332
end-i: 376
i: 336
end-i: 376
i: 340
end-i: 376
i: 344
end-i: 376
i: 348
end-i: 376
i: 352
end-i: 376
i: 356
end-i: 376
i: 360
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
at header: 376
(comment . ";;316: r9 <- 0x4")
(comment . ";;320: r10 <- 0x8")
(comment . ";;324: r14 <- r1, 0x20\n")
(comment . ";;328: r15 <- r1, 0x28\n")
(comment . ";;332: r8 <- r1, 0x30\n")
(comment . ";;336: r13 <- r1, 0x10\n")
(comment . ";;340: r4 <- r1, 0x8\n")
(comment . ";;344: r11 <- r1, 0x38\n")
(comment . ";;348: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;356: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;372: b r6")
chunklet-i: 376; chunklet-start-i: 392; chunklet-end-i: 432
i: 376
end-i: 432
at header: 376
i: 392
end-i: 432
i: 396
end-i: 432
i: 400
end-i: 432
i: 404
end-i: 432
i: 408
end-i: 432
i: 412
end-i: 432
i: 416
end-i: 432
i: 420
end-i: 432
i: 424
end-i: 432
i: 428
end-i: 432
i: 432
end-i: 432
i:432 HIT CHUNK END
(comment . ";;392: r1 <- r1, r0")
(comment . ";;396: r10 <- 0x4")
(comment . ";;400: r14 <- r1, 0x20\n")
(comment . ";;404: r15 <- r1, 0x28\n")
(comment . ";;408: r8 <- r1, 0x30\n")
(comment . ";;412: r13 <- r1, 0x10\n")
(comment . ";;416: r4 <- r1, 0x8\n")
(comment . ";;420: r11 <- r1, 0x38\n")
(comment . ";;428 b -348")
chunklet-i: 432; chunklet-start-i: 432; chunklet-end-i: 444
i: 432
end-i: 444
i: 432
end-i: 444
i: 436
end-i: 444
i: 440
end-i: 444
i: 444
end-i: 444
i:444 HIT CHUNK END
(comment . ";;432: r10 <- r15, r7")
(comment . ";;436: r10 <- 0x7")
(comment . ";;440 b 968")
chunklet-i: 444; chunklet-start-i: 444; chunklet-end-i: 464
i: 444
end-i: 464
i: 448
end-i: 464
i: 452
end-i: 464
i: 456
end-i: 464
i: 460
end-i: 464
i: 464
end-i: 464
i:464 HIT CHUNK END
(comment . ";;444: r9 <- r15, 0x1\n")
(comment . ";;448: r10 <- r9, r1")
(comment . ";;452: r10 <- r10, r8")
(comment . ";;456: r4 <- r10")
(comment . ";;460 b 948")
chunklet-i: 464; chunklet-start-i: 464; chunklet-end-i: 476
i: 464
end-i: 476
i: 468
end-i: 476
i: 472
end-i: 476
i: 476
end-i: 476
i:476 HIT CHUNK END
(comment . ";;464: r10 <- r4, r9")
(comment . ";;468: r10 <- 0x7")
(comment . ";;472 b 936")
chunklet-i: 476; chunklet-start-i: 476; chunklet-end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 484
end-i: 496
i: 488
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";;476: r10 <- r4, r9")
(comment . ";;480: r10 <- r15, r10")
(comment . ";;484: r9 <- r13, r7")
(comment . ";;488: r9 <- 0x2")
(comment . ";;492 b 896")
chunklet-i: 496; chunklet-start-i: 496; chunklet-end-i: 508
i: 496
end-i: 508
i: 500
end-i: 508
i: 504
end-i: 508
i: 508
end-i: 508
i:508 HIT CHUNK END
(comment . ";;496: r9 <- r10, r7")
(comment . ";;500: r9 <- 0x2")
(comment . ";;504 b 884")
chunklet-i: 508; chunklet-start-i: 508; chunklet-end-i: 524
i: 508
end-i: 524
i: 512
end-i: 524
i: 516
end-i: 524
i: 520
end-i: 524
i: 524
end-i: 524
i:524 HIT CHUNK END
(comment . ";;508: r6 <- r10, 0x6\n")
(comment . ";;512: r7 <- r13, 0x6\n")
(comment . ";;516: r6 <- r7")
(comment . ";;520 b -224")
chunklet-i: 524; chunklet-start-i: 524; chunklet-end-i: 536
i: 524
end-i: 536
i: 524
end-i: 536
i: 528
end-i: 536
i: 532
end-i: 536
i: 536
end-i: 536
i:536 HIT CHUNK END
(comment . ";;524: r10 <- r8, r7")
(comment . ";;528: r10 <- 0x2")
(comment . ";;532 b 832")
chunklet-i: 536; chunklet-start-i: 536; chunklet-end-i: 548
i: 536
end-i: 548
i: 540
end-i: 548
i: 544
end-i: 548
i: 548
end-i: 548
i:548 HIT CHUNK END
(comment . ";;536: r10 <- r14, r7")
(comment . ";;540: r10 <- 0x7")
(comment . ";;544 b 796")
chunklet-i: 548; chunklet-start-i: 548; chunklet-end-i: 568
i: 548
end-i: 568
i: 552
end-i: 568
i: 556
end-i: 568
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;548: r9 <- r14, 0x1\n")
(comment . ";;552: r10 <- r9, r1")
(comment . ";;556: r10 <- r10, r8")
(comment . ";;560: r4 <- r10")
(comment . ";;564 b 776")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 580
i: 568
end-i: 580
i: 572
end-i: 580
i: 576
end-i: 580
i: 580
end-i: 580
i:580 HIT CHUNK END
(comment . ";;568: r10 <- r4, r9")
(comment . ";;572: r10 <- 0x7")
(comment . ";;576 b 764")
chunklet-i: 580; chunklet-start-i: 580; chunklet-end-i: 600
i: 580
end-i: 600
i: 584
end-i: 600
i: 588
end-i: 600
i: 592
end-i: 600
i: 596
end-i: 600
i: 600
end-i: 600
i:600 HIT CHUNK END
(comment . ";;580: r10 <- r4, r9")
(comment . ";;584: r10 <- r14, r10")
(comment . ";;588: r9 <- r10, r7")
(comment . ";;592: r9 <- 0x2")
(comment . ";;596 b 724")
chunklet-i: 600; chunklet-start-i: 600; chunklet-end-i: 616
i: 600
end-i: 616
i: 604
end-i: 616
i: 608
end-i: 616
i: 612
end-i: 616
i: 616
end-i: 616
i:616 HIT CHUNK END
(comment . ";;600: r4 <- r10, 0x6\n")
(comment . ";;604: r10 <- r14, r7")
(comment . ";;608: r10 <- 0x7")
(comment . ";;612 b 684")
chunklet-i: 616; chunklet-start-i: 616; chunklet-end-i: 636
i: 616
end-i: 636
i: 620
end-i: 636
i: 624
end-i: 636
i: 628
end-i: 636
i: 632
end-i: 636
i: 636
end-i: 636
i:636 HIT CHUNK END
(comment . ";;616: r9 <- r14, 0x1\n")
(comment . ";;620: r10 <- r9, r1")
(comment . ";;624: r10 <- r10, r8")
(comment . ";;628: r12 <- r10")
(comment . ";;632 b 664")
chunklet-i: 636; chunklet-start-i: 636; chunklet-end-i: 648
i: 636
end-i: 648
i: 640
end-i: 648
i: 644
end-i: 648
i: 648
end-i: 648
i:648 HIT CHUNK END
(comment . ";;636: r10 <- r12, r9")
(comment . ";;640: r10 <- 0x7")
(comment . ";;644 b 652")
chunklet-i: 648; chunklet-start-i: 648; chunklet-end-i: 668
i: 648
end-i: 668
i: 652
end-i: 668
i: 656
end-i: 668
i: 660
end-i: 668
i: 664
end-i: 668
i: 668
end-i: 668
i:668 HIT CHUNK END
(comment . ";;648: r10 <- r12, r9")
(comment . ";;652: r9 <- r14, r10")
(comment . ";;656: r10 <- r14, r7")
(comment . ";;660: r10 <- 0x7")
(comment . ";;664 b 608")
chunklet-i: 668; chunklet-start-i: 668; chunklet-end-i: 688
i: 668
end-i: 688
i: 672
end-i: 688
i: 676
end-i: 688
i: 680
end-i: 688
i: 684
end-i: 688
i: 688
end-i: 688
i:688 HIT CHUNK END
(comment . ";;668: r7 <- r14, 0x1\n")
(comment . ";;672: r10 <- r7, r1")
(comment . ";;676: r10 <- r10, r8")
(comment . ";;680: r4 <- r10")
(comment . ";;684 b 588")
chunklet-i: 688; chunklet-start-i: 688; chunklet-end-i: 700
i: 688
end-i: 700
i: 692
end-i: 700
i: 696
end-i: 700
i: 700
end-i: 700
i:700 HIT CHUNK END
(comment . ";;688: r10 <- r4, r7")
(comment . ";;692: r10 <- 0x7")
(comment . ";;696 b 576")
chunklet-i: 700; chunklet-start-i: 700; chunklet-end-i: 720
i: 700
end-i: 720
i: 704
end-i: 720
i: 708
end-i: 720
i: 712
end-i: 720
i: 716
end-i: 720
i: 720
end-i: 720
i:720 HIT CHUNK END
(comment . ";;700: r10 <- r4, r9")
(comment . ";;704: r10 <- r14, r10")
(comment . ";;708: r7 <- r9, r7")
(comment . ";;712: r7 <- 0x2")
(comment . ";;716 b 540")
chunklet-i: 720; chunklet-start-i: 720; chunklet-end-i: 732
i: 720
end-i: 732
i: 724
end-i: 732
i: 728
end-i: 732
i: 732
end-i: 732
i:732 HIT CHUNK END
(comment . ";;720: r7 <- r10, r7")
(comment . ";;724: r7 <- 0x2")
(comment . ";;728 b 528")
chunklet-i: 732; chunklet-start-i: 732; chunklet-end-i: 756
i: 732
end-i: 756
i: 736
end-i: 756
i: 740
end-i: 756
i: 744
end-i: 756
i: 748
end-i: 756
i: 752
end-i: 756
i: 756
end-i: 756
i:756 HIT CHUNK END
(comment . ";;732: r6 <- r9, 0x6\n")
(comment . ";;736: r7 <- r10, 0x6\n")
(comment . ";;740: r5 <- r6, r7")
(comment . ";;744: r10 <- r15, r7")
(comment . ";;748: r10 <- 0x7")
(comment . ";;752 b 480")
chunklet-i: 756; chunklet-start-i: 756; chunklet-end-i: 776
i: 756
end-i: 776
i: 760
end-i: 776
i: 764
end-i: 776
i: 768
end-i: 776
i: 772
end-i: 776
i: 776
end-i: 776
i:776 HIT CHUNK END
(comment . ";;756: r9 <- r15, 0x1\n")
(comment . ";;760: r10 <- r9, r1")
(comment . ";;764: r10 <- r10, r8")
(comment . ";;768: r4 <- r10")
(comment . ";;772 b 460")
chunklet-i: 776; chunklet-start-i: 776; chunklet-end-i: 788
i: 776
end-i: 788
i: 780
end-i: 788
i: 784
end-i: 788
i: 788
end-i: 788
i:788 HIT CHUNK END
(comment . ";;776: r10 <- r4, r9")
(comment . ";;780: r10 <- 0x7")
(comment . ";;784 b 448")
chunklet-i: 788; chunklet-start-i: 788; chunklet-end-i: 808
i: 788
end-i: 808
i: 792
end-i: 808
i: 796
end-i: 808
i: 800
end-i: 808
i: 804
end-i: 808
i: 808
end-i: 808
i:808 HIT CHUNK END
(comment . ";;788: r10 <- r4, r9")
(comment . ";;792: r10 <- r15, r10")
(comment . ";;796: r9 <- r13, r7")
(comment . ";;800: r9 <- 0x2")
(comment . ";;804 b 408")
chunklet-i: 808; chunklet-start-i: 808; chunklet-end-i: 820
i: 808
end-i: 820
i: 812
end-i: 820
i: 816
end-i: 820
i: 820
end-i: 820
i:820 HIT CHUNK END
(comment . ";;808: r9 <- r10, r7")
(comment . ";;812: r9 <- 0x2")
(comment . ";;816 b 396")
chunklet-i: 820; chunklet-start-i: 820; chunklet-end-i: 848
i: 820
end-i: 848
i: 824
end-i: 848
i: 828
end-i: 848
i: 832
end-i: 848
i: 836
end-i: 848
i: 840
end-i: 848
i: 844
end-i: 848
i: 848
end-i: 848
i:848 HIT CHUNK END
(comment . ";;820: r6 <- r13, 0x6\n")
(comment . ";;824: r7 <- r10, 0x6\n")
(comment . ";;828: r7 <- r6, r7")
(comment . ";;832: r5 <- r5, r7")
(comment . ";;836: r10 <- r15, r7")
(comment . ";;840: r10 <- 0x7")
(comment . ";;844 b 344")
chunklet-i: 848; chunklet-start-i: 848; chunklet-end-i: 868
i: 848
end-i: 868
i: 852
end-i: 868
i: 856
end-i: 868
i: 860
end-i: 868
i: 864
end-i: 868
i: 868
end-i: 868
i:868 HIT CHUNK END
(comment . ";;848: r9 <- r15, 0x1\n")
(comment . ";;852: r10 <- r9, r1")
(comment . ";;856: r10 <- r10, r8")
(comment . ";;860: r12 <- r10")
(comment . ";;864 b 324")
chunklet-i: 868; chunklet-start-i: 868; chunklet-end-i: 880
i: 868
end-i: 880
i: 872
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
i:880 HIT CHUNK END
(comment . ";;868: r10 <- r12, r9")
(comment . ";;872: r10 <- 0x7")
(comment . ";;876 b 312")
chunklet-i: 880; chunklet-start-i: 880; chunklet-end-i: 900
i: 880
end-i: 900
i: 884
end-i: 900
i: 888
end-i: 900
i: 892
end-i: 900
i: 896
end-i: 900
i: 900
end-i: 900
i:900 HIT CHUNK END
(comment . ";;880: r12 <- r12, r9")
(comment . ";;884: r9 <- r15, r12")
(comment . ";;888: r12 <- r15, r7")
(comment . ";;892: r12 <- 0x7")
(comment . ";;896 b 268")
chunklet-i: 900; chunklet-start-i: 900; chunklet-end-i: 920
i: 900
end-i: 920
i: 904
end-i: 920
i: 908
end-i: 920
i: 912
end-i: 920
i: 916
end-i: 920
i: 920
end-i: 920
i:920 HIT CHUNK END
(comment . ";;900: r10 <- r15, 0x1\n")
(comment . ";;904: r12 <- r10, r1")
(comment . ";;908: r12 <- r12, r8")
(comment . ";;912: r4 <- r12")
(comment . ";;916 b 248")
chunklet-i: 920; chunklet-start-i: 920; chunklet-end-i: 932
i: 920
end-i: 932
i: 924
end-i: 932
i: 928
end-i: 932
i: 932
end-i: 932
i:932 HIT CHUNK END
(comment . ";;920: r12 <- r4, r10")
(comment . ";;924: r12 <- 0x7")
(comment . ";;928 b 236")
chunklet-i: 932; chunklet-start-i: 932; chunklet-end-i: 952
i: 932
end-i: 952
i: 936
end-i: 952
i: 940
end-i: 952
i: 944
end-i: 952
i: 948
end-i: 952
i: 952
end-i: 952
i:952 HIT CHUNK END
(comment . ";;932: r12 <- r4, r9")
(comment . ";;936: r10 <- r15, r12")
(comment . ";;940: r12 <- r9, r7")
(comment . ";;944: r12 <- 0x2")
(comment . ";;948 b 200")
chunklet-i: 952; chunklet-start-i: 952; chunklet-end-i: 964
i: 952
end-i: 964
i: 956
end-i: 964
i: 960
end-i: 964
i: 964
end-i: 964
i:964 HIT CHUNK END
(comment . ";;952: r12 <- r10, r7")
(comment . ";;956: r12 <- 0x2")
(comment . ";;960 b 188")
chunklet-i: 964; chunklet-start-i: 964; chunklet-end-i: 996
i: 964
end-i: 996
i: 968
end-i: 996
i: 972
end-i: 996
i: 976
end-i: 996
i: 980
end-i: 996
i: 984
end-i: 996
i: 988
end-i: 996
i: 992
end-i: 996
i: 996
end-i: 996
i:996 HIT CHUNK END
(comment . ";;964: r6 <- r9, 0x6\n")
(comment . ";;968: r7 <- r10, 0x6\n")
(comment . ";;972: r7 <- r6, r7")
(comment . ";;976: r7 <- r5, r7")
(comment . ";;980: r7 <- r4, r7")
(comment . ";;984: r6 <- r8, 0x6\n")
(comment . ";;988: r7 <- r6")
(comment . ";;992 b -696")
chunklet-i: 996; chunklet-start-i: 996; chunklet-end-i: 1004
i: 996
end-i: 1004
i: 1000
end-i: 1004
i: 1004
end-i: 1004
i:1004 HIT CHUNK END
(comment . ";;996: r4 <- 0x7")
(comment . ";;1000 b 32")
chunklet-i: 1004; chunklet-start-i: 1004; chunklet-end-i: 1012
i: 1004
end-i: 1012
i: 1008
end-i: 1012
i: 1012
end-i: 1012
i:1012 HIT CHUNK END
(comment . ";;1004: r10 <- r4, 0x8\n")
(comment . ";;1008 b 24")
chunklet-i: 1012; chunklet-start-i: 1012; chunklet-end-i: 1020
i: 1012
end-i: 1020
i: 1012
end-i: 1020
i: 1016
end-i: 1020
i: 1020
end-i: 1020
i:1020 HIT CHUNK END
(comment . ";;1012: r11 <- 0x6")
(comment . ";;1016 b 8")
chunklet-i: 1020; chunklet-start-i: 1020; chunklet-end-i: 1028
i: 1020
end-i: 1028
i: 1024
end-i: 1028
i: 1028
end-i: 1028
i:1028 HIT CHUNK END
(comment . ";;1020: r11 <- 0xE")
(comment . ";;1024 b -944")
chunklet-i: 1028; chunklet-start-i: 1028; chunklet-end-i: 1036
i: 1028
end-i: 1036
i: 1028
end-i: 1036
i: 1032
end-i: 1036
i: 1036
end-i: 1036
i:1036 HIT CHUNK END
(comment . ";;1028: r11 <- 0x6")
(comment . ";;1032 b -952")
chunklet-i: 1036; chunklet-start-i: 1036; chunklet-end-i: 1096
i: 1036
end-i: 1096
i: 1036
end-i: 1096
i: 1040
end-i: 1096
i: 1044
end-i: 1096
i: 1048
end-i: 1096
i: 1052
end-i: 1096
i: 1056
end-i: 1096
i: 1060
end-i: 1096
i: 1064
end-i: 1096
i: 1068
end-i: 1096
i: 1072
end-i: 1096
i: 1076
end-i: 1096
i: 1080
end-i: 1096
i: 1092
end-i: 1096
i: 1096
end-i: 1096
at header: 1096
(comment . ";;1036: r9 <- 0x4")
(comment . ";;1040: r10 <- 0x8")
(comment . ";;1044: r14 <- r1, 0x20\n")
(comment . ";;1048: r15 <- r1, 0x28\n")
(comment . ";;1052: r8 <- r1, 0x30\n")
(comment . ";;1056: r13 <- r1, 0x10\n")
(comment . ";;1060: r4 <- r1, 0x8\n")
(comment . ";;1064: r11 <- r1, 0x38\n")
(comment . ";;1068: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1076: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1092: b r6")
chunklet-i: 1096; chunklet-start-i: 1112; chunklet-end-i: 1152
i: 1096
end-i: 1152
at header: 1096
i: 1112
end-i: 1152
i: 1116
end-i: 1152
i: 1120
end-i: 1152
i: 1124
end-i: 1152
i: 1128
end-i: 1152
i: 1132
end-i: 1152
i: 1136
end-i: 1152
i: 1140
end-i: 1152
i: 1144
end-i: 1152
i: 1148
end-i: 1152
i: 1152
end-i: 1152
i:1152 HIT CHUNK END
(comment . ";;1112: r1 <- r1, r0")
(comment . ";;1116: r10 <- 0x4")
(comment . ";;1120: r14 <- r1, 0x20\n")
(comment . ";;1124: r15 <- r1, 0x28\n")
(comment . ";;1128: r8 <- r1, 0x30\n")
(comment . ";;1132: r13 <- r1, 0x10\n")
(comment . ";;1136: r4 <- r1, 0x8\n")
(comment . ";;1140: r11 <- r1, 0x38\n")
(comment . ";;1148 b -140")
chunklet-i: 1152; chunklet-start-i: 1152; chunklet-end-i: 1168
i: 1152
end-i: 1168
i: 1152
end-i: 1168
i: 1164
end-i: 1168
i: 1168
end-i: 1168
i:1168 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;1164: b r6")
chunklet-i: 1168; chunklet-start-i: 1168; chunklet-end-i: 1192
i: 1168
end-i: 1192
i: 1168
end-i: 1192
i: 1172
end-i: 1192
i: 1176
end-i: 1192
i: 1188
end-i: 1192
i: 1192
end-i: 1192
i:1192 HIT CHUNK END
(comment . ";;1168: r9 <- 0xF")
(comment . ";;1172: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1188: b r6")
chunklet-i: 1192; chunklet-start-i: 1192; chunklet-end-i: 1216
i: 1192
end-i: 1216
i: 1192
end-i: 1216
i: 1196
end-i: 1216
i: 1200
end-i: 1216
i: 1212
end-i: 1216
i: 1216
end-i: 1216
i:1216 HIT CHUNK END
(comment . ";;1192: r9 <- 0xF")
(comment . ";;1196: r10 <- 0xC")
(comment . ";; literal r6")
(comment . ";;1212: b r6")
chunklet-i: 1216; chunklet-start-i: 1216; chunklet-end-i: 1236
i: 1216
end-i: 1236
i: 1216
end-i: 1236
i: 1220
end-i: 1236
i: 1232
end-i: 1236
i: 1236
end-i: 1236
i:1236 HIT CHUNK END
(comment . ";;1216: r9 <- 0xD")
(comment . ";; literal r6")
(comment . ";;1232: b r6")
chunklet-i: 1236; chunklet-start-i: 1236; chunklet-end-i: 1260
i: 1236
end-i: 1260
i: 1236
end-i: 1260
i: 1240
end-i: 1260
i: 1244
end-i: 1260
i: 1256
end-i: 1260
i: 1260
end-i: 1260
i:1260 HIT CHUNK END
(comment . ";;1236: r9 <- 0xF")
(comment . ";;1240: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1256: b r6")
chunklet-i: 1260; chunklet-start-i: 1260; chunklet-end-i: 1276
i: 1260
end-i: 1276
i: 1260
end-i: 1276
i: 1272
end-i: 1276
i: 1276
end-i: 1276
i:1276 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;1272: b r6")
chunklet-i: 1276; chunklet-start-i: 1276; chunklet-end-i: 1300
i: 1276
end-i: 1300
i: 1276
end-i: 1300
i: 1280
end-i: 1300
i: 1284
end-i: 1300
i: 1296
end-i: 1300
i: 1300
end-i: 1300
i:1300 HIT CHUNK END
(comment . ";;1276: r9 <- 0xE")
(comment . ";;1280: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1296: b r6")
chunklet-i: 1300; chunklet-start-i: 1300; chunklet-end-i: 1324
i: 1300
end-i: 1324
i: 1300
end-i: 1324
i: 1304
end-i: 1324
i: 1308
end-i: 1324
i: 1320
end-i: 1324
i: 1324
end-i: 1324
i:1324 HIT CHUNK END
(comment . ";;1300: r9 <- 0xE")
(comment . ";;1304: r10 <- 0xC")
(comment . ";; literal r6")
(comment . ";;1320: b r6")
chunklet-i: 1324; chunklet-start-i: 1324; chunklet-end-i: 1344
i: 1324
end-i: 1344
i: 1324
end-i: 1344
i: 1328
end-i: 1344
i: 1340
end-i: 1344
i: 1344
end-i: 1344
i:1344 HIT CHUNK END
(comment . ";;1324: r9 <- 0xA")
(comment . ";; literal r6")
(comment . ";;1340: b r6")
chunklet-i: 1344; chunklet-start-i: 1344; chunklet-end-i: 1368
i: 1344
end-i: 1368
i: 1344
end-i: 1368
i: 1348
end-i: 1368
i: 1352
end-i: 1368
i: 1364
end-i: 1368
i: 1368
end-i: 1368
i:1368 HIT CHUNK END
(comment . ";;1344: r9 <- 0xE")
(comment . ";;1348: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1364: b r6")
chunklet-i: 1368; chunklet-start-i: 1368; chunklet-end-i: 1392
i: 1368
end-i: 1392
i: 1368
end-i: 1392
i: 1372
end-i: 1392
i: 1376
end-i: 1392
i: 1388
end-i: 1392
i: 1392
end-i: 1392
i:1392 HIT CHUNK END
(comment . ";;1368: r9 <- 0x8")
(comment . ";;1372: r10 <- 0x8")
(comment . ";; literal r6")
(comment . ";;1388: b r6")
chunklet-i: 1392; chunklet-start-i: 1392; chunklet-end-i: 1412
i: 1392
end-i: 1412
i: 1392
end-i: 1412
i: 1396
end-i: 1412
i: 1408
end-i: 1412
i: 1412
end-i: 1412
i:1412 HIT CHUNK END
(comment . ";;1392: r9 <- 0xD")
(comment . ";; literal r6")
(comment . ";;1408: b r6")
chunklet-i: 1412; chunklet-start-i: 1412; chunklet-end-i: 1436
i: 1412
end-i: 1436
i: 1412
end-i: 1436
i: 1416
end-i: 1436
i: 1420
end-i: 1436
i: 1432
end-i: 1436
i: 1436
end-i: 1436
i:1436 HIT CHUNK END
(comment . ";;1412: r9 <- 0xF")
(comment . ";;1416: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1432: b r6")
chunklet-i: 1436; chunklet-start-i: 1436; chunklet-end-i: 1456
i: 1436
end-i: 1456
i: 1436
end-i: 1456
i: 1440
end-i: 1456
i: 1452
end-i: 1456
i: 1456
end-i: 1456
i:1456 HIT CHUNK END
(comment . ";;1436: r10 <- 0xD")
(comment . ";; literal r6")
(comment . ";;1452: b r6")
chunklet-i: 1456; chunklet-start-i: 1456; chunklet-end-i: 1480
i: 1456
end-i: 1480
i: 1456
end-i: 1480
i: 1460
end-i: 1480
i: 1464
end-i: 1480
i: 1476
end-i: 1480
i: 1480
end-i: 1480
i:1480 HIT CHUNK END
(comment . ";;1456: r9 <- 0xF")
(comment . ";;1460: r10 <- 0xC")
(comment . ";; literal r6")
(comment . ";;1476: b r6")
chunklet-i: 1480; chunklet-start-i: 1480; chunklet-end-i: 1492
i: 1480
end-i: 1492
i: 1480
end-i: 1492
i: 1484
end-i: 1492
i: 1488
end-i: 1492
i: 1492
end-i: 1492
i:1492 HIT CHUNK END
(comment . ";;1480: r10 <- r15, r7")
(comment . ";;1484: r10 <- 0x7")
(comment . ";;1488 b 104")
chunklet-i: 1492; chunklet-start-i: 1492; chunklet-end-i: 1512
i: 1492
end-i: 1512
i: 1496
end-i: 1512
i: 1500
end-i: 1512
i: 1504
end-i: 1512
i: 1508
end-i: 1512
i: 1512
end-i: 1512
i:1512 HIT CHUNK END
(comment . ";;1492: r9 <- r15, 0x1\n")
(comment . ";;1496: r10 <- r9, r1")
(comment . ";;1500: r10 <- r10, r8")
(comment . ";;1504: r12 <- r10")
(comment . ";;1508 b 84")
chunklet-i: 1512; chunklet-start-i: 1512; chunklet-end-i: 1524
i: 1512
end-i: 1524
i: 1516
end-i: 1524
i: 1520
end-i: 1524
i: 1524
end-i: 1524
i:1524 HIT CHUNK END
(comment . ";;1512: r10 <- r12, r9")
(comment . ";;1516: r10 <- 0x7")
(comment . ";;1520 b 72")
chunklet-i: 1524; chunklet-start-i: 1524; chunklet-end-i: 1544
i: 1524
end-i: 1544
i: 1528
end-i: 1544
i: 1532
end-i: 1544
i: 1536
end-i: 1544
i: 1540
end-i: 1544
i: 1544
end-i: 1544
i:1544 HIT CHUNK END
(comment . ";;1524: r10 <- r12, r9")
(comment . ";;1528: r10 <- r15, r10")
(comment . ";;1532: r9 <- r13, r7")
(comment . ";;1536: r9 <- 0x2")
(comment . ";;1540 b 32")
chunklet-i: 1544; chunklet-start-i: 1544; chunklet-end-i: 1556
i: 1544
end-i: 1556
i: 1548
end-i: 1556
i: 1552
end-i: 1556
i: 1556
end-i: 1556
i:1556 HIT CHUNK END
(comment . ";;1544: r9 <- r10, r7")
(comment . ";;1548: r9 <- 0x2")
(comment . ";;1552 b 20")
chunklet-i: 1556; chunklet-start-i: 1556; chunklet-end-i: 1572
i: 1556
end-i: 1572
i: 1560
end-i: 1572
i: 1564
end-i: 1572
i: 1568
end-i: 1572
i: 1572
end-i: 1572
i:1572 HIT CHUNK END
(comment . ";;1556: r6 <- r10, 0x6\n")
(comment . ";;1560: r7 <- r13, 0x6\n")
(comment . ";;1564: r6 <- r7")
(comment . ";;1568 b -1364")
chunklet-i: 1572; chunklet-start-i: 1572; chunklet-end-i: 1576
i: 1572
end-i: 1576
i: 1576
end-i: 1576
i:1576 HIT CHUNK END
(comment . ";;1572 b -1052")
chunklet-i: 1576; chunklet-start-i: 1576; chunklet-end-i: 1596
i: 1576
end-i: 1596
i: 1576
end-i: 1596
i: 1580
end-i: 1596
i: 1592
end-i: 1596
i: 1596
end-i: 1596
i:1596 HIT CHUNK END
(comment . ";;1576: r9 <- 0xD")
(comment . ";; literal r6")
(comment . ";;1592: b r6")
chunklet-i: 1596; chunklet-start-i: 1596; chunklet-end-i: 1620
i: 1596
end-i: 1620
i: 1596
end-i: 1620
i: 1600
end-i: 1620
i: 1604
end-i: 1620
i: 1616
end-i: 1620
i: 1620
end-i: 1620
i:1620 HIT CHUNK END
(comment . ";;1596: r9 <- 0xF")
(comment . ";;1600: r10 <- 0xC")
(comment . ";; literal r6")
(comment . ";;1616: b r6")
chunklet-i: 1620; chunklet-start-i: 1620; chunklet-end-i: 1640
i: 1620
end-i: 1640
i: 1620
end-i: 1640
i: 1624
end-i: 1640
i: 1636
end-i: 1640
i: 1640
end-i: 1640
i:1640 HIT CHUNK END
(comment . ";;1620: r10 <- 0xD")
(comment . ";; literal r6")
(comment . ";;1636: b r6")
chunklet-i: 1640; chunklet-start-i: 1640; chunklet-end-i: 1664
i: 1640
end-i: 1664
i: 1640
end-i: 1664
i: 1644
end-i: 1664
i: 1648
end-i: 1664
i: 1660
end-i: 1664
i: 1664
end-i: 1664
i:1664 HIT CHUNK END
(comment . ";;1640: r9 <- 0xF")
(comment . ";;1644: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1660: b r6")
chunklet-i: 1664; chunklet-start-i: 1664; chunklet-end-i: 1720
i: 1664
end-i: 1720
i: 1664
end-i: 1720
i: 1668
end-i: 1720
i: 1672
end-i: 1720
i: 1676
end-i: 1720
i: 1680
end-i: 1720
i: 1684
end-i: 1720
i: 1688
end-i: 1720
i: 1692
end-i: 1720
i: 1696
end-i: 1720
i: 1700
end-i: 1720
i: 1704
end-i: 1720
i: 1716
end-i: 1720
i: 1720
end-i: 1720
at header: 1720
(comment . ";;1664: r14 <- r1, 0x20\n")
(comment . ";;1668: r15 <- r1, 0x28\n")
(comment . ";;1672: r8 <- r1, 0x30\n")
(comment . ";;1676: r13 <- r1, 0x10\n")
(comment . ";;1680: r11 <- r1, 0x38\n")
(comment . ";;1684: r4 <- r1, 0x8\n")
(comment . ";;1688: r12 <- r1, 0x18\n")
(comment . ";;1692: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1700: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1716: b r6")
chunklet-i: 1720; chunklet-start-i: 1736; chunklet-end-i: 1776
i: 1720
end-i: 1776
at header: 1720
i: 1736
end-i: 1776
i: 1740
end-i: 1776
i: 1744
end-i: 1776
i: 1748
end-i: 1776
i: 1752
end-i: 1776
i: 1756
end-i: 1776
i: 1760
end-i: 1776
i: 1764
end-i: 1776
i: 1768
end-i: 1776
i: 1772
end-i: 1776
i: 1776
end-i: 1776
i:1776 HIT CHUNK END
(comment . ";;1740: r1 <- r1, r0")
(comment . ";;1744: r14 <- r1, 0x20\n")
(comment . ";;1748: r15 <- r1, 0x28\n")
(comment . ";;1752: r8 <- r1, 0x30\n")
(comment . ";;1756: r13 <- r1, 0x10\n")
(comment . ";;1760: r11 <- r1, 0x38\n")
(comment . ";;1764: r4 <- r1, 0x8\n")
(comment . ";;1768: r12 <- r1, 0x18\n")
(comment . ";;1772 b -1660")
chunklet-i: 1776; chunklet-start-i: 1776; chunklet-end-i: 1784
i: 1776
end-i: 1784
i: 1776
end-i: 1784
i: 1780
end-i: 1784
i: 1784
end-i: 1784
i:1784 HIT CHUNK END
(comment . ";;1776: r4 <- 0xB")
(comment . ";;1780: b r1, 0")
chunklet-i: 1784; chunklet-start-i: 1784; chunklet-end-i: 1792
i: 1784
end-i: 1792
i: 1784
end-i: 1792
i: 1788
end-i: 1792
i: 1792
end-i: 1792
i:1792 HIT CHUNK END
(comment . ";;1784: r3 <- r3, 0x1\n")
(comment . ";;1788 b 104")
chunklet-i: 1792; chunklet-start-i: 1792; chunklet-end-i: 1848
i: 1792
end-i: 1848
i: 1796
end-i: 1848
i: 1800
end-i: 1848
i: 1804
end-i: 1848
i: 1808
end-i: 1848
i: 1812
end-i: 1848
i: 1816
end-i: 1848
i: 1820
end-i: 1848
i: 1824
end-i: 1848
i: 1828
end-i: 1848
i: 1832
end-i: 1848
i: 1844
end-i: 1848
i: 1848
end-i: 1848
at header: 1848
(comment . ";;1792: r14 <- r1, 0x20\n")
(comment . ";;1796: r15 <- r1, 0x28\n")
(comment . ";;1800: r8 <- r1, 0x30\n")
(comment . ";;1804: r13 <- r1, 0x10\n")
(comment . ";;1808: r11 <- r1, 0x38\n")
(comment . ";;1812: r4 <- r1, 0x8\n")
(comment . ";;1816: r12 <- r1, 0x18\n")
(comment . ";;1820: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1828: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1844: b r6")
chunklet-i: 1848; chunklet-start-i: 1864; chunklet-end-i: 1896
i: 1848
end-i: 1896
at header: 1848
i: 1864
end-i: 1896
i: 1868
end-i: 1896
i: 1872
end-i: 1896
i: 1876
end-i: 1896
i: 1880
end-i: 1896
i: 1884
end-i: 1896
i: 1888
end-i: 1896
i: 1892
end-i: 1896
i: 1896
end-i: 1896
i:1896 HIT CHUNK END
(comment . ";;1864: r1 <- r1, r0")
(comment . ";;1868: r14 <- r1, 0x20\n")
(comment . ";;1872: r15 <- r1, 0x28\n")
(comment . ";;1876: r8 <- r1, 0x30\n")
(comment . ";;1880: r13 <- r1, 0x10\n")
(comment . ";;1884: r11 <- r1, 0x38\n")
(comment . ";;1888: r4 <- r1, 0x8\n")
(comment . ";;1892: r12 <- r1, 0x18\n")
chunklet-i: 1896; chunklet-start-i: 1896; chunklet-end-i: 1960
i: 1896
end-i: 1960
i: 1896
end-i: 1960
i: 1900
end-i: 1960
i: 1904
end-i: 1960
i: 1908
end-i: 1960
i: 1912
end-i: 1960
i: 1916
end-i: 1960
i: 1920
end-i: 1960
i: 1924
end-i: 1960
i: 1928
end-i: 1960
i: 1932
end-i: 1960
i: 1936
end-i: 1960
i: 1940
end-i: 1960
i: 1944
end-i: 1960
i: 1956
end-i: 1960
i: 1960
end-i: 1960
at header: 1960
(comment . ";;1896: r9 <- 0x4")
(comment . ";;1900: r10 <- 0x0")
(comment . ";;1904: r14 <- r1, 0x20\n")
(comment . ";;1908: r15 <- r1, 0x28\n")
(comment . ";;1912: r8 <- r1, 0x30\n")
(comment . ";;1916: r13 <- r1, 0x10\n")
(comment . ";;1920: r11 <- r1, 0x38\n")
(comment . ";;1924: r4 <- r1, 0x8\n")
(comment . ";;1928: r12 <- r1, 0x18\n")
(comment . ";;1932: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1940: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1956: b r6")
chunklet-i: 1960; chunklet-start-i: 1976; chunklet-end-i: 2024
i: 1960
end-i: 2024
at header: 1960
i: 1976
end-i: 2024
i: 1980
end-i: 2024
i: 1984
end-i: 2024
i: 1988
end-i: 2024
i: 1992
end-i: 2024
i: 1996
end-i: 2024
i: 2000
end-i: 2024
i: 2004
end-i: 2024
i: 2008
end-i: 2024
i: 2012
end-i: 2024
i: 2016
end-i: 2024
i: 2020
end-i: 2024
i: 2024
end-i: 2024
i:2024 HIT CHUNK END
(comment . ";;1976: r1 <- r1, r0")
(comment . ";;1980: r10 <- 0x4")
(comment . ";;1984: r14 <- r1, 0x20\n")
(comment . ";;1988: r15 <- r1, 0x28\n")
(comment . ";;1992: r8 <- r1, 0x30\n")
(comment . ";;1996: r13 <- r1, 0x10\n")
(comment . ";;2000: r11 <- r1, 0x38\n")
(comment . ";;2004: r4 <- r1, 0x8\n")
(comment . ";;2008: r12 <- r1, 0x18\n")
(comment . ";;2012: r10 <- 0x6")
(comment . ";;2020 b -1916")
chunklet-i: 2024; chunklet-start-i: 2024; chunklet-end-i: 2028
i: 2024
end-i: 2028
i: 2028
end-i: 2028
i:2028 HIT CHUNK END
(comment . ";;2024 b -252")
chunklet-i: 2028; chunklet-start-i: 2028; chunklet-end-i: 2036
i: 2028
end-i: 2036
i: 2028
end-i: 2036
i: 2032
end-i: 2036
i: 2036
end-i: 2036
i:2036 HIT CHUNK END
(comment . ";;2028: r3 <- r3, 0x1\n")
(comment . ";;2032 b 96")
chunklet-i: 2036; chunklet-start-i: 2036; chunklet-end-i: 2088
i: 2036
end-i: 2088
i: 2040
end-i: 2088
i: 2044
end-i: 2088
i: 2048
end-i: 2088
i: 2052
end-i: 2088
i: 2056
end-i: 2088
i: 2060
end-i: 2088
i: 2064
end-i: 2088
i: 2068
end-i: 2088
i: 2072
end-i: 2088
i: 2084
end-i: 2088
i: 2088
end-i: 2088
at header: 2088
(comment . ";;2036: r14 <- r1, 0x20\n")
(comment . ";;2040: r15 <- r1, 0x28\n")
(comment . ";;2044: r8 <- r1, 0x30\n")
(comment . ";;2048: r13 <- r1, 0x10\n")
(comment . ";;2052: r9 <- r1, 0x18\n")
(comment . ";;2056: r4 <- r1, 0x8\n")
(comment . ";;2060: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2068: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2084: b r6")
chunklet-i: 2088; chunklet-start-i: 2104; chunklet-end-i: 2132
i: 2088
end-i: 2132
at header: 2088
i: 2104
end-i: 2132
i: 2108
end-i: 2132
i: 2112
end-i: 2132
i: 2116
end-i: 2132
i: 2120
end-i: 2132
i: 2124
end-i: 2132
i: 2128
end-i: 2132
i: 2132
end-i: 2132
i:2132 HIT CHUNK END
(comment . ";;2104: r1 <- r1, r8")
(comment . ";;2108: r14 <- r1, 0x20\n")
(comment . ";;2112: r15 <- r1, 0x28\n")
(comment . ";;2116: r8 <- r1, 0x30\n")
(comment . ";;2120: r13 <- r1, 0x10\n")
(comment . ";;2124: r9 <- r1, 0x18\n")
(comment . ";;2128: r4 <- r1, 0x8\n")
chunklet-i: 2132; chunklet-start-i: 2132; chunklet-end-i: 2184
i: 2132
end-i: 2184
i: 2132
end-i: 2184
i: 2136
end-i: 2184
i: 2140
end-i: 2184
i: 2144
end-i: 2184
i: 2148
end-i: 2184
i: 2152
end-i: 2184
i: 2156
end-i: 2184
i: 2160
end-i: 2184
i: 2164
end-i: 2184
i: 2168
end-i: 2184
i: 2180
end-i: 2184
i: 2184
end-i: 2184
at header: 2184
(comment . ";;2132: r10 <- 0x8")
(comment . ";;2136: r14 <- r1, 0x20\n")
(comment . ";;2140: r15 <- r1, 0x28\n")
(comment . ";;2144: r8 <- r1, 0x30\n")
(comment . ";;2148: r13 <- r1, 0x10\n")
(comment . ";;2152: r4 <- r1, 0x8\n")
(comment . ";;2156: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2164: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2180: b r6")
chunklet-i: 2184; chunklet-start-i: 2200; chunklet-end-i: 2232
i: 2184
end-i: 2232
at header: 2184
i: 2200
end-i: 2232
i: 2204
end-i: 2232
i: 2208
end-i: 2232
i: 2212
end-i: 2232
i: 2216
end-i: 2232
i: 2220
end-i: 2232
i: 2224
end-i: 2232
i: 2228
end-i: 2232
i: 2232
end-i: 2232
i:2232 HIT CHUNK END
(comment . ";;2200: r1 <- r1, r8")
(comment . ";;2204: r10 <- 0x4")
(comment . ";;2208: r14 <- r1, 0x20\n")
(comment . ";;2212: r15 <- r1, 0x28\n")
(comment . ";;2216: r8 <- r1, 0x30\n")
(comment . ";;2220: r13 <- r1, 0x10\n")
(comment . ";;2224: r4 <- r1, 0x8\n")
(comment . ";;2228 b -2152")
chunklet-i: 2232; chunklet-start-i: 2232; chunklet-end-i: 2252
i: 2232
end-i: 2252
i: 2232
end-i: 2252
i: 2236
end-i: 2252
i: 2248
end-i: 2252
i: 2252
end-i: 2252
i:2252 HIT CHUNK END
(comment . ";;2232: r9 <- 0xE")
(comment . ";; literal r6")
(comment . ";;2248: b r6")
chunklet-i: 2252; chunklet-start-i: 2252; chunklet-end-i: 2268
i: 2252
end-i: 2268
i: 2252
end-i: 2268
i: 2264
end-i: 2268
i: 2268
end-i: 2268
i:2268 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;2264: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 32
instruction range for chunk: 32 44
instruction range for chunk: 44 60
instruction range for chunk: 60 76
instruction range for chunk: 76 84
instruction range for chunk: 84 92
instruction range for chunk: 92 100
instruction range for chunk: 100 108
instruction range for chunk: 108 144
instruction range for chunk: 160 172
instruction range for chunk: 172 188
instruction range for chunk: 188 196
instruction range for chunk: 196 212
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 184")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r9 <- 0x7")
(comment . ";;16 b 40")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;20: r15 <- r9, r7")
(comment . ";;24: r15 <- 0x2")
(comment . ";;28 b 28")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;32: r15 <- r9, r7")
(comment . ";;36: r15 <- 0x7")
(comment . ";;40 b 144")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 60
i: 44
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;44: r15 <- r9, 0x1\n")
(comment . ";;48: r15 <- r15, r15")
(comment . ";;52: r15 <- 0x6")
(comment . ";;56 b 128")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 76
i: 60
end-i: 76
i: 60
end-i: 76
i: 64
end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;60: r10 <- r8, 0xB\n")
(comment . ";;64: r15 <- r9, r10")
(comment . ";;68: r15 <- 0x7")
(comment . ";;72 b 24")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 84
i: 76
end-i: 84
i: 80
end-i: 84
i: 84
end-i: 84
i:84 HIT CHUNK END
(comment . ";;76: r9 <- r10")
(comment . ";;80 b 8")
chunklet-i: 84; chunklet-start-i: 84; chunklet-end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;84: r4 <- 0xE")
(comment . ";;88: b r1, 0")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 100
i: 92
end-i: 100
i: 92
end-i: 100
i: 96
end-i: 100
i: 100
end-i: 100
i:100 HIT CHUNK END
(comment . ";;92: r4 <- 0x6")
(comment . ";;96: b r1, 0")
chunklet-i: 100; chunklet-start-i: 100; chunklet-end-i: 108
i: 100
end-i: 108
i: 100
end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
(comment . ";;100: r3 <- r3, 0x1\n")
(comment . ";;104 b 64")
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 144
i: 108
end-i: 144
i: 112
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;108: r9 <- r1, 0x8\n")
(comment . ";;112: r10 <- r1, 0x10\n")
(comment . ";;116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 172
i: 144
end-i: 172
at header: 144
i: 160
end-i: 172
i: 164
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164: r9 <- r1, 0x8\n")
(comment . ";;168: r10 <- r1, 0x10\n")
chunklet-i: 172; chunklet-start-i: 172; chunklet-end-i: 188
i: 172
end-i: 188
i: 172
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;184: b r6")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 196
i: 188
end-i: 196
i: 188
end-i: 196
i: 192
end-i: 196
i: 196
end-i: 196
i:196 HIT CHUNK END
(comment . ";;188: r4 <- 0x6")
(comment . ";;192: b r1, 0")
chunklet-i: 196; chunklet-start-i: 196; chunklet-end-i: 212
i: 196
end-i: 212
i: 196
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;208: b r6")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 32
instruction range for chunk: 32 80
instruction range for chunk: 96 160
instruction range for chunk: 176 216
instruction range for chunk: 216 228
instruction range for chunk: 232 236
instruction range for chunk: 236 252
instruction range for chunk: 252 268
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r3 <- r3, 0x1\n")
(comment . ";;8 b 240")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r4 <- 0x0")
(comment . ";;16 b 216")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;20: r15 <- r0, 0x58\n")
(comment . ";;24: r1 <- r15")
(comment . ";;28 b 184")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 80
i: 32
end-i: 80
i: 32
end-i: 80
i: 36
end-i: 80
i: 40
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 60
end-i: 80
i: 64
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
at header: 80
(comment . ";;32: r9 <- r8, 0x1B\n")
(comment . ";;36: r10 <- r8, 0xB\n")
(comment . ";;40: r8 <- r1, 0x8\n")
(comment . ";;44: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;60: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";;72: r4 <- 0x2")
(comment . ";;76: b r5, 13")
chunklet-i: 80; chunklet-start-i: 96; chunklet-end-i: 160
i: 80
end-i: 160
at header: 80
i: 96
end-i: 160
i: 100
end-i: 160
i: 104
end-i: 160
i: 108
end-i: 160
i: 112
end-i: 160
i: 116
end-i: 160
i: 120
end-i: 160
i: 124
end-i: 160
i: 128
end-i: 160
i: 140
end-i: 160
i: 144
end-i: 160
i: 148
end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
at header: 160
(comment . ";;96: r1 <- r1, r0")
(comment . ";;100: r8 <- r1, 0x8\n")
(comment . ";;104: r15 <- 0x4")
(comment . ";;108: r9 <- r8, 0x1B\n")
(comment . ";;112: r10 <- r8, 0x13\n")
(comment . ";;116: r15 <- r1, 0x10\n")
(comment . ";;120: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;140: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;148: r15 <- r1, 0x0\n")
(comment . ";;152: r4 <- 0x2")
(comment . ";;156: b r5, 13")
chunklet-i: 160; chunklet-start-i: 176; chunklet-end-i: 216
i: 160
end-i: 216
at header: 160
i: 176
end-i: 216
i: 180
end-i: 216
i: 184
end-i: 216
i: 188
end-i: 216
i: 192
end-i: 216
i: 204
end-i: 216
i: 208
end-i: 216
i: 212
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";;176: r1 <- r1, r8")
(comment . ";;180: r15 <- r1, 0x10\n")
(comment . ";;184: r9 <- 0x4")
(comment . ";;188: r10 <- 0xF")
(comment . ";; literal r5")
(comment . ";;204: r8 <- r5, 0x5\n")
(comment . ";;208: r4 <- 0x2")
(comment . ";;212: b r5, 13")
chunklet-i: 216; chunklet-start-i: 216; chunklet-end-i: 228
i: 216
end-i: 228
i: 216
end-i: 228
i: 228
end-i: 228
i:228 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 228; chunklet-start-i: 232; chunklet-end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";; instruction 228 not included")
(comment . ";;232 b -204")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 252
i: 236
end-i: 252
i: 236
end-i: 252
i: 248
end-i: 252
i: 252
end-i: 252
i:252 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;248: b r6")
chunklet-i: 252; chunklet-start-i: 252; chunklet-end-i: 268
i: 252
end-i: 268
i: 252
end-i: 268
i: 264
end-i: 268
i: 268
end-i: 268
i:268 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;264: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 32
instruction range for chunk: 32 36
instruction range for chunk: 36 60
instruction range for chunk: 60 88
instruction range for chunk: 104 116
instruction range for chunk: 116 144
instruction range for chunk: 160 168
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 108")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 32
i: 8
end-i: 32
i: 8
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;20: r15 <- r9, 0x5\n")
(comment . ";;24: r15 <- 0x1E")
(comment . ";;28 b 28")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: r9 <- 0xF")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r5")
(comment . ";;48: r8 <- r5, 0x5\n")
(comment . ";;52: r4 <- 0x1")
(comment . ";;56: b r5, 13")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 88
i: 60
end-i: 88
i: 60
end-i: 88
i: 64
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";;60: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;84: b r6")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 116
i: 88
end-i: 116
at header: 88
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r1 <- r1, r8")
(comment . ";;108: r9 <- 0x4")
(comment . ";;112 b -80")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 144
i: 116
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 168
i: 144
end-i: 168
at header: 144
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164 b -160")
Configuring for pb64l in em-pb64l
bin/zuo em-pb64l MAKE="/Applications/Xcode.app/Contents/Developer/usr/bin/make"
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_pnpoly0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
wat2wasm -r -o em-pb64l/c/pbchunk_pnpoly0.wasm pbchunk-out/pbchunk_pnpoly0.wat
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_pnpoly0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
emcc -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -o em-pb64l/bin/pb64l/scheme.html em-pb64l/boot/pb64l/main.o em-pb64l/boot/pb64l/libkernel.a em-pb64l/lz4/lib/liblz4.a --preload-file em-pb64l/boot/pb64l/petite.boot'@'petite.boot --preload-file em-pb64l/boot/pb64l/scheme.boot'@'scheme.boot --preload-file pbchunk-out/pnpoly.boot'@'pnpoly.boot -s EXIT_RUNTIME=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_ZLIB=1
: em-pb64l/bin/pb64l/scheme.html
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./pnpoly.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running pnpoly:500000

real	0m53.701s
user	0m53.352s
sys	0m0.556s

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Running...
trying ./fib.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running fib:40:1

real	0m35.268s
user	0m35.068s
sys	0m0.351s

Testing sum under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/sum.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/sum.scm with output to /tmp/larcenous/sum.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
bin/zuo em-pb64l MAKE="/Applications/Xcode.app/Contents/Developer/usr/bin/make"
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_fib0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_fib0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
emcc -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -o em-pb64l/bin/pb64l/scheme.html em-pb64l/boot/pb64l/main.o em-pb64l/boot/pb64l/libkernel.a em-pb64l/lz4/lib/liblz4.a --preload-file em-pb64l/boot/pb64l/petite.boot'@'petite.boot --preload-file em-pb64l/boot/pb64l/scheme.boot'@'scheme.boot --preload-file pbchunk-out/fib.boot'@'fib.boot -s EXIT_RUNTIME=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_ZLIB=1
: em-pb64l/bin/pb64l/scheme.html
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./fib.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running fib:40:1

Testing fib under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fib.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fib.scm with output to /tmp/larcenous/fib.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_fib0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
em-pb64l/bin/pb64l/scheme.html is up to date
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./fib.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running fib:40:1

real	0m34.435s
user	0m34.462s
sys	0m0.294s

Testing sum under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/sum.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/sum.scm with output to /tmp/larcenous/sum.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_sum0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_sum0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
emcc -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -o em-pb64l/bin/pb64l/scheme.html em-pb64l/boot/pb64l/main.o em-pb64l/boot/pb64l/libkernel.a em-pb64l/lz4/lib/liblz4.a --preload-file em-pb64l/boot/pb64l/petite.boot'@'petite.boot --preload-file em-pb64l/boot/pb64l/scheme.boot'@'scheme.boot --preload-file pbchunk-out/sum.boot'@'sum.boot -s EXIT_RUNTIME=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_ZLIB=1
: em-pb64l/bin/pb64l/scheme.html
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./sum.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running sum:10000:100000

real	0m55.054s
user	0m54.631s
sys	0m0.416s

Testing mbrot under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/mbrot.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/mbrot.scm with output to /tmp/larcenous/mbrot.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_mbrot0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_mbrot0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
emcc -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -o em-pb64l/bin/pb64l/scheme.html em-pb64l/boot/pb64l/main.o em-pb64l/boot/pb64l/libkernel.a em-pb64l/lz4/lib/liblz4.a --preload-file em-pb64l/boot/pb64l/petite.boot'@'petite.boot --preload-file em-pb64l/boot/pb64l/scheme.boot'@'scheme.boot --preload-file pbchunk-out/mbrot.boot'@'mbrot.boot -s EXIT_RUNTIME=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_ZLIB=1
: em-pb64l/bin/pb64l/scheme.html
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./mbrot.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running mbrot:75:1000

real	0m16.031s
user	0m16.221s
sys	0m0.278s

Testing pnpoly under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/pnpoly.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/pnpoly.scm with output to /tmp/larcenous/pnpoly.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_pnpoly0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_pnpoly0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
emcc -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -o em-pb64l/bin/pb64l/scheme.html em-pb64l/boot/pb64l/main.o em-pb64l/boot/pb64l/libkernel.a em-pb64l/lz4/lib/liblz4.a --preload-file em-pb64l/boot/pb64l/petite.boot'@'petite.boot --preload-file em-pb64l/boot/pb64l/scheme.boot'@'scheme.boot --preload-file pbchunk-out/pnpoly.boot'@'pnpoly.boot -s EXIT_RUNTIME=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_ZLIB=1
: em-pb64l/bin/pb64l/scheme.html
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./pnpoly.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running pnpoly:500000

real	0m43.819s
user	0m43.792s
sys	0m0.397s

Testing fibc under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/fibc.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/fibc.scm with output to /tmp/larcenous/fibc.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_fibc0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
wat2wasm -r -o em-pb64l/c/pbchunk_fibc0.wasm pbchunk-out/pbchunk_fibc0.wat
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_fibc0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
emcc -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -o em-pb64l/bin/pb64l/scheme.html em-pb64l/boot/pb64l/main.o em-pb64l/boot/pb64l/libkernel.a em-pb64l/lz4/lib/liblz4.a --preload-file em-pb64l/boot/pb64l/petite.boot'@'petite.boot --preload-file em-pb64l/boot/pb64l/scheme.boot'@'scheme.boot --preload-file pbchunk-out/fibc.boot'@'fibc.boot -s EXIT_RUNTIME=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_ZLIB=1
: em-pb64l/bin/pb64l/scheme.html
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./fibc.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running fibc:30:10

real	0m37.895s
user	0m37.888s
sys	0m0.521s

Testing cpstak under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/cpstak.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/cpstak.scm with output to /tmp/larcenous/cpstak.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_cpstak0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c

Testing puzzle under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/puzzle.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/puzzle.scm with output to /tmp/larcenous/puzzle.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/puzzle.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/puzzle.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 480
instruction range for chunk: 496 576
instruction range for chunk: 592 672
instruction range for chunk: 688 768
instruction range for chunk: 784 852
instruction range for chunk: 852 880
instruction range for chunk: 896 904
instruction range for chunk: 904 916
instruction range for chunk: 920 924
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 888")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 828")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 480
i: 384
end-i: 480
at header: 384
i: 400
end-i: 480
i: 404
end-i: 480
i: 408
end-i: 480
i: 420
end-i: 480
i: 432
end-i: 480
i: 444
end-i: 480
i: 448
end-i: 480
i: 460
end-i: 480
i: 464
end-i: 480
i: 468
end-i: 480
i: 472
end-i: 480
i: 476
end-i: 480
i: 480
end-i: 480
at header: 480
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;444: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;460: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;468: r15 <- r1, 0x0\n")
(comment . ";;472: r4 <- 0x3")
(comment . ";;476: b r5, 13")
chunklet-i: 480; chunklet-start-i: 496; chunklet-end-i: 576
i: 480
end-i: 576
at header: 480
i: 496
end-i: 576
i: 500
end-i: 576
i: 504
end-i: 576
i: 516
end-i: 576
i: 528
end-i: 576
i: 540
end-i: 576
i: 544
end-i: 576
i: 556
end-i: 576
i: 560
end-i: 576
i: 564
end-i: 576
i: 568
end-i: 576
i: 572
end-i: 576
i: 576
end-i: 576
at header: 576
(comment . ";;500: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;540: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;556: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;564: r15 <- r1, 0x0\n")
(comment . ";;568: r4 <- 0x3")
(comment . ";;572: b r5, 13")
chunklet-i: 576; chunklet-start-i: 592; chunklet-end-i: 672
i: 576
end-i: 672
at header: 576
i: 592
end-i: 672
i: 596
end-i: 672
i: 600
end-i: 672
i: 612
end-i: 672
i: 624
end-i: 672
i: 636
end-i: 672
i: 640
end-i: 672
i: 652
end-i: 672
i: 656
end-i: 672
i: 660
end-i: 672
i: 664
end-i: 672
i: 668
end-i: 672
i: 672
end-i: 672
at header: 672
(comment . ";;596: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;636: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;652: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;660: r15 <- r1, 0x0\n")
(comment . ";;664: r4 <- 0x3")
(comment . ";;668: b r5, 13")
chunklet-i: 672; chunklet-start-i: 688; chunklet-end-i: 768
i: 672
end-i: 768
at header: 672
i: 688
end-i: 768
i: 692
end-i: 768
i: 696
end-i: 768
i: 708
end-i: 768
i: 720
end-i: 768
i: 732
end-i: 768
i: 736
end-i: 768
i: 748
end-i: 768
i: 752
end-i: 768
i: 756
end-i: 768
i: 760
end-i: 768
i: 764
end-i: 768
i: 768
end-i: 768
at header: 768
(comment . ";;692: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;732: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;748: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;756: r15 <- r1, 0x0\n")
(comment . ";;760: r4 <- 0x3")
(comment . ";;764: b r5, 13")
chunklet-i: 768; chunklet-start-i: 784; chunklet-end-i: 852
i: 768
end-i: 852
at header: 768
i: 784
end-i: 852
i: 788
end-i: 852
i: 792
end-i: 852
i: 804
end-i: 852
i: 816
end-i: 852
i: 828
end-i: 852
i: 840
end-i: 852
i: 844
end-i: 852
i: 848
end-i: 852
i: 852
end-i: 852
i:852 HIT CHUNK END
(comment . ";;788: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;840: r8 <- r5, 0x5\n")
(comment . ";;844: r4 <- 0x3")
(comment . ";;848: b r5, 13")
chunklet-i: 852; chunklet-start-i: 852; chunklet-end-i: 880
i: 852
end-i: 880
i: 852
end-i: 880
i: 856
end-i: 880
i: 860
end-i: 880
i: 864
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
at header: 880
(comment . ";;852: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;860: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;876: b r6")
chunklet-i: 880; chunklet-start-i: 896; chunklet-end-i: 904
i: 880
end-i: 904
at header: 880
i: 896
end-i: 904
i: 900
end-i: 904
i: 904
end-i: 904
i:904 HIT CHUNK END
(comment . ";;896: r1 <- r1, r8")
(comment . ";;900 b -880")
chunklet-i: 904; chunklet-start-i: 904; chunklet-end-i: 916
i: 904
end-i: 916
i: 904
end-i: 916
i: 916
end-i: 916
i:916 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 916; chunklet-start-i: 920; chunklet-end-i: 924
i: 916
end-i: 924
i: 920
end-i: 924
i: 924
end-i: 924
i:924 HIT CHUNK END
(comment . ";; instruction 916 not included")
(comment . ";;920 b -908")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: my-iota
instruction range for chunk: 0 8
instruction range for chunk: 8 12
instruction range for chunk: 12 20
instruction range for chunk: 20 28
instruction range for chunk: 28 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 72
instruction range for chunk: 72 92
instruction range for chunk: 92 100
instruction range for chunk: 100 108
instruction range for chunk: 108 144
instruction range for chunk: 160 180
instruction range for chunk: 180 192
instruction range for chunk: 196 200
instruction range for chunk: 200 240
instruction range for chunk: 256 276
instruction range for chunk: 276 312
instruction range for chunk: 328 348
instruction range for chunk: 348 356
instruction range for chunk: 356 392
instruction range for chunk: 408 420
instruction range for chunk: 420 456
instruction range for chunk: 472 496
instruction range for chunk: 496 500
instruction range for chunk: 500 516
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 492")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;8: r4 <- 0x26")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r9 <- 0x0")
(comment . ";;16 b 476")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;20: r9 <- 0x7")
(comment . ";;24 b 320")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r3 <- r3, 0x1\n")
(comment . ";;32 b 240")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r9 <- 0x7")
(comment . ";;40 b 156")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r15 <- r9, 0x8\n")
(comment . ";;48 b 148")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 72
i: 52
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;52: r5 <- r2, r9")
(comment . ";;56: r2 <- r2, r0")
(comment . ";;60: r14 <- r0, 0x68\n")
(comment . ";;64: r14 <- r2")
(comment . ";;68 b 108")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 92
i: 72
end-i: 92
i: 72
end-i: 92
i: 76
end-i: 92
i: 80
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;72: r15 <- r5, 0x7\n")
(comment . ";;76: r4 <- r5, 0xF\n")
(comment . ";;80: r4 <- 0x5")
(comment . ";;84: r9 <- 0x7")
(comment . ";;88 b 16")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 100
i: 92
end-i: 100
i: 96
end-i: 100
i: 100
end-i: 100
i:100 HIT CHUNK END
(comment . ";;92: r15 <- r9, 0x8\n")
(comment . ";;96 b 8")
chunklet-i: 100; chunklet-start-i: 100; chunklet-end-i: 108
i: 100
end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
(comment . ";;100: r9 <- 0xF")
(comment . ";;104 b -96")
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 144
i: 108
end-i: 144
i: 108
end-i: 144
i: 112
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;108: r10 <- 0x8")
(comment . ";;112: r4 <- r1, 0x8\n")
(comment . ";;116: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 180
i: 144
end-i: 180
at header: 144
i: 160
end-i: 180
i: 164
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";;160: r1 <- r1, r0")
(comment . ";;164: r9 <- 0x4")
(comment . ";;168: r4 <- r1, 0x8\n")
(comment . ";;176 b -168")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 192
i: 180
end-i: 192
i: 180
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 192; chunklet-start-i: 196; chunklet-end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
i:200 HIT CHUNK END
(comment . ";; instruction 192 not included")
(comment . ";;196 b -128")
chunklet-i: 200; chunklet-start-i: 200; chunklet-end-i: 240
i: 200
end-i: 240
i: 200
end-i: 240
i: 204
end-i: 240
i: 208
end-i: 240
i: 212
end-i: 240
i: 216
end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
at header: 240
(comment . ";;200: r10 <- 0x8")
(comment . ";;204: r9 <- r1, 0x10\n")
(comment . ";;208: r4 <- r1, 0x8\n")
(comment . ";;212: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;220: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;236: b r6")
chunklet-i: 240; chunklet-start-i: 256; chunklet-end-i: 276
i: 240
end-i: 276
at header: 240
i: 256
end-i: 276
i: 260
end-i: 276
i: 264
end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";;256: r1 <- r1, r8")
(comment . ";;260: r15 <- 0x4")
(comment . ";;264: r9 <- r1, 0x10\n")
(comment . ";;268: r4 <- r1, 0x8\n")
(comment . ";;272 b -224")
chunklet-i: 276; chunklet-start-i: 276; chunklet-end-i: 312
i: 276
end-i: 312
i: 276
end-i: 312
i: 280
end-i: 312
i: 284
end-i: 312
i: 288
end-i: 312
i: 292
end-i: 312
i: 296
end-i: 312
i: 308
end-i: 312
i: 312
end-i: 312
at header: 312
(comment . ";;276: r9 <- r1, 0x10\n")
(comment . ";;280: r4 <- r1, 0x8\n")
(comment . ";;284: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;292: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;308: b r6")
chunklet-i: 312; chunklet-start-i: 328; chunklet-end-i: 348
i: 312
end-i: 348
at header: 312
i: 328
end-i: 348
i: 332
end-i: 348
i: 336
end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";;332: r1 <- r1, r8")
(comment . ";;336: r9 <- r1, 0x10\n")
(comment . ";;340: r4 <- r1, 0x8\n")
(comment . ";;344 b -312")
chunklet-i: 348; chunklet-start-i: 348; chunklet-end-i: 356
i: 348
end-i: 356
i: 348
end-i: 356
i: 352
end-i: 356
i: 356
end-i: 356
i:356 HIT CHUNK END
(comment . ";;348: r3 <- r3, 0x1\n")
(comment . ";;352 b 64")
chunklet-i: 356; chunklet-start-i: 356; chunklet-end-i: 392
i: 356
end-i: 392
i: 360
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;356: r9 <- r1, 0x10\n")
(comment . ";;360: r4 <- r1, 0x8\n")
(comment . ";;364: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 420
i: 392
end-i: 420
at header: 392
i: 408
end-i: 420
i: 412
end-i: 420
i: 416
end-i: 420
i: 420
end-i: 420
i:420 HIT CHUNK END
(comment . ";;408: r1 <- r1, r8")
(comment . ";;412: r9 <- r1, 0x10\n")
(comment . ";;416: r4 <- r1, 0x8\n")
chunklet-i: 420; chunklet-start-i: 420; chunklet-end-i: 456
i: 420
end-i: 456
i: 420
end-i: 456
i: 424
end-i: 456
i: 428
end-i: 456
i: 432
end-i: 456
i: 436
end-i: 456
i: 440
end-i: 456
i: 452
end-i: 456
i: 456
end-i: 456
at header: 456
(comment . ";;420: r9 <- r1, 0x10\n")
(comment . ";;424: r4 <- r1, 0x8\n")
(comment . ";;428: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;452: b r6")
chunklet-i: 456; chunklet-start-i: 472; chunklet-end-i: 496
i: 456
end-i: 496
at header: 456
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 484
end-i: 496
i: 488
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";;472: r1 <- r1, r8")
(comment . ";;476: r15 <- 0x4")
(comment . ";;480: r9 <- r1, 0x10\n")
(comment . ";;484: r4 <- r1, 0x8\n")
(comment . ";;488: r15 <- 0x6")
(comment . ";;492 b -468")
chunklet-i: 496; chunklet-start-i: 496; chunklet-end-i: 500
i: 496
end-i: 500
i: 496
end-i: 500
i: 500
end-i: 500
i:500 HIT CHUNK END
(comment . ";;496: b r1, 0")
chunklet-i: 500; chunklet-start-i: 500; chunklet-end-i: 516
i: 500
end-i: 516
i: 500
end-i: 516
i: 512
end-i: 516
i: 516
end-i: 516
i:516 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;512: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0xFF8")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x18")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x60")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x0")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x0")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x40")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 60
instruction range for chunk: 60 68
instruction range for chunk: 68 76
instruction range for chunk: 76 120
instruction range for chunk: 136 164
instruction range for chunk: 164 176
instruction range for chunk: 176 188
instruction range for chunk: 188 212
instruction range for chunk: 212 224
instruction range for chunk: 228 236
instruction range for chunk: 236 272
instruction range for chunk: 288 304
instruction range for chunk: 304 336
instruction range for chunk: 352 372
instruction range for chunk: 372 400
instruction range for chunk: 416 424
instruction range for chunk: 424 436
instruction range for chunk: 440 444
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 408")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 348")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 60
i: 24
end-i: 60
i: 24
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;48: r10 <- r9, 0x5\n")
(comment . ";;52: r10 <- 0x1E")
(comment . ";;56 b 244")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 68
i: 60
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";;60: r10 <- 0x7")
(comment . ";;64 b 168")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;68: r9 <- r10, 0x8\n")
(comment . ";;72 b 160")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 120
i: 76
end-i: 120
i: 76
end-i: 120
i: 80
end-i: 120
i: 84
end-i: 120
i: 88
end-i: 120
i: 100
end-i: 120
i: 104
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
at header: 120
(comment . ";;76: r10 <- 0x0")
(comment . ";;80: r15 <- r1, 0x8\n")
(comment . ";;84: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;100: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;108: r15 <- r1, 0x0\n")
(comment . ";;112: r4 <- 0x2")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 136; chunklet-end-i: 164
i: 120
end-i: 164
at header: 120
i: 136
end-i: 164
i: 140
end-i: 164
i: 144
end-i: 164
i: 148
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;136: r1 <- r1, r0")
(comment . ";;140: r15 <- r1, 0x8\n")
(comment . ";;144: r14 <- r15, r5")
(comment . ";;148: r4 <- r14, 0x0\n")
(comment . ";;152: r4 <- 0x7")
(comment . ";;160 b 24")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 176
i: 164
end-i: 176
i: 168
end-i: 176
i: 172
end-i: 176
i: 176
end-i: 176
i:176 HIT CHUNK END
(comment . ";;164: r7 <- r0, 0x68\n")
(comment . ";;168: r2 <- r7")
(comment . ";;172 b 36")
chunklet-i: 176; chunklet-start-i: 176; chunklet-end-i: 188
i: 176
end-i: 188
i: 176
end-i: 188
i: 180
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";;176: r7 <- r7, r8")
(comment . ";;180: r7 <- r0, 0x68\n")
(comment . ";;184: r14 <- r7, 0x0\n")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 212
i: 188
end-i: 212
i: 188
end-i: 212
i: 200
end-i: 212
i: 204
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;200: r14 <- r15, 0xD\n")
(comment . ";;204: r4 <- 0x2E")
(comment . ";;208: b r1, 0")
chunklet-i: 212; chunklet-start-i: 212; chunklet-end-i: 224
i: 212
end-i: 224
i: 212
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 224; chunklet-start-i: 228; chunklet-end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";; instruction 224 not included")
(comment . ";;228: r7 <- r0, 0x68\n")
(comment . ";;232 b -60")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 272
i: 236
end-i: 272
i: 236
end-i: 272
i: 240
end-i: 272
i: 244
end-i: 272
i: 248
end-i: 272
i: 252
end-i: 272
i: 256
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
at header: 272
(comment . ";;236: r9 <- 0x8")
(comment . ";;240: r15 <- r1, 0x8\n")
(comment . ";;244: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;252: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;268: b r6")
chunklet-i: 272; chunklet-start-i: 288; chunklet-end-i: 304
i: 272
end-i: 304
at header: 272
i: 288
end-i: 304
i: 292
end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;288: r1 <- r1, r0")
(comment . ";;292: r9 <- 0x4")
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300 b -228")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 336
i: 304
end-i: 336
i: 304
end-i: 336
i: 308
end-i: 336
i: 312
end-i: 336
i: 316
end-i: 336
i: 320
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
at header: 336
(comment . ";;304: r15 <- r1, 0x8\n")
(comment . ";;308: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;316: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;332: b r6")
chunklet-i: 336; chunklet-start-i: 352; chunklet-end-i: 372
i: 336
end-i: 372
at header: 336
i: 352
end-i: 372
i: 356
end-i: 372
i: 360
end-i: 372
i: 364
end-i: 372
i: 368
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";;352: r1 <- r1, r0")
(comment . ";;356: r10 <- 0x4")
(comment . ";;360: r15 <- r1, 0x8\n")
(comment . ";;368 b -312")
chunklet-i: 372; chunklet-start-i: 372; chunklet-end-i: 400
i: 372
end-i: 400
i: 372
end-i: 400
i: 376
end-i: 400
i: 380
end-i: 400
i: 384
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
at header: 400
(comment . ";;372: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;396: b r6")
chunklet-i: 400; chunklet-start-i: 416; chunklet-end-i: 424
i: 400
end-i: 424
at header: 400
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;416: r1 <- r1, r8")
(comment . ";;420 b -400")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 436
i: 424
end-i: 436
i: 424
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 436; chunklet-start-i: 440; chunklet-end-i: 444
i: 436
end-i: 444
i: 440
end-i: 444
i: 444
end-i: 444
i:444 HIT CHUNK END
(comment . ";; instruction 436 not included")
(comment . ";;440 b -428")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 60
instruction range for chunk: 60 68
instruction range for chunk: 68 76
instruction range for chunk: 76 120
instruction range for chunk: 136 164
instruction range for chunk: 164 176
instruction range for chunk: 176 188
instruction range for chunk: 188 212
instruction range for chunk: 212 224
instruction range for chunk: 228 236
instruction range for chunk: 236 272
instruction range for chunk: 288 304
instruction range for chunk: 304 336
instruction range for chunk: 352 372
instruction range for chunk: 372 400
instruction range for chunk: 416 424
instruction range for chunk: 424 436
instruction range for chunk: 440 444
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 408")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 348")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 60
i: 24
end-i: 60
i: 24
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;48: r10 <- r9, 0x5\n")
(comment . ";;52: r10 <- 0x1E")
(comment . ";;56 b 244")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 68
i: 60
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";;60: r10 <- 0x7")
(comment . ";;64 b 168")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;68: r9 <- r10, 0x8\n")
(comment . ";;72 b 160")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 120
i: 76
end-i: 120
i: 76
end-i: 120
i: 80
end-i: 120
i: 84
end-i: 120
i: 88
end-i: 120
i: 100
end-i: 120
i: 104
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
at header: 120
(comment . ";;76: r10 <- 0x0")
(comment . ";;80: r15 <- r1, 0x8\n")
(comment . ";;84: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;100: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;108: r15 <- r1, 0x0\n")
(comment . ";;112: r4 <- 0x2")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 136; chunklet-end-i: 164
i: 120
end-i: 164
at header: 120
i: 136
end-i: 164
i: 140
end-i: 164
i: 144
end-i: 164
i: 148
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;136: r1 <- r1, r0")
(comment . ";;140: r15 <- r1, 0x8\n")
(comment . ";;144: r14 <- r15, r5")
(comment . ";;148: r4 <- r14, 0x0\n")
(comment . ";;152: r4 <- 0x7")
(comment . ";;160 b 24")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 176
i: 164
end-i: 176
i: 168
end-i: 176
i: 172
end-i: 176
i: 176
end-i: 176
i:176 HIT CHUNK END
(comment . ";;164: r7 <- r0, 0x68\n")
(comment . ";;168: r2 <- r7")
(comment . ";;172 b 36")
chunklet-i: 176; chunklet-start-i: 176; chunklet-end-i: 188
i: 176
end-i: 188
i: 176
end-i: 188
i: 180
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";;176: r7 <- r7, r8")
(comment . ";;180: r7 <- r0, 0x68\n")
(comment . ";;184: r14 <- r7, 0x0\n")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 212
i: 188
end-i: 212
i: 188
end-i: 212
i: 200
end-i: 212
i: 204
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;200: r14 <- r15, 0xD\n")
(comment . ";;204: r4 <- 0x2E")
(comment . ";;208: b r1, 0")
chunklet-i: 212; chunklet-start-i: 212; chunklet-end-i: 224
i: 212
end-i: 224
i: 212
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 224; chunklet-start-i: 228; chunklet-end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";; instruction 224 not included")
(comment . ";;228: r7 <- r0, 0x68\n")
(comment . ";;232 b -60")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 272
i: 236
end-i: 272
i: 236
end-i: 272
i: 240
end-i: 272
i: 244
end-i: 272
i: 248
end-i: 272
i: 252
end-i: 272
i: 256
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
at header: 272
(comment . ";;236: r9 <- 0x8")
(comment . ";;240: r15 <- r1, 0x8\n")
(comment . ";;244: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;252: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;268: b r6")
chunklet-i: 272; chunklet-start-i: 288; chunklet-end-i: 304
i: 272
end-i: 304
at header: 272
i: 288
end-i: 304
i: 292
end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;288: r1 <- r1, r0")
(comment . ";;292: r9 <- 0x4")
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300 b -228")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 336
i: 304
end-i: 336
i: 304
end-i: 336
i: 308
end-i: 336
i: 312
end-i: 336
i: 316
end-i: 336
i: 320
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
at header: 336
(comment . ";;304: r15 <- r1, 0x8\n")
(comment . ";;308: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;316: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;332: b r6")
chunklet-i: 336; chunklet-start-i: 352; chunklet-end-i: 372
i: 336
end-i: 372
at header: 336
i: 352
end-i: 372
i: 356
end-i: 372
i: 360
end-i: 372
i: 364
end-i: 372
i: 368
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";;352: r1 <- r1, r0")
(comment . ";;356: r10 <- 0x4")
(comment . ";;360: r15 <- r1, 0x8\n")
(comment . ";;368 b -312")
chunklet-i: 372; chunklet-start-i: 372; chunklet-end-i: 400
i: 372
end-i: 400
i: 372
end-i: 400
i: 376
end-i: 400
i: 380
end-i: 400
i: 384
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
at header: 400
(comment . ";;372: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;396: b r6")
chunklet-i: 400; chunklet-start-i: 416; chunklet-end-i: 424
i: 400
end-i: 424
at header: 400
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;416: r1 <- r1, r8")
(comment . ";;420 b -400")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 436
i: 424
end-i: 436
i: 424
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 436; chunklet-start-i: 440; chunklet-end-i: 444
i: 436
end-i: 444
i: 440
end-i: 444
i: 444
end-i: 444
i:444 HIT CHUNK END
(comment . ";; instruction 436 not included")
(comment . ";;440 b -428")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 60
instruction range for chunk: 60 68
instruction range for chunk: 68 76
instruction range for chunk: 76 120
instruction range for chunk: 136 164
instruction range for chunk: 164 176
instruction range for chunk: 176 188
instruction range for chunk: 188 212
instruction range for chunk: 212 224
instruction range for chunk: 228 236
instruction range for chunk: 236 272
instruction range for chunk: 288 304
instruction range for chunk: 304 336
instruction range for chunk: 352 372
instruction range for chunk: 372 400
instruction range for chunk: 416 424
instruction range for chunk: 424 436
instruction range for chunk: 440 444
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 408")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 348")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 60
i: 24
end-i: 60
i: 24
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;48: r10 <- r9, 0x5\n")
(comment . ";;52: r10 <- 0x1E")
(comment . ";;56 b 244")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 68
i: 60
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";;60: r10 <- 0x7")
(comment . ";;64 b 168")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;68: r9 <- r10, 0x8\n")
(comment . ";;72 b 160")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 120
i: 76
end-i: 120
i: 76
end-i: 120
i: 80
end-i: 120
i: 84
end-i: 120
i: 88
end-i: 120
i: 100
end-i: 120
i: 104
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
at header: 120
(comment . ";;76: r10 <- 0x0")
(comment . ";;80: r15 <- r1, 0x8\n")
(comment . ";;84: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;100: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;108: r15 <- r1, 0x0\n")
(comment . ";;112: r4 <- 0x2")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 136; chunklet-end-i: 164
i: 120
end-i: 164
at header: 120
i: 136
end-i: 164
i: 140
end-i: 164
i: 144
end-i: 164
i: 148
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;136: r1 <- r1, r0")
(comment . ";;140: r15 <- r1, 0x8\n")
(comment . ";;144: r14 <- r15, r5")
(comment . ";;148: r4 <- r14, 0x0\n")
(comment . ";;152: r4 <- 0x7")
(comment . ";;160 b 24")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 176
i: 164
end-i: 176
i: 168
end-i: 176
i: 172
end-i: 176
i: 176
end-i: 176
i:176 HIT CHUNK END
(comment . ";;164: r7 <- r0, 0x68\n")
(comment . ";;168: r2 <- r7")
(comment . ";;172 b 36")
chunklet-i: 176; chunklet-start-i: 176; chunklet-end-i: 188
i: 176
end-i: 188
i: 176
end-i: 188
i: 180
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";;176: r7 <- r7, r8")
(comment . ";;180: r7 <- r0, 0x68\n")
(comment . ";;184: r14 <- r7, 0x0\n")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 212
i: 188
end-i: 212
i: 188
end-i: 212
i: 200
end-i: 212
i: 204
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;200: r14 <- r15, 0xD\n")
(comment . ";;204: r4 <- 0x2E")
(comment . ";;208: b r1, 0")
chunklet-i: 212; chunklet-start-i: 212; chunklet-end-i: 224
i: 212
end-i: 224
i: 212
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 224; chunklet-start-i: 228; chunklet-end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";; instruction 224 not included")
(comment . ";;228: r7 <- r0, 0x68\n")
(comment . ";;232 b -60")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 272
i: 236
end-i: 272
i: 236
end-i: 272
i: 240
end-i: 272
i: 244
end-i: 272
i: 248
end-i: 272
i: 252
end-i: 272
i: 256
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
at header: 272
(comment . ";;236: r9 <- 0x8")
(comment . ";;240: r15 <- r1, 0x8\n")
(comment . ";;244: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;252: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;268: b r6")
chunklet-i: 272; chunklet-start-i: 288; chunklet-end-i: 304
i: 272
end-i: 304
at header: 272
i: 288
end-i: 304
i: 292
end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;288: r1 <- r1, r0")
(comment . ";;292: r9 <- 0x4")
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300 b -228")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 336
i: 304
end-i: 336
i: 304
end-i: 336
i: 308
end-i: 336
i: 312
end-i: 336
i: 316
end-i: 336
i: 320
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
at header: 336
(comment . ";;304: r15 <- r1, 0x8\n")
(comment . ";;308: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;316: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;332: b r6")
chunklet-i: 336; chunklet-start-i: 352; chunklet-end-i: 372
i: 336
end-i: 372
at header: 336
i: 352
end-i: 372
i: 356
end-i: 372
i: 360
end-i: 372
i: 364
end-i: 372
i: 368
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";;352: r1 <- r1, r0")
(comment . ";;356: r10 <- 0x4")
(comment . ";;360: r15 <- r1, 0x8\n")
(comment . ";;368 b -312")
chunklet-i: 372; chunklet-start-i: 372; chunklet-end-i: 400
i: 372
end-i: 400
i: 372
end-i: 400
i: 376
end-i: 400
i: 380
end-i: 400
i: 384
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
at header: 400
(comment . ";;372: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;396: b r6")
chunklet-i: 400; chunklet-start-i: 416; chunklet-end-i: 424
i: 400
end-i: 424
at header: 400
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;416: r1 <- r1, r8")
(comment . ";;420 b -400")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 436
i: 424
end-i: 436
i: 424
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 436; chunklet-start-i: 440; chunklet-end-i: 444
i: 436
end-i: 444
i: 440
end-i: 444
i: 444
end-i: 444
i:444 HIT CHUNK END
(comment . ";; instruction 436 not included")
(comment . ";;440 b -428")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 156
instruction range for chunk: 156 168
instruction range for chunk: 168 180
instruction range for chunk: 180 204
instruction range for chunk: 204 216
instruction range for chunk: 220 228
instruction range for chunk: 228 264
instruction range for chunk: 280 296
instruction range for chunk: 296 328
instruction range for chunk: 344 364
instruction range for chunk: 364 392
instruction range for chunk: 408 416
instruction range for chunk: 416 428
instruction range for chunk: 432 436
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;0: r15 <- r0, 0x58\n")
(comment . ";;4: r1 <- r15")
(comment . ";;8 b 404")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r3 <- r3, 0x1\n")
(comment . ";;16 b 344")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 56
i: 20
end-i: 56
i: 20
end-i: 56
i: 32
end-i: 56
i: 44
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;44: r10 <- r9, 0x5\n")
(comment . ";;48: r10 <- 0x1E")
(comment . ";;52 b 240")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r10 <- 0x7")
(comment . ";;60 b 164")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r10, 0x8\n")
(comment . ";;68 b 156")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r15 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 156
i: 112
end-i: 156
at header: 112
i: 128
end-i: 156
i: 132
end-i: 156
i: 136
end-i: 156
i: 140
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r15 <- r1, 0x8\n")
(comment . ";;136: r14 <- r15, r5")
(comment . ";;140: r4 <- r14, 0x0\n")
(comment . ";;144: r4 <- 0x7")
(comment . ";;152 b 24")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 168
i: 156
end-i: 168
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;156: r7 <- r0, 0x68\n")
(comment . ";;160: r2 <- r7")
(comment . ";;164 b 36")
chunklet-i: 168; chunklet-start-i: 168; chunklet-end-i: 180
i: 168
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";;168: r7 <- r7, r8")
(comment . ";;172: r7 <- r0, 0x68\n")
(comment . ";;176: r14 <- r7, 0x0\n")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 204
i: 180
end-i: 204
i: 180
end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;192: r14 <- r15, 0xD\n")
(comment . ";;196: r4 <- 0x2E")
(comment . ";;200: b r1, 0")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 216
i: 204
end-i: 216
i: 204
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 216; chunklet-start-i: 220; chunklet-end-i: 228
i: 216
end-i: 228
i: 220
end-i: 228
i: 224
end-i: 228
i: 228
end-i: 228
i:228 HIT CHUNK END
(comment . ";; instruction 216 not included")
(comment . ";;220: r7 <- r0, 0x68\n")
(comment . ";;224 b -60")
chunklet-i: 228; chunklet-start-i: 228; chunklet-end-i: 264
i: 228
end-i: 264
i: 228
end-i: 264
i: 232
end-i: 264
i: 236
end-i: 264
i: 240
end-i: 264
i: 244
end-i: 264
i: 248
end-i: 264
i: 260
end-i: 264
i: 264
end-i: 264
at header: 264
(comment . ";;228: r9 <- 0x8")
(comment . ";;232: r15 <- r1, 0x8\n")
(comment . ";;236: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;244: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;260: b r6")
chunklet-i: 264; chunklet-start-i: 280; chunklet-end-i: 296
i: 264
end-i: 296
at header: 264
i: 280
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";;280: r1 <- r1, r0")
(comment . ";;284: r9 <- 0x4")
(comment . ";;288: r15 <- r1, 0x8\n")
(comment . ";;292 b -224")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 328
i: 296
end-i: 328
i: 296
end-i: 328
i: 300
end-i: 328
i: 304
end-i: 328
i: 308
end-i: 328
i: 312
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
at header: 328
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;308: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;324: b r6")
chunklet-i: 328; chunklet-start-i: 344; chunklet-end-i: 364
i: 328
end-i: 364
at header: 328
i: 344
end-i: 364
i: 348
end-i: 364
i: 352
end-i: 364
i: 356
end-i: 364
i: 360
end-i: 364
i: 364
end-i: 364
i:364 HIT CHUNK END
(comment . ";;344: r1 <- r1, r0")
(comment . ";;348: r10 <- 0x4")
(comment . ";;352: r15 <- r1, 0x8\n")
(comment . ";;360 b -308")
chunklet-i: 364; chunklet-start-i: 364; chunklet-end-i: 392
i: 364
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;364: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 416
i: 392
end-i: 416
at header: 392
i: 408
end-i: 416
i: 412
end-i: 416
i: 416
end-i: 416
i:416 HIT CHUNK END
(comment . ";;408: r1 <- r1, r8")
(comment . ";;412 b -396")
chunklet-i: 416; chunklet-start-i: 416; chunklet-end-i: 428
i: 416
end-i: 428
i: 416
end-i: 428
i: 428
end-i: 428
i:428 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 428; chunklet-start-i: 432; chunklet-end-i: 436
i: 428
end-i: 436
i: 432
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; instruction 428 not included")
(comment . ";;432 b -424")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 156
instruction range for chunk: 156 168
instruction range for chunk: 168 180
instruction range for chunk: 180 204
instruction range for chunk: 204 216
instruction range for chunk: 220 228
instruction range for chunk: 228 264
instruction range for chunk: 280 296
instruction range for chunk: 296 328
instruction range for chunk: 344 364
instruction range for chunk: 364 392
instruction range for chunk: 408 416
instruction range for chunk: 416 428
instruction range for chunk: 432 436
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;0: r15 <- r0, 0x58\n")
(comment . ";;4: r1 <- r15")
(comment . ";;8 b 404")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r3 <- r3, 0x1\n")
(comment . ";;16 b 344")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 56
i: 20
end-i: 56
i: 20
end-i: 56
i: 32
end-i: 56
i: 44
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;44: r10 <- r9, 0x5\n")
(comment . ";;48: r10 <- 0x1E")
(comment . ";;52 b 240")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r10 <- 0x7")
(comment . ";;60 b 164")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r10, 0x8\n")
(comment . ";;68 b 156")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r15 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 156
i: 112
end-i: 156
at header: 112
i: 128
end-i: 156
i: 132
end-i: 156
i: 136
end-i: 156
i: 140
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r15 <- r1, 0x8\n")
(comment . ";;136: r14 <- r15, r5")
(comment . ";;140: r4 <- r14, 0x0\n")
(comment . ";;144: r4 <- 0x7")
(comment . ";;152 b 24")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 168
i: 156
end-i: 168
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;156: r7 <- r0, 0x68\n")
(comment . ";;160: r2 <- r7")
(comment . ";;164 b 36")
chunklet-i: 168; chunklet-start-i: 168; chunklet-end-i: 180
i: 168
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";;168: r7 <- r7, r8")
(comment . ";;172: r7 <- r0, 0x68\n")
(comment . ";;176: r14 <- r7, 0x0\n")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 204
i: 180
end-i: 204
i: 180
end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;192: r14 <- r15, 0xD\n")
(comment . ";;196: r4 <- 0x2E")
(comment . ";;200: b r1, 0")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 216
i: 204
end-i: 216
i: 204
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 216; chunklet-start-i: 220; chunklet-end-i: 228
i: 216
end-i: 228
i: 220
end-i: 228
i: 224
end-i: 228
i: 228
end-i: 228
i:228 HIT CHUNK END
(comment . ";; instruction 216 not included")
(comment . ";;220: r7 <- r0, 0x68\n")
(comment . ";;224 b -60")
chunklet-i: 228; chunklet-start-i: 228; chunklet-end-i: 264
i: 228
end-i: 264
i: 228
end-i: 264
i: 232
end-i: 264
i: 236
end-i: 264
i: 240
end-i: 264
i: 244
end-i: 264
i: 248
end-i: 264
i: 260
end-i: 264
i: 264
end-i: 264
at header: 264
(comment . ";;228: r9 <- 0x8")
(comment . ";;232: r15 <- r1, 0x8\n")
(comment . ";;236: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;244: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;260: b r6")
chunklet-i: 264; chunklet-start-i: 280; chunklet-end-i: 296
i: 264
end-i: 296
at header: 264
i: 280
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";;280: r1 <- r1, r0")
(comment . ";;284: r9 <- 0x4")
(comment . ";;288: r15 <- r1, 0x8\n")
(comment . ";;292 b -224")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 328
i: 296
end-i: 328
i: 296
end-i: 328
i: 300
end-i: 328
i: 304
end-i: 328
i: 308
end-i: 328
i: 312
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
at header: 328
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;308: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;324: b r6")
chunklet-i: 328; chunklet-start-i: 344; chunklet-end-i: 364
i: 328
end-i: 364
at header: 328
i: 344
end-i: 364
i: 348
end-i: 364
i: 352
end-i: 364
i: 356
end-i: 364
i: 360
end-i: 364
i: 364
end-i: 364
i:364 HIT CHUNK END
(comment . ";;344: r1 <- r1, r0")
(comment . ";;348: r10 <- 0x4")
(comment . ";;352: r15 <- r1, 0x8\n")
(comment . ";;360 b -308")
chunklet-i: 364; chunklet-start-i: 364; chunklet-end-i: 392
i: 364
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;364: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 416
i: 392
end-i: 416
at header: 392
i: 408
end-i: 416
i: 412
end-i: 416
i: 416
end-i: 416
i:416 HIT CHUNK END
(comment . ";;408: r1 <- r1, r8")
(comment . ";;412 b -396")
chunklet-i: 416; chunklet-start-i: 416; chunklet-end-i: 428
i: 416
end-i: 428
i: 416
end-i: 428
i: 428
end-i: 428
i:428 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 428; chunklet-start-i: 432; chunklet-end-i: 436
i: 428
end-i: 436
i: 432
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; instruction 428 not included")
(comment . ";;432 b -424")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: fit
instruction range for chunk: 0 12
instruction range for chunk: 12 44
instruction range for chunk: 44 48
instruction range for chunk: 48 60
instruction range for chunk: 60 80
instruction range for chunk: 80 92
instruction range for chunk: 92 104
instruction range for chunk: 104 116
instruction range for chunk: 116 124
instruction range for chunk: 124 148
instruction range for chunk: 148 152
instruction range for chunk: 152 164
instruction range for chunk: 164 184
instruction range for chunk: 184 196
instruction range for chunk: 196 216
instruction range for chunk: 216 236
instruction range for chunk: 236 248
instruction range for chunk: 248 264
instruction range for chunk: 264 288
instruction range for chunk: 288 300
instruction range for chunk: 300 308
instruction range for chunk: 308 320
instruction range for chunk: 320 340
instruction range for chunk: 340 352
instruction range for chunk: 352 368
instruction range for chunk: 368 376
instruction range for chunk: 376 384
instruction range for chunk: 384 392
instruction range for chunk: 392 400
instruction range for chunk: 400 448
instruction range for chunk: 464 484
instruction range for chunk: 484 528
instruction range for chunk: 544 568
instruction range for chunk: 568 580
instruction range for chunk: 580 588
instruction range for chunk: 588 596
instruction range for chunk: 596 604
instruction range for chunk: 604 612
instruction range for chunk: 612 648
instruction range for chunk: 664 676
instruction range for chunk: 676 700
instruction range for chunk: 700 720
instruction range for chunk: 720 728
instruction range for chunk: 728 776
instruction range for chunk: 792 816
instruction range for chunk: 816 872
instruction range for chunk: 888 920
instruction range for chunk: 920 928
instruction range for chunk: 928 976
instruction range for chunk: 992 1020
instruction range for chunk: 1020 1064
instruction range for chunk: 1080 1112
instruction range for chunk: 1112 1132
instruction range for chunk: 1132 1152
instruction range for chunk: 1152 1160
instruction range for chunk: 1160 1208
instruction range for chunk: 1224 1252
instruction range for chunk: 1252 1296
instruction range for chunk: 1312 1340
instruction range for chunk: 1340 1348
instruction range for chunk: 1348 1392
instruction range for chunk: 1408 1428
instruction range for chunk: 1428 1480
instruction range for chunk: 1496 1528
instruction range for chunk: 1528 1532
instruction range for chunk: 1532 1552
instruction range for chunk: 1552 1560
instruction range for chunk: 1560 1600
instruction range for chunk: 1616 1636
instruction range for chunk: 1636 1672
instruction range for chunk: 1688 1708
instruction range for chunk: 1708 1724
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x2")
(comment . ";;8 b 1696")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;12: r15 <- 0x9")
(comment . ";;16: r13 <- 0xA")
(comment . ";; literal r9")
(comment . ";;32: r14 <- r9, 0x5\n")
(comment . ";;36: r14 <- 0x1E")
(comment . ";;40 b 1508")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;44: r9 <- 0xE")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 60
i: 48
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;48: r14 <- r9, r7")
(comment . ";;52: r14 <- 0x7")
(comment . ";;56 b 1472")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 80
i: 60
end-i: 80
i: 64
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;60: r12 <- r9, 0x1\n")
(comment . ";;64: r14 <- r12, r1")
(comment . ";;68: r14 <- r14, r8")
(comment . ";;72: r15 <- r14")
(comment . ";;76 b 1452")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;80: r14 <- r15, r12")
(comment . ";;84: r14 <- 0x7")
(comment . ";;88 b 1440")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;92: r14 <- r15, r9")
(comment . ";;96: r12 <- r9, r14")
(comment . ";;100: r4 <- 0x0")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 116
i: 104
end-i: 116
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r14 <- r4, r12")
(comment . ";;108: r14 <- 0x7")
(comment . ";;112 b 1224")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;116: r4 <- r12")
(comment . ";;120 b 444")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 148
i: 124
end-i: 148
i: 124
end-i: 148
i: 136
end-i: 148
i: 140
end-i: 148
i: 144
end-i: 148
i: 148
end-i: 148
i:148 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;136: r14 <- r9, 0x5\n")
(comment . ";;140: r14 <- 0x1E")
(comment . ";;144 b 1004")
chunklet-i: 148; chunklet-start-i: 148; chunklet-end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;148: r9 <- 0xE")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 164
i: 152
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;152: r14 <- r9, r7")
(comment . ";;156: r14 <- 0x7")
(comment . ";;160 b 968")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 184
i: 164
end-i: 184
i: 168
end-i: 184
i: 172
end-i: 184
i: 176
end-i: 184
i: 180
end-i: 184
i: 184
end-i: 184
i:184 HIT CHUNK END
(comment . ";;164: r11 <- r9, 0x1\n")
(comment . ";;168: r14 <- r11, r1")
(comment . ";;172: r14 <- r14, r8")
(comment . ";;176: r15 <- r14")
(comment . ";;180 b 948")
chunklet-i: 184; chunklet-start-i: 184; chunklet-end-i: 196
i: 184
end-i: 196
i: 188
end-i: 196
i: 192
end-i: 196
i: 196
end-i: 196
i:196 HIT CHUNK END
(comment . ";;184: r14 <- r15, r11")
(comment . ";;188: r14 <- 0x7")
(comment . ";;192 b 936")
chunklet-i: 196; chunklet-start-i: 196; chunklet-end-i: 216
i: 196
end-i: 216
i: 200
end-i: 216
i: 204
end-i: 216
i: 208
end-i: 216
i: 212
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";;196: r14 <- r15, r9")
(comment . ";;200: r9 <- r9, r14")
(comment . ";;204: r14 <- r9, r7")
(comment . ";;208: r14 <- 0x7")
(comment . ";;212 b 896")
chunklet-i: 216; chunklet-start-i: 216; chunklet-end-i: 236
i: 216
end-i: 236
i: 220
end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";;216: r11 <- r9, 0x1\n")
(comment . ";;220: r14 <- r11, r1")
(comment . ";;224: r14 <- r14, r8")
(comment . ";;228: r4 <- r14")
(comment . ";;232 b 876")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 248
i: 236
end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;236: r14 <- r4, r11")
(comment . ";;240: r14 <- 0x7")
(comment . ";;244 b 864")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 264
i: 248
end-i: 264
i: 252
end-i: 264
i: 256
end-i: 264
i: 260
end-i: 264
i: 264
end-i: 264
i:264 HIT CHUNK END
(comment . ";;248: r14 <- r4, r9")
(comment . ";;252: r14 <- r9, r14")
(comment . ";;256: r14 <- 0x6")
(comment . ";;260 b 104")
chunklet-i: 264; chunklet-start-i: 264; chunklet-end-i: 288
i: 264
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
i:288 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;276: r14 <- r9, 0x5\n")
(comment . ";;280: r14 <- 0x1E")
(comment . ";;284 b 632")
chunklet-i: 288; chunklet-start-i: 288; chunklet-end-i: 300
i: 288
end-i: 300
i: 288
end-i: 300
i: 292
end-i: 300
i: 296
end-i: 300
i: 300
end-i: 300
i:300 HIT CHUNK END
(comment . ";;288: r11 <- r13, r4")
(comment . ";;292: r11 <- 0x7")
(comment . ";;296 b 420")
chunklet-i: 300; chunklet-start-i: 300; chunklet-end-i: 308
i: 300
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;300: r10 <- r13, r4")
(comment . ";;304 b 412")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 320
i: 308
end-i: 320
i: 308
end-i: 320
i: 312
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
i:320 HIT CHUNK END
(comment . ";;308: r11 <- r14, r7")
(comment . ";;312: r11 <- 0x7")
(comment . ";;316 b 380")
chunklet-i: 320; chunklet-start-i: 320; chunklet-end-i: 340
i: 320
end-i: 340
i: 324
end-i: 340
i: 328
end-i: 340
i: 332
end-i: 340
i: 336
end-i: 340
i: 340
end-i: 340
i:340 HIT CHUNK END
(comment . ";;320: r9 <- r14, 0x1\n")
(comment . ";;324: r11 <- r9, r1")
(comment . ";;328: r11 <- r11, r8")
(comment . ";;332: r10 <- r11")
(comment . ";;336 b 360")
chunklet-i: 340; chunklet-start-i: 340; chunklet-end-i: 352
i: 340
end-i: 352
i: 344
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";;340: r11 <- r10, r9")
(comment . ";;344: r11 <- 0x7")
(comment . ";;348 b 348")
chunklet-i: 352; chunklet-start-i: 352; chunklet-end-i: 368
i: 352
end-i: 368
i: 356
end-i: 368
i: 360
end-i: 368
i: 364
end-i: 368
i: 368
end-i: 368
i:368 HIT CHUNK END
(comment . ";;352: r11 <- r10, r9")
(comment . ";;356: r14 <- r14, r11")
(comment . ";;360: r14 <- 0x6")
(comment . ";;364 b 200")
chunklet-i: 368; chunklet-start-i: 368; chunklet-end-i: 376
i: 368
end-i: 376
i: 368
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
i:376 HIT CHUNK END
(comment . ";;368: r3 <- r3, 0x1\n")
(comment . ";;372 b 108")
chunklet-i: 376; chunklet-start-i: 376; chunklet-end-i: 384
i: 376
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
i:384 HIT CHUNK END
(comment . ";;376: r4 <- 0x7")
(comment . ";;380 b 16")
chunklet-i: 384; chunklet-start-i: 384; chunklet-end-i: 392
i: 384
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
i:392 HIT CHUNK END
(comment . ";;384: r14 <- r4, 0x8\n")
(comment . ";;388 b 8")
chunklet-i: 392; chunklet-start-i: 392; chunklet-end-i: 400
i: 392
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
i:400 HIT CHUNK END
(comment . ";;392: r4 <- 0xE")
(comment . ";;396 b -296")
chunklet-i: 400; chunklet-start-i: 400; chunklet-end-i: 448
i: 400
end-i: 448
i: 400
end-i: 448
i: 404
end-i: 448
i: 408
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 420
end-i: 448
i: 424
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;400: r9 <- 0x8")
(comment . ";;404: r10 <- 0x4")
(comment . ";;408: r15 <- r1, 0x8\n")
(comment . ";;412: r13 <- r1, 0x10\n")
(comment . ";;416: r12 <- r1, 0x18\n")
(comment . ";;420: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;444: b r6")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 484
i: 448
end-i: 484
at header: 448
i: 464
end-i: 484
i: 468
end-i: 484
i: 472
end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;464: r1 <- r1, r0")
(comment . ";;468: r15 <- r1, 0x8\n")
(comment . ";;472: r13 <- r1, 0x10\n")
(comment . ";;476: r12 <- r1, 0x18\n")
(comment . ";;480 b -380")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 528
i: 484
end-i: 528
i: 484
end-i: 528
i: 488
end-i: 528
i: 492
end-i: 528
i: 496
end-i: 528
i: 500
end-i: 528
i: 504
end-i: 528
i: 508
end-i: 528
i: 512
end-i: 528
i: 524
end-i: 528
i: 528
end-i: 528
at header: 528
(comment . ";;484: r15 <- r1, 0x8\n")
(comment . ";;488: r13 <- r1, 0x10\n")
(comment . ";;492: r12 <- r1, 0x18\n")
(comment . ";;496: r4 <- r1, 0x20\n")
(comment . ";;500: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;508: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;524: b r6")
chunklet-i: 528; chunklet-start-i: 544; chunklet-end-i: 568
i: 528
end-i: 568
at header: 528
i: 544
end-i: 568
i: 548
end-i: 568
i: 552
end-i: 568
i: 556
end-i: 568
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;544: r1 <- r1, r8")
(comment . ";;548: r15 <- r1, 0x8\n")
(comment . ";;552: r13 <- r1, 0x10\n")
(comment . ";;556: r12 <- r1, 0x18\n")
(comment . ";;560: r4 <- r1, 0x20\n")
(comment . ";;564 b -192")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 580
i: 568
end-i: 580
i: 568
end-i: 580
i: 572
end-i: 580
i: 576
end-i: 580
i: 580
end-i: 580
i:580 HIT CHUNK END
(comment . ";;568: r15 <- r4, r12")
(comment . ";;572: r15 <- 0x7")
(comment . ";;576 b 24")
chunklet-i: 580; chunklet-start-i: 580; chunklet-end-i: 588
i: 580
end-i: 588
i: 584
end-i: 588
i: 588
end-i: 588
i:588 HIT CHUNK END
(comment . ";;580: r4 <- r12")
(comment . ";;584 b 8")
chunklet-i: 588; chunklet-start-i: 588; chunklet-end-i: 596
i: 588
end-i: 596
i: 592
end-i: 596
i: 596
end-i: 596
i:596 HIT CHUNK END
(comment . ";;588: r4 <- 0xE")
(comment . ";;592: b r1, 0")
chunklet-i: 596; chunklet-start-i: 596; chunklet-end-i: 604
i: 596
end-i: 604
i: 596
end-i: 604
i: 600
end-i: 604
i: 604
end-i: 604
i:604 HIT CHUNK END
(comment . ";;596: r4 <- 0x6")
(comment . ";;600: b r1, 0")
chunklet-i: 604; chunklet-start-i: 604; chunklet-end-i: 612
i: 604
end-i: 612
i: 604
end-i: 612
i: 608
end-i: 612
i: 612
end-i: 612
i:612 HIT CHUNK END
(comment . ";;604: r3 <- r3, 0x1\n")
(comment . ";;608 b 64")
chunklet-i: 612; chunklet-start-i: 612; chunklet-end-i: 648
i: 612
end-i: 648
i: 616
end-i: 648
i: 620
end-i: 648
i: 624
end-i: 648
i: 628
end-i: 648
i: 632
end-i: 648
i: 644
end-i: 648
i: 648
end-i: 648
at header: 648
(comment . ";;612: r12 <- r1, 0x18\n")
(comment . ";;616: r4 <- r1, 0x20\n")
(comment . ";;620: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;628: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;644: b r6")
chunklet-i: 648; chunklet-start-i: 664; chunklet-end-i: 676
i: 648
end-i: 676
at header: 648
i: 664
end-i: 676
i: 668
end-i: 676
i: 672
end-i: 676
i: 676
end-i: 676
i:676 HIT CHUNK END
(comment . ";;664: r1 <- r1, r8")
(comment . ";;668: r12 <- r1, 0x18\n")
(comment . ";;672: r4 <- r1, 0x20\n")
chunklet-i: 676; chunklet-start-i: 676; chunklet-end-i: 700
i: 676
end-i: 700
i: 676
end-i: 700
i: 680
end-i: 700
i: 684
end-i: 700
i: 696
end-i: 700
i: 700
end-i: 700
i:700 HIT CHUNK END
(comment . ";;676: r9 <- 0x4")
(comment . ";;680: r10 <- 0xC")
(comment . ";; literal r6")
(comment . ";;696: b r6")
chunklet-i: 700; chunklet-start-i: 700; chunklet-end-i: 720
i: 700
end-i: 720
i: 700
end-i: 720
i: 704
end-i: 720
i: 716
end-i: 720
i: 720
end-i: 720
i:720 HIT CHUNK END
(comment . ";;700: r9 <- 0xE")
(comment . ";; literal r6")
(comment . ";;716: b r6")
chunklet-i: 720; chunklet-start-i: 720; chunklet-end-i: 728
i: 720
end-i: 728
i: 720
end-i: 728
i: 724
end-i: 728
i: 728
end-i: 728
i:728 HIT CHUNK END
(comment . ";;720: r3 <- r3, 0x1\n")
(comment . ";;724 b 88")
chunklet-i: 728; chunklet-start-i: 728; chunklet-end-i: 776
i: 728
end-i: 776
i: 732
end-i: 776
i: 736
end-i: 776
i: 740
end-i: 776
i: 744
end-i: 776
i: 748
end-i: 776
i: 752
end-i: 776
i: 756
end-i: 776
i: 760
end-i: 776
i: 772
end-i: 776
i: 776
end-i: 776
at header: 776
(comment . ";;728: r15 <- r1, 0x8\n")
(comment . ";;732: r13 <- r1, 0x10\n")
(comment . ";;736: r12 <- r1, 0x18\n")
(comment . ";;740: r4 <- r1, 0x20\n")
(comment . ";;744: r14 <- r1, 0x28\n")
(comment . ";;748: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;756: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;772: b r6")
chunklet-i: 776; chunklet-start-i: 792; chunklet-end-i: 816
i: 776
end-i: 816
at header: 776
i: 792
end-i: 816
i: 796
end-i: 816
i: 800
end-i: 816
i: 804
end-i: 816
i: 808
end-i: 816
i: 812
end-i: 816
i: 816
end-i: 816
i:816 HIT CHUNK END
(comment . ";;792: r1 <- r1, r0")
(comment . ";;796: r15 <- r1, 0x8\n")
(comment . ";;800: r13 <- r1, 0x10\n")
(comment . ";;804: r12 <- r1, 0x18\n")
(comment . ";;808: r4 <- r1, 0x20\n")
(comment . ";;812: r14 <- r1, 0x28\n")
chunklet-i: 816; chunklet-start-i: 816; chunklet-end-i: 872
i: 816
end-i: 872
i: 816
end-i: 872
i: 820
end-i: 872
i: 824
end-i: 872
i: 828
end-i: 872
i: 832
end-i: 872
i: 836
end-i: 872
i: 840
end-i: 872
i: 844
end-i: 872
i: 848
end-i: 872
i: 852
end-i: 872
i: 856
end-i: 872
i: 868
end-i: 872
i: 872
end-i: 872
at header: 872
(comment . ";;816: r9 <- 0xD")
(comment . ";;820: r10 <- 0x4")
(comment . ";;824: r15 <- r1, 0x8\n")
(comment . ";;828: r13 <- r1, 0x10\n")
(comment . ";;832: r12 <- r1, 0x18\n")
(comment . ";;836: r4 <- r1, 0x20\n")
(comment . ";;840: r14 <- r1, 0x28\n")
(comment . ";;844: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;852: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;868: b r6")
chunklet-i: 872; chunklet-start-i: 888; chunklet-end-i: 920
i: 872
end-i: 920
at header: 872
i: 888
end-i: 920
i: 892
end-i: 920
i: 896
end-i: 920
i: 900
end-i: 920
i: 904
end-i: 920
i: 908
end-i: 920
i: 912
end-i: 920
i: 916
end-i: 920
i: 920
end-i: 920
i:920 HIT CHUNK END
(comment . ";;888: r1 <- r1, r0")
(comment . ";;892: r10 <- 0x4")
(comment . ";;896: r15 <- r1, 0x8\n")
(comment . ";;900: r13 <- r1, 0x10\n")
(comment . ";;904: r12 <- r1, 0x18\n")
(comment . ";;908: r4 <- r1, 0x20\n")
(comment . ";;912: r14 <- r1, 0x28\n")
(comment . ";;916 b -612")
chunklet-i: 920; chunklet-start-i: 920; chunklet-end-i: 928
i: 920
end-i: 928
i: 920
end-i: 928
i: 924
end-i: 928
i: 928
end-i: 928
i:928 HIT CHUNK END
(comment . ";;920: r3 <- r3, 0x1\n")
(comment . ";;924 b 92")
chunklet-i: 928; chunklet-start-i: 928; chunklet-end-i: 976
i: 928
end-i: 976
i: 932
end-i: 976
i: 936
end-i: 976
i: 940
end-i: 976
i: 944
end-i: 976
i: 948
end-i: 976
i: 952
end-i: 976
i: 956
end-i: 976
i: 960
end-i: 976
i: 972
end-i: 976
i: 976
end-i: 976
at header: 976
(comment . ";;928: r15 <- r1, 0x8\n")
(comment . ";;932: r13 <- r1, 0x10\n")
(comment . ";;936: r12 <- r1, 0x18\n")
(comment . ";;940: r4 <- r1, 0x20\n")
(comment . ";;944: r9 <- r1, 0x28\n")
(comment . ";;948: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;956: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;972: b r6")
chunklet-i: 976; chunklet-start-i: 992; chunklet-end-i: 1020
i: 976
end-i: 1020
at header: 976
i: 992
end-i: 1020
i: 996
end-i: 1020
i: 1000
end-i: 1020
i: 1004
end-i: 1020
i: 1008
end-i: 1020
i: 1012
end-i: 1020
i: 1016
end-i: 1020
i: 1020
end-i: 1020
i:1020 HIT CHUNK END
(comment . ";;996: r1 <- r1, r0")
(comment . ";;1000: r15 <- r1, 0x8\n")
(comment . ";;1004: r13 <- r1, 0x10\n")
(comment . ";;1008: r12 <- r1, 0x18\n")
(comment . ";;1012: r4 <- r1, 0x20\n")
(comment . ";;1016: r9 <- r1, 0x28\n")
chunklet-i: 1020; chunklet-start-i: 1020; chunklet-end-i: 1064
i: 1020
end-i: 1064
i: 1020
end-i: 1064
i: 1024
end-i: 1064
i: 1028
end-i: 1064
i: 1032
end-i: 1064
i: 1036
end-i: 1064
i: 1040
end-i: 1064
i: 1044
end-i: 1064
i: 1048
end-i: 1064
i: 1060
end-i: 1064
i: 1064
end-i: 1064
at header: 1064
(comment . ";;1020: r15 <- r1, 0x8\n")
(comment . ";;1024: r13 <- r1, 0x10\n")
(comment . ";;1028: r12 <- r1, 0x18\n")
(comment . ";;1032: r4 <- r1, 0x20\n")
(comment . ";;1036: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1044: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1060: b r6")
chunklet-i: 1064; chunklet-start-i: 1080; chunklet-end-i: 1112
i: 1064
end-i: 1112
at header: 1064
i: 1080
end-i: 1112
i: 1084
end-i: 1112
i: 1088
end-i: 1112
i: 1092
end-i: 1112
i: 1096
end-i: 1112
i: 1100
end-i: 1112
i: 1104
end-i: 1112
i: 1108
end-i: 1112
i: 1112
end-i: 1112
i:1112 HIT CHUNK END
(comment . ";;1080: r1 <- r1, r8")
(comment . ";;1084: r14 <- 0x4")
(comment . ";;1088: r15 <- r1, 0x8\n")
(comment . ";;1092: r13 <- r1, 0x10\n")
(comment . ";;1096: r12 <- r1, 0x18\n")
(comment . ";;1100: r4 <- r1, 0x20\n")
(comment . ";;1108 b -824")
chunklet-i: 1112; chunklet-start-i: 1112; chunklet-end-i: 1132
i: 1112
end-i: 1132
i: 1112
end-i: 1132
i: 1116
end-i: 1132
i: 1128
end-i: 1132
i: 1132
end-i: 1132
i:1132 HIT CHUNK END
(comment . ";;1112: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1128: b r6")
chunklet-i: 1132; chunklet-start-i: 1132; chunklet-end-i: 1152
i: 1132
end-i: 1152
i: 1132
end-i: 1152
i: 1136
end-i: 1152
i: 1148
end-i: 1152
i: 1152
end-i: 1152
i:1152 HIT CHUNK END
(comment . ";;1132: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1148: b r6")
chunklet-i: 1152; chunklet-start-i: 1152; chunklet-end-i: 1160
i: 1152
end-i: 1160
i: 1152
end-i: 1160
i: 1156
end-i: 1160
i: 1160
end-i: 1160
i:1160 HIT CHUNK END
(comment . ";;1152: r3 <- r3, 0x1\n")
(comment . ";;1156 b 92")
chunklet-i: 1160; chunklet-start-i: 1160; chunklet-end-i: 1208
i: 1160
end-i: 1208
i: 1164
end-i: 1208
i: 1168
end-i: 1208
i: 1172
end-i: 1208
i: 1176
end-i: 1208
i: 1180
end-i: 1208
i: 1184
end-i: 1208
i: 1188
end-i: 1208
i: 1192
end-i: 1208
i: 1204
end-i: 1208
i: 1208
end-i: 1208
at header: 1208
(comment . ";;1160: r15 <- r1, 0x8\n")
(comment . ";;1164: r13 <- r1, 0x10\n")
(comment . ";;1168: r12 <- r1, 0x18\n")
(comment . ";;1172: r4 <- r1, 0x20\n")
(comment . ";;1176: r9 <- r1, 0x28\n")
(comment . ";;1180: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1188: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1204: b r6")
chunklet-i: 1208; chunklet-start-i: 1224; chunklet-end-i: 1252
i: 1208
end-i: 1252
at header: 1208
i: 1224
end-i: 1252
i: 1228
end-i: 1252
i: 1232
end-i: 1252
i: 1236
end-i: 1252
i: 1240
end-i: 1252
i: 1244
end-i: 1252
i: 1248
end-i: 1252
i: 1252
end-i: 1252
i:1252 HIT CHUNK END
(comment . ";;1228: r1 <- r1, r0")
(comment . ";;1232: r15 <- r1, 0x8\n")
(comment . ";;1236: r13 <- r1, 0x10\n")
(comment . ";;1240: r12 <- r1, 0x18\n")
(comment . ";;1244: r4 <- r1, 0x20\n")
(comment . ";;1248: r9 <- r1, 0x28\n")
chunklet-i: 1252; chunklet-start-i: 1252; chunklet-end-i: 1296
i: 1252
end-i: 1296
i: 1252
end-i: 1296
i: 1256
end-i: 1296
i: 1260
end-i: 1296
i: 1264
end-i: 1296
i: 1268
end-i: 1296
i: 1272
end-i: 1296
i: 1276
end-i: 1296
i: 1280
end-i: 1296
i: 1292
end-i: 1296
i: 1296
end-i: 1296
at header: 1296
(comment . ";;1252: r15 <- r1, 0x8\n")
(comment . ";;1256: r13 <- r1, 0x10\n")
(comment . ";;1260: r12 <- r1, 0x18\n")
(comment . ";;1264: r4 <- r1, 0x20\n")
(comment . ";;1268: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1276: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1292: b r6")
chunklet-i: 1296; chunklet-start-i: 1312; chunklet-end-i: 1340
i: 1296
end-i: 1340
at header: 1296
i: 1312
end-i: 1340
i: 1316
end-i: 1340
i: 1320
end-i: 1340
i: 1324
end-i: 1340
i: 1328
end-i: 1340
i: 1332
end-i: 1340
i: 1336
end-i: 1340
i: 1340
end-i: 1340
i:1340 HIT CHUNK END
(comment . ";;1312: r1 <- r1, r8")
(comment . ";;1316: r9 <- 0x4")
(comment . ";;1320: r15 <- r1, 0x8\n")
(comment . ";;1324: r13 <- r1, 0x10\n")
(comment . ";;1328: r12 <- r1, 0x18\n")
(comment . ";;1332: r4 <- r1, 0x20\n")
(comment . ";;1336 b -1188")
chunklet-i: 1340; chunklet-start-i: 1340; chunklet-end-i: 1348
i: 1340
end-i: 1348
i: 1340
end-i: 1348
i: 1344
end-i: 1348
i: 1348
end-i: 1348
i:1348 HIT CHUNK END
(comment . ";;1340: r3 <- r3, 0x1\n")
(comment . ";;1344 b 80")
chunklet-i: 1348; chunklet-start-i: 1348; chunklet-end-i: 1392
i: 1348
end-i: 1392
i: 1352
end-i: 1392
i: 1356
end-i: 1392
i: 1360
end-i: 1392
i: 1364
end-i: 1392
i: 1368
end-i: 1392
i: 1372
end-i: 1392
i: 1376
end-i: 1392
i: 1388
end-i: 1392
i: 1392
end-i: 1392
at header: 1392
(comment . ";;1348: r15 <- r1, 0x8\n")
(comment . ";;1352: r13 <- r1, 0x10\n")
(comment . ";;1356: r12 <- r1, 0x18\n")
(comment . ";;1360: r4 <- r1, 0x20\n")
(comment . ";;1364: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1388: b r6")
chunklet-i: 1392; chunklet-start-i: 1408; chunklet-end-i: 1428
i: 1392
end-i: 1428
at header: 1392
i: 1408
end-i: 1428
i: 1412
end-i: 1428
i: 1416
end-i: 1428
i: 1420
end-i: 1428
i: 1424
end-i: 1428
i: 1428
end-i: 1428
i:1428 HIT CHUNK END
(comment . ";;1408: r1 <- r1, r8")
(comment . ";;1412: r15 <- r1, 0x8\n")
(comment . ";;1416: r13 <- r1, 0x10\n")
(comment . ";;1420: r12 <- r1, 0x18\n")
(comment . ";;1424: r4 <- r1, 0x20\n")
chunklet-i: 1428; chunklet-start-i: 1428; chunklet-end-i: 1480
i: 1428
end-i: 1480
i: 1428
end-i: 1480
i: 1432
end-i: 1480
i: 1436
end-i: 1480
i: 1440
end-i: 1480
i: 1444
end-i: 1480
i: 1448
end-i: 1480
i: 1452
end-i: 1480
i: 1456
end-i: 1480
i: 1460
end-i: 1480
i: 1464
end-i: 1480
i: 1476
end-i: 1480
i: 1480
end-i: 1480
at header: 1480
(comment . ";;1428: r9 <- 0x4")
(comment . ";;1432: r10 <- 0xC")
(comment . ";;1436: r15 <- r1, 0x8\n")
(comment . ";;1440: r13 <- r1, 0x10\n")
(comment . ";;1444: r12 <- r1, 0x18\n")
(comment . ";;1448: r4 <- r1, 0x20\n")
(comment . ";;1452: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1460: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1476: b r6")
chunklet-i: 1480; chunklet-start-i: 1496; chunklet-end-i: 1528
i: 1480
end-i: 1528
at header: 1480
i: 1496
end-i: 1528
i: 1500
end-i: 1528
i: 1504
end-i: 1528
i: 1508
end-i: 1528
i: 1512
end-i: 1528
i: 1516
end-i: 1528
i: 1520
end-i: 1528
i: 1524
end-i: 1528
i: 1528
end-i: 1528
i:1528 HIT CHUNK END
(comment . ";;1496: r1 <- r1, r8")
(comment . ";;1500: r14 <- 0x4")
(comment . ";;1504: r15 <- r1, 0x8\n")
(comment . ";;1508: r13 <- r1, 0x10\n")
(comment . ";;1512: r12 <- r1, 0x18\n")
(comment . ";;1516: r4 <- r1, 0x20\n")
(comment . ";;1520: r14 <- 0x6")
(comment . ";;1524 b -1404")
chunklet-i: 1528; chunklet-start-i: 1528; chunklet-end-i: 1532
i: 1528
end-i: 1532
i: 1532
end-i: 1532
i:1532 HIT CHUNK END
(comment . ";;1528 b -964")
chunklet-i: 1532; chunklet-start-i: 1532; chunklet-end-i: 1552
i: 1532
end-i: 1552
i: 1532
end-i: 1552
i: 1536
end-i: 1552
i: 1548
end-i: 1552
i: 1552
end-i: 1552
i:1552 HIT CHUNK END
(comment . ";;1532: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1548: b r6")
chunklet-i: 1552; chunklet-start-i: 1552; chunklet-end-i: 1560
i: 1552
end-i: 1560
i: 1552
end-i: 1560
i: 1556
end-i: 1560
i: 1560
end-i: 1560
i:1560 HIT CHUNK END
(comment . ";;1552: r3 <- r3, 0x1\n")
(comment . ";;1556 b 76")
chunklet-i: 1560; chunklet-start-i: 1560; chunklet-end-i: 1600
i: 1560
end-i: 1600
i: 1564
end-i: 1600
i: 1568
end-i: 1600
i: 1572
end-i: 1600
i: 1576
end-i: 1600
i: 1580
end-i: 1600
i: 1584
end-i: 1600
i: 1596
end-i: 1600
i: 1600
end-i: 1600
at header: 1600
(comment . ";;1560: r15 <- r1, 0x8\n")
(comment . ";;1564: r13 <- r1, 0x10\n")
(comment . ";;1568: r9 <- r1, 0x18\n")
(comment . ";;1572: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1580: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1596: b r6")
chunklet-i: 1600; chunklet-start-i: 1616; chunklet-end-i: 1636
i: 1600
end-i: 1636
at header: 1600
i: 1616
end-i: 1636
i: 1620
end-i: 1636
i: 1624
end-i: 1636
i: 1628
end-i: 1636
i: 1632
end-i: 1636
i: 1636
end-i: 1636
i:1636 HIT CHUNK END
(comment . ";;1620: r1 <- r1, r0")
(comment . ";;1624: r15 <- r1, 0x8\n")
(comment . ";;1628: r13 <- r1, 0x10\n")
(comment . ";;1632: r9 <- r1, 0x18\n")
chunklet-i: 1636; chunklet-start-i: 1636; chunklet-end-i: 1672
i: 1636
end-i: 1672
i: 1636
end-i: 1672
i: 1640
end-i: 1672
i: 1644
end-i: 1672
i: 1648
end-i: 1672
i: 1652
end-i: 1672
i: 1656
end-i: 1672
i: 1668
end-i: 1672
i: 1672
end-i: 1672
at header: 1672
(comment . ";;1636: r15 <- r1, 0x8\n")
(comment . ";;1640: r13 <- r1, 0x10\n")
(comment . ";;1644: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1652: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1668: b r6")
chunklet-i: 1672; chunklet-start-i: 1688; chunklet-end-i: 1708
i: 1672
end-i: 1708
at header: 1672
i: 1688
end-i: 1708
i: 1692
end-i: 1708
i: 1696
end-i: 1708
i: 1700
end-i: 1708
i: 1704
end-i: 1708
i: 1708
end-i: 1708
i:1708 HIT CHUNK END
(comment . ";;1688: r1 <- r1, r8")
(comment . ";;1692: r9 <- 0x4")
(comment . ";;1696: r15 <- r1, 0x8\n")
(comment . ";;1700: r13 <- r1, 0x10\n")
(comment . ";;1704 b -1660")
chunklet-i: 1708; chunklet-start-i: 1708; chunklet-end-i: 1724
i: 1708
end-i: 1724
i: 1708
end-i: 1724
i: 1720
end-i: 1724
i: 1724
end-i: 1724
i:1724 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;1720: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: place
instruction range for chunk: 0 12
instruction range for chunk: 12 44
instruction range for chunk: 44 48
instruction range for chunk: 48 60
instruction range for chunk: 60 80
instruction range for chunk: 80 92
instruction range for chunk: 92 104
instruction range for chunk: 104 116
instruction range for chunk: 116 124
instruction range for chunk: 124 132
instruction range for chunk: 132 156
instruction range for chunk: 156 160
instruction range for chunk: 160 172
instruction range for chunk: 172 192
instruction range for chunk: 192 204
instruction range for chunk: 204 224
instruction range for chunk: 224 244
instruction range for chunk: 244 256
instruction range for chunk: 256 272
instruction range for chunk: 272 296
instruction range for chunk: 296 308
instruction range for chunk: 308 316
instruction range for chunk: 316 328
instruction range for chunk: 328 340
instruction range for chunk: 340 348
instruction range for chunk: 348 364
instruction range for chunk: 364 376
instruction range for chunk: 376 384
instruction range for chunk: 384 392
instruction range for chunk: 392 400
instruction range for chunk: 400 448
instruction range for chunk: 464 488
instruction range for chunk: 488 512
instruction range for chunk: 512 568
instruction range for chunk: 584 620
instruction range for chunk: 620 664
instruction range for chunk: 680 708
instruction range for chunk: 708 728
instruction range for chunk: 728 748
instruction range for chunk: 748 792
instruction range for chunk: 808 836
instruction range for chunk: 836 880
instruction range for chunk: 896 924
instruction range for chunk: 924 948
instruction range for chunk: 948 972
instruction range for chunk: 972 976
instruction range for chunk: 976 988
instruction range for chunk: 988 1008
instruction range for chunk: 1008 1020
instruction range for chunk: 1020 1052
instruction range for chunk: 1052 1076
instruction range for chunk: 1076 1080
instruction range for chunk: 1080 1092
instruction range for chunk: 1092 1112
instruction range for chunk: 1112 1124
instruction range for chunk: 1124 1144
instruction range for chunk: 1144 1164
instruction range for chunk: 1164 1176
instruction range for chunk: 1176 1192
instruction range for chunk: 1192 1200
instruction range for chunk: 1200 1212
instruction range for chunk: 1212 1224
instruction range for chunk: 1224 1232
instruction range for chunk: 1232 1248
instruction range for chunk: 1248 1268
instruction range for chunk: 1268 1296
instruction range for chunk: 1296 1308
instruction range for chunk: 1308 1316
instruction range for chunk: 1316 1340
instruction range for chunk: 1340 1344
instruction range for chunk: 1344 1356
instruction range for chunk: 1356 1376
instruction range for chunk: 1376 1388
instruction range for chunk: 1388 1404
instruction range for chunk: 1404 1412
instruction range for chunk: 1412 1420
instruction range for chunk: 1420 1428
instruction range for chunk: 1428 1464
instruction range for chunk: 1480 1496
instruction range for chunk: 1496 1528
instruction range for chunk: 1544 1556
instruction range for chunk: 1556 1580
instruction range for chunk: 1580 1592
instruction range for chunk: 1592 1600
instruction range for chunk: 1600 1608
instruction range for chunk: 1608 1612
instruction range for chunk: 1612 1620
instruction range for chunk: 1620 1656
instruction range for chunk: 1672 1684
instruction range for chunk: 1684 1720
instruction range for chunk: 1736 1760
instruction range for chunk: 1760 1764
instruction range for chunk: 1764 1772
instruction range for chunk: 1772 1808
instruction range for chunk: 1824 1840
instruction range for chunk: 1840 1872
instruction range for chunk: 1888 1904
instruction range for chunk: 1904 1924
instruction range for chunk: 1924 1932
instruction range for chunk: 1932 1968
instruction range for chunk: 1984 2000
instruction range for chunk: 2000 2032
instruction range for chunk: 2048 2068
instruction range for chunk: 2068 2076
instruction range for chunk: 2076 2112
instruction range for chunk: 2128 2140
instruction range for chunk: 2140 2176
instruction range for chunk: 2192 2216
instruction range for chunk: 2216 2220
instruction range for chunk: 2220 2228
instruction range for chunk: 2228 2264
instruction range for chunk: 2280 2296
instruction range for chunk: 2296 2328
instruction range for chunk: 2344 2360
instruction range for chunk: 2360 2372
instruction range for chunk: 2372 2388
instruction range for chunk: 2388 2400
instruction range for chunk: 2404 2412
instruction range for chunk: 2412 2436
instruction range for chunk: 2436 2444
instruction range for chunk: 2444 2488
instruction range for chunk: 2504 2524
instruction range for chunk: 2524 2568
instruction range for chunk: 2584 2612
instruction range for chunk: 2612 2632
instruction range for chunk: 2632 2652
instruction range for chunk: 2652 2660
instruction range for chunk: 2660 2712
instruction range for chunk: 2728 2760
instruction range for chunk: 2760 2808
instruction range for chunk: 2824 2856
instruction range for chunk: 2856 2864
instruction range for chunk: 2864 2912
instruction range for chunk: 2928 2956
instruction range for chunk: 2956 3000
instruction range for chunk: 3016 3048
instruction range for chunk: 3048 3068
instruction range for chunk: 3068 3076
instruction range for chunk: 3076 3120
instruction range for chunk: 3136 3160
instruction range for chunk: 3160 3200
instruction range for chunk: 3216 3240
instruction range for chunk: 3240 3248
instruction range for chunk: 3248 3288
instruction range for chunk: 3304 3324
instruction range for chunk: 3324 3360
instruction range for chunk: 3376 3396
instruction range for chunk: 3396 3404
instruction range for chunk: 3404 3448
instruction range for chunk: 3464 3484
instruction range for chunk: 3484 3536
instruction range for chunk: 3552 3584
instruction range for chunk: 3584 3588
instruction range for chunk: 3588 3608
instruction range for chunk: 3608 3616
instruction range for chunk: 3616 3656
instruction range for chunk: 3672 3692
instruction range for chunk: 3692 3728
instruction range for chunk: 3744 3764
instruction range for chunk: 3764 3780
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x2")
(comment . ";;8 b 3752")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;12: r15 <- 0x9")
(comment . ";;16: r13 <- 0xA")
(comment . ";; literal r9")
(comment . ";;32: r14 <- r9, 0x5\n")
(comment . ";;36: r14 <- 0x1E")
(comment . ";;40 b 3564")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;44: r9 <- 0xE")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 60
i: 48
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;48: r14 <- r9, r7")
(comment . ";;52: r14 <- 0x7")
(comment . ";;56 b 3528")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 80
i: 60
end-i: 80
i: 64
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;60: r12 <- r9, 0x1\n")
(comment . ";;64: r14 <- r12, r1")
(comment . ";;68: r14 <- r14, r8")
(comment . ";;72: r15 <- r14")
(comment . ";;76 b 3508")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;80: r14 <- r15, r12")
(comment . ";;84: r14 <- 0x7")
(comment . ";;88 b 3496")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;92: r14 <- r15, r9")
(comment . ";;96: r12 <- r9, r14")
(comment . ";;100: r4 <- 0x0")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 116
i: 104
end-i: 116
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r14 <- r4, r12")
(comment . ";;108: r14 <- 0x7")
(comment . ";;112 b 3280")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;116: r4 <- r12")
(comment . ";;120 b 800")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 132
i: 124
end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;124: r3 <- r3, 0x1\n")
(comment . ";;128 b 704")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 156
i: 132
end-i: 156
i: 132
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;144: r14 <- r9, 0x5\n")
(comment . ";;148: r14 <- 0x1E")
(comment . ";;152 b 592")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;156: r9 <- 0xE")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 172
i: 160
end-i: 172
i: 160
end-i: 172
i: 164
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";;160: r14 <- r9, r7")
(comment . ";;164: r14 <- 0x7")
(comment . ";;168 b 556")
chunklet-i: 172; chunklet-start-i: 172; chunklet-end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";;172: r11 <- r9, 0x1\n")
(comment . ";;176: r14 <- r11, r1")
(comment . ";;180: r14 <- r14, r8")
(comment . ";;184: r15 <- r14")
(comment . ";;188 b 536")
chunklet-i: 192; chunklet-start-i: 192; chunklet-end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";;192: r14 <- r15, r11")
(comment . ";;196: r14 <- 0x7")
(comment . ";;200 b 524")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 224
i: 204
end-i: 224
i: 208
end-i: 224
i: 212
end-i: 224
i: 216
end-i: 224
i: 220
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";;204: r14 <- r15, r9")
(comment . ";;208: r9 <- r9, r14")
(comment . ";;212: r14 <- r9, r7")
(comment . ";;216: r14 <- 0x7")
(comment . ";;220 b 484")
chunklet-i: 224; chunklet-start-i: 224; chunklet-end-i: 244
i: 224
end-i: 244
i: 228
end-i: 244
i: 232
end-i: 244
i: 236
end-i: 244
i: 240
end-i: 244
i: 244
end-i: 244
i:244 HIT CHUNK END
(comment . ";;224: r11 <- r9, 0x1\n")
(comment . ";;228: r14 <- r11, r1")
(comment . ";;232: r14 <- r14, r8")
(comment . ";;236: r4 <- r14")
(comment . ";;240 b 464")
chunklet-i: 244; chunklet-start-i: 244; chunklet-end-i: 256
i: 244
end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;244: r14 <- r4, r11")
(comment . ";;248: r14 <- 0x7")
(comment . ";;252 b 452")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 272
i: 256
end-i: 272
i: 260
end-i: 272
i: 264
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
i:272 HIT CHUNK END
(comment . ";;256: r14 <- r4, r9")
(comment . ";;260: r14 <- r9, r14")
(comment . ";;264: r14 <- 0x6")
(comment . ";;268 b 104")
chunklet-i: 272; chunklet-start-i: 272; chunklet-end-i: 296
i: 272
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;284: r14 <- r9, 0x5\n")
(comment . ";;288: r14 <- 0x1E")
(comment . ";;292 b 324")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 308
i: 296
end-i: 308
i: 296
end-i: 308
i: 300
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;296: r11 <- r13, r4")
(comment . ";;300: r11 <- 0x7")
(comment . ";;304 b 204")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 316
i: 308
end-i: 316
i: 312
end-i: 316
i: 316
end-i: 316
i:316 HIT CHUNK END
(comment . ";;308: r10 <- r13, r4")
(comment . ";;312 b 196")
chunklet-i: 316; chunklet-start-i: 316; chunklet-end-i: 328
i: 316
end-i: 328
i: 316
end-i: 328
i: 320
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
i:328 HIT CHUNK END
(comment . ";;316: r11 <- r14, r7")
(comment . ";;320: r11 <- 0x7")
(comment . ";;324 b 160")
chunklet-i: 328; chunklet-start-i: 328; chunklet-end-i: 340
i: 328
end-i: 340
i: 332
end-i: 340
i: 336
end-i: 340
i: 340
end-i: 340
i:340 HIT CHUNK END
(comment . ";;328: r11 <- r14, 0x1\n")
(comment . ";;332: r11 <- 0xF")
(comment . ";;336 b 148")
chunklet-i: 340; chunklet-start-i: 340; chunklet-end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";;340: r10 <- 0x7")
(comment . ";;344 b 140")
chunklet-i: 348; chunklet-start-i: 348; chunklet-end-i: 364
i: 348
end-i: 364
i: 352
end-i: 364
i: 356
end-i: 364
i: 360
end-i: 364
i: 364
end-i: 364
i:364 HIT CHUNK END
(comment . ";;348: r11 <- r11, r1")
(comment . ";;352: r11 <- r11, r8")
(comment . ";;356: r10 <- r11")
(comment . ";;360 b 124")
chunklet-i: 364; chunklet-start-i: 364; chunklet-end-i: 376
i: 364
end-i: 376
i: 368
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
i:376 HIT CHUNK END
(comment . ";;364: r9 <- 0xE")
(comment . ";;368: r11 <- r10, r9")
(comment . ";;372: r9 <- r14, r11")
chunklet-i: 376; chunklet-start-i: 376; chunklet-end-i: 384
i: 376
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
i:384 HIT CHUNK END
(comment . ";;376: r4 <- 0x7")
(comment . ";;380 b 16")
chunklet-i: 384; chunklet-start-i: 384; chunklet-end-i: 392
i: 384
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
i:392 HIT CHUNK END
(comment . ";;384: r14 <- r4, 0x8\n")
(comment . ";;388 b 8")
chunklet-i: 392; chunklet-start-i: 392; chunklet-end-i: 400
i: 392
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
i:400 HIT CHUNK END
(comment . ";;392: r4 <- 0xE")
(comment . ";;396 b -296")
chunklet-i: 400; chunklet-start-i: 400; chunklet-end-i: 448
i: 400
end-i: 448
i: 400
end-i: 448
i: 404
end-i: 448
i: 408
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 420
end-i: 448
i: 424
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;400: r9 <- 0x8")
(comment . ";;404: r10 <- 0x4")
(comment . ";;408: r15 <- r1, 0x8\n")
(comment . ";;412: r13 <- r1, 0x10\n")
(comment . ";;416: r12 <- r1, 0x18\n")
(comment . ";;420: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;444: b r6")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 488
i: 448
end-i: 488
at header: 448
i: 464
end-i: 488
i: 468
end-i: 488
i: 472
end-i: 488
i: 476
end-i: 488
i: 480
end-i: 488
i: 484
end-i: 488
i: 488
end-i: 488
i:488 HIT CHUNK END
(comment . ";;464: r1 <- r1, r0")
(comment . ";;468: r15 <- r1, 0x8\n")
(comment . ";;472: r13 <- r1, 0x10\n")
(comment . ";;476: r12 <- r1, 0x18\n")
(comment . ";;484 b -384")
chunklet-i: 488; chunklet-start-i: 488; chunklet-end-i: 512
i: 488
end-i: 512
i: 488
end-i: 512
i: 492
end-i: 512
i: 496
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;488: r9 <- 0xE")
(comment . ";;492: r11 <- 0xE")
(comment . ";; literal r6")
(comment . ";;508: b r6")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 568
i: 512
end-i: 568
i: 512
end-i: 568
i: 516
end-i: 568
i: 520
end-i: 568
i: 524
end-i: 568
i: 528
end-i: 568
i: 532
end-i: 568
i: 536
end-i: 568
i: 540
end-i: 568
i: 544
end-i: 568
i: 548
end-i: 568
i: 552
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
at header: 568
(comment . ";;512: r9 <- 0xD")
(comment . ";;516: r10 <- 0x4")
(comment . ";;520: r15 <- r1, 0x8\n")
(comment . ";;524: r13 <- r1, 0x10\n")
(comment . ";;528: r12 <- r1, 0x18\n")
(comment . ";;532: r4 <- r1, 0x20\n")
(comment . ";;536: r14 <- r1, 0x28\n")
(comment . ";;540: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;548: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;564: b r6")
chunklet-i: 568; chunklet-start-i: 584; chunklet-end-i: 620
i: 568
end-i: 620
at header: 568
i: 584
end-i: 620
i: 588
end-i: 620
i: 592
end-i: 620
i: 596
end-i: 620
i: 600
end-i: 620
i: 604
end-i: 620
i: 608
end-i: 620
i: 612
end-i: 620
i: 616
end-i: 620
i: 620
end-i: 620
i:620 HIT CHUNK END
(comment . ";;584: r1 <- r1, r0")
(comment . ";;588: r10 <- 0x4")
(comment . ";;592: r15 <- r1, 0x8\n")
(comment . ";;596: r13 <- r1, 0x10\n")
(comment . ";;600: r12 <- r1, 0x18\n")
(comment . ";;604: r4 <- r1, 0x20\n")
(comment . ";;608: r14 <- r1, 0x28\n")
(comment . ";;616 b -304")
chunklet-i: 620; chunklet-start-i: 620; chunklet-end-i: 664
i: 620
end-i: 664
i: 620
end-i: 664
i: 624
end-i: 664
i: 628
end-i: 664
i: 632
end-i: 664
i: 636
end-i: 664
i: 640
end-i: 664
i: 644
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
at header: 664
(comment . ";;620: r15 <- r1, 0x8\n")
(comment . ";;624: r13 <- r1, 0x10\n")
(comment . ";;628: r12 <- r1, 0x18\n")
(comment . ";;632: r4 <- r1, 0x20\n")
(comment . ";;636: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;644: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;660: b r6")
chunklet-i: 664; chunklet-start-i: 680; chunklet-end-i: 708
i: 664
end-i: 708
at header: 664
i: 680
end-i: 708
i: 684
end-i: 708
i: 688
end-i: 708
i: 692
end-i: 708
i: 696
end-i: 708
i: 700
end-i: 708
i: 704
end-i: 708
i: 708
end-i: 708
i:708 HIT CHUNK END
(comment . ";;680: r1 <- r1, r8")
(comment . ";;684: r14 <- 0x4")
(comment . ";;688: r15 <- r1, 0x8\n")
(comment . ";;692: r13 <- r1, 0x10\n")
(comment . ";;696: r12 <- r1, 0x18\n")
(comment . ";;700: r4 <- r1, 0x20\n")
(comment . ";;704 b -412")
chunklet-i: 708; chunklet-start-i: 708; chunklet-end-i: 728
i: 708
end-i: 728
i: 708
end-i: 728
i: 712
end-i: 728
i: 724
end-i: 728
i: 728
end-i: 728
i:728 HIT CHUNK END
(comment . ";;708: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;724: b r6")
chunklet-i: 728; chunklet-start-i: 728; chunklet-end-i: 748
i: 728
end-i: 748
i: 728
end-i: 748
i: 732
end-i: 748
i: 744
end-i: 748
i: 748
end-i: 748
i:748 HIT CHUNK END
(comment . ";;728: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;744: b r6")
chunklet-i: 748; chunklet-start-i: 748; chunklet-end-i: 792
i: 748
end-i: 792
i: 748
end-i: 792
i: 752
end-i: 792
i: 756
end-i: 792
i: 760
end-i: 792
i: 764
end-i: 792
i: 768
end-i: 792
i: 772
end-i: 792
i: 776
end-i: 792
i: 788
end-i: 792
i: 792
end-i: 792
at header: 792
(comment . ";;748: r15 <- r1, 0x8\n")
(comment . ";;752: r13 <- r1, 0x10\n")
(comment . ";;756: r12 <- r1, 0x18\n")
(comment . ";;760: r4 <- r1, 0x20\n")
(comment . ";;764: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;772: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;788: b r6")
chunklet-i: 792; chunklet-start-i: 808; chunklet-end-i: 836
i: 792
end-i: 836
at header: 792
i: 808
end-i: 836
i: 812
end-i: 836
i: 816
end-i: 836
i: 820
end-i: 836
i: 824
end-i: 836
i: 828
end-i: 836
i: 832
end-i: 836
i: 836
end-i: 836
i:836 HIT CHUNK END
(comment . ";;808: r1 <- r1, r8")
(comment . ";;812: r9 <- 0x4")
(comment . ";;816: r15 <- r1, 0x8\n")
(comment . ";;820: r13 <- r1, 0x10\n")
(comment . ";;824: r12 <- r1, 0x18\n")
(comment . ";;828: r4 <- r1, 0x20\n")
(comment . ";;832 b -676")
chunklet-i: 836; chunklet-start-i: 836; chunklet-end-i: 880
i: 836
end-i: 880
i: 836
end-i: 880
i: 840
end-i: 880
i: 844
end-i: 880
i: 848
end-i: 880
i: 852
end-i: 880
i: 856
end-i: 880
i: 860
end-i: 880
i: 864
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
at header: 880
(comment . ";;836: r15 <- r1, 0x8\n")
(comment . ";;840: r13 <- r1, 0x10\n")
(comment . ";;844: r12 <- r1, 0x18\n")
(comment . ";;848: r4 <- r1, 0x20\n")
(comment . ";;852: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;860: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;876: b r6")
chunklet-i: 880; chunklet-start-i: 896; chunklet-end-i: 924
i: 880
end-i: 924
at header: 880
i: 896
end-i: 924
i: 900
end-i: 924
i: 904
end-i: 924
i: 908
end-i: 924
i: 912
end-i: 924
i: 916
end-i: 924
i: 920
end-i: 924
i: 924
end-i: 924
i:924 HIT CHUNK END
(comment . ";;900: r1 <- r1, r8")
(comment . ";;904: r15 <- r1, 0x8\n")
(comment . ";;908: r13 <- r1, 0x10\n")
(comment . ";;912: r12 <- r1, 0x18\n")
(comment . ";;916: r4 <- r1, 0x20\n")
(comment . ";;920 b -792")
chunklet-i: 924; chunklet-start-i: 924; chunklet-end-i: 948
i: 924
end-i: 948
i: 924
end-i: 948
i: 936
end-i: 948
i: 940
end-i: 948
i: 944
end-i: 948
i: 948
end-i: 948
i:948 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;936: r4 <- r9, 0x5\n")
(comment . ";;940: r4 <- 0x1E")
(comment . ";;944 b 2292")
chunklet-i: 948; chunklet-start-i: 948; chunklet-end-i: 972
i: 948
end-i: 972
i: 948
end-i: 972
i: 960
end-i: 972
i: 964
end-i: 972
i: 968
end-i: 972
i: 972
end-i: 972
i:972 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;960: r14 <- r9, 0x5\n")
(comment . ";;964: r14 <- 0x1E")
(comment . ";;968 b 2096")
chunklet-i: 972; chunklet-start-i: 972; chunklet-end-i: 976
i: 972
end-i: 976
i: 976
end-i: 976
i:976 HIT CHUNK END
(comment . ";;972: r9 <- 0xE")
chunklet-i: 976; chunklet-start-i: 976; chunklet-end-i: 988
i: 976
end-i: 988
i: 976
end-i: 988
i: 980
end-i: 988
i: 984
end-i: 988
i: 988
end-i: 988
i:988 HIT CHUNK END
(comment . ";;976: r14 <- r9, r7")
(comment . ";;980: r14 <- 0x7")
(comment . ";;984 b 2060")
chunklet-i: 988; chunklet-start-i: 988; chunklet-end-i: 1008
i: 988
end-i: 1008
i: 992
end-i: 1008
i: 996
end-i: 1008
i: 1000
end-i: 1008
i: 1004
end-i: 1008
i: 1008
end-i: 1008
i:1008 HIT CHUNK END
(comment . ";;988: r12 <- r9, 0x1\n")
(comment . ";;992: r14 <- r12, r1")
(comment . ";;996: r14 <- r14, r8")
(comment . ";;1000: r15 <- r14")
(comment . ";;1004 b 2040")
chunklet-i: 1008; chunklet-start-i: 1008; chunklet-end-i: 1020
i: 1008
end-i: 1020
i: 1012
end-i: 1020
i: 1016
end-i: 1020
i: 1020
end-i: 1020
i:1020 HIT CHUNK END
(comment . ";;1008: r14 <- r15, r12")
(comment . ";;1012: r14 <- 0x7")
(comment . ";;1016 b 2028")
chunklet-i: 1020; chunklet-start-i: 1020; chunklet-end-i: 1052
i: 1020
end-i: 1052
i: 1024
end-i: 1052
i: 1028
end-i: 1052
i: 1040
end-i: 1052
i: 1044
end-i: 1052
i: 1048
end-i: 1052
i: 1052
end-i: 1052
i:1052 HIT CHUNK END
(comment . ";;1020: r14 <- r15, r9")
(comment . ";;1024: r12 <- r9, r14")
(comment . ";; literal r9")
(comment . ";;1040: r14 <- r9, 0x5\n")
(comment . ";;1044: r14 <- 0x1E")
(comment . ";;1048 b 1804")
chunklet-i: 1052; chunklet-start-i: 1052; chunklet-end-i: 1076
i: 1052
end-i: 1076
i: 1052
end-i: 1076
i: 1064
end-i: 1076
i: 1068
end-i: 1076
i: 1072
end-i: 1076
i: 1076
end-i: 1076
i:1076 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1064: r11 <- r9, 0x5\n")
(comment . ";;1068: r11 <- 0x1E")
(comment . ";;1072 b 1576")
chunklet-i: 1076; chunklet-start-i: 1076; chunklet-end-i: 1080
i: 1076
end-i: 1080
i: 1080
end-i: 1080
i:1080 HIT CHUNK END
(comment . ";;1076: r9 <- 0xB")
chunklet-i: 1080; chunklet-start-i: 1080; chunklet-end-i: 1092
i: 1080
end-i: 1092
i: 1080
end-i: 1092
i: 1084
end-i: 1092
i: 1088
end-i: 1092
i: 1092
end-i: 1092
i:1092 HIT CHUNK END
(comment . ";;1080: r11 <- r9, r7")
(comment . ";;1084: r11 <- 0x7")
(comment . ";;1088 b 1540")
chunklet-i: 1092; chunklet-start-i: 1092; chunklet-end-i: 1112
i: 1092
end-i: 1112
i: 1096
end-i: 1112
i: 1100
end-i: 1112
i: 1104
end-i: 1112
i: 1108
end-i: 1112
i: 1112
end-i: 1112
i:1112 HIT CHUNK END
(comment . ";;1092: r10 <- r9, 0x1\n")
(comment . ";;1096: r11 <- r10, r1")
(comment . ";;1100: r11 <- r11, r8")
(comment . ";;1104: r15 <- r11")
(comment . ";;1108 b 1520")
chunklet-i: 1112; chunklet-start-i: 1112; chunklet-end-i: 1124
i: 1112
end-i: 1124
i: 1116
end-i: 1124
i: 1120
end-i: 1124
i: 1124
end-i: 1124
i:1124 HIT CHUNK END
(comment . ";;1112: r11 <- r15, r10")
(comment . ";;1116: r11 <- 0x7")
(comment . ";;1120 b 1508")
chunklet-i: 1124; chunklet-start-i: 1124; chunklet-end-i: 1144
i: 1124
end-i: 1144
i: 1128
end-i: 1144
i: 1132
end-i: 1144
i: 1136
end-i: 1144
i: 1140
end-i: 1144
i: 1144
end-i: 1144
i:1144 HIT CHUNK END
(comment . ";;1124: r15 <- r15, r9")
(comment . ";;1128: r10 <- r9, r15")
(comment . ";;1132: r15 <- r14, r7")
(comment . ";;1136: r15 <- 0x7")
(comment . ";;1140 b 1468")
chunklet-i: 1144; chunklet-start-i: 1144; chunklet-end-i: 1164
i: 1144
end-i: 1164
i: 1148
end-i: 1164
i: 1152
end-i: 1164
i: 1156
end-i: 1164
i: 1160
end-i: 1164
i: 1164
end-i: 1164
i:1164 HIT CHUNK END
(comment . ";;1144: r11 <- r14, 0x1\n")
(comment . ";;1148: r15 <- r11, r1")
(comment . ";;1152: r15 <- r15, r8")
(comment . ";;1156: r10 <- r15")
(comment . ";;1160 b 1448")
chunklet-i: 1164; chunklet-start-i: 1164; chunklet-end-i: 1176
i: 1164
end-i: 1176
i: 1168
end-i: 1176
i: 1172
end-i: 1176
i: 1176
end-i: 1176
i:1176 HIT CHUNK END
(comment . ";;1164: r15 <- r10, r11")
(comment . ";;1168: r15 <- 0x7")
(comment . ";;1172 b 1436")
chunklet-i: 1176; chunklet-start-i: 1176; chunklet-end-i: 1192
i: 1176
end-i: 1192
i: 1180
end-i: 1192
i: 1184
end-i: 1192
i: 1188
end-i: 1192
i: 1192
end-i: 1192
i:1192 HIT CHUNK END
(comment . ";;1176: r15 <- r10, r9")
(comment . ";;1180: r9 <- r14, r15")
(comment . ";;1184: r9 <- 0x7")
(comment . ";;1188 b 1244")
chunklet-i: 1192; chunklet-start-i: 1192; chunklet-end-i: 1200
i: 1192
end-i: 1200
i: 1196
end-i: 1200
i: 1200
end-i: 1200
i:1200 HIT CHUNK END
(comment . ";;1192: r11 <- r9, 0x8\n")
(comment . ";;1196 b 1236")
chunklet-i: 1200; chunklet-start-i: 1200; chunklet-end-i: 1212
i: 1200
end-i: 1212
i: 1200
end-i: 1212
i: 1204
end-i: 1212
i: 1208
end-i: 1212
i: 1212
end-i: 1212
i:1212 HIT CHUNK END
(comment . ";;1200: r15 <- r4, r7")
(comment . ";;1204: r15 <- 0x7")
(comment . ";;1208 b 1200")
chunklet-i: 1212; chunklet-start-i: 1212; chunklet-end-i: 1224
i: 1212
end-i: 1224
i: 1216
end-i: 1224
i: 1220
end-i: 1224
i: 1224
end-i: 1224
i:1224 HIT CHUNK END
(comment . ";;1212: r15 <- r4, 0x1\n")
(comment . ";;1216: r15 <- 0xF")
(comment . ";;1220 b 1188")
chunklet-i: 1224; chunklet-start-i: 1224; chunklet-end-i: 1232
i: 1224
end-i: 1232
i: 1228
end-i: 1232
i: 1232
end-i: 1232
i:1232 HIT CHUNK END
(comment . ";;1224: r12 <- 0x7")
(comment . ";;1228 b 1180")
chunklet-i: 1232; chunklet-start-i: 1232; chunklet-end-i: 1248
i: 1232
end-i: 1248
i: 1236
end-i: 1248
i: 1240
end-i: 1248
i: 1244
end-i: 1248
i: 1248
end-i: 1248
i:1248 HIT CHUNK END
(comment . ";;1232: r15 <- r15, r1")
(comment . ";;1236: r15 <- r15, r8")
(comment . ";;1240: r12 <- r15")
(comment . ";;1244 b 1164")
chunklet-i: 1248; chunklet-start-i: 1248; chunklet-end-i: 1268
i: 1248
end-i: 1268
i: 1252
end-i: 1268
i: 1256
end-i: 1268
i: 1260
end-i: 1268
i: 1264
end-i: 1268
i: 1268
end-i: 1268
i:1268 HIT CHUNK END
(comment . ";;1248: r15 <- r4, r9")
(comment . ";;1252: r15 <- r12, r15")
(comment . ";;1256: r11 <- r15, 0x0\n")
(comment . ";;1260: r11 <- 0x7")
(comment . ";;1264 b 1092")
chunklet-i: 1268; chunklet-start-i: 1268; chunklet-end-i: 1296
i: 1268
end-i: 1296
i: 1268
end-i: 1296
i: 1272
end-i: 1296
i: 1284
end-i: 1296
i: 1288
end-i: 1296
i: 1292
end-i: 1296
i: 1296
end-i: 1296
i:1296 HIT CHUNK END
(comment . ";;1268: r4 <- 0xD")
(comment . ";; literal r9")
(comment . ";;1284: r10 <- r9, 0x5\n")
(comment . ";;1288: r10 <- 0x1E")
(comment . ";;1292 b 924")
chunklet-i: 1296; chunklet-start-i: 1296; chunklet-end-i: 1308
i: 1296
end-i: 1308
i: 1296
end-i: 1308
i: 1300
end-i: 1308
i: 1304
end-i: 1308
i: 1308
end-i: 1308
i:1308 HIT CHUNK END
(comment . ";;1296: r15 <- r4, r10")
(comment . ";;1300: r15 <- 0x7")
(comment . ";;1304 b 760")
chunklet-i: 1308; chunklet-start-i: 1308; chunklet-end-i: 1316
i: 1308
end-i: 1316
i: 1312
end-i: 1316
i: 1316
end-i: 1316
i:1316 HIT CHUNK END
(comment . ";;1308: r4 <- r10")
(comment . ";;1312 b 240")
chunklet-i: 1316; chunklet-start-i: 1316; chunklet-end-i: 1340
i: 1316
end-i: 1340
i: 1316
end-i: 1340
i: 1328
end-i: 1340
i: 1332
end-i: 1340
i: 1336
end-i: 1340
i: 1340
end-i: 1340
i:1340 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1328: r15 <- r9, 0x5\n")
(comment . ";;1332: r15 <- 0x1E")
(comment . ";;1336 b 584")
chunklet-i: 1340; chunklet-start-i: 1340; chunklet-end-i: 1344
i: 1340
end-i: 1344
i: 1344
end-i: 1344
i:1344 HIT CHUNK END
(comment . ";;1340: r9 <- 0xF")
chunklet-i: 1344; chunklet-start-i: 1344; chunklet-end-i: 1356
i: 1344
end-i: 1356
i: 1344
end-i: 1356
i: 1348
end-i: 1356
i: 1352
end-i: 1356
i: 1356
end-i: 1356
i:1356 HIT CHUNK END
(comment . ";;1344: r15 <- r9, r7")
(comment . ";;1348: r15 <- 0x7")
(comment . ";;1352 b 548")
chunklet-i: 1356; chunklet-start-i: 1356; chunklet-end-i: 1376
i: 1356
end-i: 1376
i: 1360
end-i: 1376
i: 1364
end-i: 1376
i: 1368
end-i: 1376
i: 1372
end-i: 1376
i: 1376
end-i: 1376
i:1376 HIT CHUNK END
(comment . ";;1356: r14 <- r9, 0x1\n")
(comment . ";;1360: r15 <- r14, r1")
(comment . ";;1364: r15 <- r15, r8")
(comment . ";;1368: r4 <- r15")
(comment . ";;1372 b 528")
chunklet-i: 1376; chunklet-start-i: 1376; chunklet-end-i: 1388
i: 1376
end-i: 1388
i: 1380
end-i: 1388
i: 1384
end-i: 1388
i: 1388
end-i: 1388
i:1388 HIT CHUNK END
(comment . ";;1376: r15 <- r4, r14")
(comment . ";;1380: r15 <- 0x7")
(comment . ";;1384 b 516")
chunklet-i: 1388; chunklet-start-i: 1388; chunklet-end-i: 1404
i: 1388
end-i: 1404
i: 1392
end-i: 1404
i: 1396
end-i: 1404
i: 1400
end-i: 1404
i: 1404
end-i: 1404
i:1404 HIT CHUNK END
(comment . ";;1388: r15 <- r4, r9")
(comment . ";;1392: r15 <- r9, r15")
(comment . ";;1396: r15 <- 0x6")
(comment . ";;1400 b 152")
chunklet-i: 1404; chunklet-start-i: 1404; chunklet-end-i: 1412
i: 1404
end-i: 1412
i: 1408
end-i: 1412
i: 1412
end-i: 1412
i:1412 HIT CHUNK END
(comment . ";;1404: r3 <- r3, 0x1\n")
(comment . ";;1408 b 84")
chunklet-i: 1412; chunklet-start-i: 1412; chunklet-end-i: 1420
i: 1412
end-i: 1420
i: 1412
end-i: 1420
i: 1416
end-i: 1420
i: 1420
end-i: 1420
i:1420 HIT CHUNK END
(comment . ";;1412: r4 <- 0x7")
(comment . ";;1416 b 8")
chunklet-i: 1420; chunklet-start-i: 1420; chunklet-end-i: 1428
i: 1420
end-i: 1428
i: 1424
end-i: 1428
i: 1428
end-i: 1428
i:1428 HIT CHUNK END
(comment . ";;1420: r13 <- r4, 0x8\n")
(comment . ";;1424 b -160")
chunklet-i: 1428; chunklet-start-i: 1428; chunklet-end-i: 1464
i: 1428
end-i: 1464
i: 1428
end-i: 1464
i: 1432
end-i: 1464
i: 1436
end-i: 1464
i: 1440
end-i: 1464
i: 1444
end-i: 1464
i: 1448
end-i: 1464
i: 1460
end-i: 1464
i: 1464
end-i: 1464
at header: 1464
(comment . ";;1428: r9 <- 0x8")
(comment . ";;1432: r10 <- 0x4")
(comment . ";;1436: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1444: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1460: b r6")
chunklet-i: 1464; chunklet-start-i: 1480; chunklet-end-i: 1496
i: 1464
end-i: 1496
at header: 1464
i: 1480
end-i: 1496
i: 1484
end-i: 1496
i: 1488
end-i: 1496
i: 1492
end-i: 1496
i: 1496
end-i: 1496
i:1496 HIT CHUNK END
(comment . ";;1480: r1 <- r1, r8")
(comment . ";;1484: r13 <- 0x4")
(comment . ";;1492 b -228")
chunklet-i: 1496; chunklet-start-i: 1496; chunklet-end-i: 1528
i: 1496
end-i: 1528
i: 1496
end-i: 1528
i: 1500
end-i: 1528
i: 1504
end-i: 1528
i: 1508
end-i: 1528
i: 1512
end-i: 1528
i: 1524
end-i: 1528
i: 1528
end-i: 1528
at header: 1528
(comment . ";;1496: r4 <- r1, 0x10\n")
(comment . ";;1500: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1508: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1524: b r6")
chunklet-i: 1528; chunklet-start-i: 1544; chunklet-end-i: 1556
i: 1528
end-i: 1556
at header: 1528
i: 1544
end-i: 1556
i: 1548
end-i: 1556
i: 1552
end-i: 1556
i: 1556
end-i: 1556
i:1556 HIT CHUNK END
(comment . ";;1544: r1 <- r1, r8")
(comment . ";;1548: r4 <- r1, 0x10\n")
(comment . ";;1552 b -144")
chunklet-i: 1556; chunklet-start-i: 1556; chunklet-end-i: 1580
i: 1556
end-i: 1580
i: 1556
end-i: 1580
i: 1568
end-i: 1580
i: 1572
end-i: 1580
i: 1576
end-i: 1580
i: 1580
end-i: 1580
i:1580 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1568: r10 <- r9, 0x5\n")
(comment . ";;1572: r10 <- 0x1E")
(comment . ";;1576 b 184")
chunklet-i: 1580; chunklet-start-i: 1580; chunklet-end-i: 1592
i: 1580
end-i: 1592
i: 1580
end-i: 1592
i: 1584
end-i: 1592
i: 1588
end-i: 1592
i: 1592
end-i: 1592
i:1592 HIT CHUNK END
(comment . ";;1580: r15 <- r4, r10")
(comment . ";;1584: r15 <- 0x7")
(comment . ";;1588 b 20")
chunklet-i: 1592; chunklet-start-i: 1592; chunklet-end-i: 1600
i: 1592
end-i: 1600
i: 1596
end-i: 1600
i: 1600
end-i: 1600
i:1600 HIT CHUNK END
(comment . ";;1592: r4 <- r10")
(comment . ";;1596 b 8")
chunklet-i: 1600; chunklet-start-i: 1600; chunklet-end-i: 1608
i: 1600
end-i: 1608
i: 1600
end-i: 1608
i: 1604
end-i: 1608
i: 1608
end-i: 1608
i:1608 HIT CHUNK END
(comment . ";;1600: r4 <- 0x0")
(comment . ";;1604: b r1, 0")
chunklet-i: 1608; chunklet-start-i: 1608; chunklet-end-i: 1612
i: 1608
end-i: 1612
i: 1608
end-i: 1612
i: 1612
end-i: 1612
i:1612 HIT CHUNK END
(comment . ";;1608: b r1, 0")
chunklet-i: 1612; chunklet-start-i: 1612; chunklet-end-i: 1620
i: 1612
end-i: 1620
i: 1612
end-i: 1620
i: 1616
end-i: 1620
i: 1620
end-i: 1620
i:1620 HIT CHUNK END
(comment . ";;1612: r3 <- r3, 0x1\n")
(comment . ";;1616 b 64")
chunklet-i: 1620; chunklet-start-i: 1620; chunklet-end-i: 1656
i: 1620
end-i: 1656
i: 1624
end-i: 1656
i: 1628
end-i: 1656
i: 1632
end-i: 1656
i: 1636
end-i: 1656
i: 1640
end-i: 1656
i: 1652
end-i: 1656
i: 1656
end-i: 1656
at header: 1656
(comment . ";;1620: r4 <- r1, 0x10\n")
(comment . ";;1624: r10 <- r1, 0x8\n")
(comment . ";;1628: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1636: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1652: b r6")
chunklet-i: 1656; chunklet-start-i: 1672; chunklet-end-i: 1684
i: 1656
end-i: 1684
at header: 1656
i: 1672
end-i: 1684
i: 1676
end-i: 1684
i: 1680
end-i: 1684
i: 1684
end-i: 1684
i:1684 HIT CHUNK END
(comment . ";;1672: r1 <- r1, r8")
(comment . ";;1676: r4 <- r1, 0x10\n")
(comment . ";;1680: r10 <- r1, 0x8\n")
chunklet-i: 1684; chunklet-start-i: 1684; chunklet-end-i: 1720
i: 1684
end-i: 1720
i: 1684
end-i: 1720
i: 1688
end-i: 1720
i: 1692
end-i: 1720
i: 1696
end-i: 1720
i: 1700
end-i: 1720
i: 1704
end-i: 1720
i: 1716
end-i: 1720
i: 1720
end-i: 1720
at header: 1720
(comment . ";;1684: r9 <- 0x4")
(comment . ";;1688: r4 <- r1, 0x10\n")
(comment . ";;1692: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1700: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1716: b r6")
chunklet-i: 1720; chunklet-start-i: 1736; chunklet-end-i: 1760
i: 1720
end-i: 1760
at header: 1720
i: 1736
end-i: 1760
i: 1740
end-i: 1760
i: 1744
end-i: 1760
i: 1748
end-i: 1760
i: 1752
end-i: 1760
i: 1756
end-i: 1760
i: 1760
end-i: 1760
i:1760 HIT CHUNK END
(comment . ";;1736: r1 <- r1, r8")
(comment . ";;1740: r15 <- 0x4")
(comment . ";;1744: r4 <- r1, 0x10\n")
(comment . ";;1748: r15 <- 0x6")
(comment . ";;1756 b -152")
chunklet-i: 1760; chunklet-start-i: 1760; chunklet-end-i: 1764
i: 1760
end-i: 1764
i: 1764
end-i: 1764
i:1764 HIT CHUNK END
(comment . ";;1760 b -164")
chunklet-i: 1764; chunklet-start-i: 1764; chunklet-end-i: 1772
i: 1764
end-i: 1772
i: 1764
end-i: 1772
i: 1768
end-i: 1772
i: 1772
end-i: 1772
i:1772 HIT CHUNK END
(comment . ";;1764: r3 <- r3, 0x1\n")
(comment . ";;1768 b 68")
chunklet-i: 1772; chunklet-start-i: 1772; chunklet-end-i: 1808
i: 1772
end-i: 1808
i: 1776
end-i: 1808
i: 1780
end-i: 1808
i: 1784
end-i: 1808
i: 1788
end-i: 1808
i: 1792
end-i: 1808
i: 1804
end-i: 1808
i: 1808
end-i: 1808
at header: 1808
(comment . ";;1772: r4 <- r1, 0x10\n")
(comment . ";;1776: r9 <- r1, 0x8\n")
(comment . ";;1780: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1788: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1804: b r6")
chunklet-i: 1808; chunklet-start-i: 1824; chunklet-end-i: 1840
i: 1808
end-i: 1840
at header: 1808
i: 1824
end-i: 1840
i: 1828
end-i: 1840
i: 1832
end-i: 1840
i: 1836
end-i: 1840
i: 1840
end-i: 1840
i:1840 HIT CHUNK END
(comment . ";;1828: r1 <- r1, r8")
(comment . ";;1832: r4 <- r1, 0x10\n")
(comment . ";;1836: r9 <- r1, 0x8\n")
chunklet-i: 1840; chunklet-start-i: 1840; chunklet-end-i: 1872
i: 1840
end-i: 1872
i: 1840
end-i: 1872
i: 1844
end-i: 1872
i: 1848
end-i: 1872
i: 1852
end-i: 1872
i: 1856
end-i: 1872
i: 1868
end-i: 1872
i: 1872
end-i: 1872
at header: 1872
(comment . ";;1840: r4 <- r1, 0x10\n")
(comment . ";;1844: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1852: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1868: b r6")
chunklet-i: 1872; chunklet-start-i: 1888; chunklet-end-i: 1904
i: 1872
end-i: 1904
at header: 1872
i: 1888
end-i: 1904
i: 1892
end-i: 1904
i: 1896
end-i: 1904
i: 1900
end-i: 1904
i: 1904
end-i: 1904
i:1904 HIT CHUNK END
(comment . ";;1888: r1 <- r1, r8")
(comment . ";;1892: r10 <- 0x4")
(comment . ";;1896: r4 <- r1, 0x10\n")
(comment . ";;1900 b -324")
chunklet-i: 1904; chunklet-start-i: 1904; chunklet-end-i: 1924
i: 1904
end-i: 1924
i: 1904
end-i: 1924
i: 1908
end-i: 1924
i: 1920
end-i: 1924
i: 1924
end-i: 1924
i:1924 HIT CHUNK END
(comment . ";;1904: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1920: b r6")
chunklet-i: 1924; chunklet-start-i: 1924; chunklet-end-i: 1932
i: 1924
end-i: 1932
i: 1924
end-i: 1932
i: 1928
end-i: 1932
i: 1932
end-i: 1932
i:1932 HIT CHUNK END
(comment . ";;1924: r3 <- r3, 0x1\n")
(comment . ";;1928 b 68")
chunklet-i: 1932; chunklet-start-i: 1932; chunklet-end-i: 1968
i: 1932
end-i: 1968
i: 1936
end-i: 1968
i: 1940
end-i: 1968
i: 1944
end-i: 1968
i: 1948
end-i: 1968
i: 1952
end-i: 1968
i: 1964
end-i: 1968
i: 1968
end-i: 1968
at header: 1968
(comment . ";;1932: r4 <- r1, 0x10\n")
(comment . ";;1936: r9 <- r1, 0x8\n")
(comment . ";;1940: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1948: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1964: b r6")
chunklet-i: 1968; chunklet-start-i: 1984; chunklet-end-i: 2000
i: 1968
end-i: 2000
at header: 1968
i: 1984
end-i: 2000
i: 1988
end-i: 2000
i: 1992
end-i: 2000
i: 1996
end-i: 2000
i: 2000
end-i: 2000
i:2000 HIT CHUNK END
(comment . ";;1988: r1 <- r1, r8")
(comment . ";;1992: r4 <- r1, 0x10\n")
(comment . ";;1996: r9 <- r1, 0x8\n")
chunklet-i: 2000; chunklet-start-i: 2000; chunklet-end-i: 2032
i: 2000
end-i: 2032
i: 2000
end-i: 2032
i: 2004
end-i: 2032
i: 2008
end-i: 2032
i: 2012
end-i: 2032
i: 2016
end-i: 2032
i: 2028
end-i: 2032
i: 2032
end-i: 2032
at header: 2032
(comment . ";;2000: r4 <- r1, 0x10\n")
(comment . ";;2004: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2012: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2028: b r6")
chunklet-i: 2032; chunklet-start-i: 2048; chunklet-end-i: 2068
i: 2032
end-i: 2068
at header: 2032
i: 2048
end-i: 2068
i: 2052
end-i: 2068
i: 2056
end-i: 2068
i: 2060
end-i: 2068
i: 2064
end-i: 2068
i: 2068
end-i: 2068
i:2068 HIT CHUNK END
(comment . ";;2048: r1 <- r1, r8")
(comment . ";;2052: r9 <- 0x4")
(comment . ";;2056: r4 <- r1, 0x10\n")
(comment . ";;2064 b -724")
chunklet-i: 2068; chunklet-start-i: 2068; chunklet-end-i: 2076
i: 2068
end-i: 2076
i: 2068
end-i: 2076
i: 2072
end-i: 2076
i: 2076
end-i: 2076
i:2076 HIT CHUNK END
(comment . ";;2068: r3 <- r3, 0x1\n")
(comment . ";;2072 b 64")
chunklet-i: 2076; chunklet-start-i: 2076; chunklet-end-i: 2112
i: 2076
end-i: 2112
i: 2080
end-i: 2112
i: 2084
end-i: 2112
i: 2088
end-i: 2112
i: 2092
end-i: 2112
i: 2096
end-i: 2112
i: 2108
end-i: 2112
i: 2112
end-i: 2112
at header: 2112
(comment . ";;2076: r4 <- r1, 0x10\n")
(comment . ";;2080: r10 <- r1, 0x8\n")
(comment . ";;2084: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2092: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2108: b r6")
chunklet-i: 2112; chunklet-start-i: 2128; chunklet-end-i: 2140
i: 2112
end-i: 2140
at header: 2112
i: 2128
end-i: 2140
i: 2132
end-i: 2140
i: 2136
end-i: 2140
i: 2140
end-i: 2140
i:2140 HIT CHUNK END
(comment . ";;2128: r1 <- r1, r8")
(comment . ";;2132: r4 <- r1, 0x10\n")
(comment . ";;2136: r10 <- r1, 0x8\n")
chunklet-i: 2140; chunklet-start-i: 2140; chunklet-end-i: 2176
i: 2140
end-i: 2176
i: 2140
end-i: 2176
i: 2144
end-i: 2176
i: 2148
end-i: 2176
i: 2152
end-i: 2176
i: 2156
end-i: 2176
i: 2160
end-i: 2176
i: 2172
end-i: 2176
i: 2176
end-i: 2176
at header: 2176
(comment . ";;2140: r9 <- 0x4")
(comment . ";;2144: r4 <- r1, 0x10\n")
(comment . ";;2148: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2156: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2172: b r6")
chunklet-i: 2176; chunklet-start-i: 2192; chunklet-end-i: 2216
i: 2176
end-i: 2216
at header: 2176
i: 2192
end-i: 2216
i: 2196
end-i: 2216
i: 2200
end-i: 2216
i: 2204
end-i: 2216
i: 2208
end-i: 2216
i: 2212
end-i: 2216
i: 2216
end-i: 2216
i:2216 HIT CHUNK END
(comment . ";;2192: r1 <- r1, r8")
(comment . ";;2196: r15 <- 0x4")
(comment . ";;2200: r4 <- r1, 0x10\n")
(comment . ";;2204: r15 <- 0x6")
(comment . ";;2212 b -900")
chunklet-i: 2216; chunklet-start-i: 2216; chunklet-end-i: 2220
i: 2216
end-i: 2220
i: 2220
end-i: 2220
i:2220 HIT CHUNK END
(comment . ";;2216 b -664")
chunklet-i: 2220; chunklet-start-i: 2220; chunklet-end-i: 2228
i: 2220
end-i: 2228
i: 2220
end-i: 2228
i: 2224
end-i: 2228
i: 2228
end-i: 2228
i:2228 HIT CHUNK END
(comment . ";;2220: r3 <- r3, 0x1\n")
(comment . ";;2224 b 68")
chunklet-i: 2228; chunklet-start-i: 2228; chunklet-end-i: 2264
i: 2228
end-i: 2264
i: 2232
end-i: 2264
i: 2236
end-i: 2264
i: 2240
end-i: 2264
i: 2244
end-i: 2264
i: 2248
end-i: 2264
i: 2260
end-i: 2264
i: 2264
end-i: 2264
at header: 2264
(comment . ";;2228: r4 <- r1, 0x10\n")
(comment . ";;2232: r9 <- r1, 0x8\n")
(comment . ";;2236: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2244: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2260: b r6")
chunklet-i: 2264; chunklet-start-i: 2280; chunklet-end-i: 2296
i: 2264
end-i: 2296
at header: 2264
i: 2280
end-i: 2296
i: 2284
end-i: 2296
i: 2288
end-i: 2296
i: 2292
end-i: 2296
i: 2296
end-i: 2296
i:2296 HIT CHUNK END
(comment . ";;2284: r1 <- r1, r8")
(comment . ";;2288: r4 <- r1, 0x10\n")
(comment . ";;2292: r9 <- r1, 0x8\n")
chunklet-i: 2296; chunklet-start-i: 2296; chunklet-end-i: 2328
i: 2296
end-i: 2328
i: 2296
end-i: 2328
i: 2300
end-i: 2328
i: 2304
end-i: 2328
i: 2308
end-i: 2328
i: 2312
end-i: 2328
i: 2324
end-i: 2328
i: 2328
end-i: 2328
at header: 2328
(comment . ";;2296: r4 <- r1, 0x10\n")
(comment . ";;2300: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2308: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2324: b r6")
chunklet-i: 2328; chunklet-start-i: 2344; chunklet-end-i: 2360
i: 2328
end-i: 2360
at header: 2328
i: 2344
end-i: 2360
i: 2348
end-i: 2360
i: 2352
end-i: 2360
i: 2356
end-i: 2360
i: 2360
end-i: 2360
i:2360 HIT CHUNK END
(comment . ";;2344: r1 <- r1, r8")
(comment . ";;2348: r10 <- 0x4")
(comment . ";;2352: r4 <- r1, 0x10\n")
(comment . ";;2356 b -1064")
chunklet-i: 2360; chunklet-start-i: 2360; chunklet-end-i: 2372
i: 2360
end-i: 2372
i: 2360
end-i: 2372
i: 2364
end-i: 2372
i: 2368
end-i: 2372
i: 2372
end-i: 2372
i:2372 HIT CHUNK END
(comment . ";;2360: r7 <- r0, 0x68\n")
(comment . ";;2364: r2 <- r7")
(comment . ";;2368 b 16")
chunklet-i: 2372; chunklet-start-i: 2372; chunklet-end-i: 2388
i: 2372
end-i: 2388
i: 2372
end-i: 2388
i: 2376
end-i: 2388
i: 2380
end-i: 2388
i: 2384
end-i: 2388
i: 2388
end-i: 2388
i:2388 HIT CHUNK END
(comment . ";;2372: r7 <- r7, r8")
(comment . ";;2376: r7 <- r0, 0x68\n")
(comment . ";;2380: r15 <- r7, 0x0\n")
(comment . ";;2384 b -1120")
chunklet-i: 2388; chunklet-start-i: 2388; chunklet-end-i: 2400
i: 2388
end-i: 2400
i: 2388
end-i: 2400
i: 2400
end-i: 2400
i:2400 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 2400; chunklet-start-i: 2404; chunklet-end-i: 2412
i: 2400
end-i: 2412
i: 2404
end-i: 2412
i: 2408
end-i: 2412
i: 2412
end-i: 2412
i:2412 HIT CHUNK END
(comment . ";; instruction 2400 not included")
(comment . ";;2404: r7 <- r0, 0x68\n")
(comment . ";;2408 b -40")
chunklet-i: 2412; chunklet-start-i: 2412; chunklet-end-i: 2436
i: 2412
end-i: 2436
i: 2412
end-i: 2436
i: 2416
end-i: 2436
i: 2420
end-i: 2436
i: 2432
end-i: 2436
i: 2436
end-i: 2436
i:2436 HIT CHUNK END
(comment . ";;2412: r9 <- 0x4")
(comment . ";;2416: r10 <- 0xC")
(comment . ";; literal r6")
(comment . ";;2432: b r6")
chunklet-i: 2436; chunklet-start-i: 2436; chunklet-end-i: 2444
i: 2436
end-i: 2444
i: 2436
end-i: 2444
i: 2440
end-i: 2444
i: 2444
end-i: 2444
i:2444 HIT CHUNK END
(comment . ";;2436: r3 <- r3, 0x1\n")
(comment . ";;2440 b 80")
chunklet-i: 2444; chunklet-start-i: 2444; chunklet-end-i: 2488
i: 2444
end-i: 2488
i: 2448
end-i: 2488
i: 2452
end-i: 2488
i: 2456
end-i: 2488
i: 2460
end-i: 2488
i: 2464
end-i: 2488
i: 2468
end-i: 2488
i: 2472
end-i: 2488
i: 2484
end-i: 2488
i: 2488
end-i: 2488
at header: 2488
(comment . ";;2444: r13 <- r1, 0x10\n")
(comment . ";;2448: r4 <- r1, 0x18\n")
(comment . ";;2452: r12 <- r1, 0x20\n")
(comment . ";;2456: r9 <- r1, 0x8\n")
(comment . ";;2460: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2468: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2484: b r6")
chunklet-i: 2488; chunklet-start-i: 2504; chunklet-end-i: 2524
i: 2488
end-i: 2524
at header: 2488
i: 2504
end-i: 2524
i: 2508
end-i: 2524
i: 2512
end-i: 2524
i: 2516
end-i: 2524
i: 2520
end-i: 2524
i: 2524
end-i: 2524
i:2524 HIT CHUNK END
(comment . ";;2504: r1 <- r1, r8")
(comment . ";;2508: r13 <- r1, 0x10\n")
(comment . ";;2512: r4 <- r1, 0x18\n")
(comment . ";;2516: r12 <- r1, 0x20\n")
(comment . ";;2520: r9 <- r1, 0x8\n")
chunklet-i: 2524; chunklet-start-i: 2524; chunklet-end-i: 2568
i: 2524
end-i: 2568
i: 2524
end-i: 2568
i: 2528
end-i: 2568
i: 2532
end-i: 2568
i: 2536
end-i: 2568
i: 2540
end-i: 2568
i: 2544
end-i: 2568
i: 2548
end-i: 2568
i: 2552
end-i: 2568
i: 2564
end-i: 2568
i: 2568
end-i: 2568
at header: 2568
(comment . ";;2524: r10 <- 0x8")
(comment . ";;2528: r13 <- r1, 0x10\n")
(comment . ";;2532: r4 <- r1, 0x18\n")
(comment . ";;2536: r12 <- r1, 0x20\n")
(comment . ";;2540: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2548: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2564: b r6")
chunklet-i: 2568; chunklet-start-i: 2584; chunklet-end-i: 2612
i: 2568
end-i: 2612
at header: 2568
i: 2584
end-i: 2612
i: 2588
end-i: 2612
i: 2592
end-i: 2612
i: 2596
end-i: 2612
i: 2600
end-i: 2612
i: 2604
end-i: 2612
i: 2608
end-i: 2612
i: 2612
end-i: 2612
i:2612 HIT CHUNK END
(comment . ";;2584: r1 <- r1, r8")
(comment . ";;2588: r11 <- 0x4")
(comment . ";;2592: r13 <- r1, 0x10\n")
(comment . ";;2596: r4 <- r1, 0x18\n")
(comment . ";;2600: r12 <- r1, 0x20\n")
(comment . ";;2608 b -1412")
chunklet-i: 2612; chunklet-start-i: 2612; chunklet-end-i: 2632
i: 2612
end-i: 2632
i: 2612
end-i: 2632
i: 2616
end-i: 2632
i: 2628
end-i: 2632
i: 2632
end-i: 2632
i:2632 HIT CHUNK END
(comment . ";;2612: r9 <- 0xE")
(comment . ";; literal r6")
(comment . ";;2628: b r6")
chunklet-i: 2632; chunklet-start-i: 2632; chunklet-end-i: 2652
i: 2632
end-i: 2652
i: 2632
end-i: 2652
i: 2636
end-i: 2652
i: 2648
end-i: 2652
i: 2652
end-i: 2652
i:2652 HIT CHUNK END
(comment . ";;2632: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;2648: b r6")
chunklet-i: 2652; chunklet-start-i: 2652; chunklet-end-i: 2660
i: 2652
end-i: 2660
i: 2652
end-i: 2660
i: 2656
end-i: 2660
i: 2660
end-i: 2660
i:2660 HIT CHUNK END
(comment . ";;2652: r3 <- r3, 0x1\n")
(comment . ";;2656 b 100")
chunklet-i: 2660; chunklet-start-i: 2660; chunklet-end-i: 2712
i: 2660
end-i: 2712
i: 2664
end-i: 2712
i: 2668
end-i: 2712
i: 2672
end-i: 2712
i: 2676
end-i: 2712
i: 2680
end-i: 2712
i: 2684
end-i: 2712
i: 2688
end-i: 2712
i: 2692
end-i: 2712
i: 2696
end-i: 2712
i: 2708
end-i: 2712
i: 2712
end-i: 2712
at header: 2712
(comment . ";;2660: r15 <- r1, 0x8\n")
(comment . ";;2664: r13 <- r1, 0x10\n")
(comment . ";;2668: r4 <- r1, 0x18\n")
(comment . ";;2672: r12 <- r1, 0x20\n")
(comment . ";;2676: r14 <- r1, 0x28\n")
(comment . ";;2680: r9 <- r1, 0x30\n")
(comment . ";;2684: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2692: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2708: b r6")
chunklet-i: 2712; chunklet-start-i: 2728; chunklet-end-i: 2760
i: 2712
end-i: 2760
at header: 2712
i: 2728
end-i: 2760
i: 2732
end-i: 2760
i: 2736
end-i: 2760
i: 2740
end-i: 2760
i: 2744
end-i: 2760
i: 2748
end-i: 2760
i: 2752
end-i: 2760
i: 2756
end-i: 2760
i: 2760
end-i: 2760
i:2760 HIT CHUNK END
(comment . ";;2732: r1 <- r1, r8")
(comment . ";;2736: r15 <- r1, 0x8\n")
(comment . ";;2740: r13 <- r1, 0x10\n")
(comment . ";;2744: r4 <- r1, 0x18\n")
(comment . ";;2748: r12 <- r1, 0x20\n")
(comment . ";;2752: r14 <- r1, 0x28\n")
(comment . ";;2756: r9 <- r1, 0x30\n")
chunklet-i: 2760; chunklet-start-i: 2760; chunklet-end-i: 2808
i: 2760
end-i: 2808
i: 2760
end-i: 2808
i: 2764
end-i: 2808
i: 2768
end-i: 2808
i: 2772
end-i: 2808
i: 2776
end-i: 2808
i: 2780
end-i: 2808
i: 2784
end-i: 2808
i: 2788
end-i: 2808
i: 2792
end-i: 2808
i: 2804
end-i: 2808
i: 2808
end-i: 2808
at header: 2808
(comment . ";;2760: r15 <- r1, 0x8\n")
(comment . ";;2764: r13 <- r1, 0x10\n")
(comment . ";;2768: r4 <- r1, 0x18\n")
(comment . ";;2772: r12 <- r1, 0x20\n")
(comment . ";;2776: r14 <- r1, 0x28\n")
(comment . ";;2780: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2788: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2804: b r6")
chunklet-i: 2808; chunklet-start-i: 2824; chunklet-end-i: 2856
i: 2808
end-i: 2856
at header: 2808
i: 2824
end-i: 2856
i: 2828
end-i: 2856
i: 2832
end-i: 2856
i: 2836
end-i: 2856
i: 2840
end-i: 2856
i: 2844
end-i: 2856
i: 2848
end-i: 2856
i: 2852
end-i: 2856
i: 2856
end-i: 2856
i:2856 HIT CHUNK END
(comment . ";;2824: r1 <- r1, r0")
(comment . ";;2828: r9 <- 0x4")
(comment . ";;2832: r15 <- r1, 0x8\n")
(comment . ";;2836: r13 <- r1, 0x10\n")
(comment . ";;2840: r4 <- r1, 0x18\n")
(comment . ";;2844: r12 <- r1, 0x20\n")
(comment . ";;2848: r14 <- r1, 0x28\n")
(comment . ";;2852 b -1776")
chunklet-i: 2856; chunklet-start-i: 2856; chunklet-end-i: 2864
i: 2856
end-i: 2864
i: 2856
end-i: 2864
i: 2860
end-i: 2864
i: 2864
end-i: 2864
i:2864 HIT CHUNK END
(comment . ";;2856: r3 <- r3, 0x1\n")
(comment . ";;2860 b 92")
chunklet-i: 2864; chunklet-start-i: 2864; chunklet-end-i: 2912
i: 2864
end-i: 2912
i: 2868
end-i: 2912
i: 2872
end-i: 2912
i: 2876
end-i: 2912
i: 2880
end-i: 2912
i: 2884
end-i: 2912
i: 2888
end-i: 2912
i: 2892
end-i: 2912
i: 2896
end-i: 2912
i: 2908
end-i: 2912
i: 2912
end-i: 2912
at header: 2912
(comment . ";;2864: r15 <- r1, 0x8\n")
(comment . ";;2868: r13 <- r1, 0x10\n")
(comment . ";;2872: r4 <- r1, 0x18\n")
(comment . ";;2876: r12 <- r1, 0x20\n")
(comment . ";;2880: r9 <- r1, 0x28\n")
(comment . ";;2884: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2892: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2908: b r6")
chunklet-i: 2912; chunklet-start-i: 2928; chunklet-end-i: 2956
i: 2912
end-i: 2956
at header: 2912
i: 2928
end-i: 2956
i: 2932
end-i: 2956
i: 2936
end-i: 2956
i: 2940
end-i: 2956
i: 2944
end-i: 2956
i: 2948
end-i: 2956
i: 2952
end-i: 2956
i: 2956
end-i: 2956
i:2956 HIT CHUNK END
(comment . ";;2932: r1 <- r1, r0")
(comment . ";;2936: r15 <- r1, 0x8\n")
(comment . ";;2940: r13 <- r1, 0x10\n")
(comment . ";;2944: r4 <- r1, 0x18\n")
(comment . ";;2948: r12 <- r1, 0x20\n")
(comment . ";;2952: r9 <- r1, 0x28\n")
chunklet-i: 2956; chunklet-start-i: 2956; chunklet-end-i: 3000
i: 2956
end-i: 3000
i: 2956
end-i: 3000
i: 2960
end-i: 3000
i: 2964
end-i: 3000
i: 2968
end-i: 3000
i: 2972
end-i: 3000
i: 2976
end-i: 3000
i: 2980
end-i: 3000
i: 2984
end-i: 3000
i: 2996
end-i: 3000
i: 3000
end-i: 3000
at header: 3000
(comment . ";;2956: r15 <- r1, 0x8\n")
(comment . ";;2960: r13 <- r1, 0x10\n")
(comment . ";;2964: r4 <- r1, 0x18\n")
(comment . ";;2968: r12 <- r1, 0x20\n")
(comment . ";;2972: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2980: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2996: b r6")
chunklet-i: 3000; chunklet-start-i: 3016; chunklet-end-i: 3048
i: 3000
end-i: 3048
at header: 3000
i: 3016
end-i: 3048
i: 3020
end-i: 3048
i: 3024
end-i: 3048
i: 3028
end-i: 3048
i: 3032
end-i: 3048
i: 3036
end-i: 3048
i: 3040
end-i: 3048
i: 3044
end-i: 3048
i: 3048
end-i: 3048
i:3048 HIT CHUNK END
(comment . ";;3016: r1 <- r1, r8")
(comment . ";;3020: r14 <- 0x4")
(comment . ";;3024: r15 <- r1, 0x8\n")
(comment . ";;3028: r13 <- r1, 0x10\n")
(comment . ";;3032: r4 <- r1, 0x18\n")
(comment . ";;3036: r12 <- r1, 0x20\n")
(comment . ";;3044 b -1996")
chunklet-i: 3048; chunklet-start-i: 3048; chunklet-end-i: 3068
i: 3048
end-i: 3068
i: 3048
end-i: 3068
i: 3052
end-i: 3068
i: 3064
end-i: 3068
i: 3068
end-i: 3068
i:3068 HIT CHUNK END
(comment . ";;3048: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;3064: b r6")
chunklet-i: 3068; chunklet-start-i: 3068; chunklet-end-i: 3076
i: 3068
end-i: 3076
i: 3068
end-i: 3076
i: 3072
end-i: 3076
i: 3076
end-i: 3076
i:3076 HIT CHUNK END
(comment . ";;3068: r3 <- r3, 0x1\n")
(comment . ";;3072 b 84")
chunklet-i: 3076; chunklet-start-i: 3076; chunklet-end-i: 3120
i: 3076
end-i: 3120
i: 3080
end-i: 3120
i: 3084
end-i: 3120
i: 3088
end-i: 3120
i: 3092
end-i: 3120
i: 3096
end-i: 3120
i: 3100
end-i: 3120
i: 3104
end-i: 3120
i: 3116
end-i: 3120
i: 3120
end-i: 3120
at header: 3120
(comment . ";;3076: r15 <- r1, 0x8\n")
(comment . ";;3080: r13 <- r1, 0x10\n")
(comment . ";;3084: r4 <- r1, 0x18\n")
(comment . ";;3088: r9 <- r1, 0x20\n")
(comment . ";;3092: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3100: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3116: b r6")
chunklet-i: 3120; chunklet-start-i: 3136; chunklet-end-i: 3160
i: 3120
end-i: 3160
at header: 3120
i: 3136
end-i: 3160
i: 3140
end-i: 3160
i: 3144
end-i: 3160
i: 3148
end-i: 3160
i: 3152
end-i: 3160
i: 3156
end-i: 3160
i: 3160
end-i: 3160
i:3160 HIT CHUNK END
(comment . ";;3140: r1 <- r1, r8")
(comment . ";;3144: r15 <- r1, 0x8\n")
(comment . ";;3148: r13 <- r1, 0x10\n")
(comment . ";;3152: r4 <- r1, 0x18\n")
(comment . ";;3156: r9 <- r1, 0x20\n")
chunklet-i: 3160; chunklet-start-i: 3160; chunklet-end-i: 3200
i: 3160
end-i: 3200
i: 3160
end-i: 3200
i: 3164
end-i: 3200
i: 3168
end-i: 3200
i: 3172
end-i: 3200
i: 3176
end-i: 3200
i: 3180
end-i: 3200
i: 3184
end-i: 3200
i: 3196
end-i: 3200
i: 3200
end-i: 3200
at header: 3200
(comment . ";;3160: r15 <- r1, 0x8\n")
(comment . ";;3164: r13 <- r1, 0x10\n")
(comment . ";;3168: r4 <- r1, 0x18\n")
(comment . ";;3172: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3196: b r6")
chunklet-i: 3200; chunklet-start-i: 3216; chunklet-end-i: 3240
i: 3200
end-i: 3240
at header: 3200
i: 3216
end-i: 3240
i: 3220
end-i: 3240
i: 3224
end-i: 3240
i: 3228
end-i: 3240
i: 3232
end-i: 3240
i: 3236
end-i: 3240
i: 3240
end-i: 3240
i:3240 HIT CHUNK END
(comment . ";;3216: r1 <- r1, r0")
(comment . ";;3220: r9 <- 0x4")
(comment . ";;3224: r15 <- r1, 0x8\n")
(comment . ";;3228: r13 <- r1, 0x10\n")
(comment . ";;3232: r4 <- r1, 0x18\n")
(comment . ";;3236 b -2264")
chunklet-i: 3240; chunklet-start-i: 3240; chunklet-end-i: 3248
i: 3240
end-i: 3248
i: 3240
end-i: 3248
i: 3244
end-i: 3248
i: 3248
end-i: 3248
i:3248 HIT CHUNK END
(comment . ";;3240: r3 <- r3, 0x1\n")
(comment . ";;3244 b 76")
chunklet-i: 3248; chunklet-start-i: 3248; chunklet-end-i: 3288
i: 3248
end-i: 3288
i: 3252
end-i: 3288
i: 3256
end-i: 3288
i: 3260
end-i: 3288
i: 3264
end-i: 3288
i: 3268
end-i: 3288
i: 3272
end-i: 3288
i: 3284
end-i: 3288
i: 3288
end-i: 3288
at header: 3288
(comment . ";;3248: r15 <- r1, 0x8\n")
(comment . ";;3252: r13 <- r1, 0x10\n")
(comment . ";;3256: r9 <- r1, 0x18\n")
(comment . ";;3260: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3268: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3284: b r6")
chunklet-i: 3288; chunklet-start-i: 3304; chunklet-end-i: 3324
i: 3288
end-i: 3324
at header: 3288
i: 3304
end-i: 3324
i: 3308
end-i: 3324
i: 3312
end-i: 3324
i: 3316
end-i: 3324
i: 3320
end-i: 3324
i: 3324
end-i: 3324
i:3324 HIT CHUNK END
(comment . ";;3308: r1 <- r1, r0")
(comment . ";;3312: r15 <- r1, 0x8\n")
(comment . ";;3316: r13 <- r1, 0x10\n")
(comment . ";;3320: r9 <- r1, 0x18\n")
chunklet-i: 3324; chunklet-start-i: 3324; chunklet-end-i: 3360
i: 3324
end-i: 3360
i: 3324
end-i: 3360
i: 3328
end-i: 3360
i: 3332
end-i: 3360
i: 3336
end-i: 3360
i: 3340
end-i: 3360
i: 3344
end-i: 3360
i: 3356
end-i: 3360
i: 3360
end-i: 3360
at header: 3360
(comment . ";;3324: r15 <- r1, 0x8\n")
(comment . ";;3328: r13 <- r1, 0x10\n")
(comment . ";;3332: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3340: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3356: b r6")
chunklet-i: 3360; chunklet-start-i: 3376; chunklet-end-i: 3396
i: 3360
end-i: 3396
at header: 3360
i: 3376
end-i: 3396
i: 3380
end-i: 3396
i: 3384
end-i: 3396
i: 3388
end-i: 3396
i: 3392
end-i: 3396
i: 3396
end-i: 3396
i:3396 HIT CHUNK END
(comment . ";;3376: r1 <- r1, r8")
(comment . ";;3380: r15 <- r1, 0x8\n")
(comment . ";;3384: r13 <- r1, 0x10\n")
(comment . ";;3392 b -2448")
chunklet-i: 3396; chunklet-start-i: 3396; chunklet-end-i: 3404
i: 3396
end-i: 3404
i: 3396
end-i: 3404
i: 3400
end-i: 3404
i: 3404
end-i: 3404
i:3404 HIT CHUNK END
(comment . ";;3396: r3 <- r3, 0x1\n")
(comment . ";;3400 b 80")
chunklet-i: 3404; chunklet-start-i: 3404; chunklet-end-i: 3448
i: 3404
end-i: 3448
i: 3408
end-i: 3448
i: 3412
end-i: 3448
i: 3416
end-i: 3448
i: 3420
end-i: 3448
i: 3424
end-i: 3448
i: 3428
end-i: 3448
i: 3432
end-i: 3448
i: 3444
end-i: 3448
i: 3448
end-i: 3448
at header: 3448
(comment . ";;3404: r15 <- r1, 0x8\n")
(comment . ";;3408: r13 <- r1, 0x10\n")
(comment . ";;3412: r12 <- r1, 0x18\n")
(comment . ";;3416: r4 <- r1, 0x20\n")
(comment . ";;3420: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3444: b r6")
chunklet-i: 3448; chunklet-start-i: 3464; chunklet-end-i: 3484
i: 3448
end-i: 3484
at header: 3448
i: 3464
end-i: 3484
i: 3468
end-i: 3484
i: 3472
end-i: 3484
i: 3476
end-i: 3484
i: 3480
end-i: 3484
i: 3484
end-i: 3484
i:3484 HIT CHUNK END
(comment . ";;3464: r1 <- r1, r8")
(comment . ";;3468: r15 <- r1, 0x8\n")
(comment . ";;3472: r13 <- r1, 0x10\n")
(comment . ";;3476: r12 <- r1, 0x18\n")
(comment . ";;3480: r4 <- r1, 0x20\n")
chunklet-i: 3484; chunklet-start-i: 3484; chunklet-end-i: 3536
i: 3484
end-i: 3536
i: 3484
end-i: 3536
i: 3488
end-i: 3536
i: 3492
end-i: 3536
i: 3496
end-i: 3536
i: 3500
end-i: 3536
i: 3504
end-i: 3536
i: 3508
end-i: 3536
i: 3512
end-i: 3536
i: 3516
end-i: 3536
i: 3520
end-i: 3536
i: 3532
end-i: 3536
i: 3536
end-i: 3536
at header: 3536
(comment . ";;3484: r9 <- 0x4")
(comment . ";;3488: r10 <- 0xC")
(comment . ";;3492: r15 <- r1, 0x8\n")
(comment . ";;3496: r13 <- r1, 0x10\n")
(comment . ";;3500: r12 <- r1, 0x18\n")
(comment . ";;3504: r4 <- r1, 0x20\n")
(comment . ";;3508: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3516: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3532: b r6")
chunklet-i: 3536; chunklet-start-i: 3552; chunklet-end-i: 3584
i: 3536
end-i: 3584
at header: 3536
i: 3552
end-i: 3584
i: 3556
end-i: 3584
i: 3560
end-i: 3584
i: 3564
end-i: 3584
i: 3568
end-i: 3584
i: 3572
end-i: 3584
i: 3576
end-i: 3584
i: 3580
end-i: 3584
i: 3584
end-i: 3584
i:3584 HIT CHUNK END
(comment . ";;3552: r1 <- r1, r8")
(comment . ";;3556: r14 <- 0x4")
(comment . ";;3560: r15 <- r1, 0x8\n")
(comment . ";;3564: r13 <- r1, 0x10\n")
(comment . ";;3568: r12 <- r1, 0x18\n")
(comment . ";;3572: r4 <- r1, 0x20\n")
(comment . ";;3576: r14 <- 0x6")
(comment . ";;3580 b -3460")
chunklet-i: 3584; chunklet-start-i: 3584; chunklet-end-i: 3588
i: 3584
end-i: 3588
i: 3588
end-i: 3588
i:3588 HIT CHUNK END
(comment . ";;3584 b -2664")
chunklet-i: 3588; chunklet-start-i: 3588; chunklet-end-i: 3608
i: 3588
end-i: 3608
i: 3588
end-i: 3608
i: 3592
end-i: 3608
i: 3604
end-i: 3608
i: 3608
end-i: 3608
i:3608 HIT CHUNK END
(comment . ";;3588: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;3604: b r6")
chunklet-i: 3608; chunklet-start-i: 3608; chunklet-end-i: 3616
i: 3608
end-i: 3616
i: 3608
end-i: 3616
i: 3612
end-i: 3616
i: 3616
end-i: 3616
i:3616 HIT CHUNK END
(comment . ";;3608: r3 <- r3, 0x1\n")
(comment . ";;3612 b 76")
chunklet-i: 3616; chunklet-start-i: 3616; chunklet-end-i: 3656
i: 3616
end-i: 3656
i: 3620
end-i: 3656
i: 3624
end-i: 3656
i: 3628
end-i: 3656
i: 3632
end-i: 3656
i: 3636
end-i: 3656
i: 3640
end-i: 3656
i: 3652
end-i: 3656
i: 3656
end-i: 3656
at header: 3656
(comment . ";;3616: r15 <- r1, 0x8\n")
(comment . ";;3620: r13 <- r1, 0x10\n")
(comment . ";;3624: r9 <- r1, 0x18\n")
(comment . ";;3628: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3636: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3652: b r6")
chunklet-i: 3656; chunklet-start-i: 3672; chunklet-end-i: 3692
i: 3656
end-i: 3692
at header: 3656
i: 3672
end-i: 3692
i: 3676
end-i: 3692
i: 3680
end-i: 3692
i: 3684
end-i: 3692
i: 3688
end-i: 3692
i: 3692
end-i: 3692
i:3692 HIT CHUNK END
(comment . ";;3676: r1 <- r1, r0")
(comment . ";;3680: r15 <- r1, 0x8\n")
(comment . ";;3684: r13 <- r1, 0x10\n")
(comment . ";;3688: r9 <- r1, 0x18\n")
chunklet-i: 3692; chunklet-start-i: 3692; chunklet-end-i: 3728
i: 3692
end-i: 3728
i: 3692
end-i: 3728
i: 3696
end-i: 3728
i: 3700
end-i: 3728
i: 3704
end-i: 3728
i: 3708
end-i: 3728
i: 3712
end-i: 3728
i: 3724
end-i: 3728
i: 3728
end-i: 3728
at header: 3728
(comment . ";;3692: r15 <- r1, 0x8\n")
(comment . ";;3696: r13 <- r1, 0x10\n")
(comment . ";;3700: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3708: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3724: b r6")
chunklet-i: 3728; chunklet-start-i: 3744; chunklet-end-i: 3764
i: 3728
end-i: 3764
at header: 3728
i: 3744
end-i: 3764
i: 3748
end-i: 3764
i: 3752
end-i: 3764
i: 3756
end-i: 3764
i: 3760
end-i: 3764
i: 3764
end-i: 3764
i:3764 HIT CHUNK END
(comment . ";;3744: r1 <- r1, r8")
(comment . ";;3748: r9 <- 0x4")
(comment . ";;3752: r15 <- r1, 0x8\n")
(comment . ";;3756: r13 <- r1, 0x10\n")
(comment . ";;3760 b -3716")
chunklet-i: 3764; chunklet-start-i: 3764; chunklet-end-i: 3780
i: 3764
end-i: 3780
i: 3764
end-i: 3780
i: 3776
end-i: 3780
i: 3780
end-i: 3780
i:3780 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;3776: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: puzzle-remove
instruction range for chunk: 0 12
instruction range for chunk: 12 44
instruction range for chunk: 44 48
instruction range for chunk: 48 60
instruction range for chunk: 60 80
instruction range for chunk: 80 92
instruction range for chunk: 92 104
instruction range for chunk: 104 116
instruction range for chunk: 116 124
instruction range for chunk: 124 132
instruction range for chunk: 132 156
instruction range for chunk: 156 160
instruction range for chunk: 160 172
instruction range for chunk: 172 192
instruction range for chunk: 192 204
instruction range for chunk: 204 224
instruction range for chunk: 224 244
instruction range for chunk: 244 256
instruction range for chunk: 256 272
instruction range for chunk: 272 296
instruction range for chunk: 296 308
instruction range for chunk: 308 316
instruction range for chunk: 316 328
instruction range for chunk: 328 340
instruction range for chunk: 340 348
instruction range for chunk: 348 364
instruction range for chunk: 364 376
instruction range for chunk: 376 384
instruction range for chunk: 384 392
instruction range for chunk: 392 400
instruction range for chunk: 400 448
instruction range for chunk: 464 488
instruction range for chunk: 488 512
instruction range for chunk: 512 568
instruction range for chunk: 584 620
instruction range for chunk: 620 664
instruction range for chunk: 680 708
instruction range for chunk: 708 728
instruction range for chunk: 728 748
instruction range for chunk: 748 792
instruction range for chunk: 808 836
instruction range for chunk: 836 880
instruction range for chunk: 896 920
instruction range for chunk: 920 944
instruction range for chunk: 944 968
instruction range for chunk: 968 972
instruction range for chunk: 972 984
instruction range for chunk: 984 1004
instruction range for chunk: 1004 1016
instruction range for chunk: 1016 1048
instruction range for chunk: 1048 1072
instruction range for chunk: 1072 1076
instruction range for chunk: 1076 1088
instruction range for chunk: 1088 1108
instruction range for chunk: 1108 1120
instruction range for chunk: 1120 1140
instruction range for chunk: 1140 1160
instruction range for chunk: 1160 1172
instruction range for chunk: 1172 1188
instruction range for chunk: 1188 1196
instruction range for chunk: 1196 1208
instruction range for chunk: 1208 1220
instruction range for chunk: 1220 1228
instruction range for chunk: 1228 1244
instruction range for chunk: 1244 1264
instruction range for chunk: 1264 1272
instruction range for chunk: 1272 1284
instruction range for chunk: 1284 1304
instruction range for chunk: 1304 1316
instruction range for chunk: 1320 1328
instruction range for chunk: 1328 1352
instruction range for chunk: 1352 1360
instruction range for chunk: 1360 1400
instruction range for chunk: 1416 1432
instruction range for chunk: 1432 1472
instruction range for chunk: 1488 1512
instruction range for chunk: 1512 1532
instruction range for chunk: 1532 1552
instruction range for chunk: 1552 1560
instruction range for chunk: 1560 1608
instruction range for chunk: 1624 1652
instruction range for chunk: 1652 1696
instruction range for chunk: 1712 1740
instruction range for chunk: 1740 1748
instruction range for chunk: 1748 1792
instruction range for chunk: 1808 1832
instruction range for chunk: 1832 1872
instruction range for chunk: 1888 1916
instruction range for chunk: 1916 1936
instruction range for chunk: 1936 1944
instruction range for chunk: 1944 1984
instruction range for chunk: 2000 2020
instruction range for chunk: 2020 2056
instruction range for chunk: 2072 2092
instruction range for chunk: 2092 2100
instruction range for chunk: 2100 2136
instruction range for chunk: 2152 2168
instruction range for chunk: 2168 2200
instruction range for chunk: 2216 2228
instruction range for chunk: 2228 2236
instruction range for chunk: 2236 2280
instruction range for chunk: 2296 2316
instruction range for chunk: 2316 2368
instruction range for chunk: 2384 2416
instruction range for chunk: 2416 2420
instruction range for chunk: 2420 2440
instruction range for chunk: 2440 2448
instruction range for chunk: 2448 2488
instruction range for chunk: 2504 2524
instruction range for chunk: 2524 2560
instruction range for chunk: 2576 2596
instruction range for chunk: 2596 2612
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x2")
(comment . ";;8 b 2584")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;12: r15 <- 0x9")
(comment . ";;16: r13 <- 0xA")
(comment . ";; literal r9")
(comment . ";;32: r14 <- r9, 0x5\n")
(comment . ";;36: r14 <- 0x1E")
(comment . ";;40 b 2396")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;44: r9 <- 0xE")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 60
i: 48
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;48: r14 <- r9, r7")
(comment . ";;52: r14 <- 0x7")
(comment . ";;56 b 2360")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 80
i: 60
end-i: 80
i: 64
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;60: r12 <- r9, 0x1\n")
(comment . ";;64: r14 <- r12, r1")
(comment . ";;68: r14 <- r14, r8")
(comment . ";;72: r15 <- r14")
(comment . ";;76 b 2340")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;80: r14 <- r15, r12")
(comment . ";;84: r14 <- 0x7")
(comment . ";;88 b 2328")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;92: r14 <- r15, r9")
(comment . ";;96: r12 <- r9, r14")
(comment . ";;100: r4 <- 0x0")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 116
i: 104
end-i: 116
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r14 <- r4, r12")
(comment . ";;108: r14 <- 0x7")
(comment . ";;112 b 2112")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;116: r4 <- r12")
(comment . ";;120 b 796")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 132
i: 124
end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;124: r3 <- r3, 0x1\n")
(comment . ";;128 b 704")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 156
i: 132
end-i: 156
i: 132
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;144: r14 <- r9, 0x5\n")
(comment . ";;148: r14 <- 0x1E")
(comment . ";;152 b 592")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;156: r9 <- 0xE")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 172
i: 160
end-i: 172
i: 160
end-i: 172
i: 164
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";;160: r14 <- r9, r7")
(comment . ";;164: r14 <- 0x7")
(comment . ";;168 b 556")
chunklet-i: 172; chunklet-start-i: 172; chunklet-end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";;172: r11 <- r9, 0x1\n")
(comment . ";;176: r14 <- r11, r1")
(comment . ";;180: r14 <- r14, r8")
(comment . ";;184: r15 <- r14")
(comment . ";;188 b 536")
chunklet-i: 192; chunklet-start-i: 192; chunklet-end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";;192: r14 <- r15, r11")
(comment . ";;196: r14 <- 0x7")
(comment . ";;200 b 524")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 224
i: 204
end-i: 224
i: 208
end-i: 224
i: 212
end-i: 224
i: 216
end-i: 224
i: 220
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";;204: r14 <- r15, r9")
(comment . ";;208: r9 <- r9, r14")
(comment . ";;212: r14 <- r9, r7")
(comment . ";;216: r14 <- 0x7")
(comment . ";;220 b 484")
chunklet-i: 224; chunklet-start-i: 224; chunklet-end-i: 244
i: 224
end-i: 244
i: 228
end-i: 244
i: 232
end-i: 244
i: 236
end-i: 244
i: 240
end-i: 244
i: 244
end-i: 244
i:244 HIT CHUNK END
(comment . ";;224: r11 <- r9, 0x1\n")
(comment . ";;228: r14 <- r11, r1")
(comment . ";;232: r14 <- r14, r8")
(comment . ";;236: r4 <- r14")
(comment . ";;240 b 464")
chunklet-i: 244; chunklet-start-i: 244; chunklet-end-i: 256
i: 244
end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;244: r14 <- r4, r11")
(comment . ";;248: r14 <- 0x7")
(comment . ";;252 b 452")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 272
i: 256
end-i: 272
i: 260
end-i: 272
i: 264
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
i:272 HIT CHUNK END
(comment . ";;256: r14 <- r4, r9")
(comment . ";;260: r14 <- r9, r14")
(comment . ";;264: r14 <- 0x6")
(comment . ";;268 b 104")
chunklet-i: 272; chunklet-start-i: 272; chunklet-end-i: 296
i: 272
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;284: r14 <- r9, 0x5\n")
(comment . ";;288: r14 <- 0x1E")
(comment . ";;292 b 324")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 308
i: 296
end-i: 308
i: 296
end-i: 308
i: 300
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;296: r11 <- r13, r4")
(comment . ";;300: r11 <- 0x7")
(comment . ";;304 b 204")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 316
i: 308
end-i: 316
i: 312
end-i: 316
i: 316
end-i: 316
i:316 HIT CHUNK END
(comment . ";;308: r10 <- r13, r4")
(comment . ";;312 b 196")
chunklet-i: 316; chunklet-start-i: 316; chunklet-end-i: 328
i: 316
end-i: 328
i: 316
end-i: 328
i: 320
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
i:328 HIT CHUNK END
(comment . ";;316: r11 <- r14, r7")
(comment . ";;320: r11 <- 0x7")
(comment . ";;324 b 160")
chunklet-i: 328; chunklet-start-i: 328; chunklet-end-i: 340
i: 328
end-i: 340
i: 332
end-i: 340
i: 336
end-i: 340
i: 340
end-i: 340
i:340 HIT CHUNK END
(comment . ";;328: r11 <- r14, 0x1\n")
(comment . ";;332: r11 <- 0xF")
(comment . ";;336 b 148")
chunklet-i: 340; chunklet-start-i: 340; chunklet-end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";;340: r10 <- 0x7")
(comment . ";;344 b 140")
chunklet-i: 348; chunklet-start-i: 348; chunklet-end-i: 364
i: 348
end-i: 364
i: 352
end-i: 364
i: 356
end-i: 364
i: 360
end-i: 364
i: 364
end-i: 364
i:364 HIT CHUNK END
(comment . ";;348: r11 <- r11, r1")
(comment . ";;352: r11 <- r11, r8")
(comment . ";;356: r10 <- r11")
(comment . ";;360 b 124")
chunklet-i: 364; chunklet-start-i: 364; chunklet-end-i: 376
i: 364
end-i: 376
i: 368
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
i:376 HIT CHUNK END
(comment . ";;364: r9 <- 0x6")
(comment . ";;368: r11 <- r10, r9")
(comment . ";;372: r9 <- r14, r11")
chunklet-i: 376; chunklet-start-i: 376; chunklet-end-i: 384
i: 376
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
i:384 HIT CHUNK END
(comment . ";;376: r4 <- 0x7")
(comment . ";;380 b 16")
chunklet-i: 384; chunklet-start-i: 384; chunklet-end-i: 392
i: 384
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
i:392 HIT CHUNK END
(comment . ";;384: r14 <- r4, 0x8\n")
(comment . ";;388 b 8")
chunklet-i: 392; chunklet-start-i: 392; chunklet-end-i: 400
i: 392
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
i:400 HIT CHUNK END
(comment . ";;392: r4 <- 0xE")
(comment . ";;396 b -296")
chunklet-i: 400; chunklet-start-i: 400; chunklet-end-i: 448
i: 400
end-i: 448
i: 400
end-i: 448
i: 404
end-i: 448
i: 408
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 420
end-i: 448
i: 424
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;400: r9 <- 0x8")
(comment . ";;404: r10 <- 0x4")
(comment . ";;408: r15 <- r1, 0x8\n")
(comment . ";;412: r13 <- r1, 0x10\n")
(comment . ";;416: r12 <- r1, 0x18\n")
(comment . ";;420: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;444: b r6")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 488
i: 448
end-i: 488
at header: 448
i: 464
end-i: 488
i: 468
end-i: 488
i: 472
end-i: 488
i: 476
end-i: 488
i: 480
end-i: 488
i: 484
end-i: 488
i: 488
end-i: 488
i:488 HIT CHUNK END
(comment . ";;464: r1 <- r1, r0")
(comment . ";;468: r15 <- r1, 0x8\n")
(comment . ";;472: r13 <- r1, 0x10\n")
(comment . ";;476: r12 <- r1, 0x18\n")
(comment . ";;484 b -384")
chunklet-i: 488; chunklet-start-i: 488; chunklet-end-i: 512
i: 488
end-i: 512
i: 488
end-i: 512
i: 492
end-i: 512
i: 496
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;488: r9 <- 0xE")
(comment . ";;492: r11 <- 0x6")
(comment . ";; literal r6")
(comment . ";;508: b r6")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 568
i: 512
end-i: 568
i: 512
end-i: 568
i: 516
end-i: 568
i: 520
end-i: 568
i: 524
end-i: 568
i: 528
end-i: 568
i: 532
end-i: 568
i: 536
end-i: 568
i: 540
end-i: 568
i: 544
end-i: 568
i: 548
end-i: 568
i: 552
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
at header: 568
(comment . ";;512: r9 <- 0xD")
(comment . ";;516: r10 <- 0x4")
(comment . ";;520: r15 <- r1, 0x8\n")
(comment . ";;524: r13 <- r1, 0x10\n")
(comment . ";;528: r12 <- r1, 0x18\n")
(comment . ";;532: r4 <- r1, 0x20\n")
(comment . ";;536: r14 <- r1, 0x28\n")
(comment . ";;540: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;548: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;564: b r6")
chunklet-i: 568; chunklet-start-i: 584; chunklet-end-i: 620
i: 568
end-i: 620
at header: 568
i: 584
end-i: 620
i: 588
end-i: 620
i: 592
end-i: 620
i: 596
end-i: 620
i: 600
end-i: 620
i: 604
end-i: 620
i: 608
end-i: 620
i: 612
end-i: 620
i: 616
end-i: 620
i: 620
end-i: 620
i:620 HIT CHUNK END
(comment . ";;584: r1 <- r1, r0")
(comment . ";;588: r10 <- 0x4")
(comment . ";;592: r15 <- r1, 0x8\n")
(comment . ";;596: r13 <- r1, 0x10\n")
(comment . ";;600: r12 <- r1, 0x18\n")
(comment . ";;604: r4 <- r1, 0x20\n")
(comment . ";;608: r14 <- r1, 0x28\n")
(comment . ";;616 b -304")
chunklet-i: 620; chunklet-start-i: 620; chunklet-end-i: 664
i: 620
end-i: 664
i: 620
end-i: 664
i: 624
end-i: 664
i: 628
end-i: 664
i: 632
end-i: 664
i: 636
end-i: 664
i: 640
end-i: 664
i: 644
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
at header: 664
(comment . ";;620: r15 <- r1, 0x8\n")
(comment . ";;624: r13 <- r1, 0x10\n")
(comment . ";;628: r12 <- r1, 0x18\n")
(comment . ";;632: r4 <- r1, 0x20\n")
(comment . ";;636: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;644: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;660: b r6")
chunklet-i: 664; chunklet-start-i: 680; chunklet-end-i: 708
i: 664
end-i: 708
at header: 664
i: 680
end-i: 708
i: 684
end-i: 708
i: 688
end-i: 708
i: 692
end-i: 708
i: 696
end-i: 708
i: 700
end-i: 708
i: 704
end-i: 708
i: 708
end-i: 708
i:708 HIT CHUNK END
(comment . ";;680: r1 <- r1, r8")
(comment . ";;684: r14 <- 0x4")
(comment . ";;688: r15 <- r1, 0x8\n")
(comment . ";;692: r13 <- r1, 0x10\n")
(comment . ";;696: r12 <- r1, 0x18\n")
(comment . ";;700: r4 <- r1, 0x20\n")
(comment . ";;704 b -412")
chunklet-i: 708; chunklet-start-i: 708; chunklet-end-i: 728
i: 708
end-i: 728
i: 708
end-i: 728
i: 712
end-i: 728
i: 724
end-i: 728
i: 728
end-i: 728
i:728 HIT CHUNK END
(comment . ";;708: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;724: b r6")
chunklet-i: 728; chunklet-start-i: 728; chunklet-end-i: 748
i: 728
end-i: 748
i: 728
end-i: 748
i: 732
end-i: 748
i: 744
end-i: 748
i: 748
end-i: 748
i:748 HIT CHUNK END
(comment . ";;728: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;744: b r6")
chunklet-i: 748; chunklet-start-i: 748; chunklet-end-i: 792
i: 748
end-i: 792
i: 748
end-i: 792
i: 752
end-i: 792
i: 756
end-i: 792
i: 760
end-i: 792
i: 764
end-i: 792
i: 768
end-i: 792
i: 772
end-i: 792
i: 776
end-i: 792
i: 788
end-i: 792
i: 792
end-i: 792
at header: 792
(comment . ";;748: r15 <- r1, 0x8\n")
(comment . ";;752: r13 <- r1, 0x10\n")
(comment . ";;756: r12 <- r1, 0x18\n")
(comment . ";;760: r4 <- r1, 0x20\n")
(comment . ";;764: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;772: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;788: b r6")
chunklet-i: 792; chunklet-start-i: 808; chunklet-end-i: 836
i: 792
end-i: 836
at header: 792
i: 808
end-i: 836
i: 812
end-i: 836
i: 816
end-i: 836
i: 820
end-i: 836
i: 824
end-i: 836
i: 828
end-i: 836
i: 832
end-i: 836
i: 836
end-i: 836
i:836 HIT CHUNK END
(comment . ";;808: r1 <- r1, r8")
(comment . ";;812: r9 <- 0x4")
(comment . ";;816: r15 <- r1, 0x8\n")
(comment . ";;820: r13 <- r1, 0x10\n")
(comment . ";;824: r12 <- r1, 0x18\n")
(comment . ";;828: r4 <- r1, 0x20\n")
(comment . ";;832 b -676")
chunklet-i: 836; chunklet-start-i: 836; chunklet-end-i: 880
i: 836
end-i: 880
i: 836
end-i: 880
i: 840
end-i: 880
i: 844
end-i: 880
i: 848
end-i: 880
i: 852
end-i: 880
i: 856
end-i: 880
i: 860
end-i: 880
i: 864
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
at header: 880
(comment . ";;836: r15 <- r1, 0x8\n")
(comment . ";;840: r13 <- r1, 0x10\n")
(comment . ";;844: r12 <- r1, 0x18\n")
(comment . ";;848: r4 <- r1, 0x20\n")
(comment . ";;852: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;860: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;876: b r6")
chunklet-i: 880; chunklet-start-i: 896; chunklet-end-i: 920
i: 880
end-i: 920
at header: 880
i: 896
end-i: 920
i: 900
end-i: 920
i: 904
end-i: 920
i: 908
end-i: 920
i: 912
end-i: 920
i: 916
end-i: 920
i: 920
end-i: 920
i:920 HIT CHUNK END
(comment . ";;896: r1 <- r1, r8")
(comment . ";;900: r15 <- r1, 0x8\n")
(comment . ";;904: r13 <- r1, 0x10\n")
(comment . ";;908: r12 <- r1, 0x18\n")
(comment . ";;912: r4 <- r1, 0x20\n")
(comment . ";;916 b -788")
chunklet-i: 920; chunklet-start-i: 920; chunklet-end-i: 944
i: 920
end-i: 944
i: 920
end-i: 944
i: 932
end-i: 944
i: 936
end-i: 944
i: 940
end-i: 944
i: 944
end-i: 944
i:944 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;932: r4 <- r9, 0x5\n")
(comment . ";;936: r4 <- 0x1E")
(comment . ";;940 b 1148")
chunklet-i: 944; chunklet-start-i: 944; chunklet-end-i: 968
i: 944
end-i: 968
i: 944
end-i: 968
i: 956
end-i: 968
i: 960
end-i: 968
i: 964
end-i: 968
i: 968
end-i: 968
i:968 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;956: r14 <- r9, 0x5\n")
(comment . ";;960: r14 <- 0x1E")
(comment . ";;964 b 968")
chunklet-i: 968; chunklet-start-i: 968; chunklet-end-i: 972
i: 968
end-i: 972
i: 972
end-i: 972
i:972 HIT CHUNK END
(comment . ";;968: r9 <- 0xE")
chunklet-i: 972; chunklet-start-i: 972; chunklet-end-i: 984
i: 972
end-i: 984
i: 972
end-i: 984
i: 976
end-i: 984
i: 980
end-i: 984
i: 984
end-i: 984
i:984 HIT CHUNK END
(comment . ";;972: r14 <- r9, r7")
(comment . ";;976: r14 <- 0x7")
(comment . ";;980 b 932")
chunklet-i: 984; chunklet-start-i: 984; chunklet-end-i: 1004
i: 984
end-i: 1004
i: 988
end-i: 1004
i: 992
end-i: 1004
i: 996
end-i: 1004
i: 1000
end-i: 1004
i: 1004
end-i: 1004
i:1004 HIT CHUNK END
(comment . ";;984: r13 <- r9, 0x1\n")
(comment . ";;988: r14 <- r13, r1")
(comment . ";;992: r14 <- r14, r8")
(comment . ";;996: r15 <- r14")
(comment . ";;1000 b 912")
chunklet-i: 1004; chunklet-start-i: 1004; chunklet-end-i: 1016
i: 1004
end-i: 1016
i: 1008
end-i: 1016
i: 1012
end-i: 1016
i: 1016
end-i: 1016
i:1016 HIT CHUNK END
(comment . ";;1004: r14 <- r15, r13")
(comment . ";;1008: r14 <- 0x7")
(comment . ";;1012 b 900")
chunklet-i: 1016; chunklet-start-i: 1016; chunklet-end-i: 1048
i: 1016
end-i: 1048
i: 1020
end-i: 1048
i: 1024
end-i: 1048
i: 1036
end-i: 1048
i: 1040
end-i: 1048
i: 1044
end-i: 1048
i: 1048
end-i: 1048
i:1048 HIT CHUNK END
(comment . ";;1016: r14 <- r15, r9")
(comment . ";;1020: r13 <- r9, r14")
(comment . ";; literal r9")
(comment . ";;1036: r14 <- r9, 0x5\n")
(comment . ";;1040: r14 <- 0x1E")
(comment . ";;1044 b 692")
chunklet-i: 1048; chunklet-start-i: 1048; chunklet-end-i: 1072
i: 1048
end-i: 1072
i: 1048
end-i: 1072
i: 1060
end-i: 1072
i: 1064
end-i: 1072
i: 1068
end-i: 1072
i: 1072
end-i: 1072
i:1072 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1060: r12 <- r9, 0x5\n")
(comment . ";;1064: r12 <- 0x1E")
(comment . ";;1068 b 480")
chunklet-i: 1072; chunklet-start-i: 1072; chunklet-end-i: 1076
i: 1072
end-i: 1076
i: 1076
end-i: 1076
i:1076 HIT CHUNK END
(comment . ";;1072: r9 <- 0xC")
chunklet-i: 1076; chunklet-start-i: 1076; chunklet-end-i: 1088
i: 1076
end-i: 1088
i: 1076
end-i: 1088
i: 1080
end-i: 1088
i: 1084
end-i: 1088
i: 1088
end-i: 1088
i:1088 HIT CHUNK END
(comment . ";;1076: r12 <- r9, r7")
(comment . ";;1080: r12 <- 0x7")
(comment . ";;1084 b 444")
chunklet-i: 1088; chunklet-start-i: 1088; chunklet-end-i: 1108
i: 1088
end-i: 1108
i: 1092
end-i: 1108
i: 1096
end-i: 1108
i: 1100
end-i: 1108
i: 1104
end-i: 1108
i: 1108
end-i: 1108
i:1108 HIT CHUNK END
(comment . ";;1088: r11 <- r9, 0x1\n")
(comment . ";;1092: r12 <- r11, r1")
(comment . ";;1096: r12 <- r12, r8")
(comment . ";;1100: r15 <- r12")
(comment . ";;1104 b 424")
chunklet-i: 1108; chunklet-start-i: 1108; chunklet-end-i: 1120
i: 1108
end-i: 1120
i: 1112
end-i: 1120
i: 1116
end-i: 1120
i: 1120
end-i: 1120
i:1120 HIT CHUNK END
(comment . ";;1108: r12 <- r15, r11")
(comment . ";;1112: r12 <- 0x7")
(comment . ";;1116 b 412")
chunklet-i: 1120; chunklet-start-i: 1120; chunklet-end-i: 1140
i: 1120
end-i: 1140
i: 1124
end-i: 1140
i: 1128
end-i: 1140
i: 1132
end-i: 1140
i: 1136
end-i: 1140
i: 1140
end-i: 1140
i:1140 HIT CHUNK END
(comment . ";;1120: r15 <- r15, r9")
(comment . ";;1124: r10 <- r9, r15")
(comment . ";;1128: r15 <- r14, r7")
(comment . ";;1132: r15 <- 0x7")
(comment . ";;1136 b 372")
chunklet-i: 1140; chunklet-start-i: 1140; chunklet-end-i: 1160
i: 1140
end-i: 1160
i: 1144
end-i: 1160
i: 1148
end-i: 1160
i: 1152
end-i: 1160
i: 1156
end-i: 1160
i: 1160
end-i: 1160
i:1160 HIT CHUNK END
(comment . ";;1140: r12 <- r14, 0x1\n")
(comment . ";;1144: r15 <- r12, r1")
(comment . ";;1148: r15 <- r15, r8")
(comment . ";;1152: r10 <- r15")
(comment . ";;1156 b 352")
chunklet-i: 1160; chunklet-start-i: 1160; chunklet-end-i: 1172
i: 1160
end-i: 1172
i: 1164
end-i: 1172
i: 1168
end-i: 1172
i: 1172
end-i: 1172
i:1172 HIT CHUNK END
(comment . ";;1160: r15 <- r10, r12")
(comment . ";;1164: r15 <- 0x7")
(comment . ";;1168 b 340")
chunklet-i: 1172; chunklet-start-i: 1172; chunklet-end-i: 1188
i: 1172
end-i: 1188
i: 1176
end-i: 1188
i: 1180
end-i: 1188
i: 1184
end-i: 1188
i: 1188
end-i: 1188
i:1188 HIT CHUNK END
(comment . ";;1172: r15 <- r10, r9")
(comment . ";;1176: r10 <- r14, r15")
(comment . ";;1180: r10 <- 0x7")
(comment . ";;1184 b 164")
chunklet-i: 1188; chunklet-start-i: 1188; chunklet-end-i: 1196
i: 1188
end-i: 1196
i: 1192
end-i: 1196
i: 1196
end-i: 1196
i:1196 HIT CHUNK END
(comment . ";;1188: r11 <- r10, 0x8\n")
(comment . ";;1192 b 156")
chunklet-i: 1196; chunklet-start-i: 1196; chunklet-end-i: 1208
i: 1196
end-i: 1208
i: 1196
end-i: 1208
i: 1200
end-i: 1208
i: 1204
end-i: 1208
i: 1208
end-i: 1208
i:1208 HIT CHUNK END
(comment . ";;1196: r15 <- r4, r7")
(comment . ";;1200: r15 <- 0x7")
(comment . ";;1204 b 120")
chunklet-i: 1208; chunklet-start-i: 1208; chunklet-end-i: 1220
i: 1208
end-i: 1220
i: 1212
end-i: 1220
i: 1216
end-i: 1220
i: 1220
end-i: 1220
i:1220 HIT CHUNK END
(comment . ";;1208: r15 <- r4, 0x1\n")
(comment . ";;1212: r15 <- 0xF")
(comment . ";;1216 b 108")
chunklet-i: 1220; chunklet-start-i: 1220; chunklet-end-i: 1228
i: 1220
end-i: 1228
i: 1224
end-i: 1228
i: 1228
end-i: 1228
i:1228 HIT CHUNK END
(comment . ";;1220: r13 <- 0x7")
(comment . ";;1224 b 100")
chunklet-i: 1228; chunklet-start-i: 1228; chunklet-end-i: 1244
i: 1228
end-i: 1244
i: 1232
end-i: 1244
i: 1236
end-i: 1244
i: 1240
end-i: 1244
i: 1244
end-i: 1244
i:1244 HIT CHUNK END
(comment . ";;1228: r15 <- r15, r1")
(comment . ";;1232: r15 <- r15, r8")
(comment . ";;1236: r13 <- r15")
(comment . ";;1240 b 84")
chunklet-i: 1244; chunklet-start-i: 1244; chunklet-end-i: 1264
i: 1244
end-i: 1264
i: 1248
end-i: 1264
i: 1252
end-i: 1264
i: 1256
end-i: 1264
i: 1260
end-i: 1264
i: 1264
end-i: 1264
i:1264 HIT CHUNK END
(comment . ";;1244: r15 <- r4, r9")
(comment . ";;1248: r15 <- r13, r15")
(comment . ";;1252: r11 <- r15, 0x0\n")
(comment . ";;1256: r11 <- 0x7")
(comment . ";;1260 b 8")
chunklet-i: 1264; chunklet-start-i: 1264; chunklet-end-i: 1272
i: 1264
end-i: 1272
i: 1268
end-i: 1272
i: 1272
end-i: 1272
i:1272 HIT CHUNK END
(comment . ";;1264: r4 <- 0x2E")
(comment . ";;1268: b r1, 0")
chunklet-i: 1272; chunklet-start-i: 1272; chunklet-end-i: 1284
i: 1272
end-i: 1284
i: 1272
end-i: 1284
i: 1276
end-i: 1284
i: 1280
end-i: 1284
i: 1284
end-i: 1284
i:1284 HIT CHUNK END
(comment . ";;1272: r7 <- r0, 0x68\n")
(comment . ";;1276: r2 <- r7")
(comment . ";;1280 b 20")
chunklet-i: 1284; chunklet-start-i: 1284; chunklet-end-i: 1304
i: 1284
end-i: 1304
i: 1284
end-i: 1304
i: 1288
end-i: 1304
i: 1292
end-i: 1304
i: 1296
end-i: 1304
i: 1300
end-i: 1304
i: 1304
end-i: 1304
i:1304 HIT CHUNK END
(comment . ";;1284: r7 <- r7, r8")
(comment . ";;1288: r7 <- r0, 0x68\n")
(comment . ";;1292: r15 <- r7, 0x0\n")
(comment . ";;1296: r4 <- 0x2E")
(comment . ";;1300: b r1, 0")
chunklet-i: 1304; chunklet-start-i: 1304; chunklet-end-i: 1316
i: 1304
end-i: 1316
i: 1304
end-i: 1316
i: 1316
end-i: 1316
i:1316 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 1316; chunklet-start-i: 1320; chunklet-end-i: 1328
i: 1316
end-i: 1328
i: 1320
end-i: 1328
i: 1324
end-i: 1328
i: 1328
end-i: 1328
i:1328 HIT CHUNK END
(comment . ";; instruction 1316 not included")
(comment . ";;1320: r7 <- r0, 0x68\n")
(comment . ";;1324 b -44")
chunklet-i: 1328; chunklet-start-i: 1328; chunklet-end-i: 1352
i: 1328
end-i: 1352
i: 1328
end-i: 1352
i: 1332
end-i: 1352
i: 1336
end-i: 1352
i: 1348
end-i: 1352
i: 1352
end-i: 1352
i:1352 HIT CHUNK END
(comment . ";;1328: r9 <- 0x4")
(comment . ";;1332: r10 <- 0xD")
(comment . ";; literal r6")
(comment . ";;1348: b r6")
chunklet-i: 1352; chunklet-start-i: 1352; chunklet-end-i: 1360
i: 1352
end-i: 1360
i: 1352
end-i: 1360
i: 1356
end-i: 1360
i: 1360
end-i: 1360
i:1360 HIT CHUNK END
(comment . ";;1352: r3 <- r3, 0x1\n")
(comment . ";;1356 b 72")
chunklet-i: 1360; chunklet-start-i: 1360; chunklet-end-i: 1400
i: 1360
end-i: 1400
i: 1364
end-i: 1400
i: 1368
end-i: 1400
i: 1372
end-i: 1400
i: 1376
end-i: 1400
i: 1380
end-i: 1400
i: 1384
end-i: 1400
i: 1396
end-i: 1400
i: 1400
end-i: 1400
at header: 1400
(comment . ";;1360: r4 <- r1, 0x10\n")
(comment . ";;1364: r13 <- r1, 0x18\n")
(comment . ";;1368: r10 <- r1, 0x8\n")
(comment . ";;1372: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1396: b r6")
chunklet-i: 1400; chunklet-start-i: 1416; chunklet-end-i: 1432
i: 1400
end-i: 1432
at header: 1400
i: 1416
end-i: 1432
i: 1420
end-i: 1432
i: 1424
end-i: 1432
i: 1428
end-i: 1432
i: 1432
end-i: 1432
i:1432 HIT CHUNK END
(comment . ";;1416: r1 <- r1, r0")
(comment . ";;1420: r4 <- r1, 0x10\n")
(comment . ";;1424: r13 <- r1, 0x18\n")
(comment . ";;1428: r10 <- r1, 0x8\n")
chunklet-i: 1432; chunklet-start-i: 1432; chunklet-end-i: 1472
i: 1432
end-i: 1472
i: 1432
end-i: 1472
i: 1436
end-i: 1472
i: 1440
end-i: 1472
i: 1444
end-i: 1472
i: 1448
end-i: 1472
i: 1452
end-i: 1472
i: 1456
end-i: 1472
i: 1468
end-i: 1472
i: 1472
end-i: 1472
at header: 1472
(comment . ";;1432: r9 <- 0x8")
(comment . ";;1436: r4 <- r1, 0x10\n")
(comment . ";;1440: r13 <- r1, 0x18\n")
(comment . ";;1444: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1452: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1468: b r6")
chunklet-i: 1472; chunklet-start-i: 1488; chunklet-end-i: 1512
i: 1472
end-i: 1512
at header: 1472
i: 1488
end-i: 1512
i: 1492
end-i: 1512
i: 1496
end-i: 1512
i: 1500
end-i: 1512
i: 1504
end-i: 1512
i: 1508
end-i: 1512
i: 1512
end-i: 1512
i:1512 HIT CHUNK END
(comment . ";;1488: r1 <- r1, r0")
(comment . ";;1492: r11 <- 0x4")
(comment . ";;1496: r4 <- r1, 0x10\n")
(comment . ";;1500: r13 <- r1, 0x18\n")
(comment . ";;1508 b -316")
chunklet-i: 1512; chunklet-start-i: 1512; chunklet-end-i: 1532
i: 1512
end-i: 1532
i: 1512
end-i: 1532
i: 1516
end-i: 1532
i: 1528
end-i: 1532
i: 1532
end-i: 1532
i:1532 HIT CHUNK END
(comment . ";;1512: r9 <- 0xE")
(comment . ";; literal r6")
(comment . ";;1528: b r6")
chunklet-i: 1532; chunklet-start-i: 1532; chunklet-end-i: 1552
i: 1532
end-i: 1552
i: 1532
end-i: 1552
i: 1536
end-i: 1552
i: 1548
end-i: 1552
i: 1552
end-i: 1552
i:1552 HIT CHUNK END
(comment . ";;1532: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1548: b r6")
chunklet-i: 1552; chunklet-start-i: 1552; chunklet-end-i: 1560
i: 1552
end-i: 1560
i: 1552
end-i: 1560
i: 1556
end-i: 1560
i: 1560
end-i: 1560
i:1560 HIT CHUNK END
(comment . ";;1552: r3 <- r3, 0x1\n")
(comment . ";;1556 b 92")
chunklet-i: 1560; chunklet-start-i: 1560; chunklet-end-i: 1608
i: 1560
end-i: 1608
i: 1564
end-i: 1608
i: 1568
end-i: 1608
i: 1572
end-i: 1608
i: 1576
end-i: 1608
i: 1580
end-i: 1608
i: 1584
end-i: 1608
i: 1588
end-i: 1608
i: 1592
end-i: 1608
i: 1604
end-i: 1608
i: 1608
end-i: 1608
at header: 1608
(comment . ";;1560: r15 <- r1, 0x8\n")
(comment . ";;1564: r4 <- r1, 0x10\n")
(comment . ";;1568: r13 <- r1, 0x18\n")
(comment . ";;1572: r14 <- r1, 0x20\n")
(comment . ";;1576: r9 <- r1, 0x28\n")
(comment . ";;1580: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1604: b r6")
chunklet-i: 1608; chunklet-start-i: 1624; chunklet-end-i: 1652
i: 1608
end-i: 1652
at header: 1608
i: 1624
end-i: 1652
i: 1628
end-i: 1652
i: 1632
end-i: 1652
i: 1636
end-i: 1652
i: 1640
end-i: 1652
i: 1644
end-i: 1652
i: 1648
end-i: 1652
i: 1652
end-i: 1652
i:1652 HIT CHUNK END
(comment . ";;1628: r1 <- r1, r0")
(comment . ";;1632: r15 <- r1, 0x8\n")
(comment . ";;1636: r4 <- r1, 0x10\n")
(comment . ";;1640: r13 <- r1, 0x18\n")
(comment . ";;1644: r14 <- r1, 0x20\n")
(comment . ";;1648: r9 <- r1, 0x28\n")
chunklet-i: 1652; chunklet-start-i: 1652; chunklet-end-i: 1696
i: 1652
end-i: 1696
i: 1652
end-i: 1696
i: 1656
end-i: 1696
i: 1660
end-i: 1696
i: 1664
end-i: 1696
i: 1668
end-i: 1696
i: 1672
end-i: 1696
i: 1676
end-i: 1696
i: 1680
end-i: 1696
i: 1692
end-i: 1696
i: 1696
end-i: 1696
at header: 1696
(comment . ";;1652: r15 <- r1, 0x8\n")
(comment . ";;1656: r4 <- r1, 0x10\n")
(comment . ";;1660: r13 <- r1, 0x18\n")
(comment . ";;1664: r14 <- r1, 0x20\n")
(comment . ";;1668: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1676: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1692: b r6")
chunklet-i: 1696; chunklet-start-i: 1712; chunklet-end-i: 1740
i: 1696
end-i: 1740
at header: 1696
i: 1712
end-i: 1740
i: 1716
end-i: 1740
i: 1720
end-i: 1740
i: 1724
end-i: 1740
i: 1728
end-i: 1740
i: 1732
end-i: 1740
i: 1736
end-i: 1740
i: 1740
end-i: 1740
i:1740 HIT CHUNK END
(comment . ";;1712: r1 <- r1, r8")
(comment . ";;1716: r9 <- 0x4")
(comment . ";;1720: r15 <- r1, 0x8\n")
(comment . ";;1724: r4 <- r1, 0x10\n")
(comment . ";;1728: r13 <- r1, 0x18\n")
(comment . ";;1732: r14 <- r1, 0x20\n")
(comment . ";;1736 b -664")
chunklet-i: 1740; chunklet-start-i: 1740; chunklet-end-i: 1748
i: 1740
end-i: 1748
i: 1740
end-i: 1748
i: 1744
end-i: 1748
i: 1748
end-i: 1748
i:1748 HIT CHUNK END
(comment . ";;1740: r3 <- r3, 0x1\n")
(comment . ";;1744 b 84")
chunklet-i: 1748; chunklet-start-i: 1748; chunklet-end-i: 1792
i: 1748
end-i: 1792
i: 1752
end-i: 1792
i: 1756
end-i: 1792
i: 1760
end-i: 1792
i: 1764
end-i: 1792
i: 1768
end-i: 1792
i: 1772
end-i: 1792
i: 1776
end-i: 1792
i: 1788
end-i: 1792
i: 1792
end-i: 1792
at header: 1792
(comment . ";;1748: r15 <- r1, 0x8\n")
(comment . ";;1752: r4 <- r1, 0x10\n")
(comment . ";;1756: r13 <- r1, 0x18\n")
(comment . ";;1760: r9 <- r1, 0x20\n")
(comment . ";;1764: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1772: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1788: b r6")
chunklet-i: 1792; chunklet-start-i: 1808; chunklet-end-i: 1832
i: 1792
end-i: 1832
at header: 1792
i: 1808
end-i: 1832
i: 1812
end-i: 1832
i: 1816
end-i: 1832
i: 1820
end-i: 1832
i: 1824
end-i: 1832
i: 1828
end-i: 1832
i: 1832
end-i: 1832
i:1832 HIT CHUNK END
(comment . ";;1812: r1 <- r1, r8")
(comment . ";;1816: r15 <- r1, 0x8\n")
(comment . ";;1820: r4 <- r1, 0x10\n")
(comment . ";;1824: r13 <- r1, 0x18\n")
(comment . ";;1828: r9 <- r1, 0x20\n")
chunklet-i: 1832; chunklet-start-i: 1832; chunklet-end-i: 1872
i: 1832
end-i: 1872
i: 1832
end-i: 1872
i: 1836
end-i: 1872
i: 1840
end-i: 1872
i: 1844
end-i: 1872
i: 1848
end-i: 1872
i: 1852
end-i: 1872
i: 1856
end-i: 1872
i: 1868
end-i: 1872
i: 1872
end-i: 1872
at header: 1872
(comment . ";;1832: r15 <- r1, 0x8\n")
(comment . ";;1836: r4 <- r1, 0x10\n")
(comment . ";;1840: r13 <- r1, 0x18\n")
(comment . ";;1844: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1852: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1868: b r6")
chunklet-i: 1872; chunklet-start-i: 1888; chunklet-end-i: 1916
i: 1872
end-i: 1916
at header: 1872
i: 1888
end-i: 1916
i: 1892
end-i: 1916
i: 1896
end-i: 1916
i: 1900
end-i: 1916
i: 1904
end-i: 1916
i: 1908
end-i: 1916
i: 1912
end-i: 1916
i: 1916
end-i: 1916
i:1916 HIT CHUNK END
(comment . ";;1888: r1 <- r1, r0")
(comment . ";;1892: r14 <- 0x4")
(comment . ";;1896: r15 <- r1, 0x8\n")
(comment . ";;1900: r4 <- r1, 0x10\n")
(comment . ";;1904: r13 <- r1, 0x18\n")
(comment . ";;1912 b -868")
chunklet-i: 1916; chunklet-start-i: 1916; chunklet-end-i: 1936
i: 1916
end-i: 1936
i: 1916
end-i: 1936
i: 1920
end-i: 1936
i: 1932
end-i: 1936
i: 1936
end-i: 1936
i:1936 HIT CHUNK END
(comment . ";;1916: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1932: b r6")
chunklet-i: 1936; chunklet-start-i: 1936; chunklet-end-i: 1944
i: 1936
end-i: 1944
i: 1936
end-i: 1944
i: 1940
end-i: 1944
i: 1944
end-i: 1944
i:1944 HIT CHUNK END
(comment . ";;1936: r3 <- r3, 0x1\n")
(comment . ";;1940 b 76")
chunklet-i: 1944; chunklet-start-i: 1944; chunklet-end-i: 1984
i: 1944
end-i: 1984
i: 1948
end-i: 1984
i: 1952
end-i: 1984
i: 1956
end-i: 1984
i: 1960
end-i: 1984
i: 1964
end-i: 1984
i: 1968
end-i: 1984
i: 1980
end-i: 1984
i: 1984
end-i: 1984
at header: 1984
(comment . ";;1944: r15 <- r1, 0x8\n")
(comment . ";;1948: r4 <- r1, 0x10\n")
(comment . ";;1952: r9 <- r1, 0x18\n")
(comment . ";;1956: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1964: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1980: b r6")
chunklet-i: 1984; chunklet-start-i: 2000; chunklet-end-i: 2020
i: 1984
end-i: 2020
at header: 1984
i: 2000
end-i: 2020
i: 2004
end-i: 2020
i: 2008
end-i: 2020
i: 2012
end-i: 2020
i: 2016
end-i: 2020
i: 2020
end-i: 2020
i:2020 HIT CHUNK END
(comment . ";;2004: r1 <- r1, r0")
(comment . ";;2008: r15 <- r1, 0x8\n")
(comment . ";;2012: r4 <- r1, 0x10\n")
(comment . ";;2016: r9 <- r1, 0x18\n")
chunklet-i: 2020; chunklet-start-i: 2020; chunklet-end-i: 2056
i: 2020
end-i: 2056
i: 2020
end-i: 2056
i: 2024
end-i: 2056
i: 2028
end-i: 2056
i: 2032
end-i: 2056
i: 2036
end-i: 2056
i: 2040
end-i: 2056
i: 2052
end-i: 2056
i: 2056
end-i: 2056
at header: 2056
(comment . ";;2020: r15 <- r1, 0x8\n")
(comment . ";;2024: r4 <- r1, 0x10\n")
(comment . ";;2028: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2036: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2052: b r6")
chunklet-i: 2056; chunklet-start-i: 2072; chunklet-end-i: 2092
i: 2056
end-i: 2092
at header: 2056
i: 2072
end-i: 2092
i: 2076
end-i: 2092
i: 2080
end-i: 2092
i: 2084
end-i: 2092
i: 2088
end-i: 2092
i: 2092
end-i: 2092
i:2092 HIT CHUNK END
(comment . ";;2072: r1 <- r1, r8")
(comment . ";;2076: r9 <- 0x4")
(comment . ";;2080: r15 <- r1, 0x8\n")
(comment . ";;2084: r4 <- r1, 0x10\n")
(comment . ";;2088 b -1120")
chunklet-i: 2092; chunklet-start-i: 2092; chunklet-end-i: 2100
i: 2092
end-i: 2100
i: 2092
end-i: 2100
i: 2096
end-i: 2100
i: 2100
end-i: 2100
i:2100 HIT CHUNK END
(comment . ";;2092: r3 <- r3, 0x1\n")
(comment . ";;2096 b 68")
chunklet-i: 2100; chunklet-start-i: 2100; chunklet-end-i: 2136
i: 2100
end-i: 2136
i: 2104
end-i: 2136
i: 2108
end-i: 2136
i: 2112
end-i: 2136
i: 2116
end-i: 2136
i: 2120
end-i: 2136
i: 2132
end-i: 2136
i: 2136
end-i: 2136
at header: 2136
(comment . ";;2100: r15 <- r1, 0x8\n")
(comment . ";;2104: r9 <- r1, 0x10\n")
(comment . ";;2108: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2116: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2132: b r6")
chunklet-i: 2136; chunklet-start-i: 2152; chunklet-end-i: 2168
i: 2136
end-i: 2168
at header: 2136
i: 2152
end-i: 2168
i: 2156
end-i: 2168
i: 2160
end-i: 2168
i: 2164
end-i: 2168
i: 2168
end-i: 2168
i:2168 HIT CHUNK END
(comment . ";;2156: r1 <- r1, r8")
(comment . ";;2160: r15 <- r1, 0x8\n")
(comment . ";;2164: r9 <- r1, 0x10\n")
chunklet-i: 2168; chunklet-start-i: 2168; chunklet-end-i: 2200
i: 2168
end-i: 2200
i: 2168
end-i: 2200
i: 2172
end-i: 2200
i: 2176
end-i: 2200
i: 2180
end-i: 2200
i: 2184
end-i: 2200
i: 2196
end-i: 2200
i: 2200
end-i: 2200
at header: 2200
(comment . ";;2168: r15 <- r1, 0x8\n")
(comment . ";;2172: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2196: b r6")
chunklet-i: 2200; chunklet-start-i: 2216; chunklet-end-i: 2228
i: 2200
end-i: 2228
at header: 2200
i: 2216
end-i: 2228
i: 2220
end-i: 2228
i: 2224
end-i: 2228
i: 2228
end-i: 2228
i:2228 HIT CHUNK END
(comment . ";;2216: r1 <- r1, r0")
(comment . ";;2220: r15 <- r1, 0x8\n")
(comment . ";;2224 b -1284")
chunklet-i: 2228; chunklet-start-i: 2228; chunklet-end-i: 2236
i: 2228
end-i: 2236
i: 2228
end-i: 2236
i: 2232
end-i: 2236
i: 2236
end-i: 2236
i:2236 HIT CHUNK END
(comment . ";;2228: r3 <- r3, 0x1\n")
(comment . ";;2232 b 80")
chunklet-i: 2236; chunklet-start-i: 2236; chunklet-end-i: 2280
i: 2236
end-i: 2280
i: 2240
end-i: 2280
i: 2244
end-i: 2280
i: 2248
end-i: 2280
i: 2252
end-i: 2280
i: 2256
end-i: 2280
i: 2260
end-i: 2280
i: 2264
end-i: 2280
i: 2276
end-i: 2280
i: 2280
end-i: 2280
at header: 2280
(comment . ";;2236: r15 <- r1, 0x8\n")
(comment . ";;2240: r13 <- r1, 0x10\n")
(comment . ";;2244: r12 <- r1, 0x18\n")
(comment . ";;2248: r4 <- r1, 0x20\n")
(comment . ";;2252: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2260: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2276: b r6")
chunklet-i: 2280; chunklet-start-i: 2296; chunklet-end-i: 2316
i: 2280
end-i: 2316
at header: 2280
i: 2296
end-i: 2316
i: 2300
end-i: 2316
i: 2304
end-i: 2316
i: 2308
end-i: 2316
i: 2312
end-i: 2316
i: 2316
end-i: 2316
i:2316 HIT CHUNK END
(comment . ";;2296: r1 <- r1, r8")
(comment . ";;2300: r15 <- r1, 0x8\n")
(comment . ";;2304: r13 <- r1, 0x10\n")
(comment . ";;2308: r12 <- r1, 0x18\n")
(comment . ";;2312: r4 <- r1, 0x20\n")
chunklet-i: 2316; chunklet-start-i: 2316; chunklet-end-i: 2368
i: 2316
end-i: 2368
i: 2316
end-i: 2368
i: 2320
end-i: 2368
i: 2324
end-i: 2368
i: 2328
end-i: 2368
i: 2332
end-i: 2368
i: 2336
end-i: 2368
i: 2340
end-i: 2368
i: 2344
end-i: 2368
i: 2348
end-i: 2368
i: 2352
end-i: 2368
i: 2364
end-i: 2368
i: 2368
end-i: 2368
at header: 2368
(comment . ";;2316: r9 <- 0x4")
(comment . ";;2320: r10 <- 0xC")
(comment . ";;2324: r15 <- r1, 0x8\n")
(comment . ";;2328: r13 <- r1, 0x10\n")
(comment . ";;2332: r12 <- r1, 0x18\n")
(comment . ";;2336: r4 <- r1, 0x20\n")
(comment . ";;2340: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2348: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2364: b r6")
chunklet-i: 2368; chunklet-start-i: 2384; chunklet-end-i: 2416
i: 2368
end-i: 2416
at header: 2368
i: 2384
end-i: 2416
i: 2388
end-i: 2416
i: 2392
end-i: 2416
i: 2396
end-i: 2416
i: 2400
end-i: 2416
i: 2404
end-i: 2416
i: 2408
end-i: 2416
i: 2412
end-i: 2416
i: 2416
end-i: 2416
i:2416 HIT CHUNK END
(comment . ";;2384: r1 <- r1, r8")
(comment . ";;2388: r14 <- 0x4")
(comment . ";;2392: r15 <- r1, 0x8\n")
(comment . ";;2396: r13 <- r1, 0x10\n")
(comment . ";;2400: r12 <- r1, 0x18\n")
(comment . ";;2404: r4 <- r1, 0x20\n")
(comment . ";;2408: r14 <- 0x6")
(comment . ";;2412 b -2292")
chunklet-i: 2416; chunklet-start-i: 2416; chunklet-end-i: 2420
i: 2416
end-i: 2420
i: 2420
end-i: 2420
i:2420 HIT CHUNK END
(comment . ";;2416 b -1500")
chunklet-i: 2420; chunklet-start-i: 2420; chunklet-end-i: 2440
i: 2420
end-i: 2440
i: 2420
end-i: 2440
i: 2424
end-i: 2440
i: 2436
end-i: 2440
i: 2440
end-i: 2440
i:2440 HIT CHUNK END
(comment . ";;2420: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;2436: b r6")
chunklet-i: 2440; chunklet-start-i: 2440; chunklet-end-i: 2448
i: 2440
end-i: 2448
i: 2440
end-i: 2448
i: 2444
end-i: 2448
i: 2448
end-i: 2448
i:2448 HIT CHUNK END
(comment . ";;2440: r3 <- r3, 0x1\n")
(comment . ";;2444 b 76")
chunklet-i: 2448; chunklet-start-i: 2448; chunklet-end-i: 2488
i: 2448
end-i: 2488
i: 2452
end-i: 2488
i: 2456
end-i: 2488
i: 2460
end-i: 2488
i: 2464
end-i: 2488
i: 2468
end-i: 2488
i: 2472
end-i: 2488
i: 2484
end-i: 2488
i: 2488
end-i: 2488
at header: 2488
(comment . ";;2448: r15 <- r1, 0x8\n")
(comment . ";;2452: r13 <- r1, 0x10\n")
(comment . ";;2456: r9 <- r1, 0x18\n")
(comment . ";;2460: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2468: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2484: b r6")
chunklet-i: 2488; chunklet-start-i: 2504; chunklet-end-i: 2524
i: 2488
end-i: 2524
at header: 2488
i: 2504
end-i: 2524
i: 2508
end-i: 2524
i: 2512
end-i: 2524
i: 2516
end-i: 2524
i: 2520
end-i: 2524
i: 2524
end-i: 2524
i:2524 HIT CHUNK END
(comment . ";;2508: r1 <- r1, r0")
(comment . ";;2512: r15 <- r1, 0x8\n")
(comment . ";;2516: r13 <- r1, 0x10\n")
(comment . ";;2520: r9 <- r1, 0x18\n")
chunklet-i: 2524; chunklet-start-i: 2524; chunklet-end-i: 2560
i: 2524
end-i: 2560
i: 2524
end-i: 2560
i: 2528
end-i: 2560
i: 2532
end-i: 2560
i: 2536
end-i: 2560
i: 2540
end-i: 2560
i: 2544
end-i: 2560
i: 2556
end-i: 2560
i: 2560
end-i: 2560
at header: 2560
(comment . ";;2524: r15 <- r1, 0x8\n")
(comment . ";;2528: r13 <- r1, 0x10\n")
(comment . ";;2532: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2540: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2556: b r6")
chunklet-i: 2560; chunklet-start-i: 2576; chunklet-end-i: 2596
i: 2560
end-i: 2596
at header: 2560
i: 2576
end-i: 2596
i: 2580
end-i: 2596
i: 2584
end-i: 2596
i: 2588
end-i: 2596
i: 2592
end-i: 2596
i: 2596
end-i: 2596
i:2596 HIT CHUNK END
(comment . ";;2576: r1 <- r1, r8")
(comment . ";;2580: r9 <- 0x4")
(comment . ";;2584: r15 <- r1, 0x8\n")
(comment . ";;2588: r13 <- r1, 0x10\n")
(comment . ";;2592 b -2548")
chunklet-i: 2596; chunklet-start-i: 2596; chunklet-end-i: 2612
i: 2596
end-i: 2612
i: 2596
end-i: 2612
i: 2608
end-i: 2612
i: 2612
end-i: 2612
i:2612 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;2608: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: trial
instruction range for chunk: 0 8
instruction range for chunk: 8 24
instruction range for chunk: 24 48
instruction range for chunk: 48 76
instruction range for chunk: 80 88
instruction range for chunk: 88 112
instruction range for chunk: 112 124
instruction range for chunk: 124 132
instruction range for chunk: 132 140
instruction range for chunk: 140 164
instruction range for chunk: 164 188
instruction range for chunk: 188 192
instruction range for chunk: 192 204
instruction range for chunk: 204 224
instruction range for chunk: 224 236
instruction range for chunk: 236 256
instruction range for chunk: 256 276
instruction range for chunk: 276 288
instruction range for chunk: 288 304
instruction range for chunk: 304 312
instruction range for chunk: 312 360
instruction range for chunk: 376 400
instruction range for chunk: 400 448
instruction range for chunk: 464 496
instruction range for chunk: 496 508
instruction range for chunk: 508 520
instruction range for chunk: 520 568
instruction range for chunk: 584 608
instruction range for chunk: 608 624
instruction range for chunk: 624 632
instruction range for chunk: 632 680
instruction range for chunk: 696 708
instruction range for chunk: 708 716
instruction range for chunk: 716 724
instruction range for chunk: 724 732
instruction range for chunk: 732 768
instruction range for chunk: 784 792
instruction range for chunk: 792 824
instruction range for chunk: 840 864
instruction range for chunk: 864 900
instruction range for chunk: 900 908
instruction range for chunk: 908 916
instruction range for chunk: 916 932
instruction range for chunk: 932 944
instruction range for chunk: 944 956
instruction range for chunk: 956 1008
instruction range for chunk: 1008 1016
instruction range for chunk: 1016 1032
instruction range for chunk: 1048 1064
instruction range for chunk: 1064 1076
instruction range for chunk: 1080 1088
instruction range for chunk: 1088 1128
instruction range for chunk: 1144 1164
instruction range for chunk: 1164 1200
instruction range for chunk: 1216 1240
instruction range for chunk: 1240 1252
instruction range for chunk: 1256 1264
instruction range for chunk: 1264 1296
instruction range for chunk: 1312 1336
instruction range for chunk: 1336 1340
instruction range for chunk: 1340 1360
instruction range for chunk: 1360 1380
instruction range for chunk: 1380 1416
instruction range for chunk: 1432 1456
instruction range for chunk: 1456 1488
instruction range for chunk: 1504 1520
instruction range for chunk: 1520 1552
instruction range for chunk: 1568 1584
instruction range for chunk: 1584 1620
instruction range for chunk: 1620 1628
instruction range for chunk: 1628 1636
instruction range for chunk: 1636 1652
instruction range for chunk: 1652 1664
instruction range for chunk: 1664 1676
instruction range for chunk: 1676 1700
instruction range for chunk: 1700 1712
instruction range for chunk: 1716 1724
instruction range for chunk: 1724 1732
instruction range for chunk: 1732 1768
instruction range for chunk: 1784 1796
instruction range for chunk: 1796 1832
instruction range for chunk: 1848 1860
instruction range for chunk: 1860 1868
instruction range for chunk: 1868 1904
instruction range for chunk: 1920 1936
instruction range for chunk: 1936 1968
instruction range for chunk: 1984 2004
instruction range for chunk: 2004 2012
instruction range for chunk: 2012 2048
instruction range for chunk: 2064 2076
instruction range for chunk: 2076 2112
instruction range for chunk: 2128 2152
instruction range for chunk: 2152 2156
instruction range for chunk: 2156 2164
instruction range for chunk: 2164 2200
instruction range for chunk: 2216 2232
instruction range for chunk: 2232 2264
instruction range for chunk: 2280 2296
instruction range for chunk: 2296 2308
instruction range for chunk: 2312 2316
instruction range for chunk: 2316 2328
instruction range for chunk: 2332 2336
instruction range for chunk: 2336 2352
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 2328")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 24
i: 8
end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;8: r9 <- r1, 0x8\n")
(comment . ";;12: r15 <- r0, 0x58\n")
(comment . ";;16: r1 <- r15")
(comment . ";;20 b 2292")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 48
i: 24
end-i: 48
i: 24
end-i: 48
i: 28
end-i: 48
i: 32
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;24: r15 <- 0x0")
(comment . ";;28: r5 <- r2, r9")
(comment . ";;32: r2 <- r2, r0")
(comment . ";;36: r14 <- r0, 0x68\n")
(comment . ";;40: r14 <- r2")
(comment . ";;44 b 2248")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 76
i: 48
end-i: 76
i: 48
end-i: 76
i: 52
end-i: 76
i: 56
end-i: 76
i: 60
end-i: 76
i: 64
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;48: r15 <- r5, 0x7\n")
(comment . ";;52: r15 <- 0x1E")
(comment . ";;56: r15 <- r5, 0xF\n")
(comment . ";;60: r5 <- r1, 0x10\n")
(comment . ";; literal r15")
chunklet-i: 76; chunklet-start-i: 80; chunklet-end-i: 88
i: 76
end-i: 88
i: 80
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
i:88 HIT CHUNK END
(comment . ";; instruction 76 not included")
(comment . ";;80: r7 <- r1, 0x18\n")
(comment . ";;84: r4 <- 0x0")
chunklet-i: 88; chunklet-start-i: 88; chunklet-end-i: 112
i: 88
end-i: 112
i: 88
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
i:112 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;100: r10 <- r9, 0x5\n")
(comment . ";;104: r10 <- 0x1E")
(comment . ";;108 b 2044")
chunklet-i: 112; chunklet-start-i: 112; chunklet-end-i: 124
i: 112
end-i: 124
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r15 <- r4, r10")
(comment . ";;116: r15 <- 0x7")
(comment . ";;120 b 1880")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;124: r4 <- r10")
(comment . ";;128 b 1452")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 140
i: 132
end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";;132: r3 <- r3, 0x1\n")
(comment . ";;136 b 1380")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 164
i: 140
end-i: 164
i: 140
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;152: r15 <- r9, 0x5\n")
(comment . ";;156: r15 <- 0x1E")
(comment . ";;160 b 1292")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 188
i: 164
end-i: 188
i: 164
end-i: 188
i: 176
end-i: 188
i: 180
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;176: r14 <- r9, 0x5\n")
(comment . ";;180: r14 <- 0x1E")
(comment . ";;184 b 1192")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";;188: r9 <- 0xE")
chunklet-i: 192; chunklet-start-i: 192; chunklet-end-i: 204
i: 192
end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";;192: r14 <- r9, r7")
(comment . ";;196: r14 <- 0x7")
(comment . ";;200 b 1156")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 224
i: 204
end-i: 224
i: 208
end-i: 224
i: 212
end-i: 224
i: 216
end-i: 224
i: 220
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";;204: r13 <- r9, 0x1\n")
(comment . ";;208: r14 <- r13, r1")
(comment . ";;212: r14 <- r14, r8")
(comment . ";;216: r4 <- r14")
(comment . ";;220 b 1136")
chunklet-i: 224; chunklet-start-i: 224; chunklet-end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";;224: r14 <- r4, r13")
(comment . ";;228: r14 <- 0x7")
(comment . ";;232 b 1124")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 256
i: 236
end-i: 256
i: 240
end-i: 256
i: 244
end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;236: r14 <- r4, r9")
(comment . ";;240: r10 <- r9, r14")
(comment . ";;244: r14 <- r15, r7")
(comment . ";;248: r14 <- 0x7")
(comment . ";;252 b 1084")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 276
i: 256
end-i: 276
i: 260
end-i: 276
i: 264
end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";;256: r13 <- r15, 0x1\n")
(comment . ";;260: r14 <- r13, r1")
(comment . ";;264: r14 <- r14, r8")
(comment . ";;268: r10 <- r14")
(comment . ";;272 b 1064")
chunklet-i: 276; chunklet-start-i: 276; chunklet-end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
i:288 HIT CHUNK END
(comment . ";;276: r14 <- r10, r13")
(comment . ";;280: r14 <- 0x7")
(comment . ";;284 b 1052")
chunklet-i: 288; chunklet-start-i: 288; chunklet-end-i: 304
i: 288
end-i: 304
i: 292
end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;288: r14 <- r10, r9")
(comment . ";;292: r9 <- r15, r14")
(comment . ";;296: r9 <- 0x0")
(comment . ";;300 b 404")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 312
i: 304
end-i: 312
i: 308
end-i: 312
i: 312
end-i: 312
i:312 HIT CHUNK END
(comment . ";;304: r9 <- 0x7")
(comment . ";;308 b 952")
chunklet-i: 312; chunklet-start-i: 312; chunklet-end-i: 360
i: 312
end-i: 360
i: 312
end-i: 360
i: 316
end-i: 360
i: 320
end-i: 360
i: 324
end-i: 360
i: 328
end-i: 360
i: 340
end-i: 360
i: 344
end-i: 360
i: 348
end-i: 360
i: 352
end-i: 360
i: 356
end-i: 360
i: 360
end-i: 360
at header: 360
(comment . ";;312: r9 <- 0x4")
(comment . ";;316: r10 <- r1, 0x8\n")
(comment . ";;320: r4 <- r1, 0x20\n")
(comment . ";;324: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;340: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;348: r15 <- r1, 0x0\n")
(comment . ";;352: r4 <- 0x2")
(comment . ";;356: b r5, 13")
chunklet-i: 360; chunklet-start-i: 376; chunklet-end-i: 400
i: 360
end-i: 400
at header: 360
i: 376
end-i: 400
i: 380
end-i: 400
i: 384
end-i: 400
i: 388
end-i: 400
i: 392
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
i:400 HIT CHUNK END
(comment . ";;376: r1 <- r1, r8")
(comment . ";;380: r15 <- 0x4")
(comment . ";;384: r4 <- r1, 0x20\n")
(comment . ";;388: r15 <- 0x6")
(comment . ";;396 b 308")
chunklet-i: 400; chunklet-start-i: 400; chunklet-end-i: 448
i: 400
end-i: 448
i: 404
end-i: 448
i: 408
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 436
end-i: 448
i: 440
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;400: r9 <- 0x4")
(comment . ";;404: r10 <- r1, 0x8\n")
(comment . ";;408: r4 <- r1, 0x20\n")
(comment . ";;412: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;428: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";;440: r4 <- 0x2")
(comment . ";;444: b r5, 13")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 496
i: 448
end-i: 496
at header: 448
i: 464
end-i: 496
i: 468
end-i: 496
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 484
end-i: 496
i: 488
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";;464: r1 <- r1, r8")
(comment . ";;468: r15 <- 0x4")
(comment . ";;472: r4 <- r1, 0x20\n")
(comment . ";;476: r14 <- r1, 0x10\n")
(comment . ";;480: r14 <- r14, r7")
(comment . ";;484: r15 <- r14, 0x0\n")
(comment . ";;488: r15 <- 0x7")
(comment . ";;492 b 24")
chunklet-i: 496; chunklet-start-i: 496; chunklet-end-i: 508
i: 496
end-i: 508
i: 500
end-i: 508
i: 504
end-i: 508
i: 508
end-i: 508
i:508 HIT CHUNK END
(comment . ";;496: r7 <- r0, 0x68\n")
(comment . ";;500: r2 <- r7")
(comment . ";;504 b 732")
chunklet-i: 508; chunklet-start-i: 508; chunklet-end-i: 520
i: 508
end-i: 520
i: 508
end-i: 520
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;508: r7 <- r7, r8")
(comment . ";;512: r7 <- r0, 0x68\n")
(comment . ";;516: r14 <- r7, 0x0\n")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 568
i: 520
end-i: 568
i: 520
end-i: 568
i: 524
end-i: 568
i: 528
end-i: 568
i: 532
end-i: 568
i: 536
end-i: 568
i: 548
end-i: 568
i: 552
end-i: 568
i: 556
end-i: 568
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
at header: 568
(comment . ";;520: r15 <- r1, 0x10\n")
(comment . ";;524: r9 <- r15, 0x7\n")
(comment . ";;528: r4 <- r1, 0x20\n")
(comment . ";;532: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;548: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;556: r15 <- r1, 0x0\n")
(comment . ";;560: r4 <- 0x1")
(comment . ";;564: b r5, 13")
chunklet-i: 568; chunklet-start-i: 584; chunklet-end-i: 608
i: 568
end-i: 608
at header: 568
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 596
end-i: 608
i: 600
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
i:608 HIT CHUNK END
(comment . ";;584: r1 <- r1, r8")
(comment . ";;588: r15 <- 0x4")
(comment . ";;592: r4 <- r1, 0x20\n")
(comment . ";;596: r15 <- 0x6")
(comment . ";;604 b 256")
chunklet-i: 608; chunklet-start-i: 608; chunklet-end-i: 624
i: 608
end-i: 624
i: 612
end-i: 624
i: 616
end-i: 624
i: 620
end-i: 624
i: 624
end-i: 624
i:624 HIT CHUNK END
(comment . ";;608: r15 <- r1, 0x10\n")
(comment . ";;612: r9 <- r15, 0x7\n")
(comment . ";;616: r9 <- 0x0")
(comment . ";;620 b 240")
chunklet-i: 624; chunklet-start-i: 624; chunklet-end-i: 632
i: 624
end-i: 632
i: 628
end-i: 632
i: 632
end-i: 632
i:632 HIT CHUNK END
(comment . ";;624: r9 <- 0x7")
(comment . ";;628 b 160")
chunklet-i: 632; chunklet-start-i: 632; chunklet-end-i: 680
i: 632
end-i: 680
i: 632
end-i: 680
i: 636
end-i: 680
i: 640
end-i: 680
i: 644
end-i: 680
i: 648
end-i: 680
i: 660
end-i: 680
i: 664
end-i: 680
i: 668
end-i: 680
i: 672
end-i: 680
i: 676
end-i: 680
i: 680
end-i: 680
at header: 680
(comment . ";;632: r9 <- 0x4")
(comment . ";;636: r10 <- r1, 0x8\n")
(comment . ";;640: r4 <- r1, 0x20\n")
(comment . ";;644: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;660: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;668: r15 <- r1, 0x0\n")
(comment . ";;672: r4 <- 0x2")
(comment . ";;676: b r5, 13")
chunklet-i: 680; chunklet-start-i: 696; chunklet-end-i: 708
i: 680
end-i: 708
at header: 680
i: 696
end-i: 708
i: 700
end-i: 708
i: 704
end-i: 708
i: 708
end-i: 708
i:708 HIT CHUNK END
(comment . ";;700: r1 <- r1, r8")
(comment . ";;704: r4 <- r1, 0x20\n")
chunklet-i: 708; chunklet-start-i: 708; chunklet-end-i: 716
i: 708
end-i: 716
i: 708
end-i: 716
i: 712
end-i: 716
i: 716
end-i: 716
i:716 HIT CHUNK END
(comment . ";;708: r4 <- 0x7")
(comment . ";;712 b 16")
chunklet-i: 716; chunklet-start-i: 716; chunklet-end-i: 724
i: 716
end-i: 724
i: 720
end-i: 724
i: 724
end-i: 724
i:724 HIT CHUNK END
(comment . ";;716: r15 <- r4, 0x8\n")
(comment . ";;720 b 8")
chunklet-i: 724; chunklet-start-i: 724; chunklet-end-i: 732
i: 724
end-i: 732
i: 728
end-i: 732
i: 732
end-i: 732
i:732 HIT CHUNK END
(comment . ";;724: r4 <- 0xF")
(comment . ";;728 b -644")
chunklet-i: 732; chunklet-start-i: 732; chunklet-end-i: 768
i: 732
end-i: 768
i: 732
end-i: 768
i: 736
end-i: 768
i: 740
end-i: 768
i: 744
end-i: 768
i: 748
end-i: 768
i: 752
end-i: 768
i: 764
end-i: 768
i: 768
end-i: 768
at header: 768
(comment . ";;732: r9 <- 0x8")
(comment . ";;736: r10 <- 0x4")
(comment . ";;740: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;748: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;764: b r6")
chunklet-i: 768; chunklet-start-i: 784; chunklet-end-i: 792
i: 768
end-i: 792
at header: 768
i: 784
end-i: 792
i: 788
end-i: 792
i: 792
end-i: 792
i:792 HIT CHUNK END
(comment . ";;784: r1 <- r1, r0")
(comment . ";;788 b -704")
chunklet-i: 792; chunklet-start-i: 792; chunklet-end-i: 824
i: 792
end-i: 824
i: 792
end-i: 824
i: 796
end-i: 824
i: 800
end-i: 824
i: 804
end-i: 824
i: 808
end-i: 824
i: 820
end-i: 824
i: 824
end-i: 824
at header: 824
(comment . ";;792: r4 <- r1, 0x20\n")
(comment . ";;796: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;804: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;820: b r6")
chunklet-i: 824; chunklet-start-i: 840; chunklet-end-i: 864
i: 824
end-i: 864
at header: 824
i: 840
end-i: 864
i: 844
end-i: 864
i: 848
end-i: 864
i: 852
end-i: 864
i: 856
end-i: 864
i: 860
end-i: 864
i: 864
end-i: 864
i:864 HIT CHUNK END
(comment . ";;840: r1 <- r1, r8")
(comment . ";;844: r15 <- 0x4")
(comment . ";;848: r4 <- r1, 0x20\n")
(comment . ";;852: r15 <- 0x6")
(comment . ";;860 b -232")
chunklet-i: 864; chunklet-start-i: 864; chunklet-end-i: 900
i: 864
end-i: 900
i: 864
end-i: 900
i: 876
end-i: 900
i: 888
end-i: 900
i: 892
end-i: 900
i: 896
end-i: 900
i: 900
end-i: 900
i:900 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;888: r10 <- r9, 0x5\n")
(comment . ";;892: r10 <- 0x1E")
(comment . ";;896 b 264")
chunklet-i: 900; chunklet-start-i: 900; chunklet-end-i: 908
i: 900
end-i: 908
i: 900
end-i: 908
i: 904
end-i: 908
i: 908
end-i: 908
i:908 HIT CHUNK END
(comment . ";;900: r10 <- 0x7")
(comment . ";;904 b 180")
chunklet-i: 908; chunklet-start-i: 908; chunklet-end-i: 916
i: 908
end-i: 916
i: 912
end-i: 916
i: 916
end-i: 916
i:916 HIT CHUNK END
(comment . ";;908: r14 <- r10, 0x8\n")
(comment . ";;912 b 172")
chunklet-i: 916; chunklet-start-i: 916; chunklet-end-i: 932
i: 916
end-i: 932
i: 916
end-i: 932
i: 920
end-i: 932
i: 924
end-i: 932
i: 928
end-i: 932
i: 932
end-i: 932
i:932 HIT CHUNK END
(comment . ";;916: r13 <- r15, r5")
(comment . ";;920: r14 <- r13, 0x0\n")
(comment . ";;924: r14 <- 0x7")
(comment . ";;928 b 24")
chunklet-i: 932; chunklet-start-i: 932; chunklet-end-i: 944
i: 932
end-i: 944
i: 936
end-i: 944
i: 940
end-i: 944
i: 944
end-i: 944
i:944 HIT CHUNK END
(comment . ";;932: r7 <- r0, 0x68\n")
(comment . ";;936: r2 <- r7")
(comment . ";;940 b 120")
chunklet-i: 944; chunklet-start-i: 944; chunklet-end-i: 956
i: 944
end-i: 956
i: 944
end-i: 956
i: 948
end-i: 956
i: 952
end-i: 956
i: 956
end-i: 956
i:956 HIT CHUNK END
(comment . ";;944: r7 <- r7, r8")
(comment . ";;948: r7 <- r0, 0x68\n")
(comment . ";;952: r13 <- r7, 0x0\n")
chunklet-i: 956; chunklet-start-i: 956; chunklet-end-i: 1008
i: 956
end-i: 1008
i: 956
end-i: 1008
i: 968
end-i: 1008
i: 972
end-i: 1008
i: 976
end-i: 1008
i: 980
end-i: 1008
i: 984
end-i: 1008
i: 988
end-i: 1008
i: 992
end-i: 1008
i: 996
end-i: 1008
i: 1000
end-i: 1008
i: 1004
end-i: 1008
i: 1008
end-i: 1008
i:1008 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;968: r14 <- r15, 0xD\n")
(comment . ";;972: r9 <- 0xE")
(comment . ";;976: r4 <- r1, 0x20\n")
(comment . ";;980: r1 <- r1, r8")
(comment . ";;984: r8 <- r1, 0x-10\n")
(comment . ";; adr r15")
(comment . ";;992: r15 <- r1, 0x0\n")
(comment . ";;996: r15 <- r8, r7")
(comment . ";;1000: r15 <- 0x5")
(comment . ";;1004 b 8")
chunklet-i: 1008; chunklet-start-i: 1008; chunklet-end-i: 1016
i: 1008
end-i: 1016
i: 1012
end-i: 1016
i: 1016
end-i: 1016
i:1016 HIT CHUNK END
(comment . ";;1008: r4 <- 0x1")
(comment . ";;1012: b r8, 3")
chunklet-i: 1016; chunklet-start-i: 1016; chunklet-end-i: 1032
i: 1016
end-i: 1032
i: 1016
end-i: 1032
i: 1028
end-i: 1032
i: 1032
end-i: 1032
at header: 1032
(comment . ";; literal r6")
(comment . ";;1028: b r6")
chunklet-i: 1032; chunklet-start-i: 1048; chunklet-end-i: 1064
i: 1032
end-i: 1064
at header: 1032
i: 1048
end-i: 1064
i: 1052
end-i: 1064
i: 1056
end-i: 1064
i: 1060
end-i: 1064
i: 1064
end-i: 1064
i:1064 HIT CHUNK END
(comment . ";;1052: r1 <- r1, r8")
(comment . ";;1056: r4 <- r1, 0x20\n")
(comment . ";;1060 b -356")
chunklet-i: 1064; chunklet-start-i: 1064; chunklet-end-i: 1076
i: 1064
end-i: 1076
i: 1064
end-i: 1076
i: 1076
end-i: 1076
i:1076 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 1076; chunklet-start-i: 1080; chunklet-end-i: 1088
i: 1076
end-i: 1088
i: 1080
end-i: 1088
i: 1084
end-i: 1088
i: 1088
end-i: 1088
i:1088 HIT CHUNK END
(comment . ";; instruction 1076 not included")
(comment . ";;1080: r7 <- r0, 0x68\n")
(comment . ";;1084 b -144")
chunklet-i: 1088; chunklet-start-i: 1088; chunklet-end-i: 1128
i: 1088
end-i: 1128
i: 1088
end-i: 1128
i: 1092
end-i: 1128
i: 1096
end-i: 1128
i: 1100
end-i: 1128
i: 1104
end-i: 1128
i: 1108
end-i: 1128
i: 1112
end-i: 1128
i: 1124
end-i: 1128
i: 1128
end-i: 1128
at header: 1128
(comment . ";;1088: r9 <- 0x8")
(comment . ";;1092: r4 <- r1, 0x20\n")
(comment . ";;1096: r15 <- r1, 0x28\n")
(comment . ";;1100: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1108: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1124: b r6")
chunklet-i: 1128; chunklet-start-i: 1144; chunklet-end-i: 1164
i: 1128
end-i: 1164
at header: 1128
i: 1144
end-i: 1164
i: 1148
end-i: 1164
i: 1152
end-i: 1164
i: 1156
end-i: 1164
i: 1160
end-i: 1164
i: 1164
end-i: 1164
i:1164 HIT CHUNK END
(comment . ";;1144: r1 <- r1, r0")
(comment . ";;1148: r14 <- 0x4")
(comment . ";;1152: r4 <- r1, 0x20\n")
(comment . ";;1156: r15 <- r1, 0x28\n")
(comment . ";;1160 b -248")
chunklet-i: 1164; chunklet-start-i: 1164; chunklet-end-i: 1200
i: 1164
end-i: 1200
i: 1164
end-i: 1200
i: 1168
end-i: 1200
i: 1172
end-i: 1200
i: 1176
end-i: 1200
i: 1180
end-i: 1200
i: 1184
end-i: 1200
i: 1196
end-i: 1200
i: 1200
end-i: 1200
at header: 1200
(comment . ";;1164: r4 <- r1, 0x20\n")
(comment . ";;1168: r15 <- r1, 0x28\n")
(comment . ";;1172: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1196: b r6")
chunklet-i: 1200; chunklet-start-i: 1216; chunklet-end-i: 1240
i: 1200
end-i: 1240
at header: 1200
i: 1216
end-i: 1240
i: 1220
end-i: 1240
i: 1224
end-i: 1240
i: 1228
end-i: 1240
i: 1232
end-i: 1240
i: 1236
end-i: 1240
i: 1240
end-i: 1240
i:1240 HIT CHUNK END
(comment . ";;1216: r1 <- r1, r0")
(comment . ";;1220: r10 <- 0x4")
(comment . ";;1224: r4 <- r1, 0x20\n")
(comment . ";;1228: r15 <- r1, 0x28\n")
(comment . ";;1236 b -340")
chunklet-i: 1240; chunklet-start-i: 1240; chunklet-end-i: 1252
i: 1240
end-i: 1252
i: 1240
end-i: 1252
i: 1252
end-i: 1252
i:1252 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 1252; chunklet-start-i: 1256; chunklet-end-i: 1264
i: 1252
end-i: 1264
i: 1256
end-i: 1264
i: 1260
end-i: 1264
i: 1264
end-i: 1264
i:1264 HIT CHUNK END
(comment . ";; instruction 1252 not included")
(comment . ";;1256: r7 <- r0, 0x68\n")
(comment . ";;1260 b -756")
chunklet-i: 1264; chunklet-start-i: 1264; chunklet-end-i: 1296
i: 1264
end-i: 1296
i: 1264
end-i: 1296
i: 1268
end-i: 1296
i: 1272
end-i: 1296
i: 1276
end-i: 1296
i: 1280
end-i: 1296
i: 1292
end-i: 1296
i: 1296
end-i: 1296
at header: 1296
(comment . ";;1264: r4 <- r1, 0x20\n")
(comment . ";;1268: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1276: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1292: b r6")
chunklet-i: 1296; chunklet-start-i: 1312; chunklet-end-i: 1336
i: 1296
end-i: 1336
at header: 1296
i: 1312
end-i: 1336
i: 1316
end-i: 1336
i: 1320
end-i: 1336
i: 1324
end-i: 1336
i: 1328
end-i: 1336
i: 1332
end-i: 1336
i: 1336
end-i: 1336
i:1336 HIT CHUNK END
(comment . ";;1312: r1 <- r1, r8")
(comment . ";;1316: r15 <- 0x4")
(comment . ";;1320: r4 <- r1, 0x20\n")
(comment . ";;1324: r15 <- 0x6")
(comment . ";;1332 b -1024")
chunklet-i: 1336; chunklet-start-i: 1336; chunklet-end-i: 1340
i: 1336
end-i: 1340
i: 1340
end-i: 1340
i:1340 HIT CHUNK END
(comment . ";;1336 b -632")
chunklet-i: 1340; chunklet-start-i: 1340; chunklet-end-i: 1360
i: 1340
end-i: 1360
i: 1340
end-i: 1360
i: 1344
end-i: 1360
i: 1356
end-i: 1360
i: 1360
end-i: 1360
i:1360 HIT CHUNK END
(comment . ";;1340: r9 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1356: b r6")
chunklet-i: 1360; chunklet-start-i: 1360; chunklet-end-i: 1380
i: 1360
end-i: 1380
i: 1360
end-i: 1380
i: 1364
end-i: 1380
i: 1376
end-i: 1380
i: 1380
end-i: 1380
i:1380 HIT CHUNK END
(comment . ";;1360: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1376: b r6")
chunklet-i: 1380; chunklet-start-i: 1380; chunklet-end-i: 1416
i: 1380
end-i: 1416
i: 1380
end-i: 1416
i: 1384
end-i: 1416
i: 1388
end-i: 1416
i: 1392
end-i: 1416
i: 1396
end-i: 1416
i: 1400
end-i: 1416
i: 1412
end-i: 1416
i: 1416
end-i: 1416
at header: 1416
(comment . ";;1380: r4 <- r1, 0x20\n")
(comment . ";;1384: r15 <- r1, 0x28\n")
(comment . ";;1388: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1396: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1412: b r6")
chunklet-i: 1416; chunklet-start-i: 1432; chunklet-end-i: 1456
i: 1416
end-i: 1456
at header: 1416
i: 1432
end-i: 1456
i: 1436
end-i: 1456
i: 1440
end-i: 1456
i: 1444
end-i: 1456
i: 1448
end-i: 1456
i: 1452
end-i: 1456
i: 1456
end-i: 1456
i:1456 HIT CHUNK END
(comment . ";;1432: r1 <- r1, r0")
(comment . ";;1436: r9 <- 0x4")
(comment . ";;1440: r4 <- r1, 0x20\n")
(comment . ";;1444: r15 <- r1, 0x28\n")
(comment . ";;1452 b -1264")
chunklet-i: 1456; chunklet-start-i: 1456; chunklet-end-i: 1488
i: 1456
end-i: 1488
i: 1456
end-i: 1488
i: 1460
end-i: 1488
i: 1464
end-i: 1488
i: 1468
end-i: 1488
i: 1472
end-i: 1488
i: 1484
end-i: 1488
i: 1488
end-i: 1488
at header: 1488
(comment . ";;1456: r4 <- r1, 0x20\n")
(comment . ";;1460: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1468: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1484: b r6")
chunklet-i: 1488; chunklet-start-i: 1504; chunklet-end-i: 1520
i: 1488
end-i: 1520
at header: 1488
i: 1504
end-i: 1520
i: 1508
end-i: 1520
i: 1512
end-i: 1520
i: 1516
end-i: 1520
i: 1520
end-i: 1520
i:1520 HIT CHUNK END
(comment . ";;1504: r1 <- r1, r8")
(comment . ";;1508: r15 <- 0x4")
(comment . ";;1512: r4 <- r1, 0x20\n")
(comment . ";;1516 b -1356")
chunklet-i: 1520; chunklet-start-i: 1520; chunklet-end-i: 1552
i: 1520
end-i: 1552
i: 1520
end-i: 1552
i: 1524
end-i: 1552
i: 1528
end-i: 1552
i: 1532
end-i: 1552
i: 1536
end-i: 1552
i: 1548
end-i: 1552
i: 1552
end-i: 1552
at header: 1552
(comment . ";;1520: r4 <- r1, 0x20\n")
(comment . ";;1524: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1532: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1548: b r6")
chunklet-i: 1552; chunklet-start-i: 1568; chunklet-end-i: 1584
i: 1552
end-i: 1584
at header: 1552
i: 1568
end-i: 1584
i: 1572
end-i: 1584
i: 1576
end-i: 1584
i: 1580
end-i: 1584
i: 1584
end-i: 1584
i:1584 HIT CHUNK END
(comment . ";;1572: r1 <- r1, r8")
(comment . ";;1576: r4 <- r1, 0x20\n")
(comment . ";;1580 b -1444")
chunklet-i: 1584; chunklet-start-i: 1584; chunklet-end-i: 1620
i: 1584
end-i: 1620
i: 1584
end-i: 1620
i: 1596
end-i: 1620
i: 1608
end-i: 1620
i: 1612
end-i: 1620
i: 1616
end-i: 1620
i: 1620
end-i: 1620
i:1620 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;1608: r10 <- r9, 0x5\n")
(comment . ";;1612: r10 <- 0x1E")
(comment . ";;1616 b 240")
chunklet-i: 1620; chunklet-start-i: 1620; chunklet-end-i: 1628
i: 1620
end-i: 1628
i: 1620
end-i: 1628
i: 1624
end-i: 1628
i: 1628
end-i: 1628
i:1628 HIT CHUNK END
(comment . ";;1620: r10 <- 0x7")
(comment . ";;1624 b 96")
chunklet-i: 1628; chunklet-start-i: 1628; chunklet-end-i: 1636
i: 1628
end-i: 1636
i: 1632
end-i: 1636
i: 1636
end-i: 1636
i:1636 HIT CHUNK END
(comment . ";;1628: r4 <- r10, 0x8\n")
(comment . ";;1632 b 88")
chunklet-i: 1636; chunklet-start-i: 1636; chunklet-end-i: 1652
i: 1636
end-i: 1652
i: 1636
end-i: 1652
i: 1640
end-i: 1652
i: 1644
end-i: 1652
i: 1648
end-i: 1652
i: 1652
end-i: 1652
i:1652 HIT CHUNK END
(comment . ";;1636: r14 <- r15, r5")
(comment . ";;1640: r4 <- r14, 0x0\n")
(comment . ";;1644: r4 <- 0x7")
(comment . ";;1648 b 24")
chunklet-i: 1652; chunklet-start-i: 1652; chunklet-end-i: 1664
i: 1652
end-i: 1664
i: 1656
end-i: 1664
i: 1660
end-i: 1664
i: 1664
end-i: 1664
i:1664 HIT CHUNK END
(comment . ";;1652: r7 <- r0, 0x68\n")
(comment . ";;1656: r2 <- r7")
(comment . ";;1660 b 36")
chunklet-i: 1664; chunklet-start-i: 1664; chunklet-end-i: 1676
i: 1664
end-i: 1676
i: 1664
end-i: 1676
i: 1668
end-i: 1676
i: 1672
end-i: 1676
i: 1676
end-i: 1676
i:1676 HIT CHUNK END
(comment . ";;1664: r7 <- r7, r8")
(comment . ";;1668: r7 <- r0, 0x68\n")
(comment . ";;1672: r14 <- r7, 0x0\n")
chunklet-i: 1676; chunklet-start-i: 1676; chunklet-end-i: 1700
i: 1676
end-i: 1700
i: 1676
end-i: 1700
i: 1688
end-i: 1700
i: 1692
end-i: 1700
i: 1696
end-i: 1700
i: 1700
end-i: 1700
i:1700 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;1688: r14 <- r15, 0xD\n")
(comment . ";;1692: r4 <- 0x6")
(comment . ";;1696: b r1, 0")
chunklet-i: 1700; chunklet-start-i: 1700; chunklet-end-i: 1712
i: 1700
end-i: 1712
i: 1700
end-i: 1712
i: 1712
end-i: 1712
i:1712 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 1712; chunklet-start-i: 1716; chunklet-end-i: 1724
i: 1712
end-i: 1724
i: 1716
end-i: 1724
i: 1720
end-i: 1724
i: 1724
end-i: 1724
i:1724 HIT CHUNK END
(comment . ";; instruction 1712 not included")
(comment . ";;1716: r7 <- r0, 0x68\n")
(comment . ";;1720 b -60")
chunklet-i: 1724; chunklet-start-i: 1724; chunklet-end-i: 1732
i: 1724
end-i: 1732
i: 1724
end-i: 1732
i: 1728
end-i: 1732
i: 1732
end-i: 1732
i:1732 HIT CHUNK END
(comment . ";;1724: r3 <- r3, 0x1\n")
(comment . ";;1728 b 64")
chunklet-i: 1732; chunklet-start-i: 1732; chunklet-end-i: 1768
i: 1732
end-i: 1768
i: 1736
end-i: 1768
i: 1740
end-i: 1768
i: 1744
end-i: 1768
i: 1748
end-i: 1768
i: 1752
end-i: 1768
i: 1764
end-i: 1768
i: 1768
end-i: 1768
at header: 1768
(comment . ";;1732: r15 <- r1, 0x8\n")
(comment . ";;1736: r10 <- r1, 0x10\n")
(comment . ";;1740: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1748: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1764: b r6")
chunklet-i: 1768; chunklet-start-i: 1784; chunklet-end-i: 1796
i: 1768
end-i: 1796
at header: 1768
i: 1784
end-i: 1796
i: 1788
end-i: 1796
i: 1792
end-i: 1796
i: 1796
end-i: 1796
i:1796 HIT CHUNK END
(comment . ";;1784: r1 <- r1, r8")
(comment . ";;1788: r15 <- r1, 0x8\n")
(comment . ";;1792: r10 <- r1, 0x10\n")
chunklet-i: 1796; chunklet-start-i: 1796; chunklet-end-i: 1832
i: 1796
end-i: 1832
i: 1796
end-i: 1832
i: 1800
end-i: 1832
i: 1804
end-i: 1832
i: 1808
end-i: 1832
i: 1812
end-i: 1832
i: 1816
end-i: 1832
i: 1828
end-i: 1832
i: 1832
end-i: 1832
at header: 1832
(comment . ";;1796: r9 <- 0x8")
(comment . ";;1800: r15 <- r1, 0x8\n")
(comment . ";;1804: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1812: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1828: b r6")
chunklet-i: 1832; chunklet-start-i: 1848; chunklet-end-i: 1860
i: 1832
end-i: 1860
at header: 1832
i: 1848
end-i: 1860
i: 1852
end-i: 1860
i: 1856
end-i: 1860
i: 1860
end-i: 1860
i:1860 HIT CHUNK END
(comment . ";;1848: r1 <- r1, r0")
(comment . ";;1852: r15 <- r1, 0x8\n")
(comment . ";;1856 b -224")
chunklet-i: 1860; chunklet-start-i: 1860; chunklet-end-i: 1868
i: 1860
end-i: 1868
i: 1860
end-i: 1868
i: 1864
end-i: 1868
i: 1868
end-i: 1868
i:1868 HIT CHUNK END
(comment . ";;1860: r3 <- r3, 0x1\n")
(comment . ";;1864 b 68")
chunklet-i: 1868; chunklet-start-i: 1868; chunklet-end-i: 1904
i: 1868
end-i: 1904
i: 1872
end-i: 1904
i: 1876
end-i: 1904
i: 1880
end-i: 1904
i: 1884
end-i: 1904
i: 1888
end-i: 1904
i: 1900
end-i: 1904
i: 1904
end-i: 1904
at header: 1904
(comment . ";;1868: r15 <- r1, 0x8\n")
(comment . ";;1872: r9 <- r1, 0x10\n")
(comment . ";;1876: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1884: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1900: b r6")
chunklet-i: 1904; chunklet-start-i: 1920; chunklet-end-i: 1936
i: 1904
end-i: 1936
at header: 1904
i: 1920
end-i: 1936
i: 1924
end-i: 1936
i: 1928
end-i: 1936
i: 1932
end-i: 1936
i: 1936
end-i: 1936
i:1936 HIT CHUNK END
(comment . ";;1924: r1 <- r1, r8")
(comment . ";;1928: r15 <- r1, 0x8\n")
(comment . ";;1932: r9 <- r1, 0x10\n")
chunklet-i: 1936; chunklet-start-i: 1936; chunklet-end-i: 1968
i: 1936
end-i: 1968
i: 1936
end-i: 1968
i: 1940
end-i: 1968
i: 1944
end-i: 1968
i: 1948
end-i: 1968
i: 1952
end-i: 1968
i: 1964
end-i: 1968
i: 1968
end-i: 1968
at header: 1968
(comment . ";;1936: r15 <- r1, 0x8\n")
(comment . ";;1940: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1948: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1964: b r6")
chunklet-i: 1968; chunklet-start-i: 1984; chunklet-end-i: 2004
i: 1968
end-i: 2004
at header: 1968
i: 1984
end-i: 2004
i: 1988
end-i: 2004
i: 1992
end-i: 2004
i: 1996
end-i: 2004
i: 2000
end-i: 2004
i: 2004
end-i: 2004
i:2004 HIT CHUNK END
(comment . ";;1984: r1 <- r1, r0")
(comment . ";;1988: r10 <- 0x4")
(comment . ";;1992: r15 <- r1, 0x8\n")
(comment . ";;2000 b -384")
chunklet-i: 2004; chunklet-start-i: 2004; chunklet-end-i: 2012
i: 2004
end-i: 2012
i: 2004
end-i: 2012
i: 2008
end-i: 2012
i: 2012
end-i: 2012
i:2012 HIT CHUNK END
(comment . ";;2004: r3 <- r3, 0x1\n")
(comment . ";;2008 b 64")
chunklet-i: 2012; chunklet-start-i: 2012; chunklet-end-i: 2048
i: 2012
end-i: 2048
i: 2016
end-i: 2048
i: 2020
end-i: 2048
i: 2024
end-i: 2048
i: 2028
end-i: 2048
i: 2032
end-i: 2048
i: 2044
end-i: 2048
i: 2048
end-i: 2048
at header: 2048
(comment . ";;2012: r4 <- r1, 0x20\n")
(comment . ";;2016: r10 <- r1, 0x28\n")
(comment . ";;2020: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2028: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2044: b r6")
chunklet-i: 2048; chunklet-start-i: 2064; chunklet-end-i: 2076
i: 2048
end-i: 2076
at header: 2048
i: 2064
end-i: 2076
i: 2068
end-i: 2076
i: 2072
end-i: 2076
i: 2076
end-i: 2076
i:2076 HIT CHUNK END
(comment . ";;2064: r1 <- r1, r0")
(comment . ";;2068: r4 <- r1, 0x20\n")
(comment . ";;2072: r10 <- r1, 0x28\n")
chunklet-i: 2076; chunklet-start-i: 2076; chunklet-end-i: 2112
i: 2076
end-i: 2112
i: 2076
end-i: 2112
i: 2080
end-i: 2112
i: 2084
end-i: 2112
i: 2088
end-i: 2112
i: 2092
end-i: 2112
i: 2096
end-i: 2112
i: 2108
end-i: 2112
i: 2112
end-i: 2112
at header: 2112
(comment . ";;2076: r9 <- 0x4")
(comment . ";;2080: r4 <- r1, 0x20\n")
(comment . ";;2084: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2092: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2108: b r6")
chunklet-i: 2112; chunklet-start-i: 2128; chunklet-end-i: 2152
i: 2112
end-i: 2152
at header: 2112
i: 2128
end-i: 2152
i: 2132
end-i: 2152
i: 2136
end-i: 2152
i: 2140
end-i: 2152
i: 2144
end-i: 2152
i: 2148
end-i: 2152
i: 2152
end-i: 2152
i:2152 HIT CHUNK END
(comment . ";;2128: r1 <- r1, r8")
(comment . ";;2132: r15 <- 0x4")
(comment . ";;2136: r4 <- r1, 0x20\n")
(comment . ";;2140: r15 <- 0x6")
(comment . ";;2148 b -2020")
chunklet-i: 2152; chunklet-start-i: 2152; chunklet-end-i: 2156
i: 2152
end-i: 2156
i: 2156
end-i: 2156
i:2156 HIT CHUNK END
(comment . ";;2152 b -572")
chunklet-i: 2156; chunklet-start-i: 2156; chunklet-end-i: 2164
i: 2156
end-i: 2164
i: 2156
end-i: 2164
i: 2160
end-i: 2164
i: 2164
end-i: 2164
i:2164 HIT CHUNK END
(comment . ";;2156: r3 <- r3, 0x1\n")
(comment . ";;2160 b 68")
chunklet-i: 2164; chunklet-start-i: 2164; chunklet-end-i: 2200
i: 2164
end-i: 2200
i: 2168
end-i: 2200
i: 2172
end-i: 2200
i: 2176
end-i: 2200
i: 2180
end-i: 2200
i: 2184
end-i: 2200
i: 2196
end-i: 2200
i: 2200
end-i: 2200
at header: 2200
(comment . ";;2164: r4 <- r1, 0x20\n")
(comment . ";;2168: r9 <- r1, 0x28\n")
(comment . ";;2172: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2196: b r6")
chunklet-i: 2200; chunklet-start-i: 2216; chunklet-end-i: 2232
i: 2200
end-i: 2232
at header: 2200
i: 2216
end-i: 2232
i: 2220
end-i: 2232
i: 2224
end-i: 2232
i: 2228
end-i: 2232
i: 2232
end-i: 2232
i:2232 HIT CHUNK END
(comment . ";;2220: r1 <- r1, r0")
(comment . ";;2224: r4 <- r1, 0x20\n")
(comment . ";;2228: r9 <- r1, 0x28\n")
chunklet-i: 2232; chunklet-start-i: 2232; chunklet-end-i: 2264
i: 2232
end-i: 2264
i: 2232
end-i: 2264
i: 2236
end-i: 2264
i: 2240
end-i: 2264
i: 2244
end-i: 2264
i: 2248
end-i: 2264
i: 2260
end-i: 2264
i: 2264
end-i: 2264
at header: 2264
(comment . ";;2232: r4 <- r1, 0x20\n")
(comment . ";;2236: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2244: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2260: b r6")
chunklet-i: 2264; chunklet-start-i: 2280; chunklet-end-i: 2296
i: 2264
end-i: 2296
at header: 2264
i: 2280
end-i: 2296
i: 2284
end-i: 2296
i: 2288
end-i: 2296
i: 2292
end-i: 2296
i: 2296
end-i: 2296
i:2296 HIT CHUNK END
(comment . ";;2280: r1 <- r1, r8")
(comment . ";;2284: r10 <- 0x4")
(comment . ";;2288: r4 <- r1, 0x20\n")
(comment . ";;2292 b -2184")
chunklet-i: 2296; chunklet-start-i: 2296; chunklet-end-i: 2308
i: 2296
end-i: 2308
i: 2296
end-i: 2308
i: 2308
end-i: 2308
i:2308 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 2308; chunklet-start-i: 2312; chunklet-end-i: 2316
i: 2308
end-i: 2316
i: 2312
end-i: 2316
i: 2316
end-i: 2316
i:2316 HIT CHUNK END
(comment . ";; instruction 2308 not included")
(comment . ";;2312 b -2268")
chunklet-i: 2316; chunklet-start-i: 2316; chunklet-end-i: 2328
i: 2316
end-i: 2328
i: 2316
end-i: 2328
i: 2328
end-i: 2328
i:2328 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 2328; chunklet-start-i: 2332; chunklet-end-i: 2336
i: 2328
end-i: 2336
i: 2332
end-i: 2336
i: 2336
end-i: 2336
i:2336 HIT CHUNK END
(comment . ";; instruction 2328 not included")
(comment . ";;2332 b -2312")
chunklet-i: 2336; chunklet-start-i: 2336; chunklet-end-i: 2352
i: 2336
end-i: 2352
i: 2336
end-i: 2352
i: 2348
end-i: 2352
i: 2352
end-i: 2352
i:2352 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;2348: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: definePiece
instruction range for chunk: 0 12
instruction range for chunk: 12 48
instruction range for chunk: 48 64
instruction range for chunk: 64 76
instruction range for chunk: 76 84
instruction range for chunk: 84 92
instruction range for chunk: 92 96
instruction range for chunk: 96 108
instruction range for chunk: 108 116
instruction range for chunk: 116 124
instruction range for chunk: 124 128
instruction range for chunk: 128 140
instruction range for chunk: 140 148
instruction range for chunk: 148 156
instruction range for chunk: 156 180
instruction range for chunk: 180 204
instruction range for chunk: 204 208
instruction range for chunk: 208 220
instruction range for chunk: 220 232
instruction range for chunk: 232 244
instruction range for chunk: 244 252
instruction range for chunk: 252 256
instruction range for chunk: 256 268
instruction range for chunk: 268 280
instruction range for chunk: 280 284
instruction range for chunk: 284 296
instruction range for chunk: 296 304
instruction range for chunk: 304 308
instruction range for chunk: 308 324
instruction range for chunk: 324 336
instruction range for chunk: 336 348
instruction range for chunk: 348 372
instruction range for chunk: 372 396
instruction range for chunk: 396 408
instruction range for chunk: 408 428
instruction range for chunk: 428 440
instruction range for chunk: 440 464
instruction range for chunk: 464 476
instruction range for chunk: 476 484
instruction range for chunk: 484 500
instruction range for chunk: 500 520
instruction range for chunk: 520 528
instruction range for chunk: 528 536
instruction range for chunk: 536 600
instruction range for chunk: 616 660
instruction range for chunk: 660 680
instruction range for chunk: 680 704
instruction range for chunk: 704 768
instruction range for chunk: 784 836
instruction range for chunk: 836 896
instruction range for chunk: 912 960
instruction range for chunk: 960 972
instruction range for chunk: 976 984
instruction range for chunk: 984 1048
instruction range for chunk: 1064 1112
instruction range for chunk: 1112 1176
instruction range for chunk: 1192 1236
instruction range for chunk: 1236 1304
instruction range for chunk: 1320 1372
instruction range for chunk: 1372 1440
instruction range for chunk: 1456 1504
instruction range for chunk: 1504 1568
instruction range for chunk: 1584 1636
instruction range for chunk: 1636 1696
instruction range for chunk: 1712 1756
instruction range for chunk: 1756 1816
instruction range for chunk: 1832 1876
instruction range for chunk: 1876 1884
instruction range for chunk: 1884 1892
instruction range for chunk: 1892 1900
instruction range for chunk: 1900 1960
instruction range for chunk: 1976 2012
instruction range for chunk: 2012 2020
instruction range for chunk: 2020 2080
instruction range for chunk: 2096 2132
instruction range for chunk: 2132 2200
instruction range for chunk: 2216 2268
instruction range for chunk: 2268 2272
instruction range for chunk: 2272 2328
instruction range for chunk: 2344 2384
instruction range for chunk: 2384 2392
instruction range for chunk: 2392 2400
instruction range for chunk: 2400 2408
instruction range for chunk: 2408 2464
instruction range for chunk: 2480 2512
instruction range for chunk: 2512 2520
instruction range for chunk: 2520 2576
instruction range for chunk: 2592 2624
instruction range for chunk: 2624 2688
instruction range for chunk: 2704 2752
instruction range for chunk: 2752 2756
instruction range for chunk: 2756 2808
instruction range for chunk: 2824 2856
instruction range for chunk: 2856 2880
instruction range for chunk: 2880 2904
instruction range for chunk: 2904 2916
instruction range for chunk: 2916 2928
instruction range for chunk: 2928 2936
instruction range for chunk: 2936 2952
instruction range for chunk: 2952 2972
instruction range for chunk: 2972 2984
instruction range for chunk: 2984 2996
instruction range for chunk: 2996 3020
instruction range for chunk: 3020 3044
instruction range for chunk: 3044 3060
instruction range for chunk: 3060 3072
instruction range for chunk: 3072 3080
instruction range for chunk: 3080 3096
instruction range for chunk: 3096 3116
instruction range for chunk: 3116 3128
instruction range for chunk: 3128 3140
instruction range for chunk: 3140 3164
instruction range for chunk: 3164 3188
instruction range for chunk: 3188 3200
instruction range for chunk: 3200 3208
instruction range for chunk: 3208 3216
instruction range for chunk: 3216 3252
instruction range for chunk: 3252 3260
instruction range for chunk: 3260 3268
instruction range for chunk: 3268 3284
instruction range for chunk: 3284 3296
instruction range for chunk: 3296 3308
instruction range for chunk: 3308 3332
instruction range for chunk: 3332 3344
instruction range for chunk: 3348 3356
instruction range for chunk: 3356 3364
instruction range for chunk: 3364 3400
instruction range for chunk: 3416 3428
instruction range for chunk: 3428 3464
instruction range for chunk: 3480 3492
instruction range for chunk: 3492 3500
instruction range for chunk: 3500 3536
instruction range for chunk: 3552 3568
instruction range for chunk: 3568 3600
instruction range for chunk: 3616 3636
instruction range for chunk: 3636 3644
instruction range for chunk: 3644 3680
instruction range for chunk: 3696 3712
instruction range for chunk: 3712 3744
instruction range for chunk: 3760 3776
instruction range for chunk: 3776 3780
instruction range for chunk: 3780 3788
instruction range for chunk: 3788 3824
instruction range for chunk: 3840 3856
instruction range for chunk: 3856 3888
instruction range for chunk: 3904 3920
instruction range for chunk: 3920 3928
instruction range for chunk: 3928 3960
instruction range for chunk: 3976 3988
instruction range for chunk: 3988 4016
instruction range for chunk: 4032 4044
instruction range for chunk: 4044 4056
instruction range for chunk: 4060 4068
instruction range for chunk: 4068 4088
instruction range for chunk: 4088 4096
instruction range for chunk: 4096 4136
instruction range for chunk: 4152 4172
instruction range for chunk: 4172 4208
instruction range for chunk: 4224 4244
instruction range for chunk: 4244 4252
instruction range for chunk: 4252 4288
instruction range for chunk: 4304 4320
instruction range for chunk: 4320 4352
instruction range for chunk: 4368 4380
instruction range for chunk: 4380 4392
instruction range for chunk: 4396 4404
instruction range for chunk: 4404 4428
instruction range for chunk: 4428 4436
instruction range for chunk: 4436 4480
instruction range for chunk: 4496 4520
instruction range for chunk: 4520 4560
instruction range for chunk: 4576 4600
instruction range for chunk: 4600 4608
instruction range for chunk: 4608 4648
instruction range for chunk: 4664 4684
instruction range for chunk: 4684 4720
instruction range for chunk: 4736 4756
instruction range for chunk: 4756 4764
instruction range for chunk: 4764 4816
instruction range for chunk: 4832 4860
instruction range for chunk: 4860 4920
instruction range for chunk: 4936 4976
instruction range for chunk: 4976 4980
instruction range for chunk: 4980 4992
instruction range for chunk: 4996 5000
instruction range for chunk: 5000 5016
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x4")
(comment . ";;8 b 4988")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 48
i: 12
end-i: 48
i: 16
end-i: 48
i: 20
end-i: 48
i: 24
end-i: 48
i: 28
end-i: 48
i: 32
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;12: r15 <- 0x9")
(comment . ";;16: r14 <- 0xA")
(comment . ";;20: r13 <- r1, 0x8\n")
(comment . ";;24: r12 <- 0x0")
(comment . ";;28: r5 <- r2, r9")
(comment . ";;32: r2 <- r2, r0")
(comment . ";;36: r10 <- r0, 0x68\n")
(comment . ";;40: r10 <- r2")
(comment . ";;44 b 4932")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 64
i: 48
end-i: 64
i: 48
end-i: 64
i: 52
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;48: r12 <- r5, 0x7\n")
(comment . ";;52: r12 <- 0x1E")
(comment . ";;56: r12 <- r5, 0xF\n")
(comment . ";;60: r4 <- 0x0")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 76
i: 64
end-i: 76
i: 64
end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;64: r12 <- r4, r14")
(comment . ";;68: r12 <- 0x7")
(comment . ";;72 b 4680")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 84
i: 76
end-i: 84
i: 80
end-i: 84
i: 84
end-i: 84
i:84 HIT CHUNK END
(comment . ";;76: r4 <- r14")
(comment . ";;80 b 2772")
chunklet-i: 84; chunklet-start-i: 84; chunklet-end-i: 92
i: 84
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;84: r3 <- r3, 0x1\n")
(comment . ";;88 b 2664")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 96
i: 92
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
i:96 HIT CHUNK END
(comment . ";;92: r12 <- 0x0")
chunklet-i: 96; chunklet-start-i: 96; chunklet-end-i: 108
i: 96
end-i: 108
i: 96
end-i: 108
i: 100
end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
(comment . ";;96: r10 <- r12, r11")
(comment . ";;100: r10 <- 0x7")
(comment . ";;104 b 2404")
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;108: r12 <- r11")
(comment . ";;112 b 2268")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 124
i: 116
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;116: r3 <- r3, 0x1\n")
(comment . ";;120 b 2148")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 128
i: 124
end-i: 128
i: 124
end-i: 128
i: 128
end-i: 128
i:128 HIT CHUNK END
(comment . ";;124: r8 <- 0x0")
chunklet-i: 128; chunklet-start-i: 128; chunklet-end-i: 140
i: 128
end-i: 140
i: 128
end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";;128: r10 <- r8, r13")
(comment . ";;132: r10 <- 0x7")
(comment . ";;136 b 1872")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 148
i: 140
end-i: 148
i: 144
end-i: 148
i: 148
end-i: 148
i:148 HIT CHUNK END
(comment . ";;140: r8 <- r13")
(comment . ";;144 b 1728")
chunklet-i: 148; chunklet-start-i: 148; chunklet-end-i: 156
i: 148
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;148: r3 <- r3, 0x1\n")
(comment . ";;152 b 1600")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 180
i: 156
end-i: 180
i: 156
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;168: r7 <- r9, 0x5\n")
(comment . ";;172: r7 <- 0x1E")
(comment . ";;176 b 1456")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 204
i: 180
end-i: 204
i: 180
end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;192: r10 <- r9, 0x5\n")
(comment . ";;196: r10 <- 0x1E")
(comment . ";;200 b 1300")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 208
i: 204
end-i: 208
i: 208
end-i: 208
i:208 HIT CHUNK END
(comment . ";;204: r9 <- 0xA")
chunklet-i: 208; chunklet-start-i: 208; chunklet-end-i: 220
i: 208
end-i: 220
i: 208
end-i: 220
i: 212
end-i: 220
i: 216
end-i: 220
i: 220
end-i: 220
i:220 HIT CHUNK END
(comment . ";;208: r10 <- r9, r8")
(comment . ";;212: r10 <- 0x7")
(comment . ";;216 b 1152")
chunklet-i: 220; chunklet-start-i: 220; chunklet-end-i: 232
i: 220
end-i: 232
i: 224
end-i: 232
i: 228
end-i: 232
i: 232
end-i: 232
i:232 HIT CHUNK END
(comment . ";;220: r10 <- r8, r3")
(comment . ";;224: r10 <- r9, r10")
(comment . ";;228 b 1140")
chunklet-i: 232; chunklet-start-i: 232; chunklet-end-i: 244
i: 232
end-i: 244
i: 232
end-i: 244
i: 236
end-i: 244
i: 240
end-i: 244
i: 244
end-i: 244
i:244 HIT CHUNK END
(comment . ";;232: r9 <- r12, r10")
(comment . ";;236: r9 <- 0x7")
(comment . ";;240 b 992")
chunklet-i: 244; chunklet-start-i: 244; chunklet-end-i: 252
i: 244
end-i: 252
i: 248
end-i: 252
i: 252
end-i: 252
i:252 HIT CHUNK END
(comment . ";;244: r9 <- r12, r10")
(comment . ";;248 b 984")
chunklet-i: 252; chunklet-start-i: 252; chunklet-end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;252: r10 <- 0x9")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 268
i: 256
end-i: 268
i: 256
end-i: 268
i: 260
end-i: 268
i: 264
end-i: 268
i: 268
end-i: 268
i:268 HIT CHUNK END
(comment . ";;256: r9 <- r7, r10")
(comment . ";;260: r9 <- 0x7")
(comment . ";;264 b 844")
chunklet-i: 268; chunklet-start-i: 268; chunklet-end-i: 280
i: 268
end-i: 280
i: 272
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";;268: r9 <- r10, r3")
(comment . ";;272: r9 <- r7, r9")
(comment . ";;276 b 832")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 284
i: 280
end-i: 284
i: 284
end-i: 284
i:284 HIT CHUNK END
(comment . ";;280: r10 <- 0x9")
chunklet-i: 284; chunklet-start-i: 284; chunklet-end-i: 296
i: 284
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";;284: r9 <- r4, r10")
(comment . ";;288: r9 <- 0x7")
(comment . ";;292 b 688")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;296: r9 <- r4, r10")
(comment . ";;300 b 680")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;304: r10 <- 0x9")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 324
i: 308
end-i: 324
i: 308
end-i: 324
i: 312
end-i: 324
i: 316
end-i: 324
i: 320
end-i: 324
i: 324
end-i: 324
i:324 HIT CHUNK END
(comment . ";;308: r9 <- r5, r7")
(comment . ";;312: r10 <- r9, 0x0\n")
(comment . ";;316: r10 <- 0x7")
(comment . ";;320 b 24")
chunklet-i: 324; chunklet-start-i: 324; chunklet-end-i: 336
i: 324
end-i: 336
i: 328
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
i:336 HIT CHUNK END
(comment . ";;324: r7 <- r0, 0x68\n")
(comment . ";;328: r2 <- r7")
(comment . ";;332 b 624")
chunklet-i: 336; chunklet-start-i: 336; chunklet-end-i: 348
i: 336
end-i: 348
i: 336
end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";;336: r7 <- r7, r8")
(comment . ";;340: r7 <- r0, 0x68\n")
(comment . ";;344: r9 <- r7, 0x0\n")
chunklet-i: 348; chunklet-start-i: 348; chunklet-end-i: 372
i: 348
end-i: 372
i: 348
end-i: 372
i: 360
end-i: 372
i: 364
end-i: 372
i: 368
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;360: r10 <- r9, 0x5\n")
(comment . ";;364: r10 <- 0x1E")
(comment . ";;368 b 464")
chunklet-i: 372; chunklet-start-i: 372; chunklet-end-i: 396
i: 372
end-i: 396
i: 372
end-i: 396
i: 384
end-i: 396
i: 388
end-i: 396
i: 392
end-i: 396
i: 396
end-i: 396
i:396 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;384: r7 <- r9, 0x5\n")
(comment . ";;388: r7 <- 0x1E")
(comment . ";;392 b 308")
chunklet-i: 396; chunklet-start-i: 396; chunklet-end-i: 408
i: 396
end-i: 408
i: 396
end-i: 408
i: 400
end-i: 408
i: 404
end-i: 408
i: 408
end-i: 408
i:408 HIT CHUNK END
(comment . ";;396: r9 <- r10, r7")
(comment . ";;400: r9 <- 0x7")
(comment . ";;404 b 272")
chunklet-i: 408; chunklet-start-i: 408; chunklet-end-i: 428
i: 408
end-i: 428
i: 412
end-i: 428
i: 416
end-i: 428
i: 420
end-i: 428
i: 424
end-i: 428
i: 428
end-i: 428
i:428 HIT CHUNK END
(comment . ";;408: r9 <- r10, 0x1\n")
(comment . ";;412: r6 <- r9, r1")
(comment . ";;416: r6 <- r6, r8")
(comment . ";;420: r7 <- r6")
(comment . ";;424 b 252")
chunklet-i: 428; chunklet-start-i: 428; chunklet-end-i: 440
i: 428
end-i: 440
i: 432
end-i: 440
i: 436
end-i: 440
i: 440
end-i: 440
i:440 HIT CHUNK END
(comment . ";;428: r9 <- r7, r9")
(comment . ";;432: r9 <- 0x7")
(comment . ";;436 b 240")
chunklet-i: 440; chunklet-start-i: 440; chunklet-end-i: 464
i: 440
end-i: 464
i: 444
end-i: 464
i: 448
end-i: 464
i: 452
end-i: 464
i: 456
end-i: 464
i: 460
end-i: 464
i: 464
end-i: 464
i:464 HIT CHUNK END
(comment . ";;440: r9 <- r7, r9")
(comment . ";;444: r9 <- r10, r9")
(comment . ";;448: r10 <- r5, 0x7\n")
(comment . ";;452: r7 <- r9, r7")
(comment . ";;456: r7 <- 0x7")
(comment . ";;460 b 196")
chunklet-i: 464; chunklet-start-i: 464; chunklet-end-i: 476
i: 464
end-i: 476
i: 468
end-i: 476
i: 472
end-i: 476
i: 476
end-i: 476
i:476 HIT CHUNK END
(comment . ";;464: r7 <- r9, 0x1\n")
(comment . ";;468: r7 <- 0xF")
(comment . ";;472 b 184")
chunklet-i: 476; chunklet-start-i: 476; chunklet-end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;476: r10 <- 0x7")
(comment . ";;480 b 176")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 500
i: 484
end-i: 500
i: 488
end-i: 500
i: 492
end-i: 500
i: 496
end-i: 500
i: 500
end-i: 500
i:500 HIT CHUNK END
(comment . ";;484: r7 <- r7, r1")
(comment . ";;488: r7 <- r7, r8")
(comment . ";;492: r10 <- r7")
(comment . ";;496 b 160")
chunklet-i: 500; chunklet-start-i: 500; chunklet-end-i: 520
i: 500
end-i: 520
i: 504
end-i: 520
i: 508
end-i: 520
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;500: r7 <- 0xE")
(comment . ";;504: r10 <- r10, r9")
(comment . ";;508: r7 <- r9, r10")
(comment . ";;512: r8 <- 0x7")
(comment . ";;516 b 16")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 528
i: 520
end-i: 528
i: 524
end-i: 528
i: 528
end-i: 528
i:528 HIT CHUNK END
(comment . ";;520: r10 <- r8, 0x8\n")
(comment . ";;524 b 8")
chunklet-i: 528; chunklet-start-i: 528; chunklet-end-i: 536
i: 528
end-i: 536
i: 532
end-i: 536
i: 536
end-i: 536
i:536 HIT CHUNK END
(comment . ";;528: r8 <- 0xA")
(comment . ";;532 b -408")
chunklet-i: 536; chunklet-start-i: 536; chunklet-end-i: 600
i: 536
end-i: 600
i: 536
end-i: 600
i: 540
end-i: 600
i: 544
end-i: 600
i: 548
end-i: 600
i: 552
end-i: 600
i: 556
end-i: 600
i: 560
end-i: 600
i: 564
end-i: 600
i: 568
end-i: 600
i: 572
end-i: 600
i: 576
end-i: 600
i: 580
end-i: 600
i: 584
end-i: 600
i: 596
end-i: 600
i: 600
end-i: 600
at header: 600
(comment . ";;536: r9 <- 0x8")
(comment . ";;540: r10 <- 0x8")
(comment . ";;544: r15 <- r1, 0x10\n")
(comment . ";;548: r14 <- r1, 0x18\n")
(comment . ";;552: r11 <- r1, 0x20\n")
(comment . ";;556: r13 <- r1, 0x8\n")
(comment . ";;560: r5 <- r1, 0x28\n")
(comment . ";;564: r4 <- r1, 0x30\n")
(comment . ";;568: r12 <- r1, 0x38\n")
(comment . ";;572: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;580: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;596: b r6")
chunklet-i: 600; chunklet-start-i: 616; chunklet-end-i: 660
i: 600
end-i: 660
at header: 600
i: 616
end-i: 660
i: 620
end-i: 660
i: 624
end-i: 660
i: 628
end-i: 660
i: 632
end-i: 660
i: 636
end-i: 660
i: 640
end-i: 660
i: 644
end-i: 660
i: 648
end-i: 660
i: 652
end-i: 660
i: 656
end-i: 660
i: 660
end-i: 660
i:660 HIT CHUNK END
(comment . ";;616: r1 <- r1, r0")
(comment . ";;620: r8 <- 0x4")
(comment . ";;624: r15 <- r1, 0x10\n")
(comment . ";;628: r14 <- r1, 0x18\n")
(comment . ";;632: r11 <- r1, 0x20\n")
(comment . ";;636: r13 <- r1, 0x8\n")
(comment . ";;640: r5 <- r1, 0x28\n")
(comment . ";;644: r4 <- r1, 0x30\n")
(comment . ";;648: r12 <- r1, 0x38\n")
(comment . ";;656 b -532")
chunklet-i: 660; chunklet-start-i: 660; chunklet-end-i: 680
i: 660
end-i: 680
i: 660
end-i: 680
i: 664
end-i: 680
i: 676
end-i: 680
i: 680
end-i: 680
i:680 HIT CHUNK END
(comment . ";;660: r11 <- 0xE")
(comment . ";; literal r6")
(comment . ";;676: b r6")
chunklet-i: 680; chunklet-start-i: 680; chunklet-end-i: 704
i: 680
end-i: 704
i: 680
end-i: 704
i: 684
end-i: 704
i: 688
end-i: 704
i: 700
end-i: 704
i: 704
end-i: 704
i:704 HIT CHUNK END
(comment . ";;680: r9 <- 0xA")
(comment . ";;684: r10 <- 0x7")
(comment . ";; literal r6")
(comment . ";;700: b r6")
chunklet-i: 704; chunklet-start-i: 704; chunklet-end-i: 768
i: 704
end-i: 768
i: 704
end-i: 768
i: 708
end-i: 768
i: 712
end-i: 768
i: 716
end-i: 768
i: 720
end-i: 768
i: 724
end-i: 768
i: 728
end-i: 768
i: 732
end-i: 768
i: 736
end-i: 768
i: 740
end-i: 768
i: 744
end-i: 768
i: 748
end-i: 768
i: 752
end-i: 768
i: 764
end-i: 768
i: 768
end-i: 768
at header: 768
(comment . ";;704: r15 <- r1, 0x10\n")
(comment . ";;708: r14 <- r1, 0x18\n")
(comment . ";;712: r11 <- r1, 0x20\n")
(comment . ";;716: r13 <- r1, 0x8\n")
(comment . ";;720: r5 <- r1, 0x28\n")
(comment . ";;724: r4 <- r1, 0x30\n")
(comment . ";;728: r12 <- r1, 0x38\n")
(comment . ";;732: r8 <- r1, 0x40\n")
(comment . ";;736: r10 <- r1, 0x48\n")
(comment . ";;740: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;748: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;764: b r6")
chunklet-i: 768; chunklet-start-i: 784; chunklet-end-i: 836
i: 768
end-i: 836
at header: 768
i: 784
end-i: 836
i: 788
end-i: 836
i: 792
end-i: 836
i: 796
end-i: 836
i: 800
end-i: 836
i: 804
end-i: 836
i: 808
end-i: 836
i: 812
end-i: 836
i: 816
end-i: 836
i: 820
end-i: 836
i: 824
end-i: 836
i: 828
end-i: 836
i: 832
end-i: 836
i: 836
end-i: 836
i:836 HIT CHUNK END
(comment . ";;784: r1 <- r1, r0")
(comment . ";;788: r7 <- 0x4")
(comment . ";;792: r15 <- r1, 0x10\n")
(comment . ";;796: r14 <- r1, 0x18\n")
(comment . ";;800: r11 <- r1, 0x20\n")
(comment . ";;804: r13 <- r1, 0x8\n")
(comment . ";;808: r5 <- r1, 0x28\n")
(comment . ";;812: r4 <- r1, 0x30\n")
(comment . ";;816: r12 <- r1, 0x38\n")
(comment . ";;820: r8 <- r1, 0x40\n")
(comment . ";;824: r10 <- r1, 0x48\n")
(comment . ";;832 b -440")
chunklet-i: 836; chunklet-start-i: 836; chunklet-end-i: 896
i: 836
end-i: 896
i: 836
end-i: 896
i: 840
end-i: 896
i: 844
end-i: 896
i: 848
end-i: 896
i: 852
end-i: 896
i: 856
end-i: 896
i: 860
end-i: 896
i: 864
end-i: 896
i: 868
end-i: 896
i: 872
end-i: 896
i: 876
end-i: 896
i: 880
end-i: 896
i: 892
end-i: 896
i: 896
end-i: 896
at header: 896
(comment . ";;836: r15 <- r1, 0x10\n")
(comment . ";;840: r14 <- r1, 0x18\n")
(comment . ";;844: r11 <- r1, 0x20\n")
(comment . ";;848: r13 <- r1, 0x8\n")
(comment . ";;852: r5 <- r1, 0x28\n")
(comment . ";;856: r4 <- r1, 0x30\n")
(comment . ";;860: r12 <- r1, 0x38\n")
(comment . ";;864: r8 <- r1, 0x40\n")
(comment . ";;868: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;876: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;892: b r6")
chunklet-i: 896; chunklet-start-i: 912; chunklet-end-i: 960
i: 896
end-i: 960
at header: 896
i: 912
end-i: 960
i: 916
end-i: 960
i: 920
end-i: 960
i: 924
end-i: 960
i: 928
end-i: 960
i: 932
end-i: 960
i: 936
end-i: 960
i: 940
end-i: 960
i: 944
end-i: 960
i: 948
end-i: 960
i: 952
end-i: 960
i: 956
end-i: 960
i: 960
end-i: 960
i:960 HIT CHUNK END
(comment . ";;912: r1 <- r1, r8")
(comment . ";;916: r10 <- 0x4")
(comment . ";;920: r15 <- r1, 0x10\n")
(comment . ";;924: r14 <- r1, 0x18\n")
(comment . ";;928: r11 <- r1, 0x20\n")
(comment . ";;932: r13 <- r1, 0x8\n")
(comment . ";;936: r5 <- r1, 0x28\n")
(comment . ";;940: r4 <- r1, 0x30\n")
(comment . ";;944: r12 <- r1, 0x38\n")
(comment . ";;948: r8 <- r1, 0x40\n")
(comment . ";;956 b -588")
chunklet-i: 960; chunklet-start-i: 960; chunklet-end-i: 972
i: 960
end-i: 972
i: 960
end-i: 972
i: 972
end-i: 972
i:972 HIT CHUNK END
(comment . ";; literal r10")
chunklet-i: 972; chunklet-start-i: 976; chunklet-end-i: 984
i: 972
end-i: 984
i: 976
end-i: 984
i: 980
end-i: 984
i: 984
end-i: 984
i:984 HIT CHUNK END
(comment . ";; instruction 972 not included")
(comment . ";;976: r7 <- r0, 0x68\n")
(comment . ";;980 b -648")
chunklet-i: 984; chunklet-start-i: 984; chunklet-end-i: 1048
i: 984
end-i: 1048
i: 984
end-i: 1048
i: 988
end-i: 1048
i: 992
end-i: 1048
i: 996
end-i: 1048
i: 1000
end-i: 1048
i: 1004
end-i: 1048
i: 1008
end-i: 1048
i: 1012
end-i: 1048
i: 1016
end-i: 1048
i: 1020
end-i: 1048
i: 1024
end-i: 1048
i: 1028
end-i: 1048
i: 1032
end-i: 1048
i: 1044
end-i: 1048
i: 1048
end-i: 1048
at header: 1048
(comment . ";;984: r9 <- 0x4")
(comment . ";;988: r15 <- r1, 0x10\n")
(comment . ";;992: r14 <- r1, 0x18\n")
(comment . ";;996: r11 <- r1, 0x20\n")
(comment . ";;1000: r13 <- r1, 0x8\n")
(comment . ";;1004: r5 <- r1, 0x28\n")
(comment . ";;1008: r4 <- r1, 0x30\n")
(comment . ";;1012: r12 <- r1, 0x38\n")
(comment . ";;1016: r8 <- r1, 0x40\n")
(comment . ";;1020: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1028: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1044: b r6")
chunklet-i: 1048; chunklet-start-i: 1064; chunklet-end-i: 1112
i: 1048
end-i: 1112
at header: 1048
i: 1064
end-i: 1112
i: 1068
end-i: 1112
i: 1072
end-i: 1112
i: 1076
end-i: 1112
i: 1080
end-i: 1112
i: 1084
end-i: 1112
i: 1088
end-i: 1112
i: 1092
end-i: 1112
i: 1096
end-i: 1112
i: 1100
end-i: 1112
i: 1104
end-i: 1112
i: 1108
end-i: 1112
i: 1112
end-i: 1112
i:1112 HIT CHUNK END
(comment . ";;1064: r1 <- r1, r8")
(comment . ";;1068: r10 <- 0x4")
(comment . ";;1072: r15 <- r1, 0x10\n")
(comment . ";;1076: r14 <- r1, 0x18\n")
(comment . ";;1080: r11 <- r1, 0x20\n")
(comment . ";;1084: r13 <- r1, 0x8\n")
(comment . ";;1088: r5 <- r1, 0x28\n")
(comment . ";;1092: r4 <- r1, 0x30\n")
(comment . ";;1096: r12 <- r1, 0x38\n")
(comment . ";;1100: r8 <- r1, 0x40\n")
(comment . ";;1108 b -804")
chunklet-i: 1112; chunklet-start-i: 1112; chunklet-end-i: 1176
i: 1112
end-i: 1176
i: 1112
end-i: 1176
i: 1116
end-i: 1176
i: 1120
end-i: 1176
i: 1124
end-i: 1176
i: 1128
end-i: 1176
i: 1132
end-i: 1176
i: 1136
end-i: 1176
i: 1140
end-i: 1176
i: 1144
end-i: 1176
i: 1148
end-i: 1176
i: 1152
end-i: 1176
i: 1156
end-i: 1176
i: 1160
end-i: 1176
i: 1172
end-i: 1176
i: 1176
end-i: 1176
at header: 1176
(comment . ";;1112: r9 <- 0x7")
(comment . ";;1116: r15 <- r1, 0x10\n")
(comment . ";;1120: r14 <- r1, 0x18\n")
(comment . ";;1124: r11 <- r1, 0x20\n")
(comment . ";;1128: r13 <- r1, 0x8\n")
(comment . ";;1132: r5 <- r1, 0x28\n")
(comment . ";;1136: r4 <- r1, 0x30\n")
(comment . ";;1140: r12 <- r1, 0x38\n")
(comment . ";;1144: r8 <- r1, 0x40\n")
(comment . ";;1148: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1156: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1172: b r6")
chunklet-i: 1176; chunklet-start-i: 1192; chunklet-end-i: 1236
i: 1176
end-i: 1236
at header: 1176
i: 1192
end-i: 1236
i: 1196
end-i: 1236
i: 1200
end-i: 1236
i: 1204
end-i: 1236
i: 1208
end-i: 1236
i: 1212
end-i: 1236
i: 1216
end-i: 1236
i: 1220
end-i: 1236
i: 1224
end-i: 1236
i: 1228
end-i: 1236
i: 1232
end-i: 1236
i: 1236
end-i: 1236
i:1236 HIT CHUNK END
(comment . ";;1192: r1 <- r1, r8")
(comment . ";;1196: r10 <- 0x4")
(comment . ";;1200: r15 <- r1, 0x10\n")
(comment . ";;1204: r14 <- r1, 0x18\n")
(comment . ";;1208: r11 <- r1, 0x20\n")
(comment . ";;1212: r13 <- r1, 0x8\n")
(comment . ";;1216: r5 <- r1, 0x28\n")
(comment . ";;1220: r4 <- r1, 0x30\n")
(comment . ";;1224: r12 <- r1, 0x38\n")
(comment . ";;1228: r8 <- r1, 0x40\n")
(comment . ";;1232 b -952")
chunklet-i: 1236; chunklet-start-i: 1236; chunklet-end-i: 1304
i: 1236
end-i: 1304
i: 1236
end-i: 1304
i: 1240
end-i: 1304
i: 1244
end-i: 1304
i: 1248
end-i: 1304
i: 1252
end-i: 1304
i: 1256
end-i: 1304
i: 1260
end-i: 1304
i: 1264
end-i: 1304
i: 1268
end-i: 1304
i: 1272
end-i: 1304
i: 1276
end-i: 1304
i: 1280
end-i: 1304
i: 1284
end-i: 1304
i: 1288
end-i: 1304
i: 1300
end-i: 1304
i: 1304
end-i: 1304
at header: 1304
(comment . ";;1236: r9 <- 0xC")
(comment . ";;1240: r15 <- r1, 0x10\n")
(comment . ";;1244: r14 <- r1, 0x18\n")
(comment . ";;1248: r11 <- r1, 0x20\n")
(comment . ";;1252: r13 <- r1, 0x8\n")
(comment . ";;1256: r5 <- r1, 0x28\n")
(comment . ";;1260: r4 <- r1, 0x30\n")
(comment . ";;1264: r12 <- r1, 0x38\n")
(comment . ";;1268: r8 <- r1, 0x40\n")
(comment . ";;1272: r7 <- r1, 0x48\n")
(comment . ";;1276: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1284: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1300: b r6")
chunklet-i: 1304; chunklet-start-i: 1320; chunklet-end-i: 1372
i: 1304
end-i: 1372
at header: 1304
i: 1320
end-i: 1372
i: 1324
end-i: 1372
i: 1328
end-i: 1372
i: 1332
end-i: 1372
i: 1336
end-i: 1372
i: 1340
end-i: 1372
i: 1344
end-i: 1372
i: 1348
end-i: 1372
i: 1352
end-i: 1372
i: 1356
end-i: 1372
i: 1360
end-i: 1372
i: 1364
end-i: 1372
i: 1368
end-i: 1372
i: 1372
end-i: 1372
i:1372 HIT CHUNK END
(comment . ";;1320: r1 <- r1, r0")
(comment . ";;1324: r10 <- 0x4")
(comment . ";;1328: r15 <- r1, 0x10\n")
(comment . ";;1332: r14 <- r1, 0x18\n")
(comment . ";;1336: r11 <- r1, 0x20\n")
(comment . ";;1340: r13 <- r1, 0x8\n")
(comment . ";;1344: r5 <- r1, 0x28\n")
(comment . ";;1348: r4 <- r1, 0x30\n")
(comment . ";;1352: r12 <- r1, 0x38\n")
(comment . ";;1356: r8 <- r1, 0x40\n")
(comment . ";;1360: r7 <- r1, 0x48\n")
(comment . ";;1368 b -1116")
chunklet-i: 1372; chunklet-start-i: 1372; chunklet-end-i: 1440
i: 1372
end-i: 1440
i: 1372
end-i: 1440
i: 1376
end-i: 1440
i: 1380
end-i: 1440
i: 1384
end-i: 1440
i: 1388
end-i: 1440
i: 1392
end-i: 1440
i: 1396
end-i: 1440
i: 1400
end-i: 1440
i: 1404
end-i: 1440
i: 1408
end-i: 1440
i: 1412
end-i: 1440
i: 1416
end-i: 1440
i: 1420
end-i: 1440
i: 1424
end-i: 1440
i: 1436
end-i: 1440
i: 1440
end-i: 1440
at header: 1440
(comment . ";;1372: r10 <- 0x8")
(comment . ";;1376: r15 <- r1, 0x10\n")
(comment . ";;1380: r14 <- r1, 0x18\n")
(comment . ";;1384: r11 <- r1, 0x20\n")
(comment . ";;1388: r13 <- r1, 0x8\n")
(comment . ";;1392: r5 <- r1, 0x28\n")
(comment . ";;1396: r4 <- r1, 0x30\n")
(comment . ";;1400: r12 <- r1, 0x38\n")
(comment . ";;1404: r8 <- r1, 0x40\n")
(comment . ";;1408: r7 <- r1, 0x48\n")
(comment . ";;1412: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1420: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1436: b r6")
chunklet-i: 1440; chunklet-start-i: 1456; chunklet-end-i: 1504
i: 1440
end-i: 1504
at header: 1440
i: 1456
end-i: 1504
i: 1460
end-i: 1504
i: 1464
end-i: 1504
i: 1468
end-i: 1504
i: 1472
end-i: 1504
i: 1476
end-i: 1504
i: 1480
end-i: 1504
i: 1484
end-i: 1504
i: 1488
end-i: 1504
i: 1492
end-i: 1504
i: 1496
end-i: 1504
i: 1500
end-i: 1504
i: 1504
end-i: 1504
i:1504 HIT CHUNK END
(comment . ";;1456: r1 <- r1, r0")
(comment . ";;1460: r10 <- 0x4")
(comment . ";;1464: r15 <- r1, 0x10\n")
(comment . ";;1468: r14 <- r1, 0x18\n")
(comment . ";;1472: r11 <- r1, 0x20\n")
(comment . ";;1476: r13 <- r1, 0x8\n")
(comment . ";;1480: r5 <- r1, 0x28\n")
(comment . ";;1484: r4 <- r1, 0x30\n")
(comment . ";;1488: r12 <- r1, 0x38\n")
(comment . ";;1492: r8 <- r1, 0x40\n")
(comment . ";;1496: r7 <- r1, 0x48\n")
(comment . ";;1500 b -1272")
chunklet-i: 1504; chunklet-start-i: 1504; chunklet-end-i: 1568
i: 1504
end-i: 1568
i: 1504
end-i: 1568
i: 1508
end-i: 1568
i: 1512
end-i: 1568
i: 1516
end-i: 1568
i: 1520
end-i: 1568
i: 1524
end-i: 1568
i: 1528
end-i: 1568
i: 1532
end-i: 1568
i: 1536
end-i: 1568
i: 1540
end-i: 1568
i: 1544
end-i: 1568
i: 1548
end-i: 1568
i: 1552
end-i: 1568
i: 1564
end-i: 1568
i: 1568
end-i: 1568
at header: 1568
(comment . ";;1504: r15 <- r1, 0x10\n")
(comment . ";;1508: r14 <- r1, 0x18\n")
(comment . ";;1512: r11 <- r1, 0x20\n")
(comment . ";;1516: r13 <- r1, 0x8\n")
(comment . ";;1520: r5 <- r1, 0x28\n")
(comment . ";;1524: r4 <- r1, 0x30\n")
(comment . ";;1528: r12 <- r1, 0x38\n")
(comment . ";;1532: r8 <- r1, 0x40\n")
(comment . ";;1536: r7 <- r1, 0x48\n")
(comment . ";;1540: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1548: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1564: b r6")
chunklet-i: 1568; chunklet-start-i: 1584; chunklet-end-i: 1636
i: 1568
end-i: 1636
at header: 1568
i: 1584
end-i: 1636
i: 1588
end-i: 1636
i: 1592
end-i: 1636
i: 1596
end-i: 1636
i: 1600
end-i: 1636
i: 1604
end-i: 1636
i: 1608
end-i: 1636
i: 1612
end-i: 1636
i: 1616
end-i: 1636
i: 1620
end-i: 1636
i: 1624
end-i: 1636
i: 1628
end-i: 1636
i: 1632
end-i: 1636
i: 1636
end-i: 1636
i:1636 HIT CHUNK END
(comment . ";;1584: r1 <- r1, r0")
(comment . ";;1588: r9 <- 0x4")
(comment . ";;1592: r15 <- r1, 0x10\n")
(comment . ";;1596: r14 <- r1, 0x18\n")
(comment . ";;1600: r11 <- r1, 0x20\n")
(comment . ";;1604: r13 <- r1, 0x8\n")
(comment . ";;1608: r5 <- r1, 0x28\n")
(comment . ";;1612: r4 <- r1, 0x30\n")
(comment . ";;1616: r12 <- r1, 0x38\n")
(comment . ";;1620: r8 <- r1, 0x40\n")
(comment . ";;1624: r7 <- r1, 0x48\n")
(comment . ";;1632 b -1428")
chunklet-i: 1636; chunklet-start-i: 1636; chunklet-end-i: 1696
i: 1636
end-i: 1696
i: 1636
end-i: 1696
i: 1640
end-i: 1696
i: 1644
end-i: 1696
i: 1648
end-i: 1696
i: 1652
end-i: 1696
i: 1656
end-i: 1696
i: 1660
end-i: 1696
i: 1664
end-i: 1696
i: 1668
end-i: 1696
i: 1672
end-i: 1696
i: 1676
end-i: 1696
i: 1680
end-i: 1696
i: 1692
end-i: 1696
i: 1696
end-i: 1696
at header: 1696
(comment . ";;1636: r15 <- r1, 0x10\n")
(comment . ";;1640: r14 <- r1, 0x18\n")
(comment . ";;1644: r11 <- r1, 0x20\n")
(comment . ";;1648: r13 <- r1, 0x8\n")
(comment . ";;1652: r5 <- r1, 0x28\n")
(comment . ";;1656: r4 <- r1, 0x30\n")
(comment . ";;1660: r12 <- r1, 0x38\n")
(comment . ";;1664: r8 <- r1, 0x40\n")
(comment . ";;1668: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1676: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1692: b r6")
chunklet-i: 1696; chunklet-start-i: 1712; chunklet-end-i: 1756
i: 1696
end-i: 1756
at header: 1696
i: 1712
end-i: 1756
i: 1716
end-i: 1756
i: 1720
end-i: 1756
i: 1724
end-i: 1756
i: 1728
end-i: 1756
i: 1732
end-i: 1756
i: 1736
end-i: 1756
i: 1740
end-i: 1756
i: 1744
end-i: 1756
i: 1748
end-i: 1756
i: 1752
end-i: 1756
i: 1756
end-i: 1756
i:1756 HIT CHUNK END
(comment . ";;1712: r1 <- r1, r8")
(comment . ";;1716: r7 <- 0x4")
(comment . ";;1720: r15 <- r1, 0x10\n")
(comment . ";;1724: r14 <- r1, 0x18\n")
(comment . ";;1728: r11 <- r1, 0x20\n")
(comment . ";;1732: r13 <- r1, 0x8\n")
(comment . ";;1736: r5 <- r1, 0x28\n")
(comment . ";;1740: r4 <- r1, 0x30\n")
(comment . ";;1744: r12 <- r1, 0x38\n")
(comment . ";;1748: r8 <- r1, 0x40\n")
(comment . ";;1752 b -1576")
chunklet-i: 1756; chunklet-start-i: 1756; chunklet-end-i: 1816
i: 1756
end-i: 1816
i: 1756
end-i: 1816
i: 1760
end-i: 1816
i: 1764
end-i: 1816
i: 1768
end-i: 1816
i: 1772
end-i: 1816
i: 1776
end-i: 1816
i: 1780
end-i: 1816
i: 1784
end-i: 1816
i: 1788
end-i: 1816
i: 1792
end-i: 1816
i: 1796
end-i: 1816
i: 1800
end-i: 1816
i: 1812
end-i: 1816
i: 1816
end-i: 1816
at header: 1816
(comment . ";;1756: r15 <- r1, 0x10\n")
(comment . ";;1760: r14 <- r1, 0x18\n")
(comment . ";;1764: r11 <- r1, 0x20\n")
(comment . ";;1768: r13 <- r1, 0x8\n")
(comment . ";;1772: r5 <- r1, 0x28\n")
(comment . ";;1776: r4 <- r1, 0x30\n")
(comment . ";;1780: r12 <- r1, 0x38\n")
(comment . ";;1784: r8 <- r1, 0x40\n")
(comment . ";;1788: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1796: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1812: b r6")
chunklet-i: 1816; chunklet-start-i: 1832; chunklet-end-i: 1876
i: 1816
end-i: 1876
at header: 1816
i: 1832
end-i: 1876
i: 1836
end-i: 1876
i: 1840
end-i: 1876
i: 1844
end-i: 1876
i: 1848
end-i: 1876
i: 1852
end-i: 1876
i: 1856
end-i: 1876
i: 1860
end-i: 1876
i: 1864
end-i: 1876
i: 1868
end-i: 1876
i: 1872
end-i: 1876
i: 1876
end-i: 1876
i:1876 HIT CHUNK END
(comment . ";;1836: r1 <- r1, r8")
(comment . ";;1840: r15 <- r1, 0x10\n")
(comment . ";;1844: r14 <- r1, 0x18\n")
(comment . ";;1848: r11 <- r1, 0x20\n")
(comment . ";;1852: r13 <- r1, 0x8\n")
(comment . ";;1856: r5 <- r1, 0x28\n")
(comment . ";;1860: r4 <- r1, 0x30\n")
(comment . ";;1864: r12 <- r1, 0x38\n")
(comment . ";;1868: r8 <- r1, 0x40\n")
(comment . ";;1872 b -1720")
chunklet-i: 1876; chunklet-start-i: 1876; chunklet-end-i: 1884
i: 1876
end-i: 1884
i: 1876
end-i: 1884
i: 1880
end-i: 1884
i: 1884
end-i: 1884
i:1884 HIT CHUNK END
(comment . ";;1876: r12 <- 0x7")
(comment . ";;1880 b 16")
chunklet-i: 1884; chunklet-start-i: 1884; chunklet-end-i: 1892
i: 1884
end-i: 1892
i: 1888
end-i: 1892
i: 1892
end-i: 1892
i:1892 HIT CHUNK END
(comment . ";;1884: r10 <- r12, 0x8\n")
(comment . ";;1888 b 8")
chunklet-i: 1892; chunklet-start-i: 1892; chunklet-end-i: 1900
i: 1892
end-i: 1900
i: 1896
end-i: 1900
i: 1900
end-i: 1900
i:1900 HIT CHUNK END
(comment . ";;1892: r12 <- 0xA")
(comment . ";;1896 b -1804")
chunklet-i: 1900; chunklet-start-i: 1900; chunklet-end-i: 1960
i: 1900
end-i: 1960
i: 1900
end-i: 1960
i: 1904
end-i: 1960
i: 1908
end-i: 1960
i: 1912
end-i: 1960
i: 1916
end-i: 1960
i: 1920
end-i: 1960
i: 1924
end-i: 1960
i: 1928
end-i: 1960
i: 1932
end-i: 1960
i: 1936
end-i: 1960
i: 1940
end-i: 1960
i: 1944
end-i: 1960
i: 1956
end-i: 1960
i: 1960
end-i: 1960
at header: 1960
(comment . ";;1900: r9 <- 0x8")
(comment . ";;1904: r10 <- 0xC")
(comment . ";;1908: r15 <- r1, 0x10\n")
(comment . ";;1912: r14 <- r1, 0x18\n")
(comment . ";;1916: r11 <- r1, 0x20\n")
(comment . ";;1920: r13 <- r1, 0x8\n")
(comment . ";;1924: r5 <- r1, 0x28\n")
(comment . ";;1928: r4 <- r1, 0x30\n")
(comment . ";;1932: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1940: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1956: b r6")
chunklet-i: 1960; chunklet-start-i: 1976; chunklet-end-i: 2012
i: 1960
end-i: 2012
at header: 1960
i: 1976
end-i: 2012
i: 1980
end-i: 2012
i: 1984
end-i: 2012
i: 1988
end-i: 2012
i: 1992
end-i: 2012
i: 1996
end-i: 2012
i: 2000
end-i: 2012
i: 2004
end-i: 2012
i: 2008
end-i: 2012
i: 2012
end-i: 2012
i:2012 HIT CHUNK END
(comment . ";;1976: r1 <- r1, r8")
(comment . ";;1980: r12 <- 0x4")
(comment . ";;1984: r15 <- r1, 0x10\n")
(comment . ";;1988: r14 <- r1, 0x18\n")
(comment . ";;1992: r11 <- r1, 0x20\n")
(comment . ";;1996: r13 <- r1, 0x8\n")
(comment . ";;2000: r5 <- r1, 0x28\n")
(comment . ";;2004: r4 <- r1, 0x30\n")
(comment . ";;2008 b -1916")
chunklet-i: 2012; chunklet-start-i: 2012; chunklet-end-i: 2020
i: 2012
end-i: 2020
i: 2012
end-i: 2020
i: 2016
end-i: 2020
i: 2020
end-i: 2020
i:2020 HIT CHUNK END
(comment . ";;2012: r3 <- r3, 0x1\n")
(comment . ";;2016 b 112")
chunklet-i: 2020; chunklet-start-i: 2020; chunklet-end-i: 2080
i: 2020
end-i: 2080
i: 2024
end-i: 2080
i: 2028
end-i: 2080
i: 2032
end-i: 2080
i: 2036
end-i: 2080
i: 2040
end-i: 2080
i: 2044
end-i: 2080
i: 2048
end-i: 2080
i: 2052
end-i: 2080
i: 2056
end-i: 2080
i: 2060
end-i: 2080
i: 2064
end-i: 2080
i: 2076
end-i: 2080
i: 2080
end-i: 2080
at header: 2080
(comment . ";;2020: r15 <- r1, 0x10\n")
(comment . ";;2024: r14 <- r1, 0x18\n")
(comment . ";;2028: r11 <- r1, 0x20\n")
(comment . ";;2032: r13 <- r1, 0x8\n")
(comment . ";;2036: r5 <- r1, 0x28\n")
(comment . ";;2040: r4 <- r1, 0x30\n")
(comment . ";;2044: r12 <- r1, 0x38\n")
(comment . ";;2048: r8 <- r1, 0x40\n")
(comment . ";;2052: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2060: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2076: b r6")
chunklet-i: 2080; chunklet-start-i: 2096; chunklet-end-i: 2132
i: 2080
end-i: 2132
at header: 2080
i: 2096
end-i: 2132
i: 2100
end-i: 2132
i: 2104
end-i: 2132
i: 2108
end-i: 2132
i: 2112
end-i: 2132
i: 2116
end-i: 2132
i: 2120
end-i: 2132
i: 2124
end-i: 2132
i: 2128
end-i: 2132
i: 2132
end-i: 2132
i:2132 HIT CHUNK END
(comment . ";;2096: r1 <- r1, r8")
(comment . ";;2100: r15 <- r1, 0x10\n")
(comment . ";;2104: r14 <- r1, 0x18\n")
(comment . ";;2108: r11 <- r1, 0x20\n")
(comment . ";;2112: r13 <- r1, 0x8\n")
(comment . ";;2116: r5 <- r1, 0x28\n")
(comment . ";;2120: r4 <- r1, 0x30\n")
(comment . ";;2124: r12 <- r1, 0x38\n")
(comment . ";;2128: r8 <- r1, 0x40\n")
chunklet-i: 2132; chunklet-start-i: 2132; chunklet-end-i: 2200
i: 2132
end-i: 2200
i: 2132
end-i: 2200
i: 2136
end-i: 2200
i: 2140
end-i: 2200
i: 2144
end-i: 2200
i: 2148
end-i: 2200
i: 2152
end-i: 2200
i: 2156
end-i: 2200
i: 2160
end-i: 2200
i: 2164
end-i: 2200
i: 2168
end-i: 2200
i: 2172
end-i: 2200
i: 2176
end-i: 2200
i: 2180
end-i: 2200
i: 2184
end-i: 2200
i: 2196
end-i: 2200
i: 2200
end-i: 2200
at header: 2200
(comment . ";;2132: r9 <- 0x8")
(comment . ";;2136: r10 <- 0xD")
(comment . ";;2140: r15 <- r1, 0x10\n")
(comment . ";;2144: r14 <- r1, 0x18\n")
(comment . ";;2148: r11 <- r1, 0x20\n")
(comment . ";;2152: r13 <- r1, 0x8\n")
(comment . ";;2156: r5 <- r1, 0x28\n")
(comment . ";;2160: r4 <- r1, 0x30\n")
(comment . ";;2164: r12 <- r1, 0x38\n")
(comment . ";;2168: r8 <- r1, 0x40\n")
(comment . ";;2172: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2196: b r6")
chunklet-i: 2200; chunklet-start-i: 2216; chunklet-end-i: 2268
i: 2200
end-i: 2268
at header: 2200
i: 2216
end-i: 2268
i: 2220
end-i: 2268
i: 2224
end-i: 2268
i: 2228
end-i: 2268
i: 2232
end-i: 2268
i: 2236
end-i: 2268
i: 2240
end-i: 2268
i: 2244
end-i: 2268
i: 2248
end-i: 2268
i: 2252
end-i: 2268
i: 2256
end-i: 2268
i: 2260
end-i: 2268
i: 2264
end-i: 2268
i: 2268
end-i: 2268
i:2268 HIT CHUNK END
(comment . ";;2216: r1 <- r1, r8")
(comment . ";;2220: r10 <- 0x4")
(comment . ";;2224: r15 <- r1, 0x10\n")
(comment . ";;2228: r14 <- r1, 0x18\n")
(comment . ";;2232: r11 <- r1, 0x20\n")
(comment . ";;2236: r13 <- r1, 0x8\n")
(comment . ";;2240: r5 <- r1, 0x28\n")
(comment . ";;2244: r4 <- r1, 0x30\n")
(comment . ";;2248: r12 <- r1, 0x38\n")
(comment . ";;2252: r8 <- r1, 0x40\n")
(comment . ";;2256: r10 <- 0x6")
(comment . ";;2264 b -2120")
chunklet-i: 2268; chunklet-start-i: 2268; chunklet-end-i: 2272
i: 2268
end-i: 2272
i: 2272
end-i: 2272
i:2272 HIT CHUNK END
(comment . ";;2268 b -396")
chunklet-i: 2272; chunklet-start-i: 2272; chunklet-end-i: 2328
i: 2272
end-i: 2328
i: 2272
end-i: 2328
i: 2276
end-i: 2328
i: 2280
end-i: 2328
i: 2284
end-i: 2328
i: 2288
end-i: 2328
i: 2292
end-i: 2328
i: 2296
end-i: 2328
i: 2300
end-i: 2328
i: 2304
end-i: 2328
i: 2308
end-i: 2328
i: 2312
end-i: 2328
i: 2324
end-i: 2328
i: 2328
end-i: 2328
at header: 2328
(comment . ";;2272: r15 <- r1, 0x10\n")
(comment . ";;2276: r14 <- r1, 0x18\n")
(comment . ";;2280: r11 <- r1, 0x20\n")
(comment . ";;2284: r13 <- r1, 0x8\n")
(comment . ";;2288: r5 <- r1, 0x28\n")
(comment . ";;2292: r4 <- r1, 0x30\n")
(comment . ";;2296: r12 <- r1, 0x38\n")
(comment . ";;2300: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2308: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2324: b r6")
chunklet-i: 2328; chunklet-start-i: 2344; chunklet-end-i: 2384
i: 2328
end-i: 2384
at header: 2328
i: 2344
end-i: 2384
i: 2348
end-i: 2384
i: 2352
end-i: 2384
i: 2356
end-i: 2384
i: 2360
end-i: 2384
i: 2364
end-i: 2384
i: 2368
end-i: 2384
i: 2372
end-i: 2384
i: 2376
end-i: 2384
i: 2380
end-i: 2384
i: 2384
end-i: 2384
i:2384 HIT CHUNK END
(comment . ";;2348: r1 <- r1, r0")
(comment . ";;2352: r15 <- r1, 0x10\n")
(comment . ";;2356: r14 <- r1, 0x18\n")
(comment . ";;2360: r11 <- r1, 0x20\n")
(comment . ";;2364: r13 <- r1, 0x8\n")
(comment . ";;2368: r5 <- r1, 0x28\n")
(comment . ";;2372: r4 <- r1, 0x30\n")
(comment . ";;2376: r12 <- r1, 0x38\n")
(comment . ";;2380 b -2260")
chunklet-i: 2384; chunklet-start-i: 2384; chunklet-end-i: 2392
i: 2384
end-i: 2392
i: 2384
end-i: 2392
i: 2388
end-i: 2392
i: 2392
end-i: 2392
i:2392 HIT CHUNK END
(comment . ";;2384: r4 <- 0x7")
(comment . ";;2388 b 16")
chunklet-i: 2392; chunklet-start-i: 2392; chunklet-end-i: 2400
i: 2392
end-i: 2400
i: 2396
end-i: 2400
i: 2400
end-i: 2400
i:2400 HIT CHUNK END
(comment . ";;2392: r12 <- r4, 0x8\n")
(comment . ";;2396 b 8")
chunklet-i: 2400; chunklet-start-i: 2400; chunklet-end-i: 2408
i: 2400
end-i: 2408
i: 2404
end-i: 2408
i: 2408
end-i: 2408
i:2408 HIT CHUNK END
(comment . ";;2400: r4 <- 0xC")
(comment . ";;2404 b -2344")
chunklet-i: 2408; chunklet-start-i: 2408; chunklet-end-i: 2464
i: 2408
end-i: 2464
i: 2408
end-i: 2464
i: 2412
end-i: 2464
i: 2416
end-i: 2464
i: 2420
end-i: 2464
i: 2424
end-i: 2464
i: 2428
end-i: 2464
i: 2432
end-i: 2464
i: 2436
end-i: 2464
i: 2440
end-i: 2464
i: 2444
end-i: 2464
i: 2448
end-i: 2464
i: 2460
end-i: 2464
i: 2464
end-i: 2464
at header: 2464
(comment . ";;2408: r9 <- 0x8")
(comment . ";;2412: r10 <- 0x4")
(comment . ";;2416: r15 <- r1, 0x10\n")
(comment . ";;2420: r14 <- r1, 0x18\n")
(comment . ";;2424: r11 <- r1, 0x20\n")
(comment . ";;2428: r13 <- r1, 0x8\n")
(comment . ";;2432: r5 <- r1, 0x28\n")
(comment . ";;2436: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2444: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2460: b r6")
chunklet-i: 2464; chunklet-start-i: 2480; chunklet-end-i: 2512
i: 2464
end-i: 2512
at header: 2464
i: 2480
end-i: 2512
i: 2484
end-i: 2512
i: 2488
end-i: 2512
i: 2492
end-i: 2512
i: 2496
end-i: 2512
i: 2500
end-i: 2512
i: 2504
end-i: 2512
i: 2508
end-i: 2512
i: 2512
end-i: 2512
i:2512 HIT CHUNK END
(comment . ";;2480: r1 <- r1, r0")
(comment . ";;2484: r15 <- r1, 0x10\n")
(comment . ";;2488: r14 <- r1, 0x18\n")
(comment . ";;2492: r11 <- r1, 0x20\n")
(comment . ";;2496: r13 <- r1, 0x8\n")
(comment . ";;2500: r5 <- r1, 0x28\n")
(comment . ";;2508 b -2448")
chunklet-i: 2512; chunklet-start-i: 2512; chunklet-end-i: 2520
i: 2512
end-i: 2520
i: 2512
end-i: 2520
i: 2516
end-i: 2520
i: 2520
end-i: 2520
i:2520 HIT CHUNK END
(comment . ";;2512: r3 <- r3, 0x1\n")
(comment . ";;2516 b 104")
chunklet-i: 2520; chunklet-start-i: 2520; chunklet-end-i: 2576
i: 2520
end-i: 2576
i: 2524
end-i: 2576
i: 2528
end-i: 2576
i: 2532
end-i: 2576
i: 2536
end-i: 2576
i: 2540
end-i: 2576
i: 2544
end-i: 2576
i: 2548
end-i: 2576
i: 2552
end-i: 2576
i: 2556
end-i: 2576
i: 2560
end-i: 2576
i: 2572
end-i: 2576
i: 2576
end-i: 2576
at header: 2576
(comment . ";;2520: r15 <- r1, 0x10\n")
(comment . ";;2524: r14 <- r1, 0x18\n")
(comment . ";;2528: r11 <- r1, 0x20\n")
(comment . ";;2532: r13 <- r1, 0x8\n")
(comment . ";;2536: r5 <- r1, 0x28\n")
(comment . ";;2540: r4 <- r1, 0x30\n")
(comment . ";;2544: r12 <- r1, 0x38\n")
(comment . ";;2548: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2556: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2572: b r6")
chunklet-i: 2576; chunklet-start-i: 2592; chunklet-end-i: 2624
i: 2576
end-i: 2624
at header: 2576
i: 2592
end-i: 2624
i: 2596
end-i: 2624
i: 2600
end-i: 2624
i: 2604
end-i: 2624
i: 2608
end-i: 2624
i: 2612
end-i: 2624
i: 2616
end-i: 2624
i: 2620
end-i: 2624
i: 2624
end-i: 2624
i:2624 HIT CHUNK END
(comment . ";;2592: r1 <- r1, r0")
(comment . ";;2596: r15 <- r1, 0x10\n")
(comment . ";;2600: r14 <- r1, 0x18\n")
(comment . ";;2604: r11 <- r1, 0x20\n")
(comment . ";;2608: r13 <- r1, 0x8\n")
(comment . ";;2612: r5 <- r1, 0x28\n")
(comment . ";;2616: r4 <- r1, 0x30\n")
(comment . ";;2620: r12 <- r1, 0x38\n")
chunklet-i: 2624; chunklet-start-i: 2624; chunklet-end-i: 2688
i: 2624
end-i: 2688
i: 2624
end-i: 2688
i: 2628
end-i: 2688
i: 2632
end-i: 2688
i: 2636
end-i: 2688
i: 2640
end-i: 2688
i: 2644
end-i: 2688
i: 2648
end-i: 2688
i: 2652
end-i: 2688
i: 2656
end-i: 2688
i: 2660
end-i: 2688
i: 2664
end-i: 2688
i: 2668
end-i: 2688
i: 2672
end-i: 2688
i: 2684
end-i: 2688
i: 2688
end-i: 2688
at header: 2688
(comment . ";;2624: r9 <- 0xC")
(comment . ";;2628: r10 <- 0xB")
(comment . ";;2632: r15 <- r1, 0x10\n")
(comment . ";;2636: r14 <- r1, 0x18\n")
(comment . ";;2640: r11 <- r1, 0x20\n")
(comment . ";;2644: r13 <- r1, 0x8\n")
(comment . ";;2648: r5 <- r1, 0x28\n")
(comment . ";;2652: r4 <- r1, 0x30\n")
(comment . ";;2656: r12 <- r1, 0x38\n")
(comment . ";;2660: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2668: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2684: b r6")
chunklet-i: 2688; chunklet-start-i: 2704; chunklet-end-i: 2752
i: 2688
end-i: 2752
at header: 2688
i: 2704
end-i: 2752
i: 2708
end-i: 2752
i: 2712
end-i: 2752
i: 2716
end-i: 2752
i: 2720
end-i: 2752
i: 2724
end-i: 2752
i: 2728
end-i: 2752
i: 2732
end-i: 2752
i: 2736
end-i: 2752
i: 2740
end-i: 2752
i: 2744
end-i: 2752
i: 2748
end-i: 2752
i: 2752
end-i: 2752
i:2752 HIT CHUNK END
(comment . ";;2704: r1 <- r1, r0")
(comment . ";;2708: r10 <- 0x4")
(comment . ";;2712: r15 <- r1, 0x10\n")
(comment . ";;2716: r14 <- r1, 0x18\n")
(comment . ";;2720: r11 <- r1, 0x20\n")
(comment . ";;2724: r13 <- r1, 0x8\n")
(comment . ";;2728: r5 <- r1, 0x28\n")
(comment . ";;2732: r4 <- r1, 0x30\n")
(comment . ";;2736: r12 <- r1, 0x38\n")
(comment . ";;2740: r10 <- 0x6")
(comment . ";;2748 b -2636")
chunklet-i: 2752; chunklet-start-i: 2752; chunklet-end-i: 2756
i: 2752
end-i: 2756
i: 2756
end-i: 2756
i:2756 HIT CHUNK END
(comment . ";;2752 b -372")
chunklet-i: 2756; chunklet-start-i: 2756; chunklet-end-i: 2808
i: 2756
end-i: 2808
i: 2756
end-i: 2808
i: 2760
end-i: 2808
i: 2764
end-i: 2808
i: 2768
end-i: 2808
i: 2772
end-i: 2808
i: 2776
end-i: 2808
i: 2780
end-i: 2808
i: 2784
end-i: 2808
i: 2788
end-i: 2808
i: 2792
end-i: 2808
i: 2804
end-i: 2808
i: 2808
end-i: 2808
at header: 2808
(comment . ";;2756: r15 <- r1, 0x10\n")
(comment . ";;2760: r14 <- r1, 0x18\n")
(comment . ";;2764: r11 <- r1, 0x20\n")
(comment . ";;2768: r13 <- r1, 0x8\n")
(comment . ";;2772: r5 <- r1, 0x28\n")
(comment . ";;2776: r4 <- r1, 0x30\n")
(comment . ";;2780: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2788: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2804: b r6")
chunklet-i: 2808; chunklet-start-i: 2824; chunklet-end-i: 2856
i: 2808
end-i: 2856
at header: 2808
i: 2824
end-i: 2856
i: 2828
end-i: 2856
i: 2832
end-i: 2856
i: 2836
end-i: 2856
i: 2840
end-i: 2856
i: 2844
end-i: 2856
i: 2848
end-i: 2856
i: 2852
end-i: 2856
i: 2856
end-i: 2856
i:2856 HIT CHUNK END
(comment . ";;2824: r1 <- r1, r8")
(comment . ";;2828: r15 <- r1, 0x10\n")
(comment . ";;2832: r14 <- r1, 0x18\n")
(comment . ";;2836: r11 <- r1, 0x20\n")
(comment . ";;2840: r13 <- r1, 0x8\n")
(comment . ";;2844: r5 <- r1, 0x28\n")
(comment . ";;2848: r4 <- r1, 0x30\n")
(comment . ";;2852 b -2764")
chunklet-i: 2856; chunklet-start-i: 2856; chunklet-end-i: 2880
i: 2856
end-i: 2880
i: 2856
end-i: 2880
i: 2868
end-i: 2880
i: 2872
end-i: 2880
i: 2876
end-i: 2880
i: 2880
end-i: 2880
i:2880 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;2868: r4 <- r9, 0x5\n")
(comment . ";;2872: r4 <- 0x1E")
(comment . ";;2876 b 1720")
chunklet-i: 2880; chunklet-start-i: 2880; chunklet-end-i: 2904
i: 2880
end-i: 2904
i: 2880
end-i: 2904
i: 2892
end-i: 2904
i: 2896
end-i: 2904
i: 2900
end-i: 2904
i: 2904
end-i: 2904
i:2904 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;2892: r10 <- r9, 0x5\n")
(comment . ";;2896: r10 <- 0x1E")
(comment . ";;2900 b 1524")
chunklet-i: 2904; chunklet-start-i: 2904; chunklet-end-i: 2916
i: 2904
end-i: 2916
i: 2904
end-i: 2916
i: 2908
end-i: 2916
i: 2912
end-i: 2916
i: 2916
end-i: 2916
i:2916 HIT CHUNK END
(comment . ";;2904: r14 <- r4, r7")
(comment . ";;2908: r14 <- 0x7")
(comment . ";;2912 b 1488")
chunklet-i: 2916; chunklet-start-i: 2916; chunklet-end-i: 2928
i: 2916
end-i: 2928
i: 2920
end-i: 2928
i: 2924
end-i: 2928
i: 2928
end-i: 2928
i:2928 HIT CHUNK END
(comment . ";;2916: r14 <- r4, 0x1\n")
(comment . ";;2920: r14 <- 0xF")
(comment . ";;2924 b 1476")
chunklet-i: 2928; chunklet-start-i: 2928; chunklet-end-i: 2936
i: 2928
end-i: 2936
i: 2932
end-i: 2936
i: 2936
end-i: 2936
i:2936 HIT CHUNK END
(comment . ";;2928: r10 <- 0x7")
(comment . ";;2932 b 1468")
chunklet-i: 2936; chunklet-start-i: 2936; chunklet-end-i: 2952
i: 2936
end-i: 2952
i: 2940
end-i: 2952
i: 2944
end-i: 2952
i: 2948
end-i: 2952
i: 2952
end-i: 2952
i:2952 HIT CHUNK END
(comment . ";;2936: r14 <- r14, r1")
(comment . ";;2940: r14 <- r14, r8")
(comment . ";;2944: r10 <- r14")
(comment . ";;2948 b 1452")
chunklet-i: 2952; chunklet-start-i: 2952; chunklet-end-i: 2972
i: 2952
end-i: 2972
i: 2956
end-i: 2972
i: 2960
end-i: 2972
i: 2964
end-i: 2972
i: 2968
end-i: 2972
i: 2972
end-i: 2972
i:2972 HIT CHUNK END
(comment . ";;2952: r14 <- r4, r9")
(comment . ";;2956: r14 <- r10, r14")
(comment . ";;2960: r15 <- r14, 0x0\n")
(comment . ";;2964: r15 <- 0x7")
(comment . ";;2968 b 24")
chunklet-i: 2972; chunklet-start-i: 2972; chunklet-end-i: 2984
i: 2972
end-i: 2984
i: 2976
end-i: 2984
i: 2980
end-i: 2984
i: 2984
end-i: 2984
i:2984 HIT CHUNK END
(comment . ";;2972: r7 <- r0, 0x68\n")
(comment . ";;2976: r2 <- r7")
(comment . ";;2980 b 1396")
chunklet-i: 2984; chunklet-start-i: 2984; chunklet-end-i: 2996
i: 2984
end-i: 2996
i: 2984
end-i: 2996
i: 2988
end-i: 2996
i: 2992
end-i: 2996
i: 2996
end-i: 2996
i:2996 HIT CHUNK END
(comment . ";;2984: r7 <- r7, r8")
(comment . ";;2988: r7 <- r0, 0x68\n")
(comment . ";;2992: r14 <- r7, 0x0\n")
chunklet-i: 2996; chunklet-start-i: 2996; chunklet-end-i: 3020
i: 2996
end-i: 3020
i: 2996
end-i: 3020
i: 3008
end-i: 3020
i: 3012
end-i: 3020
i: 3016
end-i: 3020
i: 3020
end-i: 3020
i:3020 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;3008: r4 <- r9, 0x5\n")
(comment . ";;3012: r4 <- 0x1E")
(comment . ";;3016 b 1224")
chunklet-i: 3020; chunklet-start-i: 3020; chunklet-end-i: 3044
i: 3020
end-i: 3044
i: 3020
end-i: 3044
i: 3032
end-i: 3044
i: 3036
end-i: 3044
i: 3040
end-i: 3044
i: 3044
end-i: 3044
i:3044 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;3032: r10 <- r9, 0x5\n")
(comment . ";;3036: r10 <- 0x1E")
(comment . ";;3040 b 1044")
chunklet-i: 3044; chunklet-start-i: 3044; chunklet-end-i: 3060
i: 3044
end-i: 3060
i: 3044
end-i: 3060
i: 3048
end-i: 3060
i: 3052
end-i: 3060
i: 3056
end-i: 3060
i: 3060
end-i: 3060
i:3060 HIT CHUNK END
(comment . ";;3044: r11 <- r5, 0x7\n")
(comment . ";;3048: r15 <- r4, r7")
(comment . ";;3052: r15 <- 0x7")
(comment . ";;3056 b 1008")
chunklet-i: 3060; chunklet-start-i: 3060; chunklet-end-i: 3072
i: 3060
end-i: 3072
i: 3064
end-i: 3072
i: 3068
end-i: 3072
i: 3072
end-i: 3072
i:3072 HIT CHUNK END
(comment . ";;3060: r15 <- r4, 0x1\n")
(comment . ";;3064: r15 <- 0xF")
(comment . ";;3068 b 996")
chunklet-i: 3072; chunklet-start-i: 3072; chunklet-end-i: 3080
i: 3072
end-i: 3080
i: 3076
end-i: 3080
i: 3080
end-i: 3080
i:3080 HIT CHUNK END
(comment . ";;3072: r10 <- 0x7")
(comment . ";;3076 b 988")
chunklet-i: 3080; chunklet-start-i: 3080; chunklet-end-i: 3096
i: 3080
end-i: 3096
i: 3084
end-i: 3096
i: 3088
end-i: 3096
i: 3092
end-i: 3096
i: 3096
end-i: 3096
i:3096 HIT CHUNK END
(comment . ";;3080: r15 <- r15, r1")
(comment . ";;3084: r15 <- r15, r8")
(comment . ";;3088: r10 <- r15")
(comment . ";;3092 b 972")
chunklet-i: 3096; chunklet-start-i: 3096; chunklet-end-i: 3116
i: 3096
end-i: 3116
i: 3100
end-i: 3116
i: 3104
end-i: 3116
i: 3108
end-i: 3116
i: 3112
end-i: 3116
i: 3116
end-i: 3116
i:3116 HIT CHUNK END
(comment . ";;3096: r15 <- r4, r9")
(comment . ";;3100: r15 <- r10, r15")
(comment . ";;3104: r11 <- r15, 0x0\n")
(comment . ";;3108: r11 <- 0x7")
(comment . ";;3112 b 24")
chunklet-i: 3116; chunklet-start-i: 3116; chunklet-end-i: 3128
i: 3116
end-i: 3128
i: 3120
end-i: 3128
i: 3124
end-i: 3128
i: 3128
end-i: 3128
i:3128 HIT CHUNK END
(comment . ";;3116: r7 <- r0, 0x68\n")
(comment . ";;3120: r2 <- r7")
(comment . ";;3124 b 916")
chunklet-i: 3128; chunklet-start-i: 3128; chunklet-end-i: 3140
i: 3128
end-i: 3140
i: 3128
end-i: 3140
i: 3132
end-i: 3140
i: 3136
end-i: 3140
i: 3140
end-i: 3140
i:3140 HIT CHUNK END
(comment . ";;3128: r7 <- r7, r8")
(comment . ";;3132: r7 <- r0, 0x68\n")
(comment . ";;3136: r15 <- r7, 0x0\n")
chunklet-i: 3140; chunklet-start-i: 3140; chunklet-end-i: 3164
i: 3140
end-i: 3164
i: 3140
end-i: 3164
i: 3152
end-i: 3164
i: 3156
end-i: 3164
i: 3160
end-i: 3164
i: 3164
end-i: 3164
i:3164 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;3152: r4 <- r9, 0x5\n")
(comment . ";;3156: r4 <- 0x1E")
(comment . ";;3160 b 756")
chunklet-i: 3164; chunklet-start-i: 3164; chunklet-end-i: 3188
i: 3164
end-i: 3188
i: 3164
end-i: 3188
i: 3176
end-i: 3188
i: 3180
end-i: 3188
i: 3184
end-i: 3188
i: 3188
end-i: 3188
i:3188 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;3176: r10 <- r9, 0x5\n")
(comment . ";;3180: r10 <- 0x1E")
(comment . ";;3184 b 592")
chunklet-i: 3188; chunklet-start-i: 3188; chunklet-end-i: 3200
i: 3188
end-i: 3200
i: 3188
end-i: 3200
i: 3192
end-i: 3200
i: 3196
end-i: 3200
i: 3200
end-i: 3200
i:3200 HIT CHUNK END
(comment . ";;3188: r15 <- r4, r10")
(comment . ";;3192: r15 <- 0x7")
(comment . ";;3196 b 436")
chunklet-i: 3200; chunklet-start-i: 3200; chunklet-end-i: 3208
i: 3200
end-i: 3208
i: 3204
end-i: 3208
i: 3208
end-i: 3208
i:3208 HIT CHUNK END
(comment . ";;3200: r4 <- r10")
(comment . ";;3204 b 8")
chunklet-i: 3208; chunklet-start-i: 3208; chunklet-end-i: 3216
i: 3208
end-i: 3216
i: 3208
end-i: 3216
i: 3212
end-i: 3216
i: 3216
end-i: 3216
i:3216 HIT CHUNK END
(comment . ";;3208: r4 <- 0x2E")
(comment . ";;3212: b r1, 0")
chunklet-i: 3216; chunklet-start-i: 3216; chunklet-end-i: 3252
i: 3216
end-i: 3252
i: 3216
end-i: 3252
i: 3228
end-i: 3252
i: 3240
end-i: 3252
i: 3244
end-i: 3252
i: 3248
end-i: 3252
i: 3252
end-i: 3252
i:3252 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;3240: r10 <- r9, 0x5\n")
(comment . ";;3244: r10 <- 0x1E")
(comment . ";;3248 b 240")
chunklet-i: 3252; chunklet-start-i: 3252; chunklet-end-i: 3260
i: 3252
end-i: 3260
i: 3252
end-i: 3260
i: 3256
end-i: 3260
i: 3260
end-i: 3260
i:3260 HIT CHUNK END
(comment . ";;3252: r10 <- 0x7")
(comment . ";;3256 b 96")
chunklet-i: 3260; chunklet-start-i: 3260; chunklet-end-i: 3268
i: 3260
end-i: 3268
i: 3264
end-i: 3268
i: 3268
end-i: 3268
i:3268 HIT CHUNK END
(comment . ";;3260: r4 <- r10, 0x8\n")
(comment . ";;3264 b 88")
chunklet-i: 3268; chunklet-start-i: 3268; chunklet-end-i: 3284
i: 3268
end-i: 3284
i: 3268
end-i: 3284
i: 3272
end-i: 3284
i: 3276
end-i: 3284
i: 3280
end-i: 3284
i: 3284
end-i: 3284
i:3284 HIT CHUNK END
(comment . ";;3268: r14 <- r15, r5")
(comment . ";;3272: r4 <- r14, 0x0\n")
(comment . ";;3276: r4 <- 0x7")
(comment . ";;3280 b 24")
chunklet-i: 3284; chunklet-start-i: 3284; chunklet-end-i: 3296
i: 3284
end-i: 3296
i: 3288
end-i: 3296
i: 3292
end-i: 3296
i: 3296
end-i: 3296
i:3296 HIT CHUNK END
(comment . ";;3284: r7 <- r0, 0x68\n")
(comment . ";;3288: r2 <- r7")
(comment . ";;3292 b 36")
chunklet-i: 3296; chunklet-start-i: 3296; chunklet-end-i: 3308
i: 3296
end-i: 3308
i: 3296
end-i: 3308
i: 3300
end-i: 3308
i: 3304
end-i: 3308
i: 3308
end-i: 3308
i:3308 HIT CHUNK END
(comment . ";;3296: r7 <- r7, r8")
(comment . ";;3300: r7 <- r0, 0x68\n")
(comment . ";;3304: r14 <- r7, 0x0\n")
chunklet-i: 3308; chunklet-start-i: 3308; chunklet-end-i: 3332
i: 3308
end-i: 3332
i: 3308
end-i: 3332
i: 3320
end-i: 3332
i: 3324
end-i: 3332
i: 3328
end-i: 3332
i: 3332
end-i: 3332
i:3332 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;3320: r14 <- r15, 0xD\n")
(comment . ";;3324: r4 <- 0x2E")
(comment . ";;3328: b r1, 0")
chunklet-i: 3332; chunklet-start-i: 3332; chunklet-end-i: 3344
i: 3332
end-i: 3344
i: 3332
end-i: 3344
i: 3344
end-i: 3344
i:3344 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 3344; chunklet-start-i: 3348; chunklet-end-i: 3356
i: 3344
end-i: 3356
i: 3348
end-i: 3356
i: 3352
end-i: 3356
i: 3356
end-i: 3356
i:3356 HIT CHUNK END
(comment . ";; instruction 3344 not included")
(comment . ";;3348: r7 <- r0, 0x68\n")
(comment . ";;3352 b -60")
chunklet-i: 3356; chunklet-start-i: 3356; chunklet-end-i: 3364
i: 3356
end-i: 3364
i: 3356
end-i: 3364
i: 3360
end-i: 3364
i: 3364
end-i: 3364
i:3364 HIT CHUNK END
(comment . ";;3356: r3 <- r3, 0x1\n")
(comment . ";;3360 b 64")
chunklet-i: 3364; chunklet-start-i: 3364; chunklet-end-i: 3400
i: 3364
end-i: 3400
i: 3368
end-i: 3400
i: 3372
end-i: 3400
i: 3376
end-i: 3400
i: 3380
end-i: 3400
i: 3384
end-i: 3400
i: 3396
end-i: 3400
i: 3400
end-i: 3400
at header: 3400
(comment . ";;3364: r15 <- r1, 0x8\n")
(comment . ";;3368: r10 <- r1, 0x10\n")
(comment . ";;3372: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3396: b r6")
chunklet-i: 3400; chunklet-start-i: 3416; chunklet-end-i: 3428
i: 3400
end-i: 3428
at header: 3400
i: 3416
end-i: 3428
i: 3420
end-i: 3428
i: 3424
end-i: 3428
i: 3428
end-i: 3428
i:3428 HIT CHUNK END
(comment . ";;3416: r1 <- r1, r8")
(comment . ";;3420: r15 <- r1, 0x8\n")
(comment . ";;3424: r10 <- r1, 0x10\n")
chunklet-i: 3428; chunklet-start-i: 3428; chunklet-end-i: 3464
i: 3428
end-i: 3464
i: 3428
end-i: 3464
i: 3432
end-i: 3464
i: 3436
end-i: 3464
i: 3440
end-i: 3464
i: 3444
end-i: 3464
i: 3448
end-i: 3464
i: 3460
end-i: 3464
i: 3464
end-i: 3464
at header: 3464
(comment . ";;3428: r9 <- 0x8")
(comment . ";;3432: r15 <- r1, 0x8\n")
(comment . ";;3436: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3444: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3460: b r6")
chunklet-i: 3464; chunklet-start-i: 3480; chunklet-end-i: 3492
i: 3464
end-i: 3492
at header: 3464
i: 3480
end-i: 3492
i: 3484
end-i: 3492
i: 3488
end-i: 3492
i: 3492
end-i: 3492
i:3492 HIT CHUNK END
(comment . ";;3480: r1 <- r1, r0")
(comment . ";;3484: r15 <- r1, 0x8\n")
(comment . ";;3488 b -224")
chunklet-i: 3492; chunklet-start-i: 3492; chunklet-end-i: 3500
i: 3492
end-i: 3500
i: 3492
end-i: 3500
i: 3496
end-i: 3500
i: 3500
end-i: 3500
i:3500 HIT CHUNK END
(comment . ";;3492: r3 <- r3, 0x1\n")
(comment . ";;3496 b 68")
chunklet-i: 3500; chunklet-start-i: 3500; chunklet-end-i: 3536
i: 3500
end-i: 3536
i: 3504
end-i: 3536
i: 3508
end-i: 3536
i: 3512
end-i: 3536
i: 3516
end-i: 3536
i: 3520
end-i: 3536
i: 3532
end-i: 3536
i: 3536
end-i: 3536
at header: 3536
(comment . ";;3500: r15 <- r1, 0x8\n")
(comment . ";;3504: r9 <- r1, 0x10\n")
(comment . ";;3508: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3516: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3532: b r6")
chunklet-i: 3536; chunklet-start-i: 3552; chunklet-end-i: 3568
i: 3536
end-i: 3568
at header: 3536
i: 3552
end-i: 3568
i: 3556
end-i: 3568
i: 3560
end-i: 3568
i: 3564
end-i: 3568
i: 3568
end-i: 3568
i:3568 HIT CHUNK END
(comment . ";;3556: r1 <- r1, r8")
(comment . ";;3560: r15 <- r1, 0x8\n")
(comment . ";;3564: r9 <- r1, 0x10\n")
chunklet-i: 3568; chunklet-start-i: 3568; chunklet-end-i: 3600
i: 3568
end-i: 3600
i: 3568
end-i: 3600
i: 3572
end-i: 3600
i: 3576
end-i: 3600
i: 3580
end-i: 3600
i: 3584
end-i: 3600
i: 3596
end-i: 3600
i: 3600
end-i: 3600
at header: 3600
(comment . ";;3568: r15 <- r1, 0x8\n")
(comment . ";;3572: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3580: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3596: b r6")
chunklet-i: 3600; chunklet-start-i: 3616; chunklet-end-i: 3636
i: 3600
end-i: 3636
at header: 3600
i: 3616
end-i: 3636
i: 3620
end-i: 3636
i: 3624
end-i: 3636
i: 3628
end-i: 3636
i: 3632
end-i: 3636
i: 3636
end-i: 3636
i:3636 HIT CHUNK END
(comment . ";;3616: r1 <- r1, r0")
(comment . ";;3620: r10 <- 0x4")
(comment . ";;3624: r15 <- r1, 0x8\n")
(comment . ";;3632 b -384")
chunklet-i: 3636; chunklet-start-i: 3636; chunklet-end-i: 3644
i: 3636
end-i: 3644
i: 3636
end-i: 3644
i: 3640
end-i: 3644
i: 3644
end-i: 3644
i:3644 HIT CHUNK END
(comment . ";;3636: r3 <- r3, 0x1\n")
(comment . ";;3640 b 68")
chunklet-i: 3644; chunklet-start-i: 3644; chunklet-end-i: 3680
i: 3644
end-i: 3680
i: 3648
end-i: 3680
i: 3652
end-i: 3680
i: 3656
end-i: 3680
i: 3660
end-i: 3680
i: 3664
end-i: 3680
i: 3676
end-i: 3680
i: 3680
end-i: 3680
at header: 3680
(comment . ";;3644: r4 <- r1, 0x8\n")
(comment . ";;3648: r10 <- r1, 0x10\n")
(comment . ";;3652: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3660: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3676: b r6")
chunklet-i: 3680; chunklet-start-i: 3696; chunklet-end-i: 3712
i: 3680
end-i: 3712
at header: 3680
i: 3696
end-i: 3712
i: 3700
end-i: 3712
i: 3704
end-i: 3712
i: 3708
end-i: 3712
i: 3712
end-i: 3712
i:3712 HIT CHUNK END
(comment . ";;3700: r1 <- r1, r8")
(comment . ";;3704: r4 <- r1, 0x8\n")
(comment . ";;3708: r10 <- r1, 0x10\n")
chunklet-i: 3712; chunklet-start-i: 3712; chunklet-end-i: 3744
i: 3712
end-i: 3744
i: 3712
end-i: 3744
i: 3716
end-i: 3744
i: 3720
end-i: 3744
i: 3724
end-i: 3744
i: 3728
end-i: 3744
i: 3740
end-i: 3744
i: 3744
end-i: 3744
at header: 3744
(comment . ";;3712: r9 <- 0x4")
(comment . ";;3716: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3724: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3740: b r6")
chunklet-i: 3744; chunklet-start-i: 3760; chunklet-end-i: 3776
i: 3744
end-i: 3776
at header: 3744
i: 3760
end-i: 3776
i: 3764
end-i: 3776
i: 3768
end-i: 3776
i: 3772
end-i: 3776
i: 3776
end-i: 3776
i:3776 HIT CHUNK END
(comment . ";;3760: r1 <- r1, r8")
(comment . ";;3764: r4 <- 0x6")
(comment . ";;3772 b -560")
chunklet-i: 3776; chunklet-start-i: 3776; chunklet-end-i: 3780
i: 3776
end-i: 3780
i: 3780
end-i: 3780
i:3780 HIT CHUNK END
(comment . ";;3776 b -572")
chunklet-i: 3780; chunklet-start-i: 3780; chunklet-end-i: 3788
i: 3780
end-i: 3788
i: 3780
end-i: 3788
i: 3784
end-i: 3788
i: 3788
end-i: 3788
i:3788 HIT CHUNK END
(comment . ";;3780: r3 <- r3, 0x1\n")
(comment . ";;3784 b 68")
chunklet-i: 3788; chunklet-start-i: 3788; chunklet-end-i: 3824
i: 3788
end-i: 3824
i: 3792
end-i: 3824
i: 3796
end-i: 3824
i: 3800
end-i: 3824
i: 3804
end-i: 3824
i: 3808
end-i: 3824
i: 3820
end-i: 3824
i: 3824
end-i: 3824
at header: 3824
(comment . ";;3788: r4 <- r1, 0x8\n")
(comment . ";;3792: r9 <- r1, 0x10\n")
(comment . ";;3796: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3804: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3820: b r6")
chunklet-i: 3824; chunklet-start-i: 3840; chunklet-end-i: 3856
i: 3824
end-i: 3856
at header: 3824
i: 3840
end-i: 3856
i: 3844
end-i: 3856
i: 3848
end-i: 3856
i: 3852
end-i: 3856
i: 3856
end-i: 3856
i:3856 HIT CHUNK END
(comment . ";;3844: r1 <- r1, r8")
(comment . ";;3848: r4 <- r1, 0x8\n")
(comment . ";;3852: r9 <- r1, 0x10\n")
chunklet-i: 3856; chunklet-start-i: 3856; chunklet-end-i: 3888
i: 3856
end-i: 3888
i: 3856
end-i: 3888
i: 3860
end-i: 3888
i: 3864
end-i: 3888
i: 3868
end-i: 3888
i: 3872
end-i: 3888
i: 3884
end-i: 3888
i: 3888
end-i: 3888
at header: 3888
(comment . ";;3856: r4 <- r1, 0x8\n")
(comment . ";;3860: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3868: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3884: b r6")
chunklet-i: 3888; chunklet-start-i: 3904; chunklet-end-i: 3920
i: 3888
end-i: 3920
at header: 3888
i: 3904
end-i: 3920
i: 3908
end-i: 3920
i: 3912
end-i: 3920
i: 3916
end-i: 3920
i: 3920
end-i: 3920
i:3920 HIT CHUNK END
(comment . ";;3904: r1 <- r1, r0")
(comment . ";;3908: r10 <- 0x4")
(comment . ";;3912: r4 <- r1, 0x8\n")
(comment . ";;3916 b -732")
chunklet-i: 3920; chunklet-start-i: 3920; chunklet-end-i: 3928
i: 3920
end-i: 3928
i: 3920
end-i: 3928
i: 3924
end-i: 3928
i: 3928
end-i: 3928
i:3928 HIT CHUNK END
(comment . ";;3920: r3 <- r3, 0x1\n")
(comment . ";;3924 b 60")
chunklet-i: 3928; chunklet-start-i: 3928; chunklet-end-i: 3960
i: 3928
end-i: 3960
i: 3932
end-i: 3960
i: 3936
end-i: 3960
i: 3940
end-i: 3960
i: 3944
end-i: 3960
i: 3956
end-i: 3960
i: 3960
end-i: 3960
at header: 3960
(comment . ";;3928: r9 <- r1, 0x8\n")
(comment . ";;3932: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3940: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3956: b r6")
chunklet-i: 3960; chunklet-start-i: 3976; chunklet-end-i: 3988
i: 3960
end-i: 3988
at header: 3960
i: 3976
end-i: 3988
i: 3980
end-i: 3988
i: 3984
end-i: 3988
i: 3988
end-i: 3988
i:3988 HIT CHUNK END
(comment . ";;3980: r1 <- r1, r0")
(comment . ";;3984: r9 <- r1, 0x8\n")
chunklet-i: 3988; chunklet-start-i: 3988; chunklet-end-i: 4016
i: 3988
end-i: 4016
i: 3988
end-i: 4016
i: 3992
end-i: 4016
i: 3996
end-i: 4016
i: 4000
end-i: 4016
i: 4012
end-i: 4016
i: 4016
end-i: 4016
at header: 4016
(comment . ";;3988: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3996: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4012: b r6")
chunklet-i: 4016; chunklet-start-i: 4032; chunklet-end-i: 4044
i: 4016
end-i: 4044
at header: 4016
i: 4032
end-i: 4044
i: 4036
end-i: 4044
i: 4040
end-i: 4044
i: 4044
end-i: 4044
i:4044 HIT CHUNK END
(comment . ";;4032: r1 <- r1, r8")
(comment . ";;4040 b -880")
chunklet-i: 4044; chunklet-start-i: 4044; chunklet-end-i: 4056
i: 4044
end-i: 4056
i: 4044
end-i: 4056
i: 4056
end-i: 4056
i:4056 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 4056; chunklet-start-i: 4060; chunklet-end-i: 4068
i: 4056
end-i: 4068
i: 4060
end-i: 4068
i: 4064
end-i: 4068
i: 4068
end-i: 4068
i:4068 HIT CHUNK END
(comment . ";; instruction 4056 not included")
(comment . ";;4060: r7 <- r0, 0x68\n")
(comment . ";;4064 b -940")
chunklet-i: 4068; chunklet-start-i: 4068; chunklet-end-i: 4088
i: 4068
end-i: 4088
i: 4068
end-i: 4088
i: 4072
end-i: 4088
i: 4084
end-i: 4088
i: 4088
end-i: 4088
i:4088 HIT CHUNK END
(comment . ";;4068: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;4084: b r6")
chunklet-i: 4088; chunklet-start-i: 4088; chunklet-end-i: 4096
i: 4088
end-i: 4096
i: 4088
end-i: 4096
i: 4092
end-i: 4096
i: 4096
end-i: 4096
i:4096 HIT CHUNK END
(comment . ";;4088: r3 <- r3, 0x1\n")
(comment . ";;4092 b 76")
chunklet-i: 4096; chunklet-start-i: 4096; chunklet-end-i: 4136
i: 4096
end-i: 4136
i: 4100
end-i: 4136
i: 4104
end-i: 4136
i: 4108
end-i: 4136
i: 4112
end-i: 4136
i: 4116
end-i: 4136
i: 4120
end-i: 4136
i: 4132
end-i: 4136
i: 4136
end-i: 4136
at header: 4136
(comment . ";;4096: r5 <- r1, 0x28\n")
(comment . ";;4100: r4 <- r1, 0x8\n")
(comment . ";;4104: r9 <- r1, 0x10\n")
(comment . ";;4108: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4116: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4132: b r6")
chunklet-i: 4136; chunklet-start-i: 4152; chunklet-end-i: 4172
i: 4136
end-i: 4172
at header: 4136
i: 4152
end-i: 4172
i: 4156
end-i: 4172
i: 4160
end-i: 4172
i: 4164
end-i: 4172
i: 4168
end-i: 4172
i: 4172
end-i: 4172
i:4172 HIT CHUNK END
(comment . ";;4156: r1 <- r1, r0")
(comment . ";;4160: r5 <- r1, 0x28\n")
(comment . ";;4164: r4 <- r1, 0x8\n")
(comment . ";;4168: r9 <- r1, 0x10\n")
chunklet-i: 4172; chunklet-start-i: 4172; chunklet-end-i: 4208
i: 4172
end-i: 4208
i: 4172
end-i: 4208
i: 4176
end-i: 4208
i: 4180
end-i: 4208
i: 4184
end-i: 4208
i: 4188
end-i: 4208
i: 4192
end-i: 4208
i: 4204
end-i: 4208
i: 4208
end-i: 4208
at header: 4208
(comment . ";;4172: r5 <- r1, 0x28\n")
(comment . ";;4176: r4 <- r1, 0x8\n")
(comment . ";;4180: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4188: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4204: b r6")
chunklet-i: 4208; chunklet-start-i: 4224; chunklet-end-i: 4244
i: 4208
end-i: 4244
at header: 4208
i: 4224
end-i: 4244
i: 4228
end-i: 4244
i: 4232
end-i: 4244
i: 4236
end-i: 4244
i: 4240
end-i: 4244
i: 4244
end-i: 4244
i:4244 HIT CHUNK END
(comment . ";;4224: r1 <- r1, r0")
(comment . ";;4228: r10 <- 0x4")
(comment . ";;4232: r5 <- r1, 0x28\n")
(comment . ";;4236: r4 <- r1, 0x8\n")
(comment . ";;4240 b -1200")
chunklet-i: 4244; chunklet-start-i: 4244; chunklet-end-i: 4252
i: 4244
end-i: 4252
i: 4244
end-i: 4252
i: 4248
end-i: 4252
i: 4252
end-i: 4252
i:4252 HIT CHUNK END
(comment . ";;4244: r3 <- r3, 0x1\n")
(comment . ";;4248 b 68")
chunklet-i: 4252; chunklet-start-i: 4252; chunklet-end-i: 4288
i: 4252
end-i: 4288
i: 4256
end-i: 4288
i: 4260
end-i: 4288
i: 4264
end-i: 4288
i: 4268
end-i: 4288
i: 4272
end-i: 4288
i: 4284
end-i: 4288
i: 4288
end-i: 4288
at header: 4288
(comment . ";;4252: r5 <- r1, 0x28\n")
(comment . ";;4256: r9 <- r1, 0x8\n")
(comment . ";;4260: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4268: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4284: b r6")
chunklet-i: 4288; chunklet-start-i: 4304; chunklet-end-i: 4320
i: 4288
end-i: 4320
at header: 4288
i: 4304
end-i: 4320
i: 4308
end-i: 4320
i: 4312
end-i: 4320
i: 4316
end-i: 4320
i: 4320
end-i: 4320
i:4320 HIT CHUNK END
(comment . ";;4308: r1 <- r1, r0")
(comment . ";;4312: r5 <- r1, 0x28\n")
(comment . ";;4316: r9 <- r1, 0x8\n")
chunklet-i: 4320; chunklet-start-i: 4320; chunklet-end-i: 4352
i: 4320
end-i: 4352
i: 4320
end-i: 4352
i: 4324
end-i: 4352
i: 4328
end-i: 4352
i: 4332
end-i: 4352
i: 4336
end-i: 4352
i: 4348
end-i: 4352
i: 4352
end-i: 4352
at header: 4352
(comment . ";;4320: r5 <- r1, 0x28\n")
(comment . ";;4324: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4332: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4348: b r6")
chunklet-i: 4352; chunklet-start-i: 4368; chunklet-end-i: 4380
i: 4352
end-i: 4380
at header: 4352
i: 4368
end-i: 4380
i: 4372
end-i: 4380
i: 4376
end-i: 4380
i: 4380
end-i: 4380
i:4380 HIT CHUNK END
(comment . ";;4368: r1 <- r1, r0")
(comment . ";;4372: r5 <- r1, 0x28\n")
(comment . ";;4376 b -1360")
chunklet-i: 4380; chunklet-start-i: 4380; chunklet-end-i: 4392
i: 4380
end-i: 4392
i: 4380
end-i: 4392
i: 4392
end-i: 4392
i:4392 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 4392; chunklet-start-i: 4396; chunklet-end-i: 4404
i: 4392
end-i: 4404
i: 4396
end-i: 4404
i: 4400
end-i: 4404
i: 4404
end-i: 4404
i:4404 HIT CHUNK END
(comment . ";; instruction 4392 not included")
(comment . ";;4396: r7 <- r0, 0x68\n")
(comment . ";;4400 b -1420")
chunklet-i: 4404; chunklet-start-i: 4404; chunklet-end-i: 4428
i: 4404
end-i: 4428
i: 4404
end-i: 4428
i: 4408
end-i: 4428
i: 4412
end-i: 4428
i: 4424
end-i: 4428
i: 4428
end-i: 4428
i:4428 HIT CHUNK END
(comment . ";;4404: r9 <- 0x4")
(comment . ";;4408: r11 <- 0xF")
(comment . ";; literal r6")
(comment . ";;4424: b r6")
chunklet-i: 4428; chunklet-start-i: 4428; chunklet-end-i: 4436
i: 4428
end-i: 4436
i: 4428
end-i: 4436
i: 4432
end-i: 4436
i: 4436
end-i: 4436
i:4436 HIT CHUNK END
(comment . ";;4428: r3 <- r3, 0x1\n")
(comment . ";;4432 b 84")
chunklet-i: 4436; chunklet-start-i: 4436; chunklet-end-i: 4480
i: 4436
end-i: 4480
i: 4440
end-i: 4480
i: 4444
end-i: 4480
i: 4448
end-i: 4480
i: 4452
end-i: 4480
i: 4456
end-i: 4480
i: 4460
end-i: 4480
i: 4464
end-i: 4480
i: 4476
end-i: 4480
i: 4480
end-i: 4480
at header: 4480
(comment . ";;4436: r15 <- r1, 0x10\n")
(comment . ";;4440: r5 <- r1, 0x28\n")
(comment . ";;4444: r4 <- r1, 0x8\n")
(comment . ";;4448: r9 <- r1, 0x18\n")
(comment . ";;4452: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4460: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4476: b r6")
chunklet-i: 4480; chunklet-start-i: 4496; chunklet-end-i: 4520
i: 4480
end-i: 4520
at header: 4480
i: 4496
end-i: 4520
i: 4500
end-i: 4520
i: 4504
end-i: 4520
i: 4508
end-i: 4520
i: 4512
end-i: 4520
i: 4516
end-i: 4520
i: 4520
end-i: 4520
i:4520 HIT CHUNK END
(comment . ";;4500: r1 <- r1, r0")
(comment . ";;4504: r15 <- r1, 0x10\n")
(comment . ";;4508: r5 <- r1, 0x28\n")
(comment . ";;4512: r4 <- r1, 0x8\n")
(comment . ";;4516: r9 <- r1, 0x18\n")
chunklet-i: 4520; chunklet-start-i: 4520; chunklet-end-i: 4560
i: 4520
end-i: 4560
i: 4520
end-i: 4560
i: 4524
end-i: 4560
i: 4528
end-i: 4560
i: 4532
end-i: 4560
i: 4536
end-i: 4560
i: 4540
end-i: 4560
i: 4544
end-i: 4560
i: 4556
end-i: 4560
i: 4560
end-i: 4560
at header: 4560
(comment . ";;4520: r15 <- r1, 0x10\n")
(comment . ";;4524: r5 <- r1, 0x28\n")
(comment . ";;4528: r4 <- r1, 0x8\n")
(comment . ";;4532: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4540: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4556: b r6")
chunklet-i: 4560; chunklet-start-i: 4576; chunklet-end-i: 4600
i: 4560
end-i: 4600
at header: 4560
i: 4576
end-i: 4600
i: 4580
end-i: 4600
i: 4584
end-i: 4600
i: 4588
end-i: 4600
i: 4592
end-i: 4600
i: 4596
end-i: 4600
i: 4600
end-i: 4600
i:4600 HIT CHUNK END
(comment . ";;4576: r1 <- r1, r0")
(comment . ";;4580: r10 <- 0x4")
(comment . ";;4584: r15 <- r1, 0x10\n")
(comment . ";;4588: r5 <- r1, 0x28\n")
(comment . ";;4592: r4 <- r1, 0x8\n")
(comment . ";;4596 b -1696")
chunklet-i: 4600; chunklet-start-i: 4600; chunklet-end-i: 4608
i: 4600
end-i: 4608
i: 4600
end-i: 4608
i: 4604
end-i: 4608
i: 4608
end-i: 4608
i:4608 HIT CHUNK END
(comment . ";;4600: r3 <- r3, 0x1\n")
(comment . ";;4604 b 76")
chunklet-i: 4608; chunklet-start-i: 4608; chunklet-end-i: 4648
i: 4608
end-i: 4648
i: 4612
end-i: 4648
i: 4616
end-i: 4648
i: 4620
end-i: 4648
i: 4624
end-i: 4648
i: 4628
end-i: 4648
i: 4632
end-i: 4648
i: 4644
end-i: 4648
i: 4648
end-i: 4648
at header: 4648
(comment . ";;4608: r15 <- r1, 0x10\n")
(comment . ";;4612: r5 <- r1, 0x28\n")
(comment . ";;4616: r9 <- r1, 0x8\n")
(comment . ";;4620: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4628: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4644: b r6")
chunklet-i: 4648; chunklet-start-i: 4664; chunklet-end-i: 4684
i: 4648
end-i: 4684
at header: 4648
i: 4664
end-i: 4684
i: 4668
end-i: 4684
i: 4672
end-i: 4684
i: 4676
end-i: 4684
i: 4680
end-i: 4684
i: 4684
end-i: 4684
i:4684 HIT CHUNK END
(comment . ";;4668: r1 <- r1, r0")
(comment . ";;4672: r15 <- r1, 0x10\n")
(comment . ";;4676: r5 <- r1, 0x28\n")
(comment . ";;4680: r9 <- r1, 0x8\n")
chunklet-i: 4684; chunklet-start-i: 4684; chunklet-end-i: 4720
i: 4684
end-i: 4720
i: 4684
end-i: 4720
i: 4688
end-i: 4720
i: 4692
end-i: 4720
i: 4696
end-i: 4720
i: 4700
end-i: 4720
i: 4704
end-i: 4720
i: 4716
end-i: 4720
i: 4720
end-i: 4720
at header: 4720
(comment . ";;4684: r15 <- r1, 0x10\n")
(comment . ";;4688: r5 <- r1, 0x28\n")
(comment . ";;4692: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4700: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4716: b r6")
chunklet-i: 4720; chunklet-start-i: 4736; chunklet-end-i: 4756
i: 4720
end-i: 4756
at header: 4720
i: 4736
end-i: 4756
i: 4740
end-i: 4756
i: 4744
end-i: 4756
i: 4748
end-i: 4756
i: 4752
end-i: 4756
i: 4756
end-i: 4756
i:4756 HIT CHUNK END
(comment . ";;4736: r1 <- r1, r0")
(comment . ";;4740: r15 <- r1, 0x10\n")
(comment . ";;4744: r5 <- r1, 0x28\n")
(comment . ";;4752 b -1876")
chunklet-i: 4756; chunklet-start-i: 4756; chunklet-end-i: 4764
i: 4756
end-i: 4764
i: 4756
end-i: 4764
i: 4760
end-i: 4764
i: 4764
end-i: 4764
i:4764 HIT CHUNK END
(comment . ";;4756: r3 <- r3, 0x1\n")
(comment . ";;4760 b 96")
chunklet-i: 4764; chunklet-start-i: 4764; chunklet-end-i: 4816
i: 4764
end-i: 4816
i: 4768
end-i: 4816
i: 4772
end-i: 4816
i: 4776
end-i: 4816
i: 4780
end-i: 4816
i: 4784
end-i: 4816
i: 4788
end-i: 4816
i: 4792
end-i: 4816
i: 4796
end-i: 4816
i: 4800
end-i: 4816
i: 4812
end-i: 4816
i: 4816
end-i: 4816
at header: 4816
(comment . ";;4764: r15 <- r1, 0x10\n")
(comment . ";;4768: r14 <- r1, 0x18\n")
(comment . ";;4772: r11 <- r1, 0x20\n")
(comment . ";;4776: r13 <- r1, 0x8\n")
(comment . ";;4780: r5 <- r1, 0x28\n")
(comment . ";;4784: r4 <- r1, 0x30\n")
(comment . ";;4788: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;4796: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4812: b r6")
chunklet-i: 4816; chunklet-start-i: 4832; chunklet-end-i: 4860
i: 4816
end-i: 4860
at header: 4816
i: 4832
end-i: 4860
i: 4836
end-i: 4860
i: 4840
end-i: 4860
i: 4844
end-i: 4860
i: 4848
end-i: 4860
i: 4852
end-i: 4860
i: 4856
end-i: 4860
i: 4860
end-i: 4860
i:4860 HIT CHUNK END
(comment . ";;4832: r1 <- r1, r8")
(comment . ";;4836: r15 <- r1, 0x10\n")
(comment . ";;4840: r14 <- r1, 0x18\n")
(comment . ";;4844: r11 <- r1, 0x20\n")
(comment . ";;4848: r13 <- r1, 0x8\n")
(comment . ";;4852: r5 <- r1, 0x28\n")
(comment . ";;4856: r4 <- r1, 0x30\n")
chunklet-i: 4860; chunklet-start-i: 4860; chunklet-end-i: 4920
i: 4860
end-i: 4920
i: 4860
end-i: 4920
i: 4864
end-i: 4920
i: 4868
end-i: 4920
i: 4872
end-i: 4920
i: 4876
end-i: 4920
i: 4880
end-i: 4920
i: 4884
end-i: 4920
i: 4888
end-i: 4920
i: 4892
end-i: 4920
i: 4896
end-i: 4920
i: 4900
end-i: 4920
i: 4904
end-i: 4920
i: 4916
end-i: 4920
i: 4920
end-i: 4920
at header: 4920
(comment . ";;4860: r9 <- 0x4")
(comment . ";;4864: r10 <- 0xE")
(comment . ";;4868: r15 <- r1, 0x10\n")
(comment . ";;4872: r14 <- r1, 0x18\n")
(comment . ";;4876: r11 <- r1, 0x20\n")
(comment . ";;4880: r13 <- r1, 0x8\n")
(comment . ";;4884: r5 <- r1, 0x28\n")
(comment . ";;4888: r4 <- r1, 0x30\n")
(comment . ";;4892: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;4900: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4916: b r6")
chunklet-i: 4920; chunklet-start-i: 4936; chunklet-end-i: 4976
i: 4920
end-i: 4976
at header: 4920
i: 4936
end-i: 4976
i: 4940
end-i: 4976
i: 4944
end-i: 4976
i: 4948
end-i: 4976
i: 4952
end-i: 4976
i: 4956
end-i: 4976
i: 4960
end-i: 4976
i: 4964
end-i: 4976
i: 4968
end-i: 4976
i: 4972
end-i: 4976
i: 4976
end-i: 4976
i:4976 HIT CHUNK END
(comment . ";;4936: r1 <- r1, r8")
(comment . ";;4940: r12 <- 0x4")
(comment . ";;4944: r15 <- r1, 0x10\n")
(comment . ";;4948: r14 <- r1, 0x18\n")
(comment . ";;4952: r11 <- r1, 0x20\n")
(comment . ";;4956: r13 <- r1, 0x8\n")
(comment . ";;4960: r5 <- r1, 0x28\n")
(comment . ";;4964: r4 <- r1, 0x30\n")
(comment . ";;4968: r12 <- 0x6")
(comment . ";;4972 b -4892")
chunklet-i: 4976; chunklet-start-i: 4976; chunklet-end-i: 4980
i: 4976
end-i: 4980
i: 4980
end-i: 4980
i:4980 HIT CHUNK END
(comment . ";;4976 b -2124")
chunklet-i: 4980; chunklet-start-i: 4980; chunklet-end-i: 4992
i: 4980
end-i: 4992
i: 4980
end-i: 4992
i: 4992
end-i: 4992
i:4992 HIT CHUNK END
(comment . ";; literal r10")
chunklet-i: 4992; chunklet-start-i: 4996; chunklet-end-i: 5000
i: 4992
end-i: 5000
i: 4996
end-i: 5000
i: 5000
end-i: 5000
i:5000 HIT CHUNK END
(comment . ";; instruction 4992 not included")
(comment . ";;4996 b -4952")
chunklet-i: 5000; chunklet-start-i: 5000; chunklet-end-i: 5016
i: 5000
end-i: 5016
i: 5000
end-i: 5016
i: 5012
end-i: 5016
i: 5016
end-i: 5016
i:5016 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;5012: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: start
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 36
instruction range for chunk: 36 76
instruction range for chunk: 76 88
instruction range for chunk: 88 96
instruction range for chunk: 96 104
instruction range for chunk: 104 128
instruction range for chunk: 128 132
instruction range for chunk: 132 144
instruction range for chunk: 144 156
instruction range for chunk: 156 164
instruction range for chunk: 164 180
instruction range for chunk: 180 200
instruction range for chunk: 200 208
instruction range for chunk: 208 216
instruction range for chunk: 216 256
instruction range for chunk: 272 284
instruction range for chunk: 284 308
instruction range for chunk: 308 344
instruction range for chunk: 360 380
instruction range for chunk: 380 416
instruction range for chunk: 432 448
instruction range for chunk: 448 452
instruction range for chunk: 452 460
instruction range for chunk: 460 468
instruction range for chunk: 468 476
instruction range for chunk: 476 480
instruction range for chunk: 480 488
instruction range for chunk: 488 496
instruction range for chunk: 496 504
instruction range for chunk: 504 508
instruction range for chunk: 508 516
instruction range for chunk: 516 524
instruction range for chunk: 524 532
instruction range for chunk: 532 556
instruction range for chunk: 556 580
instruction range for chunk: 580 604
instruction range for chunk: 604 608
instruction range for chunk: 608 620
instruction range for chunk: 620 632
instruction range for chunk: 632 644
instruction range for chunk: 644 652
instruction range for chunk: 652 656
instruction range for chunk: 656 668
instruction range for chunk: 668 680
instruction range for chunk: 680 684
instruction range for chunk: 684 696
instruction range for chunk: 696 704
instruction range for chunk: 704 708
instruction range for chunk: 708 720
instruction range for chunk: 720 732
instruction range for chunk: 732 740
instruction range for chunk: 740 756
instruction range for chunk: 756 776
instruction range for chunk: 776 784
instruction range for chunk: 784 792
instruction range for chunk: 792 840
instruction range for chunk: 856 884
instruction range for chunk: 884 908
instruction range for chunk: 908 960
instruction range for chunk: 976 1012
instruction range for chunk: 1012 1064
instruction range for chunk: 1080 1112
instruction range for chunk: 1112 1168
instruction range for chunk: 1184 1224
instruction range for chunk: 1224 1280
instruction range for chunk: 1296 1332
instruction range for chunk: 1332 1384
instruction range for chunk: 1400 1440
instruction range for chunk: 1440 1488
instruction range for chunk: 1504 1540
instruction range for chunk: 1540 1584
instruction range for chunk: 1600 1628
instruction range for chunk: 1628 1672
instruction range for chunk: 1688 1716
instruction range for chunk: 1716 1724
instruction range for chunk: 1724 1732
instruction range for chunk: 1732 1740
instruction range for chunk: 1740 1784
instruction range for chunk: 1800 1820
instruction range for chunk: 1820 1828
instruction range for chunk: 1828 1872
instruction range for chunk: 1888 1908
instruction range for chunk: 1908 1960
instruction range for chunk: 1976 2012
instruction range for chunk: 2012 2016
instruction range for chunk: 2016 2056
instruction range for chunk: 2072 2096
instruction range for chunk: 2096 2104
instruction range for chunk: 2104 2112
instruction range for chunk: 2112 2120
instruction range for chunk: 2120 2160
instruction range for chunk: 2176 2192
instruction range for chunk: 2192 2200
instruction range for chunk: 2200 2240
instruction range for chunk: 2256 2272
instruction range for chunk: 2272 2320
instruction range for chunk: 2336 2368
instruction range for chunk: 2368 2372
instruction range for chunk: 2372 2408
instruction range for chunk: 2424 2440
instruction range for chunk: 2440 2444
instruction range for chunk: 2444 2468
instruction range for chunk: 2468 2480
instruction range for chunk: 2480 2488
instruction range for chunk: 2488 2496
instruction range for chunk: 2496 2500
instruction range for chunk: 2500 2512
instruction range for chunk: 2512 2520
instruction range for chunk: 2520 2528
instruction range for chunk: 2528 2552
instruction range for chunk: 2552 2556
instruction range for chunk: 2556 2568
instruction range for chunk: 2568 2588
instruction range for chunk: 2588 2600
instruction range for chunk: 2600 2620
instruction range for chunk: 2620 2632
instruction range for chunk: 2632 2640
instruction range for chunk: 2640 2656
instruction range for chunk: 2656 2676
instruction range for chunk: 2676 2684
instruction range for chunk: 2684 2692
instruction range for chunk: 2692 2736
instruction range for chunk: 2752 2772
instruction range for chunk: 2772 2796
instruction range for chunk: 2796 2816
instruction range for chunk: 2816 2856
instruction range for chunk: 2872 2896
instruction range for chunk: 2896 2936
instruction range for chunk: 2952 2976
instruction range for chunk: 2976 2984
instruction range for chunk: 2984 2992
instruction range for chunk: 2992 3000
instruction range for chunk: 3000 3040
instruction range for chunk: 3056 3072
instruction range for chunk: 3072 3080
instruction range for chunk: 3080 3120
instruction range for chunk: 3136 3152
instruction range for chunk: 3152 3200
instruction range for chunk: 3216 3248
instruction range for chunk: 3248 3252
instruction range for chunk: 3252 3288
instruction range for chunk: 3304 3324
instruction range for chunk: 3324 3416
instruction range for chunk: 3432 3496
instruction range for chunk: 3512 3576
instruction range for chunk: 3592 3656
instruction range for chunk: 3672 3736
instruction range for chunk: 3752 3816
instruction range for chunk: 3832 3896
instruction range for chunk: 3912 3976
instruction range for chunk: 3992 4056
instruction range for chunk: 4072 4136
instruction range for chunk: 4152 4216
instruction range for chunk: 4232 4296
instruction range for chunk: 4312 4376
instruction range for chunk: 4392 4424
instruction range for chunk: 4424 4428
instruction range for chunk: 4428 4440
instruction range for chunk: 4440 4452
instruction range for chunk: 4452 4460
instruction range for chunk: 4460 4492
instruction range for chunk: 4492 4496
instruction range for chunk: 4496 4508
instruction range for chunk: 4508 4520
instruction range for chunk: 4520 4528
instruction range for chunk: 4528 4560
instruction range for chunk: 4560 4564
instruction range for chunk: 4564 4576
instruction range for chunk: 4576 4588
instruction range for chunk: 4588 4596
instruction range for chunk: 4596 4628
instruction range for chunk: 4628 4632
instruction range for chunk: 4632 4644
instruction range for chunk: 4644 4656
instruction range for chunk: 4656 4664
instruction range for chunk: 4664 4700
instruction range for chunk: 4700 4724
instruction range for chunk: 4724 4732
instruction range for chunk: 4732 4740
instruction range for chunk: 4740 4744
instruction range for chunk: 4744 4756
instruction range for chunk: 4756 4768
instruction range for chunk: 4768 4772
instruction range for chunk: 4772 4780
instruction range for chunk: 4780 4788
instruction range for chunk: 4788 4792
instruction range for chunk: 4792 4812
instruction range for chunk: 4812 4872
instruction range for chunk: 4888 4908
instruction range for chunk: 4908 4924
instruction range for chunk: 4924 4944
instruction range for chunk: 4944 4992
instruction range for chunk: 5008 5012
instruction range for chunk: 5012 5056
instruction range for chunk: 5072 5088
instruction range for chunk: 5088 5096
instruction range for chunk: 5096 5120
instruction range for chunk: 5120 5124
instruction range for chunk: 5124 5140
instruction range for chunk: 5140 5168
instruction range for chunk: 5184 5192
instruction range for chunk: 5192 5232
instruction range for chunk: 5248 5276
instruction range for chunk: 5276 5288
instruction range for chunk: 5288 5304
instruction range for chunk: 5304 5316
instruction range for chunk: 5320 5328
instruction range for chunk: 5328 5340
instruction range for chunk: 5344 5348
instruction range for chunk: 5348 5384
instruction range for chunk: 5400 5420
instruction range for chunk: 5420 5456
instruction range for chunk: 5472 5488
instruction range for chunk: 5488 5528
instruction range for chunk: 5544 5564
instruction range for chunk: 5564 5600
instruction range for chunk: 5616 5640
instruction range for chunk: 5640 5672
instruction range for chunk: 5688 5700
instruction range for chunk: 5700 5724
instruction range for chunk: 5724 5752
instruction range for chunk: 5768 5780
instruction range for chunk: 5780 5804
instruction range for chunk: 5804 5832
instruction range for chunk: 5848 5860
instruction range for chunk: 5860 5884
instruction range for chunk: 5884 5912
instruction range for chunk: 5928 5940
instruction range for chunk: 5940 5964
instruction range for chunk: 5964 5992
instruction range for chunk: 6008 6024
instruction range for chunk: 6024 6032
instruction range for chunk: 6032 6072
instruction range for chunk: 6088 6104
instruction range for chunk: 6104 6144
instruction range for chunk: 6160 6188
instruction range for chunk: 6188 6192
instruction range for chunk: 6192 6200
instruction range for chunk: 6200 6240
instruction range for chunk: 6256 6276
instruction range for chunk: 6276 6312
instruction range for chunk: 6328 6348
instruction range for chunk: 6348 6356
instruction range for chunk: 6356 6392
instruction range for chunk: 6408 6420
instruction range for chunk: 6420 6464
instruction range for chunk: 6480 6504
instruction range for chunk: 6504 6508
instruction range for chunk: 6508 6516
instruction range for chunk: 6516 6552
instruction range for chunk: 6568 6580
instruction range for chunk: 6580 6624
instruction range for chunk: 6640 6664
instruction range for chunk: 6664 6668
instruction range for chunk: 6668 6680
instruction range for chunk: 6684 6688
instruction range for chunk: 6688 6704
instruction range for chunk: 6704 6720
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
i: 20
end-i: 36
i: 24
end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
i: 36
end-i: 76
i: 40
end-i: 76
i: 44
end-i: 76
i: 48
end-i: 76
i: 52
end-i: 76
i: 56
end-i: 76
i: 60
end-i: 76
i: 64
end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
i: 76
end-i: 88
i: 80
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
i:88 HIT CHUNK END
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
i:96 HIT CHUNK END
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
i: 104
end-i: 128
i: 108
end-i: 128
i: 112
end-i: 128
i: 116
end-i: 128
i: 120
end-i: 128
i: 124
end-i: 128
i: 128
end-i: 128
i:128 HIT CHUNK END
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
i: 132
end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
i:144 HIT CHUNK END
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
i: 164
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
i:200 HIT CHUNK END
i: 200
end-i: 208
i: 204
end-i: 208
i: 208
end-i: 208
i:208 HIT CHUNK END
i: 208
end-i: 216
i: 212
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
i: 216
end-i: 256
i: 220
end-i: 256
i: 224
end-i: 256
i: 228
end-i: 256
i: 232
end-i: 256
i: 236
end-i: 256
i: 240
end-i: 256
i: 244
end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
at header: 256
i: 256
end-i: 284
at header: 256
i: 272
end-i: 284
i: 276
end-i: 284
i: 280
end-i: 284
i: 284
end-i: 284
i:284 HIT CHUNK END
i: 284
end-i: 308
i: 288
end-i: 308
i: 292
end-i: 308
i: 296
end-i: 308
i: 300
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
i: 308
end-i: 344
i: 312
end-i: 344
i: 316
end-i: 344
i: 320
end-i: 344
i: 324
end-i: 344
i: 328
end-i: 344
i: 332
end-i: 344
i: 336
end-i: 344
i: 340
end-i: 344
i: 344
end-i: 344
at header: 344
i: 344
end-i: 380
at header: 344
i: 360
end-i: 380
i: 364
end-i: 380
i: 368
end-i: 380
i: 372
end-i: 380
i: 376
end-i: 380
i: 380
end-i: 380
i:380 HIT CHUNK END
i: 380
end-i: 416
i: 384
end-i: 416
i: 388
end-i: 416
i: 392
end-i: 416
i: 396
end-i: 416
i: 400
end-i: 416
i: 404
end-i: 416
i: 408
end-i: 416
i: 412
end-i: 416
i: 416
end-i: 416
at header: 416
i: 416
end-i: 448
at header: 416
i: 432
end-i: 448
i: 436
end-i: 448
i: 440
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
i:448 HIT CHUNK END
i: 448
end-i: 452
i: 452
end-i: 452
i:452 HIT CHUNK END
i: 452
end-i: 460
i: 456
end-i: 460
i: 460
end-i: 460
i:460 HIT CHUNK END
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
i: 468
end-i: 476
i: 472
end-i: 476
i: 476
end-i: 476
i:476 HIT CHUNK END
i: 476
end-i: 480
i: 480
end-i: 480
i:480 HIT CHUNK END
i: 480
end-i: 488
i: 484
end-i: 488
i: 488
end-i: 488
i:488 HIT CHUNK END
i: 488
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
i: 496
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
i:504 HIT CHUNK END
i: 504
end-i: 508
i: 508
end-i: 508
i:508 HIT CHUNK END
i: 508
end-i: 516
i: 512
end-i: 516
i: 516
end-i: 516
i:516 HIT CHUNK END
i: 516
end-i: 524
i: 520
end-i: 524
i: 524
end-i: 524
i:524 HIT CHUNK END
i: 524
end-i: 532
i: 528
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
i: 532
end-i: 556
i: 536
end-i: 556
i: 540
end-i: 556
i: 544
end-i: 556
i: 548
end-i: 556
i: 552
end-i: 556
i: 556
end-i: 556
i:556 HIT CHUNK END
i: 556
end-i: 580
i: 560
end-i: 580
i: 564
end-i: 580
i: 568
end-i: 580
i: 572
end-i: 580
i: 576
end-i: 580
i: 580
end-i: 580
i:580 HIT CHUNK END
i: 580
end-i: 604
i: 584
end-i: 604
i: 588
end-i: 604
i: 592
end-i: 604
i: 596
end-i: 604
i: 600
end-i: 604
i: 604
end-i: 604
i:604 HIT CHUNK END
i: 604
end-i: 608
i: 608
end-i: 608
i:608 HIT CHUNK END
i: 608
end-i: 620
i: 612
end-i: 620
i: 616
end-i: 620
i: 620
end-i: 620
i:620 HIT CHUNK END
i: 620
end-i: 632
i: 624
end-i: 632
i: 628
end-i: 632
i: 632
end-i: 632
i:632 HIT CHUNK END
i: 632
end-i: 644
i: 636
end-i: 644
i: 640
end-i: 644
i: 644
end-i: 644
i:644 HIT CHUNK END
i: 644
end-i: 652
i: 648
end-i: 652
i: 652
end-i: 652
i:652 HIT CHUNK END
i: 652
end-i: 656
i: 656
end-i: 656
i:656 HIT CHUNK END
i: 656
end-i: 668
i: 660
end-i: 668
i: 664
end-i: 668
i: 668
end-i: 668
i:668 HIT CHUNK END
i: 668
end-i: 680
i: 672
end-i: 680
i: 676
end-i: 680
i: 680
end-i: 680
i:680 HIT CHUNK END
i: 680
end-i: 684
i: 684
end-i: 684
i:684 HIT CHUNK END
i: 684
end-i: 696
i: 688
end-i: 696
i: 692
end-i: 696
i: 696
end-i: 696
i:696 HIT CHUNK END
i: 696
end-i: 704
i: 700
end-i: 704
i: 704
end-i: 704
i:704 HIT CHUNK END
i: 704
end-i: 708
i: 708
end-i: 708
i:708 HIT CHUNK END
i: 708
end-i: 720
i: 712
end-i: 720
i: 716
end-i: 720
i: 720
end-i: 720
i:720 HIT CHUNK END
i: 720
end-i: 732
i: 724
end-i: 732
i: 728
end-i: 732
i: 732
end-i: 732
i:732 HIT CHUNK END
i: 732
end-i: 740
i: 736
end-i: 740
i: 740
end-i: 740
i:740 HIT CHUNK END
i: 740
end-i: 756
i: 744
end-i: 756
i: 748
end-i: 756
i: 752
end-i: 756
i: 756
end-i: 756
i:756 HIT CHUNK END
i: 756
end-i: 776
i: 760
end-i: 776
i: 764
end-i: 776
i: 768
end-i: 776
i: 772
end-i: 776
i: 776
end-i: 776
i:776 HIT CHUNK END
i: 776
end-i: 784
i: 780
end-i: 784
i: 784
end-i: 784
i:784 HIT CHUNK END
i: 784
end-i: 792
i: 788
end-i: 792
i: 792
end-i: 792
i:792 HIT CHUNK END
i: 792
end-i: 840
i: 796
end-i: 840
i: 800
end-i: 840
i: 804
end-i: 840
i: 808
end-i: 840
i: 812
end-i: 840
i: 816
end-i: 840
i: 820
end-i: 840
i: 824
end-i: 840
i: 828
end-i: 840
i: 832
end-i: 840
i: 836
end-i: 840
i: 840
end-i: 840
at header: 840
i: 840
end-i: 884
at header: 840
i: 856
end-i: 884
i: 860
end-i: 884
i: 864
end-i: 884
i: 868
end-i: 884
i: 872
end-i: 884
i: 876
end-i: 884
i: 880
end-i: 884
i: 884
end-i: 884
i:884 HIT CHUNK END
i: 884
end-i: 908
i: 888
end-i: 908
i: 892
end-i: 908
i: 896
end-i: 908
i: 900
end-i: 908
i: 904
end-i: 908
i: 908
end-i: 908
i:908 HIT CHUNK END
i: 908
end-i: 960
i: 912
end-i: 960
i: 916
end-i: 960
i: 920
end-i: 960
i: 924
end-i: 960
i: 928
end-i: 960
i: 932
end-i: 960
i: 936
end-i: 960
i: 940
end-i: 960
i: 944
end-i: 960
i: 948
end-i: 960
i: 952
end-i: 960
i: 956
end-i: 960
i: 960
end-i: 960
at header: 960
i: 960
end-i: 1012
at header: 960
i: 976
end-i: 1012
i: 980
end-i: 1012
i: 984
end-i: 1012
i: 988
end-i: 1012
i: 992
end-i: 1012
i: 996
end-i: 1012
i: 1000
end-i: 1012
i: 1004
end-i: 1012
i: 1008
end-i: 1012
i: 1012
end-i: 1012
i:1012 HIT CHUNK END
i: 1012
end-i: 1064
i: 1016
end-i: 1064
i: 1020
end-i: 1064
i: 1024
end-i: 1064
i: 1028
end-i: 1064
i: 1032
end-i: 1064
i: 1036
end-i: 1064
i: 1040
end-i: 1064
i: 1044
end-i: 1064
i: 1048
end-i: 1064
i: 1052
end-i: 1064
i: 1056
end-i: 1064
i: 1060
end-i: 1064
i: 1064
end-i: 1064
at header: 1064
i: 1064
end-i: 1112
at header: 1064
i: 1080
end-i: 1112
i: 1084
end-i: 1112
i: 1088
end-i: 1112
i: 1092
end-i: 1112
i: 1096
end-i: 1112
i: 1100
end-i: 1112
i: 1104
end-i: 1112
i: 1108
end-i: 1112
i: 1112
end-i: 1112
i:1112 HIT CHUNK END
i: 1112
end-i: 1168
i: 1116
end-i: 1168
i: 1120
end-i: 1168
i: 1124
end-i: 1168
i: 1128
end-i: 1168
i: 1132
end-i: 1168
i: 1136
end-i: 1168
i: 1140
end-i: 1168
i: 1144
end-i: 1168
i: 1148
end-i: 1168
i: 1152
end-i: 1168
i: 1156
end-i: 1168
i: 1160
end-i: 1168
i: 1164
end-i: 1168
i: 1168
end-i: 1168
at header: 1168
i: 1168
end-i: 1224
at header: 1168
i: 1184
end-i: 1224
i: 1188
end-i: 1224
i: 1192
end-i: 1224
i: 1196
end-i: 1224
i: 1200
end-i: 1224
i: 1204
end-i: 1224
i: 1208
end-i: 1224
i: 1212
end-i: 1224
i: 1216
end-i: 1224
i: 1220
end-i: 1224
i: 1224
end-i: 1224
i:1224 HIT CHUNK END
i: 1224
end-i: 1280
i: 1228
end-i: 1280
i: 1232
end-i: 1280
i: 1236
end-i: 1280
i: 1240
end-i: 1280
i: 1244
end-i: 1280
i: 1248
end-i: 1280
i: 1252
end-i: 1280
i: 1256
end-i: 1280
i: 1260
end-i: 1280
i: 1264
end-i: 1280
i: 1268
end-i: 1280
i: 1272
end-i: 1280
i: 1276
end-i: 1280
i: 1280
end-i: 1280
at header: 1280
i: 1280
end-i: 1332
at header: 1280
i: 1296
end-i: 1332
i: 1300
end-i: 1332
i: 1304
end-i: 1332
i: 1308
end-i: 1332
i: 1312
end-i: 1332
i: 1316
end-i: 1332
i: 1320
end-i: 1332
i: 1324
end-i: 1332
i: 1328
end-i: 1332
i: 1332
end-i: 1332
i:1332 HIT CHUNK END
i: 1332
end-i: 1384
i: 1336
end-i: 1384
i: 1340
end-i: 1384
i: 1344
end-i: 1384
i: 1348
end-i: 1384
i: 1352
end-i: 1384
i: 1356
end-i: 1384
i: 1360
end-i: 1384
i: 1364
end-i: 1384
i: 1368
end-i: 1384
i: 1372
end-i: 1384
i: 1376
end-i: 1384
i: 1380
end-i: 1384
i: 1384
end-i: 1384
at header: 1384
i: 1384
end-i: 1440
at header: 1384
i: 1400
end-i: 1440
i: 1404
end-i: 1440
i: 1408
end-i: 1440
i: 1412
end-i: 1440
i: 1416
end-i: 1440
i: 1420
end-i: 1440
i: 1424
end-i: 1440
i: 1428
end-i: 1440
i: 1432
end-i: 1440
i: 1436
end-i: 1440
i: 1440
end-i: 1440
i:1440 HIT CHUNK END
i: 1440
end-i: 1488
i: 1444
end-i: 1488
i: 1448
end-i: 1488
i: 1452
end-i: 1488
i: 1456
end-i: 1488
i: 1460
end-i: 1488
i: 1464
end-i: 1488
i: 1468
end-i: 1488
i: 1472
end-i: 1488
i: 1476
end-i: 1488
i: 1480
end-i: 1488
i: 1484
end-i: 1488
i: 1488
end-i: 1488
at header: 1488
i: 1488
end-i: 1540
at header: 1488
i: 1504
end-i: 1540
i: 1508
end-i: 1540
i: 1512
end-i: 1540
i: 1516
end-i: 1540
i: 1520
end-i: 1540
i: 1524
end-i: 1540
i: 1528
end-i: 1540
i: 1532
end-i: 1540
i: 1536
end-i: 1540
i: 1540
end-i: 1540
i:1540 HIT CHUNK END
i: 1540
end-i: 1584
i: 1544
end-i: 1584
i: 1548
end-i: 1584
i: 1552
end-i: 1584
i: 1556
end-i: 1584
i: 1560
end-i: 1584
i: 1564
end-i: 1584
i: 1568
end-i: 1584
i: 1572
end-i: 1584
i: 1576
end-i: 1584
i: 1580
end-i: 1584
i: 1584
end-i: 1584
at header: 1584
i: 1584
end-i: 1628
at header: 1584
i: 1600
end-i: 1628
i: 1604
end-i: 1628
i: 1608
end-i: 1628
i: 1612
end-i: 1628
i: 1616
end-i: 1628
i: 1620
end-i: 1628
i: 1624
end-i: 1628
i: 1628
end-i: 1628
i:1628 HIT CHUNK END
i: 1628
end-i: 1672
i: 1632
end-i: 1672
i: 1636
end-i: 1672
i: 1640
end-i: 1672
i: 1644
end-i: 1672
i: 1648
end-i: 1672
i: 1652
end-i: 1672
i: 1656
end-i: 1672
i: 1660
end-i: 1672
i: 1664
end-i: 1672
i: 1668
end-i: 1672
i: 1672
end-i: 1672
at header: 1672
i: 1672
end-i: 1716
at header: 1672
i: 1688
end-i: 1716
i: 1692
end-i: 1716
i: 1696
end-i: 1716
i: 1700
end-i: 1716
i: 1704
end-i: 1716
i: 1708
end-i: 1716
i: 1712
end-i: 1716
i: 1716
end-i: 1716
i:1716 HIT CHUNK END
i: 1716
end-i: 1724
i: 1720
end-i: 1724
i: 1724
end-i: 1724
i:1724 HIT CHUNK END
i: 1724
end-i: 1732
i: 1728
end-i: 1732
i: 1732
end-i: 1732
i:1732 HIT CHUNK END
i: 1732
end-i: 1740
i: 1736
end-i: 1740
i: 1740
end-i: 1740
i:1740 HIT CHUNK END
i: 1740
end-i: 1784
i: 1744
end-i: 1784
i: 1748
end-i: 1784
i: 1752
end-i: 1784
i: 1756
end-i: 1784
i: 1760
end-i: 1784
i: 1764
end-i: 1784
i: 1768
end-i: 1784
i: 1772
end-i: 1784
i: 1776
end-i: 1784
i: 1780
end-i: 1784
i: 1784
end-i: 1784
at header: 1784
i: 1784
end-i: 1820
at header: 1784
i: 1800
end-i: 1820
i: 1804
end-i: 1820
i: 1808
end-i: 1820
i: 1812
end-i: 1820
i: 1816
end-i: 1820
i: 1820
end-i: 1820
i:1820 HIT CHUNK END
i: 1820
end-i: 1828
i: 1824
end-i: 1828
i: 1828
end-i: 1828
i:1828 HIT CHUNK END
i: 1828
end-i: 1872
i: 1832
end-i: 1872
i: 1836
end-i: 1872
i: 1840
end-i: 1872
i: 1844
end-i: 1872
i: 1848
end-i: 1872
i: 1852
end-i: 1872
i: 1856
end-i: 1872
i: 1860
end-i: 1872
i: 1864
end-i: 1872
i: 1868
end-i: 1872
i: 1872
end-i: 1872
at header: 1872
i: 1872
end-i: 1908
at header: 1872
i: 1888
end-i: 1908
i: 1892
end-i: 1908
i: 1896
end-i: 1908
i: 1900
end-i: 1908
i: 1904
end-i: 1908
i: 1908
end-i: 1908
i:1908 HIT CHUNK END
i: 1908
end-i: 1960
i: 1912
end-i: 1960
i: 1916
end-i: 1960
i: 1920
end-i: 1960
i: 1924
end-i: 1960
i: 1928
end-i: 1960
i: 1932
end-i: 1960
i: 1936
end-i: 1960
i: 1940
end-i: 1960
i: 1944
end-i: 1960
i: 1948
end-i: 1960
i: 1952
end-i: 1960
i: 1956
end-i: 1960
i: 1960
end-i: 1960
at header: 1960
i: 1960
end-i: 2012
at header: 1960
i: 1976
end-i: 2012
i: 1980
end-i: 2012
i: 1984
end-i: 2012
i: 1988
end-i: 2012
i: 1992
end-i: 2012
i: 1996
end-i: 2012
i: 2000
end-i: 2012
i: 2004
end-i: 2012
i: 2008
end-i: 2012
i: 2012
end-i: 2012
i:2012 HIT CHUNK END
i: 2012
end-i: 2016
i: 2016
end-i: 2016
i:2016 HIT CHUNK END
i: 2016
end-i: 2056
i: 2020
end-i: 2056
i: 2024
end-i: 2056
i: 2028
end-i: 2056
i: 2032
end-i: 2056
i: 2036
end-i: 2056
i: 2040
end-i: 2056
i: 2044
end-i: 2056
i: 2048
end-i: 2056
i: 2052
end-i: 2056
i: 2056
end-i: 2056
at header: 2056
i: 2056
end-i: 2096
at header: 2056
i: 2072
end-i: 2096
i: 2076
end-i: 2096
i: 2080
end-i: 2096
i: 2084
end-i: 2096
i: 2088
end-i: 2096
i: 2092
end-i: 2096
i: 2096
end-i: 2096
i:2096 HIT CHUNK END
i: 2096
end-i: 2104
i: 2100
end-i: 2104
i: 2104
end-i: 2104
i:2104 HIT CHUNK END
i: 2104
end-i: 2112
i: 2108
end-i: 2112
i: 2112
end-i: 2112
i:2112 HIT CHUNK END
i: 2112
end-i: 2120
i: 2116
end-i: 2120
i: 2120
end-i: 2120
i:2120 HIT CHUNK END
i: 2120
end-i: 2160
i: 2124
end-i: 2160
i: 2128
end-i: 2160
i: 2132
end-i: 2160
i: 2136
end-i: 2160
i: 2140
end-i: 2160
i: 2144
end-i: 2160
i: 2148
end-i: 2160
i: 2152
end-i: 2160
i: 2156
end-i: 2160
i: 2160
end-i: 2160
at header: 2160
i: 2160
end-i: 2192
at header: 2160
i: 2176
end-i: 2192
i: 2180
end-i: 2192
i: 2184
end-i: 2192
i: 2188
end-i: 2192
i: 2192
end-i: 2192
i:2192 HIT CHUNK END
i: 2192
end-i: 2200
i: 2196
end-i: 2200
i: 2200
end-i: 2200
i:2200 HIT CHUNK END
i: 2200
end-i: 2240
i: 2204
end-i: 2240
i: 2208
end-i: 2240
i: 2212
end-i: 2240
i: 2216
end-i: 2240
i: 2220
end-i: 2240
i: 2224
end-i: 2240
i: 2228
end-i: 2240
i: 2232
end-i: 2240
i: 2236
end-i: 2240
i: 2240
end-i: 2240
at header: 2240
i: 2240
end-i: 2272
at header: 2240
i: 2256
end-i: 2272
i: 2260
end-i: 2272
i: 2264
end-i: 2272
i: 2268
end-i: 2272
i: 2272
end-i: 2272
i:2272 HIT CHUNK END
i: 2272
end-i: 2320
i: 2276
end-i: 2320
i: 2280
end-i: 2320
i: 2284
end-i: 2320
i: 2288
end-i: 2320
i: 2292
end-i: 2320
i: 2296
end-i: 2320
i: 2300
end-i: 2320
i: 2304
end-i: 2320
i: 2308
end-i: 2320
i: 2312
end-i: 2320
i: 2316
end-i: 2320
i: 2320
end-i: 2320
at header: 2320
i: 2320
end-i: 2368
at header: 2320
i: 2336
end-i: 2368
i: 2340
end-i: 2368
i: 2344
end-i: 2368
i: 2348
end-i: 2368
i: 2352
end-i: 2368
i: 2356
end-i: 2368
i: 2360
end-i: 2368
i: 2364
end-i: 2368
i: 2368
end-i: 2368
i:2368 HIT CHUNK END
i: 2368
end-i: 2372
i: 2372
end-i: 2372
i:2372 HIT CHUNK END
i: 2372
end-i: 2408
i: 2376
end-i: 2408
i: 2380
end-i: 2408
i: 2384
end-i: 2408
i: 2388
end-i: 2408
i: 2392
end-i: 2408
i: 2396
end-i: 2408
i: 2400
end-i: 2408
i: 2404
end-i: 2408
i: 2408
end-i: 2408
at header: 2408
i: 2408
end-i: 2440
at header: 2408
i: 2424
end-i: 2440
i: 2428
end-i: 2440
i: 2432
end-i: 2440
i: 2436
end-i: 2440
i: 2440
end-i: 2440
i:2440 HIT CHUNK END
i: 2440
end-i: 2444
i: 2444
end-i: 2444
i:2444 HIT CHUNK END
i: 2444
end-i: 2468
i: 2448
end-i: 2468
i: 2452
end-i: 2468
i: 2456
end-i: 2468
i: 2460
end-i: 2468
i: 2464
end-i: 2468
i: 2468
end-i: 2468
i:2468 HIT CHUNK END
i: 2468
end-i: 2480
i: 2472
end-i: 2480
i: 2476
end-i: 2480
i: 2480
end-i: 2480
i:2480 HIT CHUNK END
i: 2480
end-i: 2488
i: 2484
end-i: 2488
i: 2488
end-i: 2488
i:2488 HIT CHUNK END
i: 2488
end-i: 2496
i: 2492
end-i: 2496
i: 2496
end-i: 2496
i:2496 HIT CHUNK END
i: 2496
end-i: 2500
i: 2500
end-i: 2500
i:2500 HIT CHUNK END
i: 2500
end-i: 2512
i: 2504
end-i: 2512
i: 2508
end-i: 2512
i: 2512
end-i: 2512
i:2512 HIT CHUNK END
i: 2512
end-i: 2520
i: 2516
end-i: 2520
i: 2520
end-i: 2520
i:2520 HIT CHUNK END
i: 2520
end-i: 2528
i: 2524
end-i: 2528
i: 2528
end-i: 2528
i:2528 HIT CHUNK END
i: 2528
end-i: 2552
i: 2532
end-i: 2552
i: 2536
end-i: 2552
i: 2540
end-i: 2552
i: 2544
end-i: 2552
i: 2548
end-i: 2552
i: 2552
end-i: 2552
i:2552 HIT CHUNK END
i: 2552
end-i: 2556
i: 2556
end-i: 2556
i:2556 HIT CHUNK END
i: 2556
end-i: 2568
i: 2560
end-i: 2568
i: 2564
end-i: 2568
i: 2568
end-i: 2568
i:2568 HIT CHUNK END
i: 2568
end-i: 2588
i: 2572
end-i: 2588
i: 2576
end-i: 2588
i: 2580
end-i: 2588
i: 2584
end-i: 2588
i: 2588
end-i: 2588
i:2588 HIT CHUNK END
i: 2588
end-i: 2600
i: 2592
end-i: 2600
i: 2596
end-i: 2600
i: 2600
end-i: 2600
i:2600 HIT CHUNK END
i: 2600
end-i: 2620
i: 2604
end-i: 2620
i: 2608
end-i: 2620
i: 2612
end-i: 2620
i: 2616
end-i: 2620
i: 2620
end-i: 2620
i:2620 HIT CHUNK END
i: 2620
end-i: 2632
i: 2624
end-i: 2632
i: 2628
end-i: 2632
i: 2632
end-i: 2632
i:2632 HIT CHUNK END
i: 2632
end-i: 2640
i: 2636
end-i: 2640
i: 2640
end-i: 2640
i:2640 HIT CHUNK END
i: 2640
end-i: 2656
i: 2644
end-i: 2656
i: 2648
end-i: 2656
i: 2652
end-i: 2656
i: 2656
end-i: 2656
i:2656 HIT CHUNK END
i: 2656
end-i: 2676
i: 2660
end-i: 2676
i: 2664
end-i: 2676
i: 2668
end-i: 2676
i: 2672
end-i: 2676
i: 2676
end-i: 2676
i:2676 HIT CHUNK END
i: 2676
end-i: 2684
i: 2680
end-i: 2684
i: 2684
end-i: 2684
i:2684 HIT CHUNK END
i: 2684
end-i: 2692
i: 2688
end-i: 2692
i: 2692
end-i: 2692
i:2692 HIT CHUNK END
i: 2692
end-i: 2736
i: 2696
end-i: 2736
i: 2700
end-i: 2736
i: 2704
end-i: 2736
i: 2708
end-i: 2736
i: 2712
end-i: 2736
i: 2716
end-i: 2736
i: 2720
end-i: 2736
i: 2724
end-i: 2736
i: 2728
end-i: 2736
i: 2732
end-i: 2736
i: 2736
end-i: 2736
at header: 2736
i: 2736
end-i: 2772
at header: 2736
i: 2752
end-i: 2772
i: 2756
end-i: 2772
i: 2760
end-i: 2772
i: 2764
end-i: 2772
i: 2768
end-i: 2772
i: 2772
end-i: 2772
i:2772 HIT CHUNK END
i: 2772
end-i: 2796
i: 2776
end-i: 2796
i: 2780
end-i: 2796
i: 2784
end-i: 2796
i: 2788
end-i: 2796
i: 2792
end-i: 2796
i: 2796
end-i: 2796
i:2796 HIT CHUNK END
i: 2796
end-i: 2816
i: 2800
end-i: 2816
i: 2804
end-i: 2816
i: 2808
end-i: 2816
i: 2812
end-i: 2816
i: 2816
end-i: 2816
i:2816 HIT CHUNK END
i: 2816
end-i: 2856
i: 2820
end-i: 2856
i: 2824
end-i: 2856
i: 2828
end-i: 2856
i: 2832
end-i: 2856
i: 2836
end-i: 2856
i: 2840
end-i: 2856
i: 2844
end-i: 2856
i: 2848
end-i: 2856
i: 2852
end-i: 2856
i: 2856
end-i: 2856
at header: 2856
i: 2856
end-i: 2896
at header: 2856
i: 2872
end-i: 2896
i: 2876
end-i: 2896
i: 2880
end-i: 2896
i: 2884
end-i: 2896
i: 2888
end-i: 2896
i: 2892
end-i: 2896
i: 2896
end-i: 2896
i:2896 HIT CHUNK END
i: 2896
end-i: 2936
i: 2900
end-i: 2936
i: 2904
end-i: 2936
i: 2908
end-i: 2936
i: 2912
end-i: 2936
i: 2916
end-i: 2936
i: 2920
end-i: 2936
i: 2924
end-i: 2936
i: 2928
end-i: 2936
i: 2932
end-i: 2936
i: 2936
end-i: 2936
at header: 2936
i: 2936
end-i: 2976
at header: 2936
i: 2952
end-i: 2976
i: 2956
end-i: 2976
i: 2960
end-i: 2976
i: 2964
end-i: 2976
i: 2968
end-i: 2976
i: 2972
end-i: 2976
i: 2976
end-i: 2976
i:2976 HIT CHUNK END
i: 2976
end-i: 2984
i: 2980
end-i: 2984
i: 2984
end-i: 2984
i:2984 HIT CHUNK END
i: 2984
end-i: 2992
i: 2988
end-i: 2992
i: 2992
end-i: 2992
i:2992 HIT CHUNK END
i: 2992
end-i: 3000
i: 2996
end-i: 3000
i: 3000
end-i: 3000
i:3000 HIT CHUNK END
i: 3000
end-i: 3040
i: 3004
end-i: 3040
i: 3008
end-i: 3040
i: 3012
end-i: 3040
i: 3016
end-i: 3040
i: 3020
end-i: 3040
i: 3024
end-i: 3040
i: 3028
end-i: 3040
i: 3032
end-i: 3040
i: 3036
end-i: 3040
i: 3040
end-i: 3040
at header: 3040
i: 3040
end-i: 3072
at header: 3040
i: 3056
end-i: 3072
i: 3060
end-i: 3072
i: 3064
end-i: 3072
i: 3068
end-i: 3072
i: 3072
end-i: 3072
i:3072 HIT CHUNK END
i: 3072
end-i: 3080
i: 3076
end-i: 3080
i: 3080
end-i: 3080
i:3080 HIT CHUNK END
i: 3080
end-i: 3120
i: 3084
end-i: 3120
i: 3088
end-i: 3120
i: 3092
end-i: 3120
i: 3096
end-i: 3120
i: 3100
end-i: 3120
i: 3104
end-i: 3120
i: 3108
end-i: 3120
i: 3112
end-i: 3120
i: 3116
end-i: 3120
i: 3120
end-i: 3120
at header: 3120
i: 3120
end-i: 3152
at header: 3120
i: 3136
end-i: 3152
i: 3140
end-i: 3152
i: 3144
end-i: 3152
i: 3148
end-i: 3152
i: 3152
end-i: 3152
i:3152 HIT CHUNK END
i: 3152
end-i: 3200
i: 3156
end-i: 3200
i: 3160
end-i: 3200
i: 3164
end-i: 3200
i: 3168
end-i: 3200
i: 3172
end-i: 3200
i: 3176
end-i: 3200
i: 3180
end-i: 3200
i: 3184
end-i: 3200
i: 3188
end-i: 3200
i: 3192
end-i: 3200
i: 3196
end-i: 3200
i: 3200
end-i: 3200
at header: 3200
i: 3200
end-i: 3248
at header: 3200
i: 3216
end-i: 3248
i: 3220
end-i: 3248
i: 3224
end-i: 3248
i: 3228
end-i: 3248
i: 3232
end-i: 3248
i: 3236
end-i: 3248
i: 3240
end-i: 3248
i: 3244
end-i: 3248
i: 3248
end-i: 3248
i:3248 HIT CHUNK END
i: 3248
end-i: 3252
i: 3252
end-i: 3252
i:3252 HIT CHUNK END
i: 3252
end-i: 3288
i: 3256
end-i: 3288
i: 3260
end-i: 3288
i: 3264
end-i: 3288
i: 3268
end-i: 3288
i: 3272
end-i: 3288
i: 3276
end-i: 3288
i: 3280
end-i: 3288
i: 3284
end-i: 3288
i: 3288
end-i: 3288
at header: 3288
i: 3288
end-i: 3324
at header: 3288
i: 3304
end-i: 3324
i: 3308
end-i: 3324
i: 3312
end-i: 3324
i: 3316
end-i: 3324
i: 3320
end-i: 3324
i: 3324
end-i: 3324
i:3324 HIT CHUNK END
i: 3324
end-i: 3416
i: 3328
end-i: 3416
i: 3332
end-i: 3416
i: 3336
end-i: 3416
i: 3340
end-i: 3416
i: 3344
end-i: 3416
i: 3348
end-i: 3416
i: 3352
end-i: 3416
i: 3356
end-i: 3416
i: 3360
end-i: 3416
i: 3364
end-i: 3416
i: 3368
end-i: 3416
i: 3372
end-i: 3416
i: 3376
end-i: 3416
i: 3380
end-i: 3416
i: 3384
end-i: 3416
i: 3388
end-i: 3416
i: 3392
end-i: 3416
i: 3396
end-i: 3416
i: 3400
end-i: 3416
i: 3404
end-i: 3416
i: 3408
end-i: 3416
i: 3412
end-i: 3416
i: 3416
end-i: 3416
at header: 3416
i: 3416
end-i: 3496
at header: 3416
i: 3432
end-i: 3496
i: 3436
end-i: 3496
i: 3440
end-i: 3496
i: 3444
end-i: 3496
i: 3448
end-i: 3496
i: 3452
end-i: 3496
i: 3456
end-i: 3496
i: 3460
end-i: 3496
i: 3464
end-i: 3496
i: 3468
end-i: 3496
i: 3472
end-i: 3496
i: 3476
end-i: 3496
i: 3480
end-i: 3496
i: 3484
end-i: 3496
i: 3488
end-i: 3496
i: 3492
end-i: 3496
i: 3496
end-i: 3496
at header: 3496
i: 3496
end-i: 3576
at header: 3496
i: 3512
end-i: 3576
i: 3516
end-i: 3576
i: 3520
end-i: 3576
i: 3524
end-i: 3576
i: 3528
end-i: 3576
i: 3532
end-i: 3576
i: 3536
end-i: 3576
i: 3540
end-i: 3576
i: 3544
end-i: 3576
i: 3548
end-i: 3576
i: 3552
end-i: 3576
i: 3556
end-i: 3576
i: 3560
end-i: 3576
i: 3564
end-i: 3576
i: 3568
end-i: 3576
i: 3572
end-i: 3576
i: 3576
end-i: 3576
at header: 3576
i: 3576
end-i: 3656
at header: 3576
i: 3592
end-i: 3656
i: 3596
end-i: 3656
i: 3600
end-i: 3656
i: 3604
end-i: 3656
i: 3608
end-i: 3656
i: 3612
end-i: 3656
i: 3616
end-i: 3656
i: 3620
end-i: 3656
i: 3624
end-i: 3656
i: 3628
end-i: 3656
i: 3632
end-i: 3656
i: 3636
end-i: 3656
i: 3640
end-i: 3656
i: 3644
end-i: 3656
i: 3648
end-i: 3656
i: 3652
end-i: 3656
i: 3656
end-i: 3656
at header: 3656
i: 3656
end-i: 3736
at header: 3656
i: 3672
end-i: 3736
i: 3676
end-i: 3736
i: 3680
end-i: 3736
i: 3684
end-i: 3736
i: 3688
end-i: 3736
i: 3692
end-i: 3736
i: 3696
end-i: 3736
i: 3700
end-i: 3736
i: 3704
end-i: 3736
i: 3708
end-i: 3736
i: 3712
end-i: 3736
i: 3716
end-i: 3736
i: 3720
end-i: 3736
i: 3724
end-i: 3736
i: 3728
end-i: 3736
i: 3732
end-i: 3736
i: 3736
end-i: 3736
at header: 3736
i: 3736
end-i: 3816
at header: 3736
i: 3752
end-i: 3816
i: 3756
end-i: 3816
i: 3760
end-i: 3816
i: 3764
end-i: 3816
i: 3768
end-i: 3816
i: 3772
end-i: 3816
i: 3776
end-i: 3816
i: 3780
end-i: 3816
i: 3784
end-i: 3816
i: 3788
end-i: 3816
i: 3792
end-i: 3816
i: 3796
end-i: 3816
i: 3800
end-i: 3816
i: 3804
end-i: 3816
i: 3808
end-i: 3816
i: 3812
end-i: 3816
i: 3816
end-i: 3816
at header: 3816
i: 3816
end-i: 3896
at header: 3816
i: 3832
end-i: 3896
i: 3836
end-i: 3896
i: 3840
end-i: 3896
i: 3844
end-i: 3896
i: 3848
end-i: 3896
i: 3852
end-i: 3896
i: 3856
end-i: 3896
i: 3860
end-i: 3896
i: 3864
end-i: 3896
i: 3868
end-i: 3896
i: 3872
end-i: 3896
i: 3876
end-i: 3896
i: 3880
end-i: 3896
i: 3884
end-i: 3896
i: 3888
end-i: 3896
i: 3892
end-i: 3896
i: 3896
end-i: 3896
at header: 3896
i: 3896
end-i: 3976
at header: 3896
i: 3912
end-i: 3976
i: 3916
end-i: 3976
i: 3920
end-i: 3976
i: 3924
end-i: 3976
i: 3928
end-i: 3976
i: 3932
end-i: 3976
i: 3936
end-i: 3976
i: 3940
end-i: 3976
i: 3944
end-i: 3976
i: 3948
end-i: 3976
i: 3952
end-i: 3976
i: 3956
end-i: 3976
i: 3960
end-i: 3976
i: 3964
end-i: 3976
i: 3968
end-i: 3976
i: 3972
end-i: 3976
i: 3976
end-i: 3976
at header: 3976
i: 3976
end-i: 4056
at header: 3976
i: 3992
end-i: 4056
i: 3996
end-i: 4056
i: 4000
end-i: 4056
i: 4004
end-i: 4056
i: 4008
end-i: 4056
i: 4012
end-i: 4056
i: 4016
end-i: 4056
i: 4020
end-i: 4056
i: 4024
end-i: 4056
i: 4028
end-i: 4056
i: 4032
end-i: 4056
i: 4036
end-i: 4056
i: 4040
end-i: 4056
i: 4044
end-i: 4056
i: 4048
end-i: 4056
i: 4052
end-i: 4056
i: 4056
end-i: 4056
at header: 4056
i: 4056
end-i: 4136
at header: 4056
i: 4072
end-i: 4136
i: 4076
end-i: 4136
i: 4080
end-i: 4136
i: 4084
end-i: 4136
i: 4088
end-i: 4136
i: 4092
end-i: 4136
i: 4096
end-i: 4136
i: 4100
end-i: 4136
i: 4104
end-i: 4136
i: 4108
end-i: 4136
i: 4112
end-i: 4136
i: 4116
end-i: 4136
i: 4120
end-i: 4136
i: 4124
end-i: 4136
i: 4128
end-i: 4136
i: 4132
end-i: 4136
i: 4136
end-i: 4136
at header: 4136
i: 4136
end-i: 4216
at header: 4136
i: 4152
end-i: 4216
i: 4156
end-i: 4216
i: 4160
end-i: 4216
i: 4164
end-i: 4216
i: 4168
end-i: 4216
i: 4172
end-i: 4216
i: 4176
end-i: 4216
i: 4180
end-i: 4216
i: 4184
end-i: 4216
i: 4188
end-i: 4216
i: 4192
end-i: 4216
i: 4196
end-i: 4216
i: 4200
end-i: 4216
i: 4204
end-i: 4216
i: 4208
end-i: 4216
i: 4212
end-i: 4216
i: 4216
end-i: 4216
at header: 4216
i: 4216
end-i: 4296
at header: 4216
i: 4232
end-i: 4296
i: 4236
end-i: 4296
i: 4240
end-i: 4296
i: 4244
end-i: 4296
i: 4248
end-i: 4296
i: 4252
end-i: 4296
i: 4256
end-i: 4296
i: 4260
end-i: 4296
i: 4264
end-i: 4296
i: 4268
end-i: 4296
i: 4272
end-i: 4296
i: 4276
end-i: 4296
i: 4280
end-i: 4296
i: 4284
end-i: 4296
i: 4288
end-i: 4296
i: 4292
end-i: 4296
i: 4296
end-i: 4296
at header: 4296
i: 4296
end-i: 4376
at header: 4296
i: 4312
end-i: 4376
i: 4316
end-i: 4376
i: 4320
end-i: 4376
i: 4324
end-i: 4376
i: 4328
end-i: 4376
i: 4332
end-i: 4376
i: 4336
end-i: 4376
i: 4340
end-i: 4376
i: 4344
end-i: 4376
i: 4348
end-i: 4376
i: 4352
end-i: 4376
i: 4356
end-i: 4376
i: 4360
end-i: 4376
i: 4364
end-i: 4376
i: 4368
end-i: 4376
i: 4372
end-i: 4376
i: 4376
end-i: 4376
at header: 4376
i: 4376
end-i: 4424
at header: 4376
i: 4392
end-i: 4424
i: 4396
end-i: 4424
i: 4400
end-i: 4424
i: 4404
end-i: 4424
i: 4408
end-i: 4424
i: 4412
end-i: 4424
i: 4416
end-i: 4424
i: 4420
end-i: 4424
i: 4424
end-i: 4424
i:4424 HIT CHUNK END
i: 4424
end-i: 4428
i: 4428
end-i: 4428
i:4428 HIT CHUNK END
i: 4428
end-i: 4440
i: 4432
end-i: 4440
i: 4436
end-i: 4440
i: 4440
end-i: 4440
i:4440 HIT CHUNK END
i: 4440
end-i: 4452
i: 4444
end-i: 4452
i: 4448
end-i: 4452
i: 4452
end-i: 4452
i:4452 HIT CHUNK END
i: 4452
end-i: 4460
i: 4456
end-i: 4460
i: 4460
end-i: 4460
i:4460 HIT CHUNK END
i: 4460
end-i: 4492
i: 4464
end-i: 4492
i: 4468
end-i: 4492
i: 4472
end-i: 4492
i: 4476
end-i: 4492
i: 4480
end-i: 4492
i: 4484
end-i: 4492
i: 4488
end-i: 4492
i: 4492
end-i: 4492
i:4492 HIT CHUNK END
i: 4492
end-i: 4496
i: 4496
end-i: 4496
i:4496 HIT CHUNK END
i: 4496
end-i: 4508
i: 4500
end-i: 4508
i: 4504
end-i: 4508
i: 4508
end-i: 4508
i:4508 HIT CHUNK END
i: 4508
end-i: 4520
i: 4512
end-i: 4520
i: 4516
end-i: 4520
i: 4520
end-i: 4520
i:4520 HIT CHUNK END
i: 4520
end-i: 4528
i: 4524
end-i: 4528
i: 4528
end-i: 4528
i:4528 HIT CHUNK END
i: 4528
end-i: 4560
i: 4532
end-i: 4560
i: 4536
end-i: 4560
i: 4540
end-i: 4560
i: 4544
end-i: 4560
i: 4548
end-i: 4560
i: 4552
end-i: 4560
i: 4556
end-i: 4560
i: 4560
end-i: 4560
i:4560 HIT CHUNK END
i: 4560
end-i: 4564
i: 4564
end-i: 4564
i:4564 HIT CHUNK END
i: 4564
end-i: 4576
i: 4568
end-i: 4576
i: 4572
end-i: 4576
i: 4576
end-i: 4576
i:4576 HIT CHUNK END
i: 4576
end-i: 4588
i: 4580
end-i: 4588
i: 4584
end-i: 4588
i: 4588
end-i: 4588
i:4588 HIT CHUNK END
i: 4588
end-i: 4596
i: 4592
end-i: 4596
i: 4596
end-i: 4596
i:4596 HIT CHUNK END
i: 4596
end-i: 4628
i: 4600
end-i: 4628
i: 4604
end-i: 4628
i: 4608
end-i: 4628
i: 4612
end-i: 4628
i: 4616
end-i: 4628
i: 4620
end-i: 4628
i: 4624
end-i: 4628
i: 4628
end-i: 4628
i:4628 HIT CHUNK END
i: 4628
end-i: 4632
i: 4632
end-i: 4632
i:4632 HIT CHUNK END
i: 4632
end-i: 4644
i: 4636
end-i: 4644
i: 4640
end-i: 4644
i: 4644
end-i: 4644
i:4644 HIT CHUNK END
i: 4644
end-i: 4656
i: 4648
end-i: 4656
i: 4652
end-i: 4656
i: 4656
end-i: 4656
i:4656 HIT CHUNK END
i: 4656
end-i: 4664
i: 4660
end-i: 4664
i: 4664
end-i: 4664
i:4664 HIT CHUNK END
i: 4664
end-i: 4700
i: 4668
end-i: 4700
i: 4672
end-i: 4700
i: 4676
end-i: 4700
i: 4680
end-i: 4700
i: 4684
end-i: 4700
i: 4688
end-i: 4700
i: 4692
end-i: 4700
i: 4696
end-i: 4700
i: 4700
end-i: 4700
i:4700 HIT CHUNK END
i: 4700
end-i: 4724
i: 4704
end-i: 4724
i: 4708
end-i: 4724
i: 4712
end-i: 4724
i: 4716
end-i: 4724
i: 4720
end-i: 4724
i: 4724
end-i: 4724
i:4724 HIT CHUNK END
i: 4724
end-i: 4732
i: 4728
end-i: 4732
i: 4732
end-i: 4732
i:4732 HIT CHUNK END
i: 4732
end-i: 4740
i: 4736
end-i: 4740
i: 4740
end-i: 4740
i:4740 HIT CHUNK END
i: 4740
end-i: 4744
i: 4744
end-i: 4744
i:4744 HIT CHUNK END
i: 4744
end-i: 4756
i: 4748
end-i: 4756
i: 4752
end-i: 4756
i: 4756
end-i: 4756
i:4756 HIT CHUNK END
i: 4756
end-i: 4768
i: 4760
end-i: 4768
i: 4764
end-i: 4768
i: 4768
end-i: 4768
i:4768 HIT CHUNK END
i: 4768
end-i: 4772
i: 4772
end-i: 4772
i:4772 HIT CHUNK END
i: 4772
end-i: 4780
i: 4776
end-i: 4780
i: 4780
end-i: 4780
i:4780 HIT CHUNK END
i: 4780
end-i: 4788
i: 4784
end-i: 4788
i: 4788
end-i: 4788
i:4788 HIT CHUNK END
i: 4788
end-i: 4792
i: 4792
end-i: 4792
i:4792 HIT CHUNK END
i: 4792
end-i: 4812
i: 4796
end-i: 4812
i: 4800
end-i: 4812
i: 4804
end-i: 4812
i: 4808
end-i: 4812
i: 4812
end-i: 4812
i:4812 HIT CHUNK END
i: 4812
end-i: 4872
i: 4816
end-i: 4872
i: 4820
end-i: 4872
i: 4824
end-i: 4872
i: 4828
end-i: 4872
i: 4832
end-i: 4872
i: 4836
end-i: 4872
i: 4840
end-i: 4872
i: 4844
end-i: 4872
i: 4848
end-i: 4872
i: 4852
end-i: 4872
i: 4856
end-i: 4872
i: 4860
end-i: 4872
i: 4864
end-i: 4872
i: 4868
end-i: 4872
i: 4872
end-i: 4872
at header: 4872
i: 4872
end-i: 4908
at header: 4872
i: 4888
end-i: 4908
i: 4892
end-i: 4908
i: 4896
end-i: 4908
i: 4900
end-i: 4908
i: 4904
end-i: 4908
i: 4908
end-i: 4908
i:4908 HIT CHUNK END
i: 4908
end-i: 4924
i: 4912
end-i: 4924
i: 4916
end-i: 4924
i: 4920
end-i: 4924
i: 4924
end-i: 4924
i:4924 HIT CHUNK END
i: 4924
end-i: 4944
i: 4928
end-i: 4944
i: 4932
end-i: 4944
i: 4936
end-i: 4944
i: 4940
end-i: 4944
i: 4944
end-i: 4944
i:4944 HIT CHUNK END
i: 4944
end-i: 4992
i: 4948
end-i: 4992
i: 4952
end-i: 4992
i: 4956
end-i: 4992
i: 4960
end-i: 4992
i: 4964
end-i: 4992
i: 4968
end-i: 4992
i: 4972
end-i: 4992
i: 4976
end-i: 4992
i: 4980
end-i: 4992
i: 4984
end-i: 4992
i: 4988
end-i: 4992
i: 4992
end-i: 4992
at header: 4992
i: 4992
end-i: 5012
at header: 4992
i: 5008
end-i: 5012
i: 5012
end-i: 5012
i:5012 HIT CHUNK END
i: 5012
end-i: 5056
i: 5016
end-i: 5056
i: 5020
end-i: 5056
i: 5024
end-i: 5056
i: 5028
end-i: 5056
i: 5032
end-i: 5056
i: 5036
end-i: 5056
i: 5040
end-i: 5056
i: 5044
end-i: 5056
i: 5048
end-i: 5056
i: 5052
end-i: 5056
i: 5056
end-i: 5056
at header: 5056
i: 5056
end-i: 5088
at header: 5056
i: 5072
end-i: 5088
i: 5076
end-i: 5088
i: 5080
end-i: 5088
i: 5084
end-i: 5088
i: 5088
end-i: 5088
i:5088 HIT CHUNK END
i: 5088
end-i: 5096
i: 5092
end-i: 5096
i: 5096
end-i: 5096
i:5096 HIT CHUNK END
i: 5096
end-i: 5120
i: 5100
end-i: 5120
i: 5104
end-i: 5120
i: 5108
end-i: 5120
i: 5112
end-i: 5120
i: 5116
end-i: 5120
i: 5120
end-i: 5120
i:5120 HIT CHUNK END
i: 5120
end-i: 5124
i: 5124
end-i: 5124
i:5124 HIT CHUNK END
i: 5124
end-i: 5140
i: 5128
end-i: 5140
i: 5132
end-i: 5140
i: 5136
end-i: 5140
i: 5140
end-i: 5140
i:5140 HIT CHUNK END
i: 5140
end-i: 5168
i: 5144
end-i: 5168
i: 5148
end-i: 5168
i: 5152
end-i: 5168
i: 5156
end-i: 5168
i: 5160
end-i: 5168
i: 5164
end-i: 5168
i: 5168
end-i: 5168
at header: 5168
i: 5168
end-i: 5192
at header: 5168
i: 5184
end-i: 5192
i: 5188
end-i: 5192
i: 5192
end-i: 5192
i:5192 HIT CHUNK END
i: 5192
end-i: 5232
i: 5196
end-i: 5232
i: 5200
end-i: 5232
i: 5204
end-i: 5232
i: 5208
end-i: 5232
i: 5212
end-i: 5232
i: 5216
end-i: 5232
i: 5220
end-i: 5232
i: 5224
end-i: 5232
i: 5228
end-i: 5232
i: 5232
end-i: 5232
at header: 5232
i: 5232
end-i: 5276
at header: 5232
i: 5248
end-i: 5276
i: 5252
end-i: 5276
i: 5256
end-i: 5276
i: 5260
end-i: 5276
i: 5264
end-i: 5276
i: 5268
end-i: 5276
i: 5272
end-i: 5276
i: 5276
end-i: 5276
i:5276 HIT CHUNK END
i: 5276
end-i: 5288
i: 5280
end-i: 5288
i: 5284
end-i: 5288
i: 5288
end-i: 5288
i:5288 HIT CHUNK END
i: 5288
end-i: 5304
i: 5292
end-i: 5304
i: 5296
end-i: 5304
i: 5300
end-i: 5304
i: 5304
end-i: 5304
i:5304 HIT CHUNK END
i: 5304
end-i: 5316
i: 5308
end-i: 5316
i: 5312
end-i: 5316
i: 5316
end-i: 5316
i:5316 HIT CHUNK END
i: 5316
end-i: 5328
i: 5320
end-i: 5328
i: 5324
end-i: 5328
i: 5328
end-i: 5328
i:5328 HIT CHUNK END
i: 5328
end-i: 5340
i: 5332
end-i: 5340
i: 5336
end-i: 5340
i: 5340
end-i: 5340
i:5340 HIT CHUNK END
i: 5340
end-i: 5348
i: 5344
end-i: 5348
i: 5348
end-i: 5348
i:5348 HIT CHUNK END
i: 5348
end-i: 5384
i: 5352
end-i: 5384
i: 5356
end-i: 5384
i: 5360
end-i: 5384
i: 5364
end-i: 5384
i: 5368
end-i: 5384
i: 5372
end-i: 5384
i: 5376
end-i: 5384
i: 5380
end-i: 5384
i: 5384
end-i: 5384
at header: 5384
i: 5384
end-i: 5420
at header: 5384
i: 5400
end-i: 5420
i: 5404
end-i: 5420
i: 5408
end-i: 5420
i: 5412
end-i: 5420
i: 5416
end-i: 5420
i: 5420
end-i: 5420
i:5420 HIT CHUNK END
i: 5420
end-i: 5456
i: 5424
end-i: 5456
i: 5428
end-i: 5456
i: 5432
end-i: 5456
i: 5436
end-i: 5456
i: 5440
end-i: 5456
i: 5444
end-i: 5456
i: 5448
end-i: 5456
i: 5452
end-i: 5456
i: 5456
end-i: 5456
at header: 5456
i: 5456
end-i: 5488
at header: 5456
i: 5472
end-i: 5488
i: 5476
end-i: 5488
i: 5480
end-i: 5488
i: 5484
end-i: 5488
i: 5488
end-i: 5488
i:5488 HIT CHUNK END
i: 5488
end-i: 5528
i: 5492
end-i: 5528
i: 5496
end-i: 5528
i: 5500
end-i: 5528
i: 5504
end-i: 5528
i: 5508
end-i: 5528
i: 5512
end-i: 5528
i: 5516
end-i: 5528
i: 5520
end-i: 5528
i: 5524
end-i: 5528
i: 5528
end-i: 5528
at header: 5528
i: 5528
end-i: 5564
at header: 5528
i: 5544
end-i: 5564
i: 5548
end-i: 5564
i: 5552
end-i: 5564
i: 5556
end-i: 5564
i: 5560
end-i: 5564
i: 5564
end-i: 5564
i:5564 HIT CHUNK END
i: 5564
end-i: 5600
i: 5568
end-i: 5600
i: 5572
end-i: 5600
i: 5576
end-i: 5600
i: 5580
end-i: 5600
i: 5584
end-i: 5600
i: 5588
end-i: 5600
i: 5592
end-i: 5600
i: 5596
end-i: 5600
i: 5600
end-i: 5600
at header: 5600
i: 5600
end-i: 5640
at header: 5600
i: 5616
end-i: 5640
i: 5620
end-i: 5640
i: 5624
end-i: 5640
i: 5628
end-i: 5640
i: 5632
end-i: 5640
i: 5636
end-i: 5640
i: 5640
end-i: 5640
i:5640 HIT CHUNK END
i: 5640
end-i: 5672
i: 5644
end-i: 5672
i: 5648
end-i: 5672
i: 5652
end-i: 5672
i: 5656
end-i: 5672
i: 5660
end-i: 5672
i: 5664
end-i: 5672
i: 5668
end-i: 5672
i: 5672
end-i: 5672
at header: 5672
i: 5672
end-i: 5700
at header: 5672
i: 5688
end-i: 5700
i: 5692
end-i: 5700
i: 5696
end-i: 5700
i: 5700
end-i: 5700
i:5700 HIT CHUNK END
i: 5700
end-i: 5724
i: 5704
end-i: 5724
i: 5708
end-i: 5724
i: 5712
end-i: 5724
i: 5716
end-i: 5724
i: 5720
end-i: 5724
i: 5724
end-i: 5724
i:5724 HIT CHUNK END
i: 5724
end-i: 5752
i: 5728
end-i: 5752
i: 5732
end-i: 5752
i: 5736
end-i: 5752
i: 5740
end-i: 5752
i: 5744
end-i: 5752
i: 5748
end-i: 5752
i: 5752
end-i: 5752
at header: 5752
i: 5752
end-i: 5780
at header: 5752
i: 5768
end-i: 5780
i: 5772
end-i: 5780
i: 5776
end-i: 5780
i: 5780
end-i: 5780
i:5780 HIT CHUNK END
i: 5780
end-i: 5804
i: 5784
end-i: 5804
i: 5788
end-i: 5804
i: 5792
end-i: 5804
i: 5796
end-i: 5804
i: 5800
end-i: 5804
i: 5804
end-i: 5804
i:5804 HIT CHUNK END
i: 5804
end-i: 5832
i: 5808
end-i: 5832
i: 5812
end-i: 5832
i: 5816
end-i: 5832
i: 5820
end-i: 5832
i: 5824
end-i: 5832
i: 5828
end-i: 5832
i: 5832
end-i: 5832
at header: 5832
i: 5832
end-i: 5860
at header: 5832
i: 5848
end-i: 5860
i: 5852
end-i: 5860
i: 5856
end-i: 5860
i: 5860
end-i: 5860
i:5860 HIT CHUNK END
i: 5860
end-i: 5884
i: 5864
end-i: 5884
i: 5868
end-i: 5884
i: 5872
end-i: 5884
i: 5876
end-i: 5884
i: 5880
end-i: 5884
i: 5884
end-i: 5884
i:5884 HIT CHUNK END
i: 5884
end-i: 5912
i: 5888
end-i: 5912
i: 5892
end-i: 5912
i: 5896
end-i: 5912
i: 5900
end-i: 5912
i: 5904
end-i: 5912
i: 5908
end-i: 5912
i: 5912
end-i: 5912
at header: 5912
i: 5912
end-i: 5940
at header: 5912
i: 5928
end-i: 5940
i: 5932
end-i: 5940
i: 5936
end-i: 5940
i: 5940
end-i: 5940
i:5940 HIT CHUNK END
i: 5940
end-i: 5964
i: 5944
end-i: 5964
i: 5948
end-i: 5964
i: 5952
end-i: 5964
i: 5956
end-i: 5964
i: 5960
end-i: 5964
i: 5964
end-i: 5964
i:5964 HIT CHUNK END
i: 5964
end-i: 5992
i: 5968
end-i: 5992
i: 5972
end-i: 5992
i: 5976
end-i: 5992
i: 5980
end-i: 5992
i: 5984
end-i: 5992
i: 5988
end-i: 5992
i: 5992
end-i: 5992
at header: 5992
i: 5992
end-i: 6024
at header: 5992
i: 6008
end-i: 6024
i: 6012
end-i: 6024
i: 6016
end-i: 6024
i: 6020
end-i: 6024
i: 6024
end-i: 6024
i:6024 HIT CHUNK END
i: 6024
end-i: 6032
i: 6028
end-i: 6032
i: 6032
end-i: 6032
i:6032 HIT CHUNK END
i: 6032
end-i: 6072
i: 6036
end-i: 6072
i: 6040
end-i: 6072
i: 6044
end-i: 6072
i: 6048
end-i: 6072
i: 6052
end-i: 6072
i: 6056
end-i: 6072
i: 6060
end-i: 6072
i: 6064
end-i: 6072
i: 6068
end-i: 6072
i: 6072
end-i: 6072
at header: 6072
i: 6072
end-i: 6104
at header: 6072
i: 6088
end-i: 6104
i: 6092
end-i: 6104
i: 6096
end-i: 6104
i: 6100
end-i: 6104
i: 6104
end-i: 6104
i:6104 HIT CHUNK END
i: 6104
end-i: 6144
i: 6108
end-i: 6144
i: 6112
end-i: 6144
i: 6116
end-i: 6144
i: 6120
end-i: 6144
i: 6124
end-i: 6144
i: 6128
end-i: 6144
i: 6132
end-i: 6144
i: 6136
end-i: 6144
i: 6140
end-i: 6144
i: 6144
end-i: 6144
at header: 6144
i: 6144
end-i: 6188
at header: 6144
i: 6160
end-i: 6188
i: 6164
end-i: 6188
i: 6168
end-i: 6188
i: 6172
end-i: 6188
i: 6176
end-i: 6188
i: 6180
end-i: 6188
i: 6184
end-i: 6188
i: 6188
end-i: 6188
i:6188 HIT CHUNK END
i: 6188
end-i: 6192
i: 6192
end-i: 6192
i:6192 HIT CHUNK END
i: 6192
end-i: 6200
i: 6196
end-i: 6200
i: 6200
end-i: 6200
i:6200 HIT CHUNK END
i: 6200
end-i: 6240
i: 6204
end-i: 6240
i: 6208
end-i: 6240
i: 6212
end-i: 6240
i: 6216
end-i: 6240
i: 6220
end-i: 6240
i: 6224
end-i: 6240
i: 6228
end-i: 6240
i: 6232
end-i: 6240
i: 6236
end-i: 6240
i: 6240
end-i: 6240
at header: 6240
i: 6240
end-i: 6276
at header: 6240
i: 6256
end-i: 6276
i: 6260
end-i: 6276
i: 6264
end-i: 6276
i: 6268
end-i: 6276
i: 6272
end-i: 6276
i: 6276
end-i: 6276
i:6276 HIT CHUNK END
i: 6276
end-i: 6312
i: 6280
end-i: 6312
i: 6284
end-i: 6312
i: 6288
end-i: 6312
i: 6292
end-i: 6312
i: 6296
end-i: 6312
i: 6300
end-i: 6312
i: 6304
end-i: 6312
i: 6308
end-i: 6312
i: 6312
end-i: 6312
at header: 6312
i: 6312
end-i: 6348
at header: 6312
i: 6328
end-i: 6348
i: 6332
end-i: 6348
i: 6336
end-i: 6348
i: 6340
end-i: 6348
i: 6344
end-i: 6348
i: 6348
end-i: 6348
i:6348 HIT CHUNK END
i: 6348
end-i: 6356
i: 6352
end-i: 6356
i: 6356
end-i: 6356
i:6356 HIT CHUNK END
i: 6356
end-i: 6392
i: 6360
end-i: 6392
i: 6364
end-i: 6392
i: 6368
end-i: 6392
i: 6372
end-i: 6392
i: 6376
end-i: 6392
i: 6380
end-i: 6392
i: 6384
end-i: 6392
i: 6388
end-i: 6392
i: 6392
end-i: 6392
at header: 6392
i: 6392
end-i: 6420
at header: 6392
i: 6408
end-i: 6420
i: 6412
end-i: 6420
i: 6416
end-i: 6420
i: 6420
end-i: 6420
i:6420 HIT CHUNK END
i: 6420
end-i: 6464
i: 6424
end-i: 6464
i: 6428
end-i: 6464
i: 6432
end-i: 6464
i: 6436
end-i: 6464
i: 6440
end-i: 6464
i: 6444
end-i: 6464
i: 6448
end-i: 6464
i: 6452
end-i: 6464
i: 6456
end-i: 6464
i: 6460
end-i: 6464
i: 6464
end-i: 6464
at header: 6464
i: 6464
end-i: 6504
at header: 6464
i: 6480
end-i: 6504
i: 6484
end-i: 6504
i: 6488
end-i: 6504
i: 6492
end-i: 6504
i: 6496
end-i: 6504
i: 6500
end-i: 6504
i: 6504
end-i: 6504
i:6504 HIT CHUNK END
i: 6504
end-i: 6508
i: 6508
end-i: 6508
i:6508 HIT CHUNK END
i: 6508
end-i: 6516
i: 6512
end-i: 6516
i: 6516
end-i: 6516
i:6516 HIT CHUNK END
i: 6516
end-i: 6552
i: 6520
end-i: 6552
i: 6524
end-i: 6552
i: 6528
end-i: 6552
i: 6532
end-i: 6552
i: 6536
end-i: 6552
i: 6540
end-i: 6552
i: 6544
end-i: 6552
i: 6548
end-i: 6552
i: 6552
end-i: 6552
at header: 6552
i: 6552
end-i: 6580
at header: 6552
i: 6568
end-i: 6580
i: 6572
end-i: 6580
i: 6576
end-i: 6580
i: 6580
end-i: 6580
i:6580 HIT CHUNK END
i: 6580
end-i: 6624
i: 6584
end-i: 6624
i: 6588
end-i: 6624
i: 6592
end-i: 6624
i: 6596
end-i: 6624
i: 6600
end-i: 6624
i: 6604
end-i: 6624
i: 6608
end-i: 6624
i: 6612
end-i: 6624
i: 6616
end-i: 6624
i: 6620
end-i: 6624
i: 6624
end-i: 6624
at header: 6624
i: 6624
end-i: 6664
at header: 6624
i: 6640
end-i: 6664
i: 6644
end-i: 6664
i: 6648
end-i: 6664
i: 6652
end-i: 6664
i: 6656
end-i: 6664
i: 6660
end-i: 6664
i: 6664
end-i: 6664
i:6664 HIT CHUNK END
i: 6664
end-i: 6668
i: 6668
end-i: 6668
i:6668 HIT CHUNK END
i: 6668
end-i: 6680
i: 6672
end-i: 6680
i: 6676
end-i: 6680
i: 6680
end-i: 6680
i:6680 HIT CHUNK END
i: 6680
end-i: 6688
i: 6684
end-i: 6688
i: 6688
end-i: 6688
i:6688 HIT CHUNK END
i: 6688
end-i: 6704
i: 6692
end-i: 6704
i: 6696
end-i: 6704
i: 6700
end-i: 6704
i: 6704
end-i: 6704
i:6704 HIT CHUNK END
i: 6704
end-i: 6720
i: 6708
end-i: 6720
i: 6712
end-i: 6720
i: 6716
end-i: 6720
i: 6720
end-i: 6720
i:6720 HIT CHUNK END
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 44
instruction range for chunk: 44 60
instruction range for chunk: 60 76
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 52")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x1")
(comment . ";;12 b 28")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;16: r10 <- r8, 0xB\n")
(comment . ";; literal r5")
(comment . ";;32: r8 <- r5, 0x5\n")
(comment . ";;36: r4 <- 0x2")
(comment . ";;40: b r5, 13")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 60
i: 44
end-i: 60
i: 44
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;56: b r6")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 76
i: 60
end-i: 76
i: 60
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;72: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 96
instruction range for chunk: 112 156
instruction range for chunk: 156 160
instruction range for chunk: 160 192
instruction range for chunk: 208 220
instruction range for chunk: 220 248
instruction range for chunk: 264 276
instruction range for chunk: 276 304
instruction range for chunk: 320 328
instruction range for chunk: 328 340
instruction range for chunk: 344 348
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;0: r15 <- r0, 0x58\n")
(comment . ";;4: r1 <- r15")
(comment . ";;8 b 316")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r3 <- r3, 0x1\n")
(comment . ";;16 b 256")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 44
i: 20
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;32: r10 <- r9, 0x5\n")
(comment . ";;36: r10 <- 0x1E")
(comment . ";;40 b 176")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r10 <- 0x7")
(comment . ";;48 b 108")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r9 <- r10, 0x8\n")
(comment . ";;56 b 100")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x1")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 156
i: 96
end-i: 156
at header: 96
i: 112
end-i: 156
i: 116
end-i: 156
i: 120
end-i: 156
i: 132
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116: r10 <- 0x4")
(comment . ";; literal r9")
(comment . ";; literal r5")
(comment . ";;144: r8 <- r5, 0x5\n")
(comment . ";;148: r4 <- 0x2")
(comment . ";;152: b r5, 13")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 192
i: 160
end-i: 192
i: 160
end-i: 192
i: 164
end-i: 192
i: 168
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;160: r9 <- 0x8")
(comment . ";;164: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;172: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;188: b r6")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 220
i: 192
end-i: 220
at header: 192
i: 208
end-i: 220
i: 212
end-i: 220
i: 216
end-i: 220
i: 220
end-i: 220
i:220 HIT CHUNK END
(comment . ";;208: r1 <- r1, r8")
(comment . ";;212: r9 <- 0x4")
(comment . ";;216 b -160")
chunklet-i: 220; chunklet-start-i: 220; chunklet-end-i: 248
i: 220
end-i: 248
i: 220
end-i: 248
i: 224
end-i: 248
i: 228
end-i: 248
i: 232
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
at header: 248
(comment . ";;220: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;228: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;244: b r6")
chunklet-i: 248; chunklet-start-i: 264; chunklet-end-i: 276
i: 248
end-i: 276
at header: 248
i: 264
end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";;264: r1 <- r1, r8")
(comment . ";;268: r10 <- 0x4")
(comment . ";;272 b -232")
chunklet-i: 276; chunklet-start-i: 276; chunklet-end-i: 304
i: 276
end-i: 304
i: 276
end-i: 304
i: 280
end-i: 304
i: 284
end-i: 304
i: 288
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
at header: 304
(comment . ";;276: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;284: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;300: b r6")
chunklet-i: 304; chunklet-start-i: 320; chunklet-end-i: 328
i: 304
end-i: 328
at header: 304
i: 320
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
i:328 HIT CHUNK END
(comment . ";;320: r1 <- r1, r8")
(comment . ";;324 b -308")
chunklet-i: 328; chunklet-start-i: 328; chunklet-end-i: 340
i: 328
end-i: 340
i: 328
end-i: 340
i: 340
end-i: 340
i:340 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 340; chunklet-start-i: 344; chunklet-end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";; instruction 340 not included")
(comment . ";;344 b -336")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 36
instruction range for chunk: 36 60
instruction range for chunk: 60 84
instruction range for chunk: 84 92
instruction range for chunk: 92 100
instruction range for chunk: 100 144
instruction range for chunk: 160 192
instruction range for chunk: 192 204
instruction range for chunk: 204 212
instruction range for chunk: 212 228
instruction range for chunk: 228 248
instruction range for chunk: 248 256
instruction range for chunk: 256 268
instruction range for chunk: 268 288
instruction range for chunk: 288 300
instruction range for chunk: 304 312
instruction range for chunk: 312 336
instruction range for chunk: 336 376
instruction range for chunk: 392 412
instruction range for chunk: 412 448
instruction range for chunk: 464 488
instruction range for chunk: 488 520
instruction range for chunk: 536 548
instruction range for chunk: 548 560
instruction range for chunk: 564 568
instruction range for chunk: 568 584
instruction range for chunk: 584 600
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r3 <- r3, 0x1\n")
(comment . ";;8 b 572")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r4 <- 0x1")
(comment . ";;16 b 548")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 36
i: 20
end-i: 36
i: 24
end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;20: r15 <- 0x9")
(comment . ";;24: r14 <- r0, 0x58\n")
(comment . ";;28: r1 <- r14")
(comment . ";;32 b 512")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;48: r4 <- r9, 0x5\n")
(comment . ";;52: r4 <- 0x1E")
(comment . ";;56 b 428")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 84
i: 60
end-i: 84
i: 60
end-i: 84
i: 72
end-i: 84
i: 76
end-i: 84
i: 80
end-i: 84
i: 84
end-i: 84
i:84 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;72: r10 <- r9, 0x5\n")
(comment . ";;76: r10 <- 0x1E")
(comment . ";;80 b 328")
chunklet-i: 84; chunklet-start-i: 84; chunklet-end-i: 92
i: 84
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;84: r10 <- 0x7")
(comment . ";;88 b 244")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 100
i: 92
end-i: 100
i: 96
end-i: 100
i: 100
end-i: 100
i:100 HIT CHUNK END
(comment . ";;92: r9 <- r10, 0x8\n")
(comment . ";;96 b 236")
chunklet-i: 100; chunklet-start-i: 100; chunklet-end-i: 144
i: 100
end-i: 144
i: 100
end-i: 144
i: 104
end-i: 144
i: 108
end-i: 144
i: 112
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 132
end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;100: r15 <- r1, 0x8\n")
(comment . ";;104: r4 <- r1, 0x10\n")
(comment . ";;108: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;124: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;132: r15 <- r1, 0x0\n")
(comment . ";;136: r4 <- 0x1")
(comment . ";;140: b r5, 13")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 192
i: 144
end-i: 192
at header: 144
i: 160
end-i: 192
i: 164
end-i: 192
i: 168
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164: r11 <- 0x4")
(comment . ";;168: r15 <- r1, 0x8\n")
(comment . ";;172: r4 <- r1, 0x10\n")
(comment . ";;176: r14 <- r4, r7")
(comment . ";;180: r14 <- 0x7")
(comment . ";;188 b 120")
chunklet-i: 192; chunklet-start-i: 192; chunklet-end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";;192: r14 <- r4, 0x1\n")
(comment . ";;196: r14 <- 0xF")
(comment . ";;200 b 108")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 212
i: 204
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";;204: r15 <- 0x7")
(comment . ";;208 b 100")
chunklet-i: 212; chunklet-start-i: 212; chunklet-end-i: 228
i: 212
end-i: 228
i: 216
end-i: 228
i: 220
end-i: 228
i: 224
end-i: 228
i: 228
end-i: 228
i:228 HIT CHUNK END
(comment . ";;212: r14 <- r14, r1")
(comment . ";;216: r14 <- r14, r8")
(comment . ";;220: r15 <- r14")
(comment . ";;224 b 84")
chunklet-i: 228; chunklet-start-i: 228; chunklet-end-i: 248
i: 228
end-i: 248
i: 232
end-i: 248
i: 236
end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;228: r14 <- r4, r9")
(comment . ";;232: r15 <- r15, r14")
(comment . ";;236: r11 <- r15, 0x0\n")
(comment . ";;240: r11 <- 0x7")
(comment . ";;244 b 8")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r4 <- 0x2E")
(comment . ";;252: b r1, 0")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 268
i: 256
end-i: 268
i: 256
end-i: 268
i: 260
end-i: 268
i: 264
end-i: 268
i: 268
end-i: 268
i:268 HIT CHUNK END
(comment . ";;256: r7 <- r0, 0x68\n")
(comment . ";;260: r2 <- r7")
(comment . ";;264 b 20")
chunklet-i: 268; chunklet-start-i: 268; chunklet-end-i: 288
i: 268
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
i:288 HIT CHUNK END
(comment . ";;268: r7 <- r7, r8")
(comment . ";;272: r7 <- r0, 0x68\n")
(comment . ";;276: r15 <- r7, 0x0\n")
(comment . ";;280: r4 <- 0x2E")
(comment . ";;284: b r1, 0")
chunklet-i: 288; chunklet-start-i: 288; chunklet-end-i: 300
i: 288
end-i: 300
i: 288
end-i: 300
i: 300
end-i: 300
i:300 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 300; chunklet-start-i: 304; chunklet-end-i: 312
i: 300
end-i: 312
i: 304
end-i: 312
i: 308
end-i: 312
i: 312
end-i: 312
i:312 HIT CHUNK END
(comment . ";; instruction 300 not included")
(comment . ";;304: r7 <- r0, 0x68\n")
(comment . ";;308 b -44")
chunklet-i: 312; chunklet-start-i: 312; chunklet-end-i: 336
i: 312
end-i: 336
i: 312
end-i: 336
i: 316
end-i: 336
i: 320
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
i:336 HIT CHUNK END
(comment . ";;312: r9 <- 0x4")
(comment . ";;316: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;332: b r6")
chunklet-i: 336; chunklet-start-i: 336; chunklet-end-i: 376
i: 336
end-i: 376
i: 336
end-i: 376
i: 340
end-i: 376
i: 344
end-i: 376
i: 348
end-i: 376
i: 352
end-i: 376
i: 356
end-i: 376
i: 360
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
at header: 376
(comment . ";;336: r9 <- 0x8")
(comment . ";;340: r15 <- r1, 0x8\n")
(comment . ";;344: r4 <- r1, 0x10\n")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;356: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;372: b r6")
chunklet-i: 376; chunklet-start-i: 392; chunklet-end-i: 412
i: 376
end-i: 412
at header: 376
i: 392
end-i: 412
i: 396
end-i: 412
i: 400
end-i: 412
i: 404
end-i: 412
i: 408
end-i: 412
i: 412
end-i: 412
i:412 HIT CHUNK END
(comment . ";;392: r1 <- r1, r8")
(comment . ";;396: r9 <- 0x4")
(comment . ";;400: r15 <- r1, 0x8\n")
(comment . ";;404: r4 <- r1, 0x10\n")
(comment . ";;408 b -312")
chunklet-i: 412; chunklet-start-i: 412; chunklet-end-i: 448
i: 412
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 420
end-i: 448
i: 424
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;412: r15 <- r1, 0x8\n")
(comment . ";;416: r4 <- r1, 0x10\n")
(comment . ";;420: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;444: b r6")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 488
i: 448
end-i: 488
at header: 448
i: 464
end-i: 488
i: 468
end-i: 488
i: 472
end-i: 488
i: 476
end-i: 488
i: 480
end-i: 488
i: 484
end-i: 488
i: 488
end-i: 488
i:488 HIT CHUNK END
(comment . ";;464: r1 <- r1, r8")
(comment . ";;468: r10 <- 0x4")
(comment . ";;472: r15 <- r1, 0x8\n")
(comment . ";;476: r4 <- r1, 0x10\n")
(comment . ";;484 b -404")
chunklet-i: 488; chunklet-start-i: 488; chunklet-end-i: 520
i: 488
end-i: 520
i: 488
end-i: 520
i: 492
end-i: 520
i: 496
end-i: 520
i: 500
end-i: 520
i: 504
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
at header: 520
(comment . ";;488: r15 <- r1, 0x8\n")
(comment . ";;492: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;500: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;516: b r6")
chunklet-i: 520; chunklet-start-i: 536; chunklet-end-i: 548
i: 520
end-i: 548
at header: 520
i: 536
end-i: 548
i: 540
end-i: 548
i: 544
end-i: 548
i: 548
end-i: 548
i:548 HIT CHUNK END
(comment . ";;536: r1 <- r1, r0")
(comment . ";;540: r15 <- r1, 0x8\n")
(comment . ";;544 b -488")
chunklet-i: 548; chunklet-start-i: 548; chunklet-end-i: 560
i: 548
end-i: 560
i: 548
end-i: 560
i: 560
end-i: 560
i:560 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 560; chunklet-start-i: 564; chunklet-end-i: 568
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";; instruction 560 not included")
(comment . ";;564 b -532")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 584
i: 568
end-i: 584
i: 568
end-i: 584
i: 580
end-i: 584
i: 584
end-i: 584
i:584 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;580: b r6")
chunklet-i: 584; chunklet-start-i: 584; chunklet-end-i: 600
i: 584
end-i: 600
i: 584
end-i: 600
i: 596
end-i: 600
i: 600
end-i: 600
i:600 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;596: b r6")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 32
instruction range for chunk: 32 36
instruction range for chunk: 36 60
instruction range for chunk: 60 88
instruction range for chunk: 104 116
instruction range for chunk: 116 144
instruction range for chunk: 160 168
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 108")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 32
i: 8
end-i: 32
i: 8
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;20: r15 <- r9, 0x5\n")
(comment . ";;24: r15 <- 0x1E")
(comment . ";;28 b 28")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: r9 <- 0xF")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r5")
(comment . ";;48: r8 <- r5, 0x5\n")
(comment . ";;52: r4 <- 0x1")
(comment . ";;56: b r5, 13")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 88
i: 60
end-i: 88
i: 60
end-i: 88
i: 64
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";;60: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;84: b r6")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 116
i: 88
end-i: 116
at header: 88
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r1 <- r1, r8")
(comment . ";;108: r9 <- 0x4")
(comment . ";;112 b -80")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 144
i: 116
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 168
i: 144
end-i: 168
at header: 144
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164 b -160")
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_puzzle0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
wat2wasm -r -o em-pb64l/c/pbchunk_puzzle0.wasm pbchunk-out/pbchunk_puzzle0.wat
pbchunk-out/pbchunk_puzzle0.wat:100171:1: error: unexpected token /*, expected ).
/* (too many entry points) */
^^
shell command failed
 in build-one
 in loop
 in module->hash
Running...
trying ./fibc.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running fibc:511:500

Testing puzzle under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/puzzle.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/puzzle.scm with output to /tmp/larcenous/puzzle.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/puzzle.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/puzzle.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 480
instruction range for chunk: 496 576
instruction range for chunk: 592 672
instruction range for chunk: 688 768
instruction range for chunk: 784 852
instruction range for chunk: 852 880
instruction range for chunk: 896 904
instruction range for chunk: 904 916
instruction range for chunk: 920 924
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 888")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 828")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 480
i: 384
end-i: 480
at header: 384
i: 400
end-i: 480
i: 404
end-i: 480
i: 408
end-i: 480
i: 420
end-i: 480
i: 432
end-i: 480
i: 444
end-i: 480
i: 448
end-i: 480
i: 460
end-i: 480
i: 464
end-i: 480
i: 468
end-i: 480
i: 472
end-i: 480
i: 476
end-i: 480
i: 480
end-i: 480
at header: 480
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;444: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;460: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;468: r15 <- r1, 0x0\n")
(comment . ";;472: r4 <- 0x3")
(comment . ";;476: b r5, 13")
chunklet-i: 480; chunklet-start-i: 496; chunklet-end-i: 576
i: 480
end-i: 576
at header: 480
i: 496
end-i: 576
i: 500
end-i: 576
i: 504
end-i: 576
i: 516
end-i: 576
i: 528
end-i: 576
i: 540
end-i: 576
i: 544
end-i: 576
i: 556
end-i: 576
i: 560
end-i: 576
i: 564
end-i: 576
i: 568
end-i: 576
i: 572
end-i: 576
i: 576
end-i: 576
at header: 576
(comment . ";;500: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;540: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;556: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;564: r15 <- r1, 0x0\n")
(comment . ";;568: r4 <- 0x3")
(comment . ";;572: b r5, 13")
chunklet-i: 576; chunklet-start-i: 592; chunklet-end-i: 672
i: 576
end-i: 672
at header: 576
i: 592
end-i: 672
i: 596
end-i: 672
i: 600
end-i: 672
i: 612
end-i: 672
i: 624
end-i: 672
i: 636
end-i: 672
i: 640
end-i: 672
i: 652
end-i: 672
i: 656
end-i: 672
i: 660
end-i: 672
i: 664
end-i: 672
i: 668
end-i: 672
i: 672
end-i: 672
at header: 672
(comment . ";;596: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;636: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;652: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;660: r15 <- r1, 0x0\n")
(comment . ";;664: r4 <- 0x3")
(comment . ";;668: b r5, 13")
chunklet-i: 672; chunklet-start-i: 688; chunklet-end-i: 768
i: 672
end-i: 768
at header: 672
i: 688
end-i: 768
i: 692
end-i: 768
i: 696
end-i: 768
i: 708
end-i: 768
i: 720
end-i: 768
i: 732
end-i: 768
i: 736
end-i: 768
i: 748
end-i: 768
i: 752
end-i: 768
i: 756
end-i: 768
i: 760
end-i: 768
i: 764
end-i: 768
i: 768
end-i: 768
at header: 768
(comment . ";;692: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;732: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;748: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;756: r15 <- r1, 0x0\n")
(comment . ";;760: r4 <- 0x3")
(comment . ";;764: b r5, 13")
chunklet-i: 768; chunklet-start-i: 784; chunklet-end-i: 852
i: 768
end-i: 852
at header: 768
i: 784
end-i: 852
i: 788
end-i: 852
i: 792
end-i: 852
i: 804
end-i: 852
i: 816
end-i: 852
i: 828
end-i: 852
i: 840
end-i: 852
i: 844
end-i: 852
i: 848
end-i: 852
i: 852
end-i: 852
i:852 HIT CHUNK END
(comment . ";;788: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;840: r8 <- r5, 0x5\n")
(comment . ";;844: r4 <- 0x3")
(comment . ";;848: b r5, 13")
chunklet-i: 852; chunklet-start-i: 852; chunklet-end-i: 880
i: 852
end-i: 880
i: 852
end-i: 880
i: 856
end-i: 880
i: 860
end-i: 880
i: 864
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
at header: 880
(comment . ";;852: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;860: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;876: b r6")
chunklet-i: 880; chunklet-start-i: 896; chunklet-end-i: 904
i: 880
end-i: 904
at header: 880
i: 896
end-i: 904
i: 900
end-i: 904
i: 904
end-i: 904
i:904 HIT CHUNK END
(comment . ";;896: r1 <- r1, r8")
(comment . ";;900 b -880")
chunklet-i: 904; chunklet-start-i: 904; chunklet-end-i: 916
i: 904
end-i: 916
i: 904
end-i: 916
i: 916
end-i: 916
i:916 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 916; chunklet-start-i: 920; chunklet-end-i: 924
i: 916
end-i: 924
i: 920
end-i: 924
i: 924
end-i: 924
i:924 HIT CHUNK END
(comment . ";; instruction 916 not included")
(comment . ";;920 b -908")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: my-iota
instruction range for chunk: 0 8
instruction range for chunk: 8 12
instruction range for chunk: 12 20
instruction range for chunk: 20 28
instruction range for chunk: 28 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 72
instruction range for chunk: 72 92
instruction range for chunk: 92 100
instruction range for chunk: 100 108
instruction range for chunk: 108 144
instruction range for chunk: 160 180
instruction range for chunk: 180 192
instruction range for chunk: 196 200
instruction range for chunk: 200 240
instruction range for chunk: 256 276
instruction range for chunk: 276 312
instruction range for chunk: 328 348
instruction range for chunk: 348 356
instruction range for chunk: 356 392
instruction range for chunk: 408 420
instruction range for chunk: 420 456
instruction range for chunk: 472 496
instruction range for chunk: 496 500
instruction range for chunk: 500 516
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 492")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;8: r4 <- 0x26")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r9 <- 0x0")
(comment . ";;16 b 476")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;20: r9 <- 0x7")
(comment . ";;24 b 320")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r3 <- r3, 0x1\n")
(comment . ";;32 b 240")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r9 <- 0x7")
(comment . ";;40 b 156")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r15 <- r9, 0x8\n")
(comment . ";;48 b 148")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 72
i: 52
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;52: r5 <- r2, r9")
(comment . ";;56: r2 <- r2, r0")
(comment . ";;60: r14 <- r0, 0x68\n")
(comment . ";;64: r14 <- r2")
(comment . ";;68 b 108")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 92
i: 72
end-i: 92
i: 72
end-i: 92
i: 76
end-i: 92
i: 80
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;72: r15 <- r5, 0x7\n")
(comment . ";;76: r4 <- r5, 0xF\n")
(comment . ";;80: r4 <- 0x5")
(comment . ";;84: r9 <- 0x7")
(comment . ";;88 b 16")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 100
i: 92
end-i: 100
i: 96
end-i: 100
i: 100
end-i: 100
i:100 HIT CHUNK END
(comment . ";;92: r15 <- r9, 0x8\n")
(comment . ";;96 b 8")
chunklet-i: 100; chunklet-start-i: 100; chunklet-end-i: 108
i: 100
end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
(comment . ";;100: r9 <- 0xF")
(comment . ";;104 b -96")
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 144
i: 108
end-i: 144
i: 108
end-i: 144
i: 112
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;108: r10 <- 0x8")
(comment . ";;112: r4 <- r1, 0x8\n")
(comment . ";;116: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 180
i: 144
end-i: 180
at header: 144
i: 160
end-i: 180
i: 164
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";;160: r1 <- r1, r0")
(comment . ";;164: r9 <- 0x4")
(comment . ";;168: r4 <- r1, 0x8\n")
(comment . ";;176 b -168")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 192
i: 180
end-i: 192
i: 180
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 192; chunklet-start-i: 196; chunklet-end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
i:200 HIT CHUNK END
(comment . ";; instruction 192 not included")
(comment . ";;196 b -128")
chunklet-i: 200; chunklet-start-i: 200; chunklet-end-i: 240
i: 200
end-i: 240
i: 200
end-i: 240
i: 204
end-i: 240
i: 208
end-i: 240
i: 212
end-i: 240
i: 216
end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
at header: 240
(comment . ";;200: r10 <- 0x8")
(comment . ";;204: r9 <- r1, 0x10\n")
(comment . ";;208: r4 <- r1, 0x8\n")
(comment . ";;212: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;220: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;236: b r6")
chunklet-i: 240; chunklet-start-i: 256; chunklet-end-i: 276
i: 240
end-i: 276
at header: 240
i: 256
end-i: 276
i: 260
end-i: 276
i: 264
end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";;256: r1 <- r1, r8")
(comment . ";;260: r15 <- 0x4")
(comment . ";;264: r9 <- r1, 0x10\n")
(comment . ";;268: r4 <- r1, 0x8\n")
(comment . ";;272 b -224")
chunklet-i: 276; chunklet-start-i: 276; chunklet-end-i: 312
i: 276
end-i: 312
i: 276
end-i: 312
i: 280
end-i: 312
i: 284
end-i: 312
i: 288
end-i: 312
i: 292
end-i: 312
i: 296
end-i: 312
i: 308
end-i: 312
i: 312
end-i: 312
at header: 312
(comment . ";;276: r9 <- r1, 0x10\n")
(comment . ";;280: r4 <- r1, 0x8\n")
(comment . ";;284: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;292: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;308: b r6")
chunklet-i: 312; chunklet-start-i: 328; chunklet-end-i: 348
i: 312
end-i: 348
at header: 312
i: 328
end-i: 348
i: 332
end-i: 348
i: 336
end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";;332: r1 <- r1, r8")
(comment . ";;336: r9 <- r1, 0x10\n")
(comment . ";;340: r4 <- r1, 0x8\n")
(comment . ";;344 b -312")
chunklet-i: 348; chunklet-start-i: 348; chunklet-end-i: 356
i: 348
end-i: 356
i: 348
end-i: 356
i: 352
end-i: 356
i: 356
end-i: 356
i:356 HIT CHUNK END
(comment . ";;348: r3 <- r3, 0x1\n")
(comment . ";;352 b 64")
chunklet-i: 356; chunklet-start-i: 356; chunklet-end-i: 392
i: 356
end-i: 392
i: 360
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;356: r9 <- r1, 0x10\n")
(comment . ";;360: r4 <- r1, 0x8\n")
(comment . ";;364: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 420
i: 392
end-i: 420
at header: 392
i: 408
end-i: 420
i: 412
end-i: 420
i: 416
end-i: 420
i: 420
end-i: 420
i:420 HIT CHUNK END
(comment . ";;408: r1 <- r1, r8")
(comment . ";;412: r9 <- r1, 0x10\n")
(comment . ";;416: r4 <- r1, 0x8\n")
chunklet-i: 420; chunklet-start-i: 420; chunklet-end-i: 456
i: 420
end-i: 456
i: 420
end-i: 456
i: 424
end-i: 456
i: 428
end-i: 456
i: 432
end-i: 456
i: 436
end-i: 456
i: 440
end-i: 456
i: 452
end-i: 456
i: 456
end-i: 456
at header: 456
(comment . ";;420: r9 <- r1, 0x10\n")
(comment . ";;424: r4 <- r1, 0x8\n")
(comment . ";;428: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;452: b r6")
chunklet-i: 456; chunklet-start-i: 472; chunklet-end-i: 496
i: 456
end-i: 496
at header: 456
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 484
end-i: 496
i: 488
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";;472: r1 <- r1, r8")
(comment . ";;476: r15 <- 0x4")
(comment . ";;480: r9 <- r1, 0x10\n")
(comment . ";;484: r4 <- r1, 0x8\n")
(comment . ";;488: r15 <- 0x6")
(comment . ";;492 b -468")
chunklet-i: 496; chunklet-start-i: 496; chunklet-end-i: 500
i: 496
end-i: 500
i: 496
end-i: 500
i: 500
end-i: 500
i:500 HIT CHUNK END
(comment . ";;496: b r1, 0")
chunklet-i: 500; chunklet-start-i: 500; chunklet-end-i: 516
i: 500
end-i: 516
i: 500
end-i: 516
i: 512
end-i: 516
i: 516
end-i: 516
i:516 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;512: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0xFF8")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x18")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x60")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x0")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x0")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x40")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 60
instruction range for chunk: 60 68
instruction range for chunk: 68 76
instruction range for chunk: 76 120
instruction range for chunk: 136 164
instruction range for chunk: 164 176
instruction range for chunk: 176 188
instruction range for chunk: 188 212
instruction range for chunk: 212 224
instruction range for chunk: 228 236
instruction range for chunk: 236 272
instruction range for chunk: 288 304
instruction range for chunk: 304 336
instruction range for chunk: 352 372
instruction range for chunk: 372 400
instruction range for chunk: 416 424
instruction range for chunk: 424 436
instruction range for chunk: 440 444
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 408")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 348")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 60
i: 24
end-i: 60
i: 24
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;48: r10 <- r9, 0x5\n")
(comment . ";;52: r10 <- 0x1E")
(comment . ";;56 b 244")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 68
i: 60
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";;60: r10 <- 0x7")
(comment . ";;64 b 168")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;68: r9 <- r10, 0x8\n")
(comment . ";;72 b 160")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 120
i: 76
end-i: 120
i: 76
end-i: 120
i: 80
end-i: 120
i: 84
end-i: 120
i: 88
end-i: 120
i: 100
end-i: 120
i: 104
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
at header: 120
(comment . ";;76: r10 <- 0x0")
(comment . ";;80: r15 <- r1, 0x8\n")
(comment . ";;84: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;100: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;108: r15 <- r1, 0x0\n")
(comment . ";;112: r4 <- 0x2")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 136; chunklet-end-i: 164
i: 120
end-i: 164
at header: 120
i: 136
end-i: 164
i: 140
end-i: 164
i: 144
end-i: 164
i: 148
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;136: r1 <- r1, r0")
(comment . ";;140: r15 <- r1, 0x8\n")
(comment . ";;144: r14 <- r15, r5")
(comment . ";;148: r4 <- r14, 0x0\n")
(comment . ";;152: r4 <- 0x7")
(comment . ";;160 b 24")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 176
i: 164
end-i: 176
i: 168
end-i: 176
i: 172
end-i: 176
i: 176
end-i: 176
i:176 HIT CHUNK END
(comment . ";;164: r7 <- r0, 0x68\n")
(comment . ";;168: r2 <- r7")
(comment . ";;172 b 36")
chunklet-i: 176; chunklet-start-i: 176; chunklet-end-i: 188
i: 176
end-i: 188
i: 176
end-i: 188
i: 180
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";;176: r7 <- r7, r8")
(comment . ";;180: r7 <- r0, 0x68\n")
(comment . ";;184: r14 <- r7, 0x0\n")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 212
i: 188
end-i: 212
i: 188
end-i: 212
i: 200
end-i: 212
i: 204
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;200: r14 <- r15, 0xD\n")
(comment . ";;204: r4 <- 0x2E")
(comment . ";;208: b r1, 0")
chunklet-i: 212; chunklet-start-i: 212; chunklet-end-i: 224
i: 212
end-i: 224
i: 212
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 224; chunklet-start-i: 228; chunklet-end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";; instruction 224 not included")
(comment . ";;228: r7 <- r0, 0x68\n")
(comment . ";;232 b -60")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 272
i: 236
end-i: 272
i: 236
end-i: 272
i: 240
end-i: 272
i: 244
end-i: 272
i: 248
end-i: 272
i: 252
end-i: 272
i: 256
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
at header: 272
(comment . ";;236: r9 <- 0x8")
(comment . ";;240: r15 <- r1, 0x8\n")
(comment . ";;244: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;252: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;268: b r6")
chunklet-i: 272; chunklet-start-i: 288; chunklet-end-i: 304
i: 272
end-i: 304
at header: 272
i: 288
end-i: 304
i: 292
end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;288: r1 <- r1, r0")
(comment . ";;292: r9 <- 0x4")
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300 b -228")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 336
i: 304
end-i: 336
i: 304
end-i: 336
i: 308
end-i: 336
i: 312
end-i: 336
i: 316
end-i: 336
i: 320
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
at header: 336
(comment . ";;304: r15 <- r1, 0x8\n")
(comment . ";;308: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;316: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;332: b r6")
chunklet-i: 336; chunklet-start-i: 352; chunklet-end-i: 372
i: 336
end-i: 372
at header: 336
i: 352
end-i: 372
i: 356
end-i: 372
i: 360
end-i: 372
i: 364
end-i: 372
i: 368
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";;352: r1 <- r1, r0")
(comment . ";;356: r10 <- 0x4")
(comment . ";;360: r15 <- r1, 0x8\n")
(comment . ";;368 b -312")
chunklet-i: 372; chunklet-start-i: 372; chunklet-end-i: 400
i: 372
end-i: 400
i: 372
end-i: 400
i: 376
end-i: 400
i: 380
end-i: 400
i: 384
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
at header: 400
(comment . ";;372: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;396: b r6")
chunklet-i: 400; chunklet-start-i: 416; chunklet-end-i: 424
i: 400
end-i: 424
at header: 400
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;416: r1 <- r1, r8")
(comment . ";;420 b -400")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 436
i: 424
end-i: 436
i: 424
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 436; chunklet-start-i: 440; chunklet-end-i: 444
i: 436
end-i: 444
i: 440
end-i: 444
i: 444
end-i: 444
i:444 HIT CHUNK END
(comment . ";; instruction 436 not included")
(comment . ";;440 b -428")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 60
instruction range for chunk: 60 68
instruction range for chunk: 68 76
instruction range for chunk: 76 120
instruction range for chunk: 136 164
instruction range for chunk: 164 176
instruction range for chunk: 176 188
instruction range for chunk: 188 212
instruction range for chunk: 212 224
instruction range for chunk: 228 236
instruction range for chunk: 236 272
instruction range for chunk: 288 304
instruction range for chunk: 304 336
instruction range for chunk: 352 372
instruction range for chunk: 372 400
instruction range for chunk: 416 424
instruction range for chunk: 424 436
instruction range for chunk: 440 444
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 408")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 348")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 60
i: 24
end-i: 60
i: 24
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;48: r10 <- r9, 0x5\n")
(comment . ";;52: r10 <- 0x1E")
(comment . ";;56 b 244")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 68
i: 60
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";;60: r10 <- 0x7")
(comment . ";;64 b 168")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;68: r9 <- r10, 0x8\n")
(comment . ";;72 b 160")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 120
i: 76
end-i: 120
i: 76
end-i: 120
i: 80
end-i: 120
i: 84
end-i: 120
i: 88
end-i: 120
i: 100
end-i: 120
i: 104
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
at header: 120
(comment . ";;76: r10 <- 0x0")
(comment . ";;80: r15 <- r1, 0x8\n")
(comment . ";;84: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;100: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;108: r15 <- r1, 0x0\n")
(comment . ";;112: r4 <- 0x2")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 136; chunklet-end-i: 164
i: 120
end-i: 164
at header: 120
i: 136
end-i: 164
i: 140
end-i: 164
i: 144
end-i: 164
i: 148
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;136: r1 <- r1, r0")
(comment . ";;140: r15 <- r1, 0x8\n")
(comment . ";;144: r14 <- r15, r5")
(comment . ";;148: r4 <- r14, 0x0\n")
(comment . ";;152: r4 <- 0x7")
(comment . ";;160 b 24")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 176
i: 164
end-i: 176
i: 168
end-i: 176
i: 172
end-i: 176
i: 176
end-i: 176
i:176 HIT CHUNK END
(comment . ";;164: r7 <- r0, 0x68\n")
(comment . ";;168: r2 <- r7")
(comment . ";;172 b 36")
chunklet-i: 176; chunklet-start-i: 176; chunklet-end-i: 188
i: 176
end-i: 188
i: 176
end-i: 188
i: 180
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";;176: r7 <- r7, r8")
(comment . ";;180: r7 <- r0, 0x68\n")
(comment . ";;184: r14 <- r7, 0x0\n")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 212
i: 188
end-i: 212
i: 188
end-i: 212
i: 200
end-i: 212
i: 204
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;200: r14 <- r15, 0xD\n")
(comment . ";;204: r4 <- 0x2E")
(comment . ";;208: b r1, 0")
chunklet-i: 212; chunklet-start-i: 212; chunklet-end-i: 224
i: 212
end-i: 224
i: 212
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 224; chunklet-start-i: 228; chunklet-end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";; instruction 224 not included")
(comment . ";;228: r7 <- r0, 0x68\n")
(comment . ";;232 b -60")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 272
i: 236
end-i: 272
i: 236
end-i: 272
i: 240
end-i: 272
i: 244
end-i: 272
i: 248
end-i: 272
i: 252
end-i: 272
i: 256
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
at header: 272
(comment . ";;236: r9 <- 0x8")
(comment . ";;240: r15 <- r1, 0x8\n")
(comment . ";;244: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;252: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;268: b r6")
chunklet-i: 272; chunklet-start-i: 288; chunklet-end-i: 304
i: 272
end-i: 304
at header: 272
i: 288
end-i: 304
i: 292
end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;288: r1 <- r1, r0")
(comment . ";;292: r9 <- 0x4")
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300 b -228")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 336
i: 304
end-i: 336
i: 304
end-i: 336
i: 308
end-i: 336
i: 312
end-i: 336
i: 316
end-i: 336
i: 320
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
at header: 336
(comment . ";;304: r15 <- r1, 0x8\n")
(comment . ";;308: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;316: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;332: b r6")
chunklet-i: 336; chunklet-start-i: 352; chunklet-end-i: 372
i: 336
end-i: 372
at header: 336
i: 352
end-i: 372
i: 356
end-i: 372
i: 360
end-i: 372
i: 364
end-i: 372
i: 368
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";;352: r1 <- r1, r0")
(comment . ";;356: r10 <- 0x4")
(comment . ";;360: r15 <- r1, 0x8\n")
(comment . ";;368 b -312")
chunklet-i: 372; chunklet-start-i: 372; chunklet-end-i: 400
i: 372
end-i: 400
i: 372
end-i: 400
i: 376
end-i: 400
i: 380
end-i: 400
i: 384
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
at header: 400
(comment . ";;372: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;396: b r6")
chunklet-i: 400; chunklet-start-i: 416; chunklet-end-i: 424
i: 400
end-i: 424
at header: 400
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;416: r1 <- r1, r8")
(comment . ";;420 b -400")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 436
i: 424
end-i: 436
i: 424
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 436; chunklet-start-i: 440; chunklet-end-i: 444
i: 436
end-i: 444
i: 440
end-i: 444
i: 444
end-i: 444
i:444 HIT CHUNK END
(comment . ";; instruction 436 not included")
(comment . ";;440 b -428")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 60
instruction range for chunk: 60 68
instruction range for chunk: 68 76
instruction range for chunk: 76 120
instruction range for chunk: 136 164
instruction range for chunk: 164 176
instruction range for chunk: 176 188
instruction range for chunk: 188 212
instruction range for chunk: 212 224
instruction range for chunk: 228 236
instruction range for chunk: 236 272
instruction range for chunk: 288 304
instruction range for chunk: 304 336
instruction range for chunk: 352 372
instruction range for chunk: 372 400
instruction range for chunk: 416 424
instruction range for chunk: 424 436
instruction range for chunk: 440 444
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 408")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 348")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 60
i: 24
end-i: 60
i: 24
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;48: r10 <- r9, 0x5\n")
(comment . ";;52: r10 <- 0x1E")
(comment . ";;56 b 244")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 68
i: 60
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";;60: r10 <- 0x7")
(comment . ";;64 b 168")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;68: r9 <- r10, 0x8\n")
(comment . ";;72 b 160")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 120
i: 76
end-i: 120
i: 76
end-i: 120
i: 80
end-i: 120
i: 84
end-i: 120
i: 88
end-i: 120
i: 100
end-i: 120
i: 104
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
at header: 120
(comment . ";;76: r10 <- 0x0")
(comment . ";;80: r15 <- r1, 0x8\n")
(comment . ";;84: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;100: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;108: r15 <- r1, 0x0\n")
(comment . ";;112: r4 <- 0x2")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 136; chunklet-end-i: 164
i: 120
end-i: 164
at header: 120
i: 136
end-i: 164
i: 140
end-i: 164
i: 144
end-i: 164
i: 148
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;136: r1 <- r1, r0")
(comment . ";;140: r15 <- r1, 0x8\n")
(comment . ";;144: r14 <- r15, r5")
(comment . ";;148: r4 <- r14, 0x0\n")
(comment . ";;152: r4 <- 0x7")
(comment . ";;160 b 24")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 176
i: 164
end-i: 176
i: 168
end-i: 176
i: 172
end-i: 176
i: 176
end-i: 176
i:176 HIT CHUNK END
(comment . ";;164: r7 <- r0, 0x68\n")
(comment . ";;168: r2 <- r7")
(comment . ";;172 b 36")
chunklet-i: 176; chunklet-start-i: 176; chunklet-end-i: 188
i: 176
end-i: 188
i: 176
end-i: 188
i: 180
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";;176: r7 <- r7, r8")
(comment . ";;180: r7 <- r0, 0x68\n")
(comment . ";;184: r14 <- r7, 0x0\n")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 212
i: 188
end-i: 212
i: 188
end-i: 212
i: 200
end-i: 212
i: 204
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;200: r14 <- r15, 0xD\n")
(comment . ";;204: r4 <- 0x2E")
(comment . ";;208: b r1, 0")
chunklet-i: 212; chunklet-start-i: 212; chunklet-end-i: 224
i: 212
end-i: 224
i: 212
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 224; chunklet-start-i: 228; chunklet-end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";; instruction 224 not included")
(comment . ";;228: r7 <- r0, 0x68\n")
(comment . ";;232 b -60")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 272
i: 236
end-i: 272
i: 236
end-i: 272
i: 240
end-i: 272
i: 244
end-i: 272
i: 248
end-i: 272
i: 252
end-i: 272
i: 256
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
at header: 272
(comment . ";;236: r9 <- 0x8")
(comment . ";;240: r15 <- r1, 0x8\n")
(comment . ";;244: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;252: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;268: b r6")
chunklet-i: 272; chunklet-start-i: 288; chunklet-end-i: 304
i: 272
end-i: 304
at header: 272
i: 288
end-i: 304
i: 292
end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;288: r1 <- r1, r0")
(comment . ";;292: r9 <- 0x4")
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300 b -228")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 336
i: 304
end-i: 336
i: 304
end-i: 336
i: 308
end-i: 336
i: 312
end-i: 336
i: 316
end-i: 336
i: 320
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
at header: 336
(comment . ";;304: r15 <- r1, 0x8\n")
(comment . ";;308: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;316: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;332: b r6")
chunklet-i: 336; chunklet-start-i: 352; chunklet-end-i: 372
i: 336
end-i: 372
at header: 336
i: 352
end-i: 372
i: 356
end-i: 372
i: 360
end-i: 372
i: 364
end-i: 372
i: 368
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";;352: r1 <- r1, r0")
(comment . ";;356: r10 <- 0x4")
(comment . ";;360: r15 <- r1, 0x8\n")
(comment . ";;368 b -312")
chunklet-i: 372; chunklet-start-i: 372; chunklet-end-i: 400
i: 372
end-i: 400
i: 372
end-i: 400
i: 376
end-i: 400
i: 380
end-i: 400
i: 384
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
at header: 400
(comment . ";;372: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;396: b r6")
chunklet-i: 400; chunklet-start-i: 416; chunklet-end-i: 424
i: 400
end-i: 424
at header: 400
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;416: r1 <- r1, r8")
(comment . ";;420 b -400")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 436
i: 424
end-i: 436
i: 424
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 436; chunklet-start-i: 440; chunklet-end-i: 444
i: 436
end-i: 444
i: 440
end-i: 444
i: 444
end-i: 444
i:444 HIT CHUNK END
(comment . ";; instruction 436 not included")
(comment . ";;440 b -428")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 156
instruction range for chunk: 156 168
instruction range for chunk: 168 180
instruction range for chunk: 180 204
instruction range for chunk: 204 216
instruction range for chunk: 220 228
instruction range for chunk: 228 264
instruction range for chunk: 280 296
instruction range for chunk: 296 328
instruction range for chunk: 344 364
instruction range for chunk: 364 392
instruction range for chunk: 408 416
instruction range for chunk: 416 428
instruction range for chunk: 432 436
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;0: r15 <- r0, 0x58\n")
(comment . ";;4: r1 <- r15")
(comment . ";;8 b 404")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r3 <- r3, 0x1\n")
(comment . ";;16 b 344")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 56
i: 20
end-i: 56
i: 20
end-i: 56
i: 32
end-i: 56
i: 44
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;44: r10 <- r9, 0x5\n")
(comment . ";;48: r10 <- 0x1E")
(comment . ";;52 b 240")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r10 <- 0x7")
(comment . ";;60 b 164")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r10, 0x8\n")
(comment . ";;68 b 156")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r15 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 156
i: 112
end-i: 156
at header: 112
i: 128
end-i: 156
i: 132
end-i: 156
i: 136
end-i: 156
i: 140
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r15 <- r1, 0x8\n")
(comment . ";;136: r14 <- r15, r5")
(comment . ";;140: r4 <- r14, 0x0\n")
(comment . ";;144: r4 <- 0x7")
(comment . ";;152 b 24")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 168
i: 156
end-i: 168
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;156: r7 <- r0, 0x68\n")
(comment . ";;160: r2 <- r7")
(comment . ";;164 b 36")
chunklet-i: 168; chunklet-start-i: 168; chunklet-end-i: 180
i: 168
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";;168: r7 <- r7, r8")
(comment . ";;172: r7 <- r0, 0x68\n")
(comment . ";;176: r14 <- r7, 0x0\n")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 204
i: 180
end-i: 204
i: 180
end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;192: r14 <- r15, 0xD\n")
(comment . ";;196: r4 <- 0x2E")
(comment . ";;200: b r1, 0")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 216
i: 204
end-i: 216
i: 204
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 216; chunklet-start-i: 220; chunklet-end-i: 228
i: 216
end-i: 228
i: 220
end-i: 228
i: 224
end-i: 228
i: 228
end-i: 228
i:228 HIT CHUNK END
(comment . ";; instruction 216 not included")
(comment . ";;220: r7 <- r0, 0x68\n")
(comment . ";;224 b -60")
chunklet-i: 228; chunklet-start-i: 228; chunklet-end-i: 264
i: 228
end-i: 264
i: 228
end-i: 264
i: 232
end-i: 264
i: 236
end-i: 264
i: 240
end-i: 264
i: 244
end-i: 264
i: 248
end-i: 264
i: 260
end-i: 264
i: 264
end-i: 264
at header: 264
(comment . ";;228: r9 <- 0x8")
(comment . ";;232: r15 <- r1, 0x8\n")
(comment . ";;236: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;244: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;260: b r6")
chunklet-i: 264; chunklet-start-i: 280; chunklet-end-i: 296
i: 264
end-i: 296
at header: 264
i: 280
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";;280: r1 <- r1, r0")
(comment . ";;284: r9 <- 0x4")
(comment . ";;288: r15 <- r1, 0x8\n")
(comment . ";;292 b -224")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 328
i: 296
end-i: 328
i: 296
end-i: 328
i: 300
end-i: 328
i: 304
end-i: 328
i: 308
end-i: 328
i: 312
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
at header: 328
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;308: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;324: b r6")
chunklet-i: 328; chunklet-start-i: 344; chunklet-end-i: 364
i: 328
end-i: 364
at header: 328
i: 344
end-i: 364
i: 348
end-i: 364
i: 352
end-i: 364
i: 356
end-i: 364
i: 360
end-i: 364
i: 364
end-i: 364
i:364 HIT CHUNK END
(comment . ";;344: r1 <- r1, r0")
(comment . ";;348: r10 <- 0x4")
(comment . ";;352: r15 <- r1, 0x8\n")
(comment . ";;360 b -308")
chunklet-i: 364; chunklet-start-i: 364; chunklet-end-i: 392
i: 364
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;364: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 416
i: 392
end-i: 416
at header: 392
i: 408
end-i: 416
i: 412
end-i: 416
i: 416
end-i: 416
i:416 HIT CHUNK END
(comment . ";;408: r1 <- r1, r8")
(comment . ";;412 b -396")
chunklet-i: 416; chunklet-start-i: 416; chunklet-end-i: 428
i: 416
end-i: 428
i: 416
end-i: 428
i: 428
end-i: 428
i:428 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 428; chunklet-start-i: 432; chunklet-end-i: 436
i: 428
end-i: 436
i: 432
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; instruction 428 not included")
(comment . ";;432 b -424")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 156
instruction range for chunk: 156 168
instruction range for chunk: 168 180
instruction range for chunk: 180 204
instruction range for chunk: 204 216
instruction range for chunk: 220 228
instruction range for chunk: 228 264
instruction range for chunk: 280 296
instruction range for chunk: 296 328
instruction range for chunk: 344 364
instruction range for chunk: 364 392
instruction range for chunk: 408 416
instruction range for chunk: 416 428
instruction range for chunk: 432 436
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;0: r15 <- r0, 0x58\n")
(comment . ";;4: r1 <- r15")
(comment . ";;8 b 404")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r3 <- r3, 0x1\n")
(comment . ";;16 b 344")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 56
i: 20
end-i: 56
i: 20
end-i: 56
i: 32
end-i: 56
i: 44
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;44: r10 <- r9, 0x5\n")
(comment . ";;48: r10 <- 0x1E")
(comment . ";;52 b 240")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r10 <- 0x7")
(comment . ";;60 b 164")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r10, 0x8\n")
(comment . ";;68 b 156")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r15 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 156
i: 112
end-i: 156
at header: 112
i: 128
end-i: 156
i: 132
end-i: 156
i: 136
end-i: 156
i: 140
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r15 <- r1, 0x8\n")
(comment . ";;136: r14 <- r15, r5")
(comment . ";;140: r4 <- r14, 0x0\n")
(comment . ";;144: r4 <- 0x7")
(comment . ";;152 b 24")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 168
i: 156
end-i: 168
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;156: r7 <- r0, 0x68\n")
(comment . ";;160: r2 <- r7")
(comment . ";;164 b 36")
chunklet-i: 168; chunklet-start-i: 168; chunklet-end-i: 180
i: 168
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";;168: r7 <- r7, r8")
(comment . ";;172: r7 <- r0, 0x68\n")
(comment . ";;176: r14 <- r7, 0x0\n")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 204
i: 180
end-i: 204
i: 180
end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;192: r14 <- r15, 0xD\n")
(comment . ";;196: r4 <- 0x2E")
(comment . ";;200: b r1, 0")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 216
i: 204
end-i: 216
i: 204
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 216; chunklet-start-i: 220; chunklet-end-i: 228
i: 216
end-i: 228
i: 220
end-i: 228
i: 224
end-i: 228
i: 228
end-i: 228
i:228 HIT CHUNK END
(comment . ";; instruction 216 not included")
(comment . ";;220: r7 <- r0, 0x68\n")
(comment . ";;224 b -60")
chunklet-i: 228; chunklet-start-i: 228; chunklet-end-i: 264
i: 228
end-i: 264
i: 228
end-i: 264
i: 232
end-i: 264
i: 236
end-i: 264
i: 240
end-i: 264
i: 244
end-i: 264
i: 248
end-i: 264
i: 260
end-i: 264
i: 264
end-i: 264
at header: 264
(comment . ";;228: r9 <- 0x8")
(comment . ";;232: r15 <- r1, 0x8\n")
(comment . ";;236: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;244: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;260: b r6")
chunklet-i: 264; chunklet-start-i: 280; chunklet-end-i: 296
i: 264
end-i: 296
at header: 264
i: 280
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";;280: r1 <- r1, r0")
(comment . ";;284: r9 <- 0x4")
(comment . ";;288: r15 <- r1, 0x8\n")
(comment . ";;292 b -224")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 328
i: 296
end-i: 328
i: 296
end-i: 328
i: 300
end-i: 328
i: 304
end-i: 328
i: 308
end-i: 328
i: 312
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
at header: 328
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;308: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;324: b r6")
chunklet-i: 328; chunklet-start-i: 344; chunklet-end-i: 364
i: 328
end-i: 364
at header: 328
i: 344
end-i: 364
i: 348
end-i: 364
i: 352
end-i: 364
i: 356
end-i: 364
i: 360
end-i: 364
i: 364
end-i: 364
i:364 HIT CHUNK END
(comment . ";;344: r1 <- r1, r0")
(comment . ";;348: r10 <- 0x4")
(comment . ";;352: r15 <- r1, 0x8\n")
(comment . ";;360 b -308")
chunklet-i: 364; chunklet-start-i: 364; chunklet-end-i: 392
i: 364
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;364: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 416
i: 392
end-i: 416
at header: 392
i: 408
end-i: 416
i: 412
end-i: 416
i: 416
end-i: 416
i:416 HIT CHUNK END
(comment . ";;408: r1 <- r1, r8")
(comment . ";;412 b -396")
chunklet-i: 416; chunklet-start-i: 416; chunklet-end-i: 428
i: 416
end-i: 428
i: 416
end-i: 428
i: 428
end-i: 428
i:428 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 428; chunklet-start-i: 432; chunklet-end-i: 436
i: 428
end-i: 436
i: 432
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; instruction 428 not included")
(comment . ";;432 b -424")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: fit
instruction range for chunk: 0 12
instruction range for chunk: 12 44
instruction range for chunk: 44 48
instruction range for chunk: 48 60
instruction range for chunk: 60 80
instruction range for chunk: 80 92
instruction range for chunk: 92 104
instruction range for chunk: 104 116
instruction range for chunk: 116 124
instruction range for chunk: 124 148
instruction range for chunk: 148 152
instruction range for chunk: 152 164
instruction range for chunk: 164 184
instruction range for chunk: 184 196
instruction range for chunk: 196 216
instruction range for chunk: 216 236
instruction range for chunk: 236 248
instruction range for chunk: 248 264
instruction range for chunk: 264 288
instruction range for chunk: 288 300
instruction range for chunk: 300 308
instruction range for chunk: 308 320
instruction range for chunk: 320 340
instruction range for chunk: 340 352
instruction range for chunk: 352 368
instruction range for chunk: 368 376
instruction range for chunk: 376 384
instruction range for chunk: 384 392
instruction range for chunk: 392 400
instruction range for chunk: 400 448
instruction range for chunk: 464 484
instruction range for chunk: 484 528
instruction range for chunk: 544 568
instruction range for chunk: 568 580
instruction range for chunk: 580 588
instruction range for chunk: 588 596
instruction range for chunk: 596 604
instruction range for chunk: 604 612
instruction range for chunk: 612 648
instruction range for chunk: 664 676
instruction range for chunk: 676 700
instruction range for chunk: 700 720
instruction range for chunk: 720 728
instruction range for chunk: 728 776
instruction range for chunk: 792 816
instruction range for chunk: 816 872
instruction range for chunk: 888 920
instruction range for chunk: 920 928
instruction range for chunk: 928 976
instruction range for chunk: 992 1020
instruction range for chunk: 1020 1064
instruction range for chunk: 1080 1112
instruction range for chunk: 1112 1132
instruction range for chunk: 1132 1152
instruction range for chunk: 1152 1160
instruction range for chunk: 1160 1208
instruction range for chunk: 1224 1252
instruction range for chunk: 1252 1296
instruction range for chunk: 1312 1340
instruction range for chunk: 1340 1348
instruction range for chunk: 1348 1392
instruction range for chunk: 1408 1428
instruction range for chunk: 1428 1480
instruction range for chunk: 1496 1528
instruction range for chunk: 1528 1532
instruction range for chunk: 1532 1552
instruction range for chunk: 1552 1560
instruction range for chunk: 1560 1600
instruction range for chunk: 1616 1636
instruction range for chunk: 1636 1672
instruction range for chunk: 1688 1708
instruction range for chunk: 1708 1724
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x2")
(comment . ";;8 b 1696")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;12: r15 <- 0x9")
(comment . ";;16: r13 <- 0xA")
(comment . ";; literal r9")
(comment . ";;32: r14 <- r9, 0x5\n")
(comment . ";;36: r14 <- 0x1E")
(comment . ";;40 b 1508")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;44: r9 <- 0xE")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 60
i: 48
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;48: r14 <- r9, r7")
(comment . ";;52: r14 <- 0x7")
(comment . ";;56 b 1472")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 80
i: 60
end-i: 80
i: 64
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;60: r12 <- r9, 0x1\n")
(comment . ";;64: r14 <- r12, r1")
(comment . ";;68: r14 <- r14, r8")
(comment . ";;72: r15 <- r14")
(comment . ";;76 b 1452")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;80: r14 <- r15, r12")
(comment . ";;84: r14 <- 0x7")
(comment . ";;88 b 1440")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;92: r14 <- r15, r9")
(comment . ";;96: r12 <- r9, r14")
(comment . ";;100: r4 <- 0x0")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 116
i: 104
end-i: 116
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r14 <- r4, r12")
(comment . ";;108: r14 <- 0x7")
(comment . ";;112 b 1224")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;116: r4 <- r12")
(comment . ";;120 b 444")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 148
i: 124
end-i: 148
i: 124
end-i: 148
i: 136
end-i: 148
i: 140
end-i: 148
i: 144
end-i: 148
i: 148
end-i: 148
i:148 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;136: r14 <- r9, 0x5\n")
(comment . ";;140: r14 <- 0x1E")
(comment . ";;144 b 1004")
chunklet-i: 148; chunklet-start-i: 148; chunklet-end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;148: r9 <- 0xE")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 164
i: 152
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;152: r14 <- r9, r7")
(comment . ";;156: r14 <- 0x7")
(comment . ";;160 b 968")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 184
i: 164
end-i: 184
i: 168
end-i: 184
i: 172
end-i: 184
i: 176
end-i: 184
i: 180
end-i: 184
i: 184
end-i: 184
i:184 HIT CHUNK END
(comment . ";;164: r11 <- r9, 0x1\n")
(comment . ";;168: r14 <- r11, r1")
(comment . ";;172: r14 <- r14, r8")
(comment . ";;176: r15 <- r14")
(comment . ";;180 b 948")
chunklet-i: 184; chunklet-start-i: 184; chunklet-end-i: 196
i: 184
end-i: 196
i: 188
end-i: 196
i: 192
end-i: 196
i: 196
end-i: 196
i:196 HIT CHUNK END
(comment . ";;184: r14 <- r15, r11")
(comment . ";;188: r14 <- 0x7")
(comment . ";;192 b 936")
chunklet-i: 196; chunklet-start-i: 196; chunklet-end-i: 216
i: 196
end-i: 216
i: 200
end-i: 216
i: 204
end-i: 216
i: 208
end-i: 216
i: 212
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";;196: r14 <- r15, r9")
(comment . ";;200: r9 <- r9, r14")
(comment . ";;204: r14 <- r9, r7")
(comment . ";;208: r14 <- 0x7")
(comment . ";;212 b 896")
chunklet-i: 216; chunklet-start-i: 216; chunklet-end-i: 236
i: 216
end-i: 236
i: 220
end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";;216: r11 <- r9, 0x1\n")
(comment . ";;220: r14 <- r11, r1")
(comment . ";;224: r14 <- r14, r8")
(comment . ";;228: r4 <- r14")
(comment . ";;232 b 876")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 248
i: 236
end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;236: r14 <- r4, r11")
(comment . ";;240: r14 <- 0x7")
(comment . ";;244 b 864")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 264
i: 248
end-i: 264
i: 252
end-i: 264
i: 256
end-i: 264
i: 260
end-i: 264
i: 264
end-i: 264
i:264 HIT CHUNK END
(comment . ";;248: r14 <- r4, r9")
(comment . ";;252: r14 <- r9, r14")
(comment . ";;256: r14 <- 0x6")
(comment . ";;260 b 104")
chunklet-i: 264; chunklet-start-i: 264; chunklet-end-i: 288
i: 264
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
i:288 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;276: r14 <- r9, 0x5\n")
(comment . ";;280: r14 <- 0x1E")
(comment . ";;284 b 632")
chunklet-i: 288; chunklet-start-i: 288; chunklet-end-i: 300
i: 288
end-i: 300
i: 288
end-i: 300
i: 292
end-i: 300
i: 296
end-i: 300
i: 300
end-i: 300
i:300 HIT CHUNK END
(comment . ";;288: r11 <- r13, r4")
(comment . ";;292: r11 <- 0x7")
(comment . ";;296 b 420")
chunklet-i: 300; chunklet-start-i: 300; chunklet-end-i: 308
i: 300
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;300: r10 <- r13, r4")
(comment . ";;304 b 412")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 320
i: 308
end-i: 320
i: 308
end-i: 320
i: 312
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
i:320 HIT CHUNK END
(comment . ";;308: r11 <- r14, r7")
(comment . ";;312: r11 <- 0x7")
(comment . ";;316 b 380")
chunklet-i: 320; chunklet-start-i: 320; chunklet-end-i: 340
i: 320
end-i: 340
i: 324
end-i: 340
i: 328
end-i: 340
i: 332
end-i: 340
i: 336
end-i: 340
i: 340
end-i: 340
i:340 HIT CHUNK END
(comment . ";;320: r9 <- r14, 0x1\n")
(comment . ";;324: r11 <- r9, r1")
(comment . ";;328: r11 <- r11, r8")
(comment . ";;332: r10 <- r11")
(comment . ";;336 b 360")
chunklet-i: 340; chunklet-start-i: 340; chunklet-end-i: 352
i: 340
end-i: 352
i: 344
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";;340: r11 <- r10, r9")
(comment . ";;344: r11 <- 0x7")
(comment . ";;348 b 348")
chunklet-i: 352; chunklet-start-i: 352; chunklet-end-i: 368
i: 352
end-i: 368
i: 356
end-i: 368
i: 360
end-i: 368
i: 364
end-i: 368
i: 368
end-i: 368
i:368 HIT CHUNK END
(comment . ";;352: r11 <- r10, r9")
(comment . ";;356: r14 <- r14, r11")
(comment . ";;360: r14 <- 0x6")
(comment . ";;364 b 200")
chunklet-i: 368; chunklet-start-i: 368; chunklet-end-i: 376
i: 368
end-i: 376
i: 368
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
i:376 HIT CHUNK END
(comment . ";;368: r3 <- r3, 0x1\n")
(comment . ";;372 b 108")
chunklet-i: 376; chunklet-start-i: 376; chunklet-end-i: 384
i: 376
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
i:384 HIT CHUNK END
(comment . ";;376: r4 <- 0x7")
(comment . ";;380 b 16")
chunklet-i: 384; chunklet-start-i: 384; chunklet-end-i: 392
i: 384
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
i:392 HIT CHUNK END
(comment . ";;384: r14 <- r4, 0x8\n")
(comment . ";;388 b 8")
chunklet-i: 392; chunklet-start-i: 392; chunklet-end-i: 400
i: 392
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
i:400 HIT CHUNK END
(comment . ";;392: r4 <- 0xE")
(comment . ";;396 b -296")
chunklet-i: 400; chunklet-start-i: 400; chunklet-end-i: 448
i: 400
end-i: 448
i: 400
end-i: 448
i: 404
end-i: 448
i: 408
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 420
end-i: 448
i: 424
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;400: r9 <- 0x8")
(comment . ";;404: r10 <- 0x4")
(comment . ";;408: r15 <- r1, 0x8\n")
(comment . ";;412: r13 <- r1, 0x10\n")
(comment . ";;416: r12 <- r1, 0x18\n")
(comment . ";;420: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;444: b r6")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 484
i: 448
end-i: 484
at header: 448
i: 464
end-i: 484
i: 468
end-i: 484
i: 472
end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;464: r1 <- r1, r0")
(comment . ";;468: r15 <- r1, 0x8\n")
(comment . ";;472: r13 <- r1, 0x10\n")
(comment . ";;476: r12 <- r1, 0x18\n")
(comment . ";;480 b -380")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 528
i: 484
end-i: 528
i: 484
end-i: 528
i: 488
end-i: 528
i: 492
end-i: 528
i: 496
end-i: 528
i: 500
end-i: 528
i: 504
end-i: 528
i: 508
end-i: 528
i: 512
end-i: 528
i: 524
end-i: 528
i: 528
end-i: 528
at header: 528
(comment . ";;484: r15 <- r1, 0x8\n")
(comment . ";;488: r13 <- r1, 0x10\n")
(comment . ";;492: r12 <- r1, 0x18\n")
(comment . ";;496: r4 <- r1, 0x20\n")
(comment . ";;500: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;508: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;524: b r6")
chunklet-i: 528; chunklet-start-i: 544; chunklet-end-i: 568
i: 528
end-i: 568
at header: 528
i: 544
end-i: 568
i: 548
end-i: 568
i: 552
end-i: 568
i: 556
end-i: 568
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;544: r1 <- r1, r8")
(comment . ";;548: r15 <- r1, 0x8\n")
(comment . ";;552: r13 <- r1, 0x10\n")
(comment . ";;556: r12 <- r1, 0x18\n")
(comment . ";;560: r4 <- r1, 0x20\n")
(comment . ";;564 b -192")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 580
i: 568
end-i: 580
i: 568
end-i: 580
i: 572
end-i: 580
i: 576
end-i: 580
i: 580
end-i: 580
i:580 HIT CHUNK END
(comment . ";;568: r15 <- r4, r12")
(comment . ";;572: r15 <- 0x7")
(comment . ";;576 b 24")
chunklet-i: 580; chunklet-start-i: 580; chunklet-end-i: 588
i: 580
end-i: 588
i: 584
end-i: 588
i: 588
end-i: 588
i:588 HIT CHUNK END
(comment . ";;580: r4 <- r12")
(comment . ";;584 b 8")
chunklet-i: 588; chunklet-start-i: 588; chunklet-end-i: 596
i: 588
end-i: 596
i: 592
end-i: 596
i: 596
end-i: 596
i:596 HIT CHUNK END
(comment . ";;588: r4 <- 0xE")
(comment . ";;592: b r1, 0")
chunklet-i: 596; chunklet-start-i: 596; chunklet-end-i: 604
i: 596
end-i: 604
i: 596
end-i: 604
i: 600
end-i: 604
i: 604
end-i: 604
i:604 HIT CHUNK END
(comment . ";;596: r4 <- 0x6")
(comment . ";;600: b r1, 0")
chunklet-i: 604; chunklet-start-i: 604; chunklet-end-i: 612
i: 604
end-i: 612
i: 604
end-i: 612
i: 608
end-i: 612
i: 612
end-i: 612
i:612 HIT CHUNK END
(comment . ";;604: r3 <- r3, 0x1\n")
(comment . ";;608 b 64")
chunklet-i: 612; chunklet-start-i: 612; chunklet-end-i: 648
i: 612
end-i: 648
i: 616
end-i: 648
i: 620
end-i: 648
i: 624
end-i: 648
i: 628
end-i: 648
i: 632
end-i: 648
i: 644
end-i: 648
i: 648
end-i: 648
at header: 648
(comment . ";;612: r12 <- r1, 0x18\n")
(comment . ";;616: r4 <- r1, 0x20\n")
(comment . ";;620: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;628: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;644: b r6")
chunklet-i: 648; chunklet-start-i: 664; chunklet-end-i: 676
i: 648
end-i: 676
at header: 648
i: 664
end-i: 676
i: 668
end-i: 676
i: 672
end-i: 676
i: 676
end-i: 676
i:676 HIT CHUNK END
(comment . ";;664: r1 <- r1, r8")
(comment . ";;668: r12 <- r1, 0x18\n")
(comment . ";;672: r4 <- r1, 0x20\n")
chunklet-i: 676; chunklet-start-i: 676; chunklet-end-i: 700
i: 676
end-i: 700
i: 676
end-i: 700
i: 680
end-i: 700
i: 684
end-i: 700
i: 696
end-i: 700
i: 700
end-i: 700
i:700 HIT CHUNK END
(comment . ";;676: r9 <- 0x4")
(comment . ";;680: r10 <- 0xC")
(comment . ";; literal r6")
(comment . ";;696: b r6")
chunklet-i: 700; chunklet-start-i: 700; chunklet-end-i: 720
i: 700
end-i: 720
i: 700
end-i: 720
i: 704
end-i: 720
i: 716
end-i: 720
i: 720
end-i: 720
i:720 HIT CHUNK END
(comment . ";;700: r9 <- 0xE")
(comment . ";; literal r6")
(comment . ";;716: b r6")
chunklet-i: 720; chunklet-start-i: 720; chunklet-end-i: 728
i: 720
end-i: 728
i: 720
end-i: 728
i: 724
end-i: 728
i: 728
end-i: 728
i:728 HIT CHUNK END
(comment . ";;720: r3 <- r3, 0x1\n")
(comment . ";;724 b 88")
chunklet-i: 728; chunklet-start-i: 728; chunklet-end-i: 776
i: 728
end-i: 776
i: 732
end-i: 776
i: 736
end-i: 776
i: 740
end-i: 776
i: 744
end-i: 776
i: 748
end-i: 776
i: 752
end-i: 776
i: 756
end-i: 776
i: 760
end-i: 776
i: 772
end-i: 776
i: 776
end-i: 776
at header: 776
(comment . ";;728: r15 <- r1, 0x8\n")
(comment . ";;732: r13 <- r1, 0x10\n")
(comment . ";;736: r12 <- r1, 0x18\n")
(comment . ";;740: r4 <- r1, 0x20\n")
(comment . ";;744: r14 <- r1, 0x28\n")
(comment . ";;748: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;756: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;772: b r6")
chunklet-i: 776; chunklet-start-i: 792; chunklet-end-i: 816
i: 776
end-i: 816
at header: 776
i: 792
end-i: 816
i: 796
end-i: 816
i: 800
end-i: 816
i: 804
end-i: 816
i: 808
end-i: 816
i: 812
end-i: 816
i: 816
end-i: 816
i:816 HIT CHUNK END
(comment . ";;792: r1 <- r1, r0")
(comment . ";;796: r15 <- r1, 0x8\n")
(comment . ";;800: r13 <- r1, 0x10\n")
(comment . ";;804: r12 <- r1, 0x18\n")
(comment . ";;808: r4 <- r1, 0x20\n")
(comment . ";;812: r14 <- r1, 0x28\n")
chunklet-i: 816; chunklet-start-i: 816; chunklet-end-i: 872
i: 816
end-i: 872
i: 816
end-i: 872
i: 820
end-i: 872
i: 824
end-i: 872
i: 828
end-i: 872
i: 832
end-i: 872
i: 836
end-i: 872
i: 840
end-i: 872
i: 844
end-i: 872
i: 848
end-i: 872
i: 852
end-i: 872
i: 856
end-i: 872
i: 868
end-i: 872
i: 872
end-i: 872
at header: 872
(comment . ";;816: r9 <- 0xD")
(comment . ";;820: r10 <- 0x4")
(comment . ";;824: r15 <- r1, 0x8\n")
(comment . ";;828: r13 <- r1, 0x10\n")
(comment . ";;832: r12 <- r1, 0x18\n")
(comment . ";;836: r4 <- r1, 0x20\n")
(comment . ";;840: r14 <- r1, 0x28\n")
(comment . ";;844: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;852: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;868: b r6")
chunklet-i: 872; chunklet-start-i: 888; chunklet-end-i: 920
i: 872
end-i: 920
at header: 872
i: 888
end-i: 920
i: 892
end-i: 920
i: 896
end-i: 920
i: 900
end-i: 920
i: 904
end-i: 920
i: 908
end-i: 920
i: 912
end-i: 920
i: 916
end-i: 920
i: 920
end-i: 920
i:920 HIT CHUNK END
(comment . ";;888: r1 <- r1, r0")
(comment . ";;892: r10 <- 0x4")
(comment . ";;896: r15 <- r1, 0x8\n")
(comment . ";;900: r13 <- r1, 0x10\n")
(comment . ";;904: r12 <- r1, 0x18\n")
(comment . ";;908: r4 <- r1, 0x20\n")
(comment . ";;912: r14 <- r1, 0x28\n")
(comment . ";;916 b -612")
chunklet-i: 920; chunklet-start-i: 920; chunklet-end-i: 928
i: 920
end-i: 928
i: 920
end-i: 928
i: 924
end-i: 928
i: 928
end-i: 928
i:928 HIT CHUNK END
(comment . ";;920: r3 <- r3, 0x1\n")
(comment . ";;924 b 92")
chunklet-i: 928; chunklet-start-i: 928; chunklet-end-i: 976
i: 928
end-i: 976
i: 932
end-i: 976
i: 936
end-i: 976
i: 940
end-i: 976
i: 944
end-i: 976
i: 948
end-i: 976
i: 952
end-i: 976
i: 956
end-i: 976
i: 960
end-i: 976
i: 972
end-i: 976
i: 976
end-i: 976
at header: 976
(comment . ";;928: r15 <- r1, 0x8\n")
(comment . ";;932: r13 <- r1, 0x10\n")
(comment . ";;936: r12 <- r1, 0x18\n")
(comment . ";;940: r4 <- r1, 0x20\n")
(comment . ";;944: r9 <- r1, 0x28\n")
(comment . ";;948: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;956: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;972: b r6")
chunklet-i: 976; chunklet-start-i: 992; chunklet-end-i: 1020
i: 976
end-i: 1020
at header: 976
i: 992
end-i: 1020
i: 996
end-i: 1020
i: 1000
end-i: 1020
i: 1004
end-i: 1020
i: 1008
end-i: 1020
i: 1012
end-i: 1020
i: 1016
end-i: 1020
i: 1020
end-i: 1020
i:1020 HIT CHUNK END
(comment . ";;996: r1 <- r1, r0")
(comment . ";;1000: r15 <- r1, 0x8\n")
(comment . ";;1004: r13 <- r1, 0x10\n")
(comment . ";;1008: r12 <- r1, 0x18\n")
(comment . ";;1012: r4 <- r1, 0x20\n")
(comment . ";;1016: r9 <- r1, 0x28\n")
chunklet-i: 1020; chunklet-start-i: 1020; chunklet-end-i: 1064
i: 1020
end-i: 1064
i: 1020
end-i: 1064
i: 1024
end-i: 1064
i: 1028
end-i: 1064
i: 1032
end-i: 1064
i: 1036
end-i: 1064
i: 1040
end-i: 1064
i: 1044
end-i: 1064
i: 1048
end-i: 1064
i: 1060
end-i: 1064
i: 1064
end-i: 1064
at header: 1064
(comment . ";;1020: r15 <- r1, 0x8\n")
(comment . ";;1024: r13 <- r1, 0x10\n")
(comment . ";;1028: r12 <- r1, 0x18\n")
(comment . ";;1032: r4 <- r1, 0x20\n")
(comment . ";;1036: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1044: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1060: b r6")
chunklet-i: 1064; chunklet-start-i: 1080; chunklet-end-i: 1112
i: 1064
end-i: 1112
at header: 1064
i: 1080
end-i: 1112
i: 1084
end-i: 1112
i: 1088
end-i: 1112
i: 1092
end-i: 1112
i: 1096
end-i: 1112
i: 1100
end-i: 1112
i: 1104
end-i: 1112
i: 1108
end-i: 1112
i: 1112
end-i: 1112
i:1112 HIT CHUNK END
(comment . ";;1080: r1 <- r1, r8")
(comment . ";;1084: r14 <- 0x4")
(comment . ";;1088: r15 <- r1, 0x8\n")
(comment . ";;1092: r13 <- r1, 0x10\n")
(comment . ";;1096: r12 <- r1, 0x18\n")
(comment . ";;1100: r4 <- r1, 0x20\n")
(comment . ";;1108 b -824")
chunklet-i: 1112; chunklet-start-i: 1112; chunklet-end-i: 1132
i: 1112
end-i: 1132
i: 1112
end-i: 1132
i: 1116
end-i: 1132
i: 1128
end-i: 1132
i: 1132
end-i: 1132
i:1132 HIT CHUNK END
(comment . ";;1112: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1128: b r6")
chunklet-i: 1132; chunklet-start-i: 1132; chunklet-end-i: 1152
i: 1132
end-i: 1152
i: 1132
end-i: 1152
i: 1136
end-i: 1152
i: 1148
end-i: 1152
i: 1152
end-i: 1152
i:1152 HIT CHUNK END
(comment . ";;1132: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1148: b r6")
chunklet-i: 1152; chunklet-start-i: 1152; chunklet-end-i: 1160
i: 1152
end-i: 1160
i: 1152
end-i: 1160
i: 1156
end-i: 1160
i: 1160
end-i: 1160
i:1160 HIT CHUNK END
(comment . ";;1152: r3 <- r3, 0x1\n")
(comment . ";;1156 b 92")
chunklet-i: 1160; chunklet-start-i: 1160; chunklet-end-i: 1208
i: 1160
end-i: 1208
i: 1164
end-i: 1208
i: 1168
end-i: 1208
i: 1172
end-i: 1208
i: 1176
end-i: 1208
i: 1180
end-i: 1208
i: 1184
end-i: 1208
i: 1188
end-i: 1208
i: 1192
end-i: 1208
i: 1204
end-i: 1208
i: 1208
end-i: 1208
at header: 1208
(comment . ";;1160: r15 <- r1, 0x8\n")
(comment . ";;1164: r13 <- r1, 0x10\n")
(comment . ";;1168: r12 <- r1, 0x18\n")
(comment . ";;1172: r4 <- r1, 0x20\n")
(comment . ";;1176: r9 <- r1, 0x28\n")
(comment . ";;1180: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1188: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1204: b r6")
chunklet-i: 1208; chunklet-start-i: 1224; chunklet-end-i: 1252
i: 1208
end-i: 1252
at header: 1208
i: 1224
end-i: 1252
i: 1228
end-i: 1252
i: 1232
end-i: 1252
i: 1236
end-i: 1252
i: 1240
end-i: 1252
i: 1244
end-i: 1252
i: 1248
end-i: 1252
i: 1252
end-i: 1252
i:1252 HIT CHUNK END
(comment . ";;1228: r1 <- r1, r0")
(comment . ";;1232: r15 <- r1, 0x8\n")
(comment . ";;1236: r13 <- r1, 0x10\n")
(comment . ";;1240: r12 <- r1, 0x18\n")
(comment . ";;1244: r4 <- r1, 0x20\n")
(comment . ";;1248: r9 <- r1, 0x28\n")
chunklet-i: 1252; chunklet-start-i: 1252; chunklet-end-i: 1296
i: 1252
end-i: 1296
i: 1252
end-i: 1296
i: 1256
end-i: 1296
i: 1260
end-i: 1296
i: 1264
end-i: 1296
i: 1268
end-i: 1296
i: 1272
end-i: 1296
i: 1276
end-i: 1296
i: 1280
end-i: 1296
i: 1292
end-i: 1296
i: 1296
end-i: 1296
at header: 1296
(comment . ";;1252: r15 <- r1, 0x8\n")
(comment . ";;1256: r13 <- r1, 0x10\n")
(comment . ";;1260: r12 <- r1, 0x18\n")
(comment . ";;1264: r4 <- r1, 0x20\n")
(comment . ";;1268: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1276: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1292: b r6")
chunklet-i: 1296; chunklet-start-i: 1312; chunklet-end-i: 1340
i: 1296
end-i: 1340
at header: 1296
i: 1312
end-i: 1340
i: 1316
end-i: 1340
i: 1320
end-i: 1340
i: 1324
end-i: 1340
i: 1328
end-i: 1340
i: 1332
end-i: 1340
i: 1336
end-i: 1340
i: 1340
end-i: 1340
i:1340 HIT CHUNK END
(comment . ";;1312: r1 <- r1, r8")
(comment . ";;1316: r9 <- 0x4")
(comment . ";;1320: r15 <- r1, 0x8\n")
(comment . ";;1324: r13 <- r1, 0x10\n")
(comment . ";;1328: r12 <- r1, 0x18\n")
(comment . ";;1332: r4 <- r1, 0x20\n")
(comment . ";;1336 b -1188")
chunklet-i: 1340; chunklet-start-i: 1340; chunklet-end-i: 1348
i: 1340
end-i: 1348
i: 1340
end-i: 1348
i: 1344
end-i: 1348
i: 1348
end-i: 1348
i:1348 HIT CHUNK END
(comment . ";;1340: r3 <- r3, 0x1\n")
(comment . ";;1344 b 80")
chunklet-i: 1348; chunklet-start-i: 1348; chunklet-end-i: 1392
i: 1348
end-i: 1392
i: 1352
end-i: 1392
i: 1356
end-i: 1392
i: 1360
end-i: 1392
i: 1364
end-i: 1392
i: 1368
end-i: 1392
i: 1372
end-i: 1392
i: 1376
end-i: 1392
i: 1388
end-i: 1392
i: 1392
end-i: 1392
at header: 1392
(comment . ";;1348: r15 <- r1, 0x8\n")
(comment . ";;1352: r13 <- r1, 0x10\n")
(comment . ";;1356: r12 <- r1, 0x18\n")
(comment . ";;1360: r4 <- r1, 0x20\n")
(comment . ";;1364: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1388: b r6")
chunklet-i: 1392; chunklet-start-i: 1408; chunklet-end-i: 1428
i: 1392
end-i: 1428
at header: 1392
i: 1408
end-i: 1428
i: 1412
end-i: 1428
i: 1416
end-i: 1428
i: 1420
end-i: 1428
i: 1424
end-i: 1428
i: 1428
end-i: 1428
i:1428 HIT CHUNK END
(comment . ";;1408: r1 <- r1, r8")
(comment . ";;1412: r15 <- r1, 0x8\n")
(comment . ";;1416: r13 <- r1, 0x10\n")
(comment . ";;1420: r12 <- r1, 0x18\n")
(comment . ";;1424: r4 <- r1, 0x20\n")
chunklet-i: 1428; chunklet-start-i: 1428; chunklet-end-i: 1480
i: 1428
end-i: 1480
i: 1428
end-i: 1480
i: 1432
end-i: 1480
i: 1436
end-i: 1480
i: 1440
end-i: 1480
i: 1444
end-i: 1480
i: 1448
end-i: 1480
i: 1452
end-i: 1480
i: 1456
end-i: 1480
i: 1460
end-i: 1480
i: 1464
end-i: 1480
i: 1476
end-i: 1480
i: 1480
end-i: 1480
at header: 1480
(comment . ";;1428: r9 <- 0x4")
(comment . ";;1432: r10 <- 0xC")
(comment . ";;1436: r15 <- r1, 0x8\n")
(comment . ";;1440: r13 <- r1, 0x10\n")
(comment . ";;1444: r12 <- r1, 0x18\n")
(comment . ";;1448: r4 <- r1, 0x20\n")
(comment . ";;1452: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1460: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1476: b r6")
chunklet-i: 1480; chunklet-start-i: 1496; chunklet-end-i: 1528
i: 1480
end-i: 1528
at header: 1480
i: 1496
end-i: 1528
i: 1500
end-i: 1528
i: 1504
end-i: 1528
i: 1508
end-i: 1528
i: 1512
end-i: 1528
i: 1516
end-i: 1528
i: 1520
end-i: 1528
i: 1524
end-i: 1528
i: 1528
end-i: 1528
i:1528 HIT CHUNK END
(comment . ";;1496: r1 <- r1, r8")
(comment . ";;1500: r14 <- 0x4")
(comment . ";;1504: r15 <- r1, 0x8\n")
(comment . ";;1508: r13 <- r1, 0x10\n")
(comment . ";;1512: r12 <- r1, 0x18\n")
(comment . ";;1516: r4 <- r1, 0x20\n")
(comment . ";;1520: r14 <- 0x6")
(comment . ";;1524 b -1404")
chunklet-i: 1528; chunklet-start-i: 1528; chunklet-end-i: 1532
i: 1528
end-i: 1532
i: 1532
end-i: 1532
i:1532 HIT CHUNK END
(comment . ";;1528 b -964")
chunklet-i: 1532; chunklet-start-i: 1532; chunklet-end-i: 1552
i: 1532
end-i: 1552
i: 1532
end-i: 1552
i: 1536
end-i: 1552
i: 1548
end-i: 1552
i: 1552
end-i: 1552
i:1552 HIT CHUNK END
(comment . ";;1532: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1548: b r6")
chunklet-i: 1552; chunklet-start-i: 1552; chunklet-end-i: 1560
i: 1552
end-i: 1560
i: 1552
end-i: 1560
i: 1556
end-i: 1560
i: 1560
end-i: 1560
i:1560 HIT CHUNK END
(comment . ";;1552: r3 <- r3, 0x1\n")
(comment . ";;1556 b 76")
chunklet-i: 1560; chunklet-start-i: 1560; chunklet-end-i: 1600
i: 1560
end-i: 1600
i: 1564
end-i: 1600
i: 1568
end-i: 1600
i: 1572
end-i: 1600
i: 1576
end-i: 1600
i: 1580
end-i: 1600
i: 1584
end-i: 1600
i: 1596
end-i: 1600
i: 1600
end-i: 1600
at header: 1600
(comment . ";;1560: r15 <- r1, 0x8\n")
(comment . ";;1564: r13 <- r1, 0x10\n")
(comment . ";;1568: r9 <- r1, 0x18\n")
(comment . ";;1572: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1580: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1596: b r6")
chunklet-i: 1600; chunklet-start-i: 1616; chunklet-end-i: 1636
i: 1600
end-i: 1636
at header: 1600
i: 1616
end-i: 1636
i: 1620
end-i: 1636
i: 1624
end-i: 1636
i: 1628
end-i: 1636
i: 1632
end-i: 1636
i: 1636
end-i: 1636
i:1636 HIT CHUNK END
(comment . ";;1620: r1 <- r1, r0")
(comment . ";;1624: r15 <- r1, 0x8\n")
(comment . ";;1628: r13 <- r1, 0x10\n")
(comment . ";;1632: r9 <- r1, 0x18\n")
chunklet-i: 1636; chunklet-start-i: 1636; chunklet-end-i: 1672
i: 1636
end-i: 1672
i: 1636
end-i: 1672
i: 1640
end-i: 1672
i: 1644
end-i: 1672
i: 1648
end-i: 1672
i: 1652
end-i: 1672
i: 1656
end-i: 1672
i: 1668
end-i: 1672
i: 1672
end-i: 1672
at header: 1672
(comment . ";;1636: r15 <- r1, 0x8\n")
(comment . ";;1640: r13 <- r1, 0x10\n")
(comment . ";;1644: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1652: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1668: b r6")
chunklet-i: 1672; chunklet-start-i: 1688; chunklet-end-i: 1708
i: 1672
end-i: 1708
at header: 1672
i: 1688
end-i: 1708
i: 1692
end-i: 1708
i: 1696
end-i: 1708
i: 1700
end-i: 1708
i: 1704
end-i: 1708
i: 1708
end-i: 1708
i:1708 HIT CHUNK END
(comment . ";;1688: r1 <- r1, r8")
(comment . ";;1692: r9 <- 0x4")
(comment . ";;1696: r15 <- r1, 0x8\n")
(comment . ";;1700: r13 <- r1, 0x10\n")
(comment . ";;1704 b -1660")
chunklet-i: 1708; chunklet-start-i: 1708; chunklet-end-i: 1724
i: 1708
end-i: 1724
i: 1708
end-i: 1724
i: 1720
end-i: 1724
i: 1724
end-i: 1724
i:1724 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;1720: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: place
instruction range for chunk: 0 12
instruction range for chunk: 12 44
instruction range for chunk: 44 48
instruction range for chunk: 48 60
instruction range for chunk: 60 80
instruction range for chunk: 80 92
instruction range for chunk: 92 104
instruction range for chunk: 104 116
instruction range for chunk: 116 124
instruction range for chunk: 124 132
instruction range for chunk: 132 156
instruction range for chunk: 156 160
instruction range for chunk: 160 172
instruction range for chunk: 172 192
instruction range for chunk: 192 204
instruction range for chunk: 204 224
instruction range for chunk: 224 244
instruction range for chunk: 244 256
instruction range for chunk: 256 272
instruction range for chunk: 272 296
instruction range for chunk: 296 308
instruction range for chunk: 308 316
instruction range for chunk: 316 328
instruction range for chunk: 328 340
instruction range for chunk: 340 348
instruction range for chunk: 348 364
instruction range for chunk: 364 376
instruction range for chunk: 376 384
instruction range for chunk: 384 392
instruction range for chunk: 392 400
instruction range for chunk: 400 448
instruction range for chunk: 464 488
instruction range for chunk: 488 512
instruction range for chunk: 512 568
instruction range for chunk: 584 620
instruction range for chunk: 620 664
instruction range for chunk: 680 708
instruction range for chunk: 708 728
instruction range for chunk: 728 748
instruction range for chunk: 748 792
instruction range for chunk: 808 836
instruction range for chunk: 836 880
instruction range for chunk: 896 924
instruction range for chunk: 924 948
instruction range for chunk: 948 972
instruction range for chunk: 972 976
instruction range for chunk: 976 988
instruction range for chunk: 988 1008
instruction range for chunk: 1008 1020
instruction range for chunk: 1020 1052
instruction range for chunk: 1052 1076
instruction range for chunk: 1076 1080
instruction range for chunk: 1080 1092
instruction range for chunk: 1092 1112
instruction range for chunk: 1112 1124
instruction range for chunk: 1124 1144
instruction range for chunk: 1144 1164
instruction range for chunk: 1164 1176
instruction range for chunk: 1176 1192
instruction range for chunk: 1192 1200
instruction range for chunk: 1200 1212
instruction range for chunk: 1212 1224
instruction range for chunk: 1224 1232
instruction range for chunk: 1232 1248
instruction range for chunk: 1248 1268
instruction range for chunk: 1268 1296
instruction range for chunk: 1296 1308
instruction range for chunk: 1308 1316
instruction range for chunk: 1316 1340
instruction range for chunk: 1340 1344
instruction range for chunk: 1344 1356
instruction range for chunk: 1356 1376
instruction range for chunk: 1376 1388
instruction range for chunk: 1388 1404
instruction range for chunk: 1404 1412
instruction range for chunk: 1412 1420
instruction range for chunk: 1420 1428
instruction range for chunk: 1428 1464
instruction range for chunk: 1480 1496
instruction range for chunk: 1496 1528
instruction range for chunk: 1544 1556
instruction range for chunk: 1556 1580
instruction range for chunk: 1580 1592
instruction range for chunk: 1592 1600
instruction range for chunk: 1600 1608
instruction range for chunk: 1608 1612
instruction range for chunk: 1612 1620
instruction range for chunk: 1620 1656
instruction range for chunk: 1672 1684
instruction range for chunk: 1684 1720
instruction range for chunk: 1736 1760
instruction range for chunk: 1760 1764
instruction range for chunk: 1764 1772
instruction range for chunk: 1772 1808
instruction range for chunk: 1824 1840
instruction range for chunk: 1840 1872
instruction range for chunk: 1888 1904
instruction range for chunk: 1904 1924
instruction range for chunk: 1924 1932
instruction range for chunk: 1932 1968
instruction range for chunk: 1984 2000
instruction range for chunk: 2000 2032
instruction range for chunk: 2048 2068
instruction range for chunk: 2068 2076
instruction range for chunk: 2076 2112
instruction range for chunk: 2128 2140
instruction range for chunk: 2140 2176
instruction range for chunk: 2192 2216
instruction range for chunk: 2216 2220
instruction range for chunk: 2220 2228
instruction range for chunk: 2228 2264
instruction range for chunk: 2280 2296
instruction range for chunk: 2296 2328
instruction range for chunk: 2344 2360
instruction range for chunk: 2360 2372
instruction range for chunk: 2372 2388
instruction range for chunk: 2388 2400
instruction range for chunk: 2404 2412
instruction range for chunk: 2412 2436
instruction range for chunk: 2436 2444
instruction range for chunk: 2444 2488
instruction range for chunk: 2504 2524
instruction range for chunk: 2524 2568
instruction range for chunk: 2584 2612
instruction range for chunk: 2612 2632
instruction range for chunk: 2632 2652
instruction range for chunk: 2652 2660
instruction range for chunk: 2660 2712
instruction range for chunk: 2728 2760
instruction range for chunk: 2760 2808
instruction range for chunk: 2824 2856
instruction range for chunk: 2856 2864
instruction range for chunk: 2864 2912
instruction range for chunk: 2928 2956
instruction range for chunk: 2956 3000
instruction range for chunk: 3016 3048
instruction range for chunk: 3048 3068
instruction range for chunk: 3068 3076
instruction range for chunk: 3076 3120
instruction range for chunk: 3136 3160
instruction range for chunk: 3160 3200
instruction range for chunk: 3216 3240
instruction range for chunk: 3240 3248
instruction range for chunk: 3248 3288
instruction range for chunk: 3304 3324
instruction range for chunk: 3324 3360
instruction range for chunk: 3376 3396
instruction range for chunk: 3396 3404
instruction range for chunk: 3404 3448
instruction range for chunk: 3464 3484
instruction range for chunk: 3484 3536
instruction range for chunk: 3552 3584
instruction range for chunk: 3584 3588
instruction range for chunk: 3588 3608
instruction range for chunk: 3608 3616
instruction range for chunk: 3616 3656
instruction range for chunk: 3672 3692
instruction range for chunk: 3692 3728
instruction range for chunk: 3744 3764
instruction range for chunk: 3764 3780
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x2")
(comment . ";;8 b 3752")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;12: r15 <- 0x9")
(comment . ";;16: r13 <- 0xA")
(comment . ";; literal r9")
(comment . ";;32: r14 <- r9, 0x5\n")
(comment . ";;36: r14 <- 0x1E")
(comment . ";;40 b 3564")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;44: r9 <- 0xE")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 60
i: 48
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;48: r14 <- r9, r7")
(comment . ";;52: r14 <- 0x7")
(comment . ";;56 b 3528")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 80
i: 60
end-i: 80
i: 64
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;60: r12 <- r9, 0x1\n")
(comment . ";;64: r14 <- r12, r1")
(comment . ";;68: r14 <- r14, r8")
(comment . ";;72: r15 <- r14")
(comment . ";;76 b 3508")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;80: r14 <- r15, r12")
(comment . ";;84: r14 <- 0x7")
(comment . ";;88 b 3496")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;92: r14 <- r15, r9")
(comment . ";;96: r12 <- r9, r14")
(comment . ";;100: r4 <- 0x0")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 116
i: 104
end-i: 116
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r14 <- r4, r12")
(comment . ";;108: r14 <- 0x7")
(comment . ";;112 b 3280")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;116: r4 <- r12")
(comment . ";;120 b 800")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 132
i: 124
end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;124: r3 <- r3, 0x1\n")
(comment . ";;128 b 704")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 156
i: 132
end-i: 156
i: 132
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;144: r14 <- r9, 0x5\n")
(comment . ";;148: r14 <- 0x1E")
(comment . ";;152 b 592")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;156: r9 <- 0xE")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 172
i: 160
end-i: 172
i: 160
end-i: 172
i: 164
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";;160: r14 <- r9, r7")
(comment . ";;164: r14 <- 0x7")
(comment . ";;168 b 556")
chunklet-i: 172; chunklet-start-i: 172; chunklet-end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";;172: r11 <- r9, 0x1\n")
(comment . ";;176: r14 <- r11, r1")
(comment . ";;180: r14 <- r14, r8")
(comment . ";;184: r15 <- r14")
(comment . ";;188 b 536")
chunklet-i: 192; chunklet-start-i: 192; chunklet-end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";;192: r14 <- r15, r11")
(comment . ";;196: r14 <- 0x7")
(comment . ";;200 b 524")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 224
i: 204
end-i: 224
i: 208
end-i: 224
i: 212
end-i: 224
i: 216
end-i: 224
i: 220
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";;204: r14 <- r15, r9")
(comment . ";;208: r9 <- r9, r14")
(comment . ";;212: r14 <- r9, r7")
(comment . ";;216: r14 <- 0x7")
(comment . ";;220 b 484")
chunklet-i: 224; chunklet-start-i: 224; chunklet-end-i: 244
i: 224
end-i: 244
i: 228
end-i: 244
i: 232
end-i: 244
i: 236
end-i: 244
i: 240
end-i: 244
i: 244
end-i: 244
i:244 HIT CHUNK END
(comment . ";;224: r11 <- r9, 0x1\n")
(comment . ";;228: r14 <- r11, r1")
(comment . ";;232: r14 <- r14, r8")
(comment . ";;236: r4 <- r14")
(comment . ";;240 b 464")
chunklet-i: 244; chunklet-start-i: 244; chunklet-end-i: 256
i: 244
end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;244: r14 <- r4, r11")
(comment . ";;248: r14 <- 0x7")
(comment . ";;252 b 452")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 272
i: 256
end-i: 272
i: 260
end-i: 272
i: 264
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
i:272 HIT CHUNK END
(comment . ";;256: r14 <- r4, r9")
(comment . ";;260: r14 <- r9, r14")
(comment . ";;264: r14 <- 0x6")
(comment . ";;268 b 104")
chunklet-i: 272; chunklet-start-i: 272; chunklet-end-i: 296
i: 272
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;284: r14 <- r9, 0x5\n")
(comment . ";;288: r14 <- 0x1E")
(comment . ";;292 b 324")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 308
i: 296
end-i: 308
i: 296
end-i: 308
i: 300
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;296: r11 <- r13, r4")
(comment . ";;300: r11 <- 0x7")
(comment . ";;304 b 204")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 316
i: 308
end-i: 316
i: 312
end-i: 316
i: 316
end-i: 316
i:316 HIT CHUNK END
(comment . ";;308: r10 <- r13, r4")
(comment . ";;312 b 196")
chunklet-i: 316; chunklet-start-i: 316; chunklet-end-i: 328
i: 316
end-i: 328
i: 316
end-i: 328
i: 320
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
i:328 HIT CHUNK END
(comment . ";;316: r11 <- r14, r7")
(comment . ";;320: r11 <- 0x7")
(comment . ";;324 b 160")
chunklet-i: 328; chunklet-start-i: 328; chunklet-end-i: 340
i: 328
end-i: 340
i: 332
end-i: 340
i: 336
end-i: 340
i: 340
end-i: 340
i:340 HIT CHUNK END
(comment . ";;328: r11 <- r14, 0x1\n")
(comment . ";;332: r11 <- 0xF")
(comment . ";;336 b 148")
chunklet-i: 340; chunklet-start-i: 340; chunklet-end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";;340: r10 <- 0x7")
(comment . ";;344 b 140")
chunklet-i: 348; chunklet-start-i: 348; chunklet-end-i: 364
i: 348
end-i: 364
i: 352
end-i: 364
i: 356
end-i: 364
i: 360
end-i: 364
i: 364
end-i: 364
i:364 HIT CHUNK END
(comment . ";;348: r11 <- r11, r1")
(comment . ";;352: r11 <- r11, r8")
(comment . ";;356: r10 <- r11")
(comment . ";;360 b 124")
chunklet-i: 364; chunklet-start-i: 364; chunklet-end-i: 376
i: 364
end-i: 376
i: 368
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
i:376 HIT CHUNK END
(comment . ";;364: r9 <- 0xE")
(comment . ";;368: r11 <- r10, r9")
(comment . ";;372: r9 <- r14, r11")
chunklet-i: 376; chunklet-start-i: 376; chunklet-end-i: 384
i: 376
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
i:384 HIT CHUNK END
(comment . ";;376: r4 <- 0x7")
(comment . ";;380 b 16")
chunklet-i: 384; chunklet-start-i: 384; chunklet-end-i: 392
i: 384
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
i:392 HIT CHUNK END
(comment . ";;384: r14 <- r4, 0x8\n")
(comment . ";;388 b 8")
chunklet-i: 392; chunklet-start-i: 392; chunklet-end-i: 400
i: 392
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
i:400 HIT CHUNK END
(comment . ";;392: r4 <- 0xE")
(comment . ";;396 b -296")
chunklet-i: 400; chunklet-start-i: 400; chunklet-end-i: 448
i: 400
end-i: 448
i: 400
end-i: 448
i: 404
end-i: 448
i: 408
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 420
end-i: 448
i: 424
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;400: r9 <- 0x8")
(comment . ";;404: r10 <- 0x4")
(comment . ";;408: r15 <- r1, 0x8\n")
(comment . ";;412: r13 <- r1, 0x10\n")
(comment . ";;416: r12 <- r1, 0x18\n")
(comment . ";;420: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;444: b r6")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 488
i: 448
end-i: 488
at header: 448
i: 464
end-i: 488
i: 468
end-i: 488
i: 472
end-i: 488
i: 476
end-i: 488
i: 480
end-i: 488
i: 484
end-i: 488
i: 488
end-i: 488
i:488 HIT CHUNK END
(comment . ";;464: r1 <- r1, r0")
(comment . ";;468: r15 <- r1, 0x8\n")
(comment . ";;472: r13 <- r1, 0x10\n")
(comment . ";;476: r12 <- r1, 0x18\n")
(comment . ";;484 b -384")
chunklet-i: 488; chunklet-start-i: 488; chunklet-end-i: 512
i: 488
end-i: 512
i: 488
end-i: 512
i: 492
end-i: 512
i: 496
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;488: r9 <- 0xE")
(comment . ";;492: r11 <- 0xE")
(comment . ";; literal r6")
(comment . ";;508: b r6")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 568
i: 512
end-i: 568
i: 512
end-i: 568
i: 516
end-i: 568
i: 520
end-i: 568
i: 524
end-i: 568
i: 528
end-i: 568
i: 532
end-i: 568
i: 536
end-i: 568
i: 540
end-i: 568
i: 544
end-i: 568
i: 548
end-i: 568
i: 552
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
at header: 568
(comment . ";;512: r9 <- 0xD")
(comment . ";;516: r10 <- 0x4")
(comment . ";;520: r15 <- r1, 0x8\n")
(comment . ";;524: r13 <- r1, 0x10\n")
(comment . ";;528: r12 <- r1, 0x18\n")
(comment . ";;532: r4 <- r1, 0x20\n")
(comment . ";;536: r14 <- r1, 0x28\n")
(comment . ";;540: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;548: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;564: b r6")
chunklet-i: 568; chunklet-start-i: 584; chunklet-end-i: 620
i: 568
end-i: 620
at header: 568
i: 584
end-i: 620
i: 588
end-i: 620
i: 592
end-i: 620
i: 596
end-i: 620
i: 600
end-i: 620
i: 604
end-i: 620
i: 608
end-i: 620
i: 612
end-i: 620
i: 616
end-i: 620
i: 620
end-i: 620
i:620 HIT CHUNK END
(comment . ";;584: r1 <- r1, r0")
(comment . ";;588: r10 <- 0x4")
(comment . ";;592: r15 <- r1, 0x8\n")
(comment . ";;596: r13 <- r1, 0x10\n")
(comment . ";;600: r12 <- r1, 0x18\n")
(comment . ";;604: r4 <- r1, 0x20\n")
(comment . ";;608: r14 <- r1, 0x28\n")
(comment . ";;616 b -304")
chunklet-i: 620; chunklet-start-i: 620; chunklet-end-i: 664
i: 620
end-i: 664
i: 620
end-i: 664
i: 624
end-i: 664
i: 628
end-i: 664
i: 632
end-i: 664
i: 636
end-i: 664
i: 640
end-i: 664
i: 644
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
at header: 664
(comment . ";;620: r15 <- r1, 0x8\n")
(comment . ";;624: r13 <- r1, 0x10\n")
(comment . ";;628: r12 <- r1, 0x18\n")
(comment . ";;632: r4 <- r1, 0x20\n")
(comment . ";;636: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;644: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;660: b r6")
chunklet-i: 664; chunklet-start-i: 680; chunklet-end-i: 708
i: 664
end-i: 708
at header: 664
i: 680
end-i: 708
i: 684
end-i: 708
i: 688
end-i: 708
i: 692
end-i: 708
i: 696
end-i: 708
i: 700
end-i: 708
i: 704
end-i: 708
i: 708
end-i: 708
i:708 HIT CHUNK END
(comment . ";;680: r1 <- r1, r8")
(comment . ";;684: r14 <- 0x4")
(comment . ";;688: r15 <- r1, 0x8\n")
(comment . ";;692: r13 <- r1, 0x10\n")
(comment . ";;696: r12 <- r1, 0x18\n")
(comment . ";;700: r4 <- r1, 0x20\n")
(comment . ";;704 b -412")
chunklet-i: 708; chunklet-start-i: 708; chunklet-end-i: 728
i: 708
end-i: 728
i: 708
end-i: 728
i: 712
end-i: 728
i: 724
end-i: 728
i: 728
end-i: 728
i:728 HIT CHUNK END
(comment . ";;708: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;724: b r6")
chunklet-i: 728; chunklet-start-i: 728; chunklet-end-i: 748
i: 728
end-i: 748
i: 728
end-i: 748
i: 732
end-i: 748
i: 744
end-i: 748
i: 748
end-i: 748
i:748 HIT CHUNK END
(comment . ";;728: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;744: b r6")
chunklet-i: 748; chunklet-start-i: 748; chunklet-end-i: 792
i: 748
end-i: 792
i: 748
end-i: 792
i: 752
end-i: 792
i: 756
end-i: 792
i: 760
end-i: 792
i: 764
end-i: 792
i: 768
end-i: 792
i: 772
end-i: 792
i: 776
end-i: 792
i: 788
end-i: 792
i: 792
end-i: 792
at header: 792
(comment . ";;748: r15 <- r1, 0x8\n")
(comment . ";;752: r13 <- r1, 0x10\n")
(comment . ";;756: r12 <- r1, 0x18\n")
(comment . ";;760: r4 <- r1, 0x20\n")
(comment . ";;764: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;772: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;788: b r6")
chunklet-i: 792; chunklet-start-i: 808; chunklet-end-i: 836
i: 792
end-i: 836
at header: 792
i: 808
end-i: 836
i: 812
end-i: 836
i: 816
end-i: 836
i: 820
end-i: 836
i: 824
end-i: 836
i: 828
end-i: 836
i: 832
end-i: 836
i: 836
end-i: 836
i:836 HIT CHUNK END
(comment . ";;808: r1 <- r1, r8")
(comment . ";;812: r9 <- 0x4")
(comment . ";;816: r15 <- r1, 0x8\n")
(comment . ";;820: r13 <- r1, 0x10\n")
(comment . ";;824: r12 <- r1, 0x18\n")
(comment . ";;828: r4 <- r1, 0x20\n")
(comment . ";;832 b -676")
chunklet-i: 836; chunklet-start-i: 836; chunklet-end-i: 880
i: 836
end-i: 880
i: 836
end-i: 880
i: 840
end-i: 880
i: 844
end-i: 880
i: 848
end-i: 880
i: 852
end-i: 880
i: 856
end-i: 880
i: 860
end-i: 880
i: 864
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
at header: 880
(comment . ";;836: r15 <- r1, 0x8\n")
(comment . ";;840: r13 <- r1, 0x10\n")
(comment . ";;844: r12 <- r1, 0x18\n")
(comment . ";;848: r4 <- r1, 0x20\n")
(comment . ";;852: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;860: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;876: b r6")
chunklet-i: 880; chunklet-start-i: 896; chunklet-end-i: 924
i: 880
end-i: 924
at header: 880
i: 896
end-i: 924
i: 900
end-i: 924
i: 904
end-i: 924
i: 908
end-i: 924
i: 912
end-i: 924
i: 916
end-i: 924
i: 920
end-i: 924
i: 924
end-i: 924
i:924 HIT CHUNK END
(comment . ";;900: r1 <- r1, r8")
(comment . ";;904: r15 <- r1, 0x8\n")
(comment . ";;908: r13 <- r1, 0x10\n")
(comment . ";;912: r12 <- r1, 0x18\n")
(comment . ";;916: r4 <- r1, 0x20\n")
(comment . ";;920 b -792")
chunklet-i: 924; chunklet-start-i: 924; chunklet-end-i: 948
i: 924
end-i: 948
i: 924
end-i: 948
i: 936
end-i: 948
i: 940
end-i: 948
i: 944
end-i: 948
i: 948
end-i: 948
i:948 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;936: r4 <- r9, 0x5\n")
(comment . ";;940: r4 <- 0x1E")
(comment . ";;944 b 2292")
chunklet-i: 948; chunklet-start-i: 948; chunklet-end-i: 972
i: 948
end-i: 972
i: 948
end-i: 972
i: 960
end-i: 972
i: 964
end-i: 972
i: 968
end-i: 972
i: 972
end-i: 972
i:972 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;960: r14 <- r9, 0x5\n")
(comment . ";;964: r14 <- 0x1E")
(comment . ";;968 b 2096")
chunklet-i: 972; chunklet-start-i: 972; chunklet-end-i: 976
i: 972
end-i: 976
i: 976
end-i: 976
i:976 HIT CHUNK END
(comment . ";;972: r9 <- 0xE")
chunklet-i: 976; chunklet-start-i: 976; chunklet-end-i: 988
i: 976
end-i: 988
i: 976
end-i: 988
i: 980
end-i: 988
i: 984
end-i: 988
i: 988
end-i: 988
i:988 HIT CHUNK END
(comment . ";;976: r14 <- r9, r7")
(comment . ";;980: r14 <- 0x7")
(comment . ";;984 b 2060")
chunklet-i: 988; chunklet-start-i: 988; chunklet-end-i: 1008
i: 988
end-i: 1008
i: 992
end-i: 1008
i: 996
end-i: 1008
i: 1000
end-i: 1008
i: 1004
end-i: 1008
i: 1008
end-i: 1008
i:1008 HIT CHUNK END
(comment . ";;988: r12 <- r9, 0x1\n")
(comment . ";;992: r14 <- r12, r1")
(comment . ";;996: r14 <- r14, r8")
(comment . ";;1000: r15 <- r14")
(comment . ";;1004 b 2040")
chunklet-i: 1008; chunklet-start-i: 1008; chunklet-end-i: 1020
i: 1008
end-i: 1020
i: 1012
end-i: 1020
i: 1016
end-i: 1020
i: 1020
end-i: 1020
i:1020 HIT CHUNK END
(comment . ";;1008: r14 <- r15, r12")
(comment . ";;1012: r14 <- 0x7")
(comment . ";;1016 b 2028")
chunklet-i: 1020; chunklet-start-i: 1020; chunklet-end-i: 1052
i: 1020
end-i: 1052
i: 1024
end-i: 1052
i: 1028
end-i: 1052
i: 1040
end-i: 1052
i: 1044
end-i: 1052
i: 1048
end-i: 1052
i: 1052
end-i: 1052
i:1052 HIT CHUNK END
(comment . ";;1020: r14 <- r15, r9")
(comment . ";;1024: r12 <- r9, r14")
(comment . ";; literal r9")
(comment . ";;1040: r14 <- r9, 0x5\n")
(comment . ";;1044: r14 <- 0x1E")
(comment . ";;1048 b 1804")
chunklet-i: 1052; chunklet-start-i: 1052; chunklet-end-i: 1076
i: 1052
end-i: 1076
i: 1052
end-i: 1076
i: 1064
end-i: 1076
i: 1068
end-i: 1076
i: 1072
end-i: 1076
i: 1076
end-i: 1076
i:1076 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1064: r11 <- r9, 0x5\n")
(comment . ";;1068: r11 <- 0x1E")
(comment . ";;1072 b 1576")
chunklet-i: 1076; chunklet-start-i: 1076; chunklet-end-i: 1080
i: 1076
end-i: 1080
i: 1080
end-i: 1080
i:1080 HIT CHUNK END
(comment . ";;1076: r9 <- 0xB")
chunklet-i: 1080; chunklet-start-i: 1080; chunklet-end-i: 1092
i: 1080
end-i: 1092
i: 1080
end-i: 1092
i: 1084
end-i: 1092
i: 1088
end-i: 1092
i: 1092
end-i: 1092
i:1092 HIT CHUNK END
(comment . ";;1080: r11 <- r9, r7")
(comment . ";;1084: r11 <- 0x7")
(comment . ";;1088 b 1540")
chunklet-i: 1092; chunklet-start-i: 1092; chunklet-end-i: 1112
i: 1092
end-i: 1112
i: 1096
end-i: 1112
i: 1100
end-i: 1112
i: 1104
end-i: 1112
i: 1108
end-i: 1112
i: 1112
end-i: 1112
i:1112 HIT CHUNK END
(comment . ";;1092: r10 <- r9, 0x1\n")
(comment . ";;1096: r11 <- r10, r1")
(comment . ";;1100: r11 <- r11, r8")
(comment . ";;1104: r15 <- r11")
(comment . ";;1108 b 1520")
chunklet-i: 1112; chunklet-start-i: 1112; chunklet-end-i: 1124
i: 1112
end-i: 1124
i: 1116
end-i: 1124
i: 1120
end-i: 1124
i: 1124
end-i: 1124
i:1124 HIT CHUNK END
(comment . ";;1112: r11 <- r15, r10")
(comment . ";;1116: r11 <- 0x7")
(comment . ";;1120 b 1508")
chunklet-i: 1124; chunklet-start-i: 1124; chunklet-end-i: 1144
i: 1124
end-i: 1144
i: 1128
end-i: 1144
i: 1132
end-i: 1144
i: 1136
end-i: 1144
i: 1140
end-i: 1144
i: 1144
end-i: 1144
i:1144 HIT CHUNK END
(comment . ";;1124: r15 <- r15, r9")
(comment . ";;1128: r10 <- r9, r15")
(comment . ";;1132: r15 <- r14, r7")
(comment . ";;1136: r15 <- 0x7")
(comment . ";;1140 b 1468")
chunklet-i: 1144; chunklet-start-i: 1144; chunklet-end-i: 1164
i: 1144
end-i: 1164
i: 1148
end-i: 1164
i: 1152
end-i: 1164
i: 1156
end-i: 1164
i: 1160
end-i: 1164
i: 1164
end-i: 1164
i:1164 HIT CHUNK END
(comment . ";;1144: r11 <- r14, 0x1\n")
(comment . ";;1148: r15 <- r11, r1")
(comment . ";;1152: r15 <- r15, r8")
(comment . ";;1156: r10 <- r15")
(comment . ";;1160 b 1448")
chunklet-i: 1164; chunklet-start-i: 1164; chunklet-end-i: 1176
i: 1164
end-i: 1176
i: 1168
end-i: 1176
i: 1172
end-i: 1176
i: 1176
end-i: 1176
i:1176 HIT CHUNK END
(comment . ";;1164: r15 <- r10, r11")
(comment . ";;1168: r15 <- 0x7")
(comment . ";;1172 b 1436")
chunklet-i: 1176; chunklet-start-i: 1176; chunklet-end-i: 1192
i: 1176
end-i: 1192
i: 1180
end-i: 1192
i: 1184
end-i: 1192
i: 1188
end-i: 1192
i: 1192
end-i: 1192
i:1192 HIT CHUNK END
(comment . ";;1176: r15 <- r10, r9")
(comment . ";;1180: r9 <- r14, r15")
(comment . ";;1184: r9 <- 0x7")
(comment . ";;1188 b 1244")
chunklet-i: 1192; chunklet-start-i: 1192; chunklet-end-i: 1200
i: 1192
end-i: 1200
i: 1196
end-i: 1200
i: 1200
end-i: 1200
i:1200 HIT CHUNK END
(comment . ";;1192: r11 <- r9, 0x8\n")
(comment . ";;1196 b 1236")
chunklet-i: 1200; chunklet-start-i: 1200; chunklet-end-i: 1212
i: 1200
end-i: 1212
i: 1200
end-i: 1212
i: 1204
end-i: 1212
i: 1208
end-i: 1212
i: 1212
end-i: 1212
i:1212 HIT CHUNK END
(comment . ";;1200: r15 <- r4, r7")
(comment . ";;1204: r15 <- 0x7")
(comment . ";;1208 b 1200")
chunklet-i: 1212; chunklet-start-i: 1212; chunklet-end-i: 1224
i: 1212
end-i: 1224
i: 1216
end-i: 1224
i: 1220
end-i: 1224
i: 1224
end-i: 1224
i:1224 HIT CHUNK END
(comment . ";;1212: r15 <- r4, 0x1\n")
(comment . ";;1216: r15 <- 0xF")
(comment . ";;1220 b 1188")
chunklet-i: 1224; chunklet-start-i: 1224; chunklet-end-i: 1232
i: 1224
end-i: 1232
i: 1228
end-i: 1232
i: 1232
end-i: 1232
i:1232 HIT CHUNK END
(comment . ";;1224: r12 <- 0x7")
(comment . ";;1228 b 1180")
chunklet-i: 1232; chunklet-start-i: 1232; chunklet-end-i: 1248
i: 1232
end-i: 1248
i: 1236
end-i: 1248
i: 1240
end-i: 1248
i: 1244
end-i: 1248
i: 1248
end-i: 1248
i:1248 HIT CHUNK END
(comment . ";;1232: r15 <- r15, r1")
(comment . ";;1236: r15 <- r15, r8")
(comment . ";;1240: r12 <- r15")
(comment . ";;1244 b 1164")
chunklet-i: 1248; chunklet-start-i: 1248; chunklet-end-i: 1268
i: 1248
end-i: 1268
i: 1252
end-i: 1268
i: 1256
end-i: 1268
i: 1260
end-i: 1268
i: 1264
end-i: 1268
i: 1268
end-i: 1268
i:1268 HIT CHUNK END
(comment . ";;1248: r15 <- r4, r9")
(comment . ";;1252: r15 <- r12, r15")
(comment . ";;1256: r11 <- r15, 0x0\n")
(comment . ";;1260: r11 <- 0x7")
(comment . ";;1264 b 1092")
chunklet-i: 1268; chunklet-start-i: 1268; chunklet-end-i: 1296
i: 1268
end-i: 1296
i: 1268
end-i: 1296
i: 1272
end-i: 1296
i: 1284
end-i: 1296
i: 1288
end-i: 1296
i: 1292
end-i: 1296
i: 1296
end-i: 1296
i:1296 HIT CHUNK END
(comment . ";;1268: r4 <- 0xD")
(comment . ";; literal r9")
(comment . ";;1284: r10 <- r9, 0x5\n")
(comment . ";;1288: r10 <- 0x1E")
(comment . ";;1292 b 924")
chunklet-i: 1296; chunklet-start-i: 1296; chunklet-end-i: 1308
i: 1296
end-i: 1308
i: 1296
end-i: 1308
i: 1300
end-i: 1308
i: 1304
end-i: 1308
i: 1308
end-i: 1308
i:1308 HIT CHUNK END
(comment . ";;1296: r15 <- r4, r10")
(comment . ";;1300: r15 <- 0x7")
(comment . ";;1304 b 760")
chunklet-i: 1308; chunklet-start-i: 1308; chunklet-end-i: 1316
i: 1308
end-i: 1316
i: 1312
end-i: 1316
i: 1316
end-i: 1316
i:1316 HIT CHUNK END
(comment . ";;1308: r4 <- r10")
(comment . ";;1312 b 240")
chunklet-i: 1316; chunklet-start-i: 1316; chunklet-end-i: 1340
i: 1316
end-i: 1340
i: 1316
end-i: 1340
i: 1328
end-i: 1340
i: 1332
end-i: 1340
i: 1336
end-i: 1340
i: 1340
end-i: 1340
i:1340 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1328: r15 <- r9, 0x5\n")
(comment . ";;1332: r15 <- 0x1E")
(comment . ";;1336 b 584")
chunklet-i: 1340; chunklet-start-i: 1340; chunklet-end-i: 1344
i: 1340
end-i: 1344
i: 1344
end-i: 1344
i:1344 HIT CHUNK END
(comment . ";;1340: r9 <- 0xF")
chunklet-i: 1344; chunklet-start-i: 1344; chunklet-end-i: 1356
i: 1344
end-i: 1356
i: 1344
end-i: 1356
i: 1348
end-i: 1356
i: 1352
end-i: 1356
i: 1356
end-i: 1356
i:1356 HIT CHUNK END
(comment . ";;1344: r15 <- r9, r7")
(comment . ";;1348: r15 <- 0x7")
(comment . ";;1352 b 548")
chunklet-i: 1356; chunklet-start-i: 1356; chunklet-end-i: 1376
i: 1356
end-i: 1376
i: 1360
end-i: 1376
i: 1364
end-i: 1376
i: 1368
end-i: 1376
i: 1372
end-i: 1376
i: 1376
end-i: 1376
i:1376 HIT CHUNK END
(comment . ";;1356: r14 <- r9, 0x1\n")
(comment . ";;1360: r15 <- r14, r1")
(comment . ";;1364: r15 <- r15, r8")
(comment . ";;1368: r4 <- r15")
(comment . ";;1372 b 528")
chunklet-i: 1376; chunklet-start-i: 1376; chunklet-end-i: 1388
i: 1376
end-i: 1388
i: 1380
end-i: 1388
i: 1384
end-i: 1388
i: 1388
end-i: 1388
i:1388 HIT CHUNK END
(comment . ";;1376: r15 <- r4, r14")
(comment . ";;1380: r15 <- 0x7")
(comment . ";;1384 b 516")
chunklet-i: 1388; chunklet-start-i: 1388; chunklet-end-i: 1404
i: 1388
end-i: 1404
i: 1392
end-i: 1404
i: 1396
end-i: 1404
i: 1400
end-i: 1404
i: 1404
end-i: 1404
i:1404 HIT CHUNK END
(comment . ";;1388: r15 <- r4, r9")
(comment . ";;1392: r15 <- r9, r15")
(comment . ";;1396: r15 <- 0x6")
(comment . ";;1400 b 152")
chunklet-i: 1404; chunklet-start-i: 1404; chunklet-end-i: 1412
i: 1404
end-i: 1412
i: 1408
end-i: 1412
i: 1412
end-i: 1412
i:1412 HIT CHUNK END
(comment . ";;1404: r3 <- r3, 0x1\n")
(comment . ";;1408 b 84")
chunklet-i: 1412; chunklet-start-i: 1412; chunklet-end-i: 1420
i: 1412
end-i: 1420
i: 1412
end-i: 1420
i: 1416
end-i: 1420
i: 1420
end-i: 1420
i:1420 HIT CHUNK END
(comment . ";;1412: r4 <- 0x7")
(comment . ";;1416 b 8")
chunklet-i: 1420; chunklet-start-i: 1420; chunklet-end-i: 1428
i: 1420
end-i: 1428
i: 1424
end-i: 1428
i: 1428
end-i: 1428
i:1428 HIT CHUNK END
(comment . ";;1420: r13 <- r4, 0x8\n")
(comment . ";;1424 b -160")
chunklet-i: 1428; chunklet-start-i: 1428; chunklet-end-i: 1464
i: 1428
end-i: 1464
i: 1428
end-i: 1464
i: 1432
end-i: 1464
i: 1436
end-i: 1464
i: 1440
end-i: 1464
i: 1444
end-i: 1464
i: 1448
end-i: 1464
i: 1460
end-i: 1464
i: 1464
end-i: 1464
at header: 1464
(comment . ";;1428: r9 <- 0x8")
(comment . ";;1432: r10 <- 0x4")
(comment . ";;1436: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1444: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1460: b r6")
chunklet-i: 1464; chunklet-start-i: 1480; chunklet-end-i: 1496
i: 1464
end-i: 1496
at header: 1464
i: 1480
end-i: 1496
i: 1484
end-i: 1496
i: 1488
end-i: 1496
i: 1492
end-i: 1496
i: 1496
end-i: 1496
i:1496 HIT CHUNK END
(comment . ";;1480: r1 <- r1, r8")
(comment . ";;1484: r13 <- 0x4")
(comment . ";;1492 b -228")
chunklet-i: 1496; chunklet-start-i: 1496; chunklet-end-i: 1528
i: 1496
end-i: 1528
i: 1496
end-i: 1528
i: 1500
end-i: 1528
i: 1504
end-i: 1528
i: 1508
end-i: 1528
i: 1512
end-i: 1528
i: 1524
end-i: 1528
i: 1528
end-i: 1528
at header: 1528
(comment . ";;1496: r4 <- r1, 0x10\n")
(comment . ";;1500: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1508: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1524: b r6")
chunklet-i: 1528; chunklet-start-i: 1544; chunklet-end-i: 1556
i: 1528
end-i: 1556
at header: 1528
i: 1544
end-i: 1556
i: 1548
end-i: 1556
i: 1552
end-i: 1556
i: 1556
end-i: 1556
i:1556 HIT CHUNK END
(comment . ";;1544: r1 <- r1, r8")
(comment . ";;1548: r4 <- r1, 0x10\n")
(comment . ";;1552 b -144")
chunklet-i: 1556; chunklet-start-i: 1556; chunklet-end-i: 1580
i: 1556
end-i: 1580
i: 1556
end-i: 1580
i: 1568
end-i: 1580
i: 1572
end-i: 1580
i: 1576
end-i: 1580
i: 1580
end-i: 1580
i:1580 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1568: r10 <- r9, 0x5\n")
(comment . ";;1572: r10 <- 0x1E")
(comment . ";;1576 b 184")
chunklet-i: 1580; chunklet-start-i: 1580; chunklet-end-i: 1592
i: 1580
end-i: 1592
i: 1580
end-i: 1592
i: 1584
end-i: 1592
i: 1588
end-i: 1592
i: 1592
end-i: 1592
i:1592 HIT CHUNK END
(comment . ";;1580: r15 <- r4, r10")
(comment . ";;1584: r15 <- 0x7")
(comment . ";;1588 b 20")
chunklet-i: 1592; chunklet-start-i: 1592; chunklet-end-i: 1600
i: 1592
end-i: 1600
i: 1596
end-i: 1600
i: 1600
end-i: 1600
i:1600 HIT CHUNK END
(comment . ";;1592: r4 <- r10")
(comment . ";;1596 b 8")
chunklet-i: 1600; chunklet-start-i: 1600; chunklet-end-i: 1608
i: 1600
end-i: 1608
i: 1600
end-i: 1608
i: 1604
end-i: 1608
i: 1608
end-i: 1608
i:1608 HIT CHUNK END
(comment . ";;1600: r4 <- 0x0")
(comment . ";;1604: b r1, 0")
chunklet-i: 1608; chunklet-start-i: 1608; chunklet-end-i: 1612
i: 1608
end-i: 1612
i: 1608
end-i: 1612
i: 1612
end-i: 1612
i:1612 HIT CHUNK END
(comment . ";;1608: b r1, 0")
chunklet-i: 1612; chunklet-start-i: 1612; chunklet-end-i: 1620
i: 1612
end-i: 1620
i: 1612
end-i: 1620
i: 1616
end-i: 1620
i: 1620
end-i: 1620
i:1620 HIT CHUNK END
(comment . ";;1612: r3 <- r3, 0x1\n")
(comment . ";;1616 b 64")
chunklet-i: 1620; chunklet-start-i: 1620; chunklet-end-i: 1656
i: 1620
end-i: 1656
i: 1624
end-i: 1656
i: 1628
end-i: 1656
i: 1632
end-i: 1656
i: 1636
end-i: 1656
i: 1640
end-i: 1656
i: 1652
end-i: 1656
i: 1656
end-i: 1656
at header: 1656
(comment . ";;1620: r4 <- r1, 0x10\n")
(comment . ";;1624: r10 <- r1, 0x8\n")
(comment . ";;1628: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1636: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1652: b r6")
chunklet-i: 1656; chunklet-start-i: 1672; chunklet-end-i: 1684
i: 1656
end-i: 1684
at header: 1656
i: 1672
end-i: 1684
i: 1676
end-i: 1684
i: 1680
end-i: 1684
i: 1684
end-i: 1684
i:1684 HIT CHUNK END
(comment . ";;1672: r1 <- r1, r8")
(comment . ";;1676: r4 <- r1, 0x10\n")
(comment . ";;1680: r10 <- r1, 0x8\n")
chunklet-i: 1684; chunklet-start-i: 1684; chunklet-end-i: 1720
i: 1684
end-i: 1720
i: 1684
end-i: 1720
i: 1688
end-i: 1720
i: 1692
end-i: 1720
i: 1696
end-i: 1720
i: 1700
end-i: 1720
i: 1704
end-i: 1720
i: 1716
end-i: 1720
i: 1720
end-i: 1720
at header: 1720
(comment . ";;1684: r9 <- 0x4")
(comment . ";;1688: r4 <- r1, 0x10\n")
(comment . ";;1692: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1700: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1716: b r6")
chunklet-i: 1720; chunklet-start-i: 1736; chunklet-end-i: 1760
i: 1720
end-i: 1760
at header: 1720
i: 1736
end-i: 1760
i: 1740
end-i: 1760
i: 1744
end-i: 1760
i: 1748
end-i: 1760
i: 1752
end-i: 1760
i: 1756
end-i: 1760
i: 1760
end-i: 1760
i:1760 HIT CHUNK END
(comment . ";;1736: r1 <- r1, r8")
(comment . ";;1740: r15 <- 0x4")
(comment . ";;1744: r4 <- r1, 0x10\n")
(comment . ";;1748: r15 <- 0x6")
(comment . ";;1756 b -152")
chunklet-i: 1760; chunklet-start-i: 1760; chunklet-end-i: 1764
i: 1760
end-i: 1764
i: 1764
end-i: 1764
i:1764 HIT CHUNK END
(comment . ";;1760 b -164")
chunklet-i: 1764; chunklet-start-i: 1764; chunklet-end-i: 1772
i: 1764
end-i: 1772
i: 1764
end-i: 1772
i: 1768
end-i: 1772
i: 1772
end-i: 1772
i:1772 HIT CHUNK END
(comment . ";;1764: r3 <- r3, 0x1\n")
(comment . ";;1768 b 68")
chunklet-i: 1772; chunklet-start-i: 1772; chunklet-end-i: 1808
i: 1772
end-i: 1808
i: 1776
end-i: 1808
i: 1780
end-i: 1808
i: 1784
end-i: 1808
i: 1788
end-i: 1808
i: 1792
end-i: 1808
i: 1804
end-i: 1808
i: 1808
end-i: 1808
at header: 1808
(comment . ";;1772: r4 <- r1, 0x10\n")
(comment . ";;1776: r9 <- r1, 0x8\n")
(comment . ";;1780: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1788: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1804: b r6")
chunklet-i: 1808; chunklet-start-i: 1824; chunklet-end-i: 1840
i: 1808
end-i: 1840
at header: 1808
i: 1824
end-i: 1840
i: 1828
end-i: 1840
i: 1832
end-i: 1840
i: 1836
end-i: 1840
i: 1840
end-i: 1840
i:1840 HIT CHUNK END
(comment . ";;1828: r1 <- r1, r8")
(comment . ";;1832: r4 <- r1, 0x10\n")
(comment . ";;1836: r9 <- r1, 0x8\n")
chunklet-i: 1840; chunklet-start-i: 1840; chunklet-end-i: 1872
i: 1840
end-i: 1872
i: 1840
end-i: 1872
i: 1844
end-i: 1872
i: 1848
end-i: 1872
i: 1852
end-i: 1872
i: 1856
end-i: 1872
i: 1868
end-i: 1872
i: 1872
end-i: 1872
at header: 1872
(comment . ";;1840: r4 <- r1, 0x10\n")
(comment . ";;1844: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1852: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1868: b r6")
chunklet-i: 1872; chunklet-start-i: 1888; chunklet-end-i: 1904
i: 1872
end-i: 1904
at header: 1872
i: 1888
end-i: 1904
i: 1892
end-i: 1904
i: 1896
end-i: 1904
i: 1900
end-i: 1904
i: 1904
end-i: 1904
i:1904 HIT CHUNK END
(comment . ";;1888: r1 <- r1, r8")
(comment . ";;1892: r10 <- 0x4")
(comment . ";;1896: r4 <- r1, 0x10\n")
(comment . ";;1900 b -324")
chunklet-i: 1904; chunklet-start-i: 1904; chunklet-end-i: 1924
i: 1904
end-i: 1924
i: 1904
end-i: 1924
i: 1908
end-i: 1924
i: 1920
end-i: 1924
i: 1924
end-i: 1924
i:1924 HIT CHUNK END
(comment . ";;1904: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1920: b r6")
chunklet-i: 1924; chunklet-start-i: 1924; chunklet-end-i: 1932
i: 1924
end-i: 1932
i: 1924
end-i: 1932
i: 1928
end-i: 1932
i: 1932
end-i: 1932
i:1932 HIT CHUNK END
(comment . ";;1924: r3 <- r3, 0x1\n")
(comment . ";;1928 b 68")
chunklet-i: 1932; chunklet-start-i: 1932; chunklet-end-i: 1968
i: 1932
end-i: 1968
i: 1936
end-i: 1968
i: 1940
end-i: 1968
i: 1944
end-i: 1968
i: 1948
end-i: 1968
i: 1952
end-i: 1968
i: 1964
end-i: 1968
i: 1968
end-i: 1968
at header: 1968
(comment . ";;1932: r4 <- r1, 0x10\n")
(comment . ";;1936: r9 <- r1, 0x8\n")
(comment . ";;1940: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1948: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1964: b r6")
chunklet-i: 1968; chunklet-start-i: 1984; chunklet-end-i: 2000
i: 1968
end-i: 2000
at header: 1968
i: 1984
end-i: 2000
i: 1988
end-i: 2000
i: 1992
end-i: 2000
i: 1996
end-i: 2000
i: 2000
end-i: 2000
i:2000 HIT CHUNK END
(comment . ";;1988: r1 <- r1, r8")
(comment . ";;1992: r4 <- r1, 0x10\n")
(comment . ";;1996: r9 <- r1, 0x8\n")
chunklet-i: 2000; chunklet-start-i: 2000; chunklet-end-i: 2032
i: 2000
end-i: 2032
i: 2000
end-i: 2032
i: 2004
end-i: 2032
i: 2008
end-i: 2032
i: 2012
end-i: 2032
i: 2016
end-i: 2032
i: 2028
end-i: 2032
i: 2032
end-i: 2032
at header: 2032
(comment . ";;2000: r4 <- r1, 0x10\n")
(comment . ";;2004: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2012: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2028: b r6")
chunklet-i: 2032; chunklet-start-i: 2048; chunklet-end-i: 2068
i: 2032
end-i: 2068
at header: 2032
i: 2048
end-i: 2068
i: 2052
end-i: 2068
i: 2056
end-i: 2068
i: 2060
end-i: 2068
i: 2064
end-i: 2068
i: 2068
end-i: 2068
i:2068 HIT CHUNK END
(comment . ";;2048: r1 <- r1, r8")
(comment . ";;2052: r9 <- 0x4")
(comment . ";;2056: r4 <- r1, 0x10\n")
(comment . ";;2064 b -724")
chunklet-i: 2068; chunklet-start-i: 2068; chunklet-end-i: 2076
i: 2068
end-i: 2076
i: 2068
end-i: 2076
i: 2072
end-i: 2076
i: 2076
end-i: 2076
i:2076 HIT CHUNK END
(comment . ";;2068: r3 <- r3, 0x1\n")
(comment . ";;2072 b 64")
chunklet-i: 2076; chunklet-start-i: 2076; chunklet-end-i: 2112
i: 2076
end-i: 2112
i: 2080
end-i: 2112
i: 2084
end-i: 2112
i: 2088
end-i: 2112
i: 2092
end-i: 2112
i: 2096
end-i: 2112
i: 2108
end-i: 2112
i: 2112
end-i: 2112
at header: 2112
(comment . ";;2076: r4 <- r1, 0x10\n")
(comment . ";;2080: r10 <- r1, 0x8\n")
(comment . ";;2084: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2092: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2108: b r6")
chunklet-i: 2112; chunklet-start-i: 2128; chunklet-end-i: 2140
i: 2112
end-i: 2140
at header: 2112
i: 2128
end-i: 2140
i: 2132
end-i: 2140
i: 2136
end-i: 2140
i: 2140
end-i: 2140
i:2140 HIT CHUNK END
(comment . ";;2128: r1 <- r1, r8")
(comment . ";;2132: r4 <- r1, 0x10\n")
(comment . ";;2136: r10 <- r1, 0x8\n")
chunklet-i: 2140; chunklet-start-i: 2140; chunklet-end-i: 2176
i: 2140
end-i: 2176
i: 2140
end-i: 2176
i: 2144
end-i: 2176
i: 2148
end-i: 2176
i: 2152
end-i: 2176
i: 2156
end-i: 2176
i: 2160
end-i: 2176
i: 2172
end-i: 2176
i: 2176
end-i: 2176
at header: 2176
(comment . ";;2140: r9 <- 0x4")
(comment . ";;2144: r4 <- r1, 0x10\n")
(comment . ";;2148: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2156: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2172: b r6")
chunklet-i: 2176; chunklet-start-i: 2192; chunklet-end-i: 2216
i: 2176
end-i: 2216
at header: 2176
i: 2192
end-i: 2216
i: 2196
end-i: 2216
i: 2200
end-i: 2216
i: 2204
end-i: 2216
i: 2208
end-i: 2216
i: 2212
end-i: 2216
i: 2216
end-i: 2216
i:2216 HIT CHUNK END
(comment . ";;2192: r1 <- r1, r8")
(comment . ";;2196: r15 <- 0x4")
(comment . ";;2200: r4 <- r1, 0x10\n")
(comment . ";;2204: r15 <- 0x6")
(comment . ";;2212 b -900")
chunklet-i: 2216; chunklet-start-i: 2216; chunklet-end-i: 2220
i: 2216
end-i: 2220
i: 2220
end-i: 2220
i:2220 HIT CHUNK END
(comment . ";;2216 b -664")
chunklet-i: 2220; chunklet-start-i: 2220; chunklet-end-i: 2228
i: 2220
end-i: 2228
i: 2220
end-i: 2228
i: 2224
end-i: 2228
i: 2228
end-i: 2228
i:2228 HIT CHUNK END
(comment . ";;2220: r3 <- r3, 0x1\n")
(comment . ";;2224 b 68")
chunklet-i: 2228; chunklet-start-i: 2228; chunklet-end-i: 2264
i: 2228
end-i: 2264
i: 2232
end-i: 2264
i: 2236
end-i: 2264
i: 2240
end-i: 2264
i: 2244
end-i: 2264
i: 2248
end-i: 2264
i: 2260
end-i: 2264
i: 2264
end-i: 2264
at header: 2264
(comment . ";;2228: r4 <- r1, 0x10\n")
(comment . ";;2232: r9 <- r1, 0x8\n")
(comment . ";;2236: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2244: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2260: b r6")
chunklet-i: 2264; chunklet-start-i: 2280; chunklet-end-i: 2296
i: 2264
end-i: 2296
at header: 2264
i: 2280
end-i: 2296
i: 2284
end-i: 2296
i: 2288
end-i: 2296
i: 2292
end-i: 2296
i: 2296
end-i: 2296
i:2296 HIT CHUNK END
(comment . ";;2284: r1 <- r1, r8")
(comment . ";;2288: r4 <- r1, 0x10\n")
(comment . ";;2292: r9 <- r1, 0x8\n")
chunklet-i: 2296; chunklet-start-i: 2296; chunklet-end-i: 2328
i: 2296
end-i: 2328
i: 2296
end-i: 2328
i: 2300
end-i: 2328
i: 2304
end-i: 2328
i: 2308
end-i: 2328
i: 2312
end-i: 2328
i: 2324
end-i: 2328
i: 2328
end-i: 2328
at header: 2328
(comment . ";;2296: r4 <- r1, 0x10\n")
(comment . ";;2300: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2308: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2324: b r6")
chunklet-i: 2328; chunklet-start-i: 2344; chunklet-end-i: 2360
i: 2328
end-i: 2360
at header: 2328
i: 2344
end-i: 2360
i: 2348
end-i: 2360
i: 2352
end-i: 2360
i: 2356
end-i: 2360
i: 2360
end-i: 2360
i:2360 HIT CHUNK END
(comment . ";;2344: r1 <- r1, r8")
(comment . ";;2348: r10 <- 0x4")
(comment . ";;2352: r4 <- r1, 0x10\n")
(comment . ";;2356 b -1064")
chunklet-i: 2360; chunklet-start-i: 2360; chunklet-end-i: 2372
i: 2360
end-i: 2372
i: 2360
end-i: 2372
i: 2364
end-i: 2372
i: 2368
end-i: 2372
i: 2372
end-i: 2372
i:2372 HIT CHUNK END
(comment . ";;2360: r7 <- r0, 0x68\n")
(comment . ";;2364: r2 <- r7")
(comment . ";;2368 b 16")
chunklet-i: 2372; chunklet-start-i: 2372; chunklet-end-i: 2388
i: 2372
end-i: 2388
i: 2372
end-i: 2388
i: 2376
end-i: 2388
i: 2380
end-i: 2388
i: 2384
end-i: 2388
i: 2388
end-i: 2388
i:2388 HIT CHUNK END
(comment . ";;2372: r7 <- r7, r8")
(comment . ";;2376: r7 <- r0, 0x68\n")
(comment . ";;2380: r15 <- r7, 0x0\n")
(comment . ";;2384 b -1120")
chunklet-i: 2388; chunklet-start-i: 2388; chunklet-end-i: 2400
i: 2388
end-i: 2400
i: 2388
end-i: 2400
i: 2400
end-i: 2400
i:2400 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 2400; chunklet-start-i: 2404; chunklet-end-i: 2412
i: 2400
end-i: 2412
i: 2404
end-i: 2412
i: 2408
end-i: 2412
i: 2412
end-i: 2412
i:2412 HIT CHUNK END
(comment . ";; instruction 2400 not included")
(comment . ";;2404: r7 <- r0, 0x68\n")
(comment . ";;2408 b -40")
chunklet-i: 2412; chunklet-start-i: 2412; chunklet-end-i: 2436
i: 2412
end-i: 2436
i: 2412
end-i: 2436
i: 2416
end-i: 2436
i: 2420
end-i: 2436
i: 2432
end-i: 2436
i: 2436
end-i: 2436
i:2436 HIT CHUNK END
(comment . ";;2412: r9 <- 0x4")
(comment . ";;2416: r10 <- 0xC")
(comment . ";; literal r6")
(comment . ";;2432: b r6")
chunklet-i: 2436; chunklet-start-i: 2436; chunklet-end-i: 2444
i: 2436
end-i: 2444
i: 2436
end-i: 2444
i: 2440
end-i: 2444
i: 2444
end-i: 2444
i:2444 HIT CHUNK END
(comment . ";;2436: r3 <- r3, 0x1\n")
(comment . ";;2440 b 80")
chunklet-i: 2444; chunklet-start-i: 2444; chunklet-end-i: 2488
i: 2444
end-i: 2488
i: 2448
end-i: 2488
i: 2452
end-i: 2488
i: 2456
end-i: 2488
i: 2460
end-i: 2488
i: 2464
end-i: 2488
i: 2468
end-i: 2488
i: 2472
end-i: 2488
i: 2484
end-i: 2488
i: 2488
end-i: 2488
at header: 2488
(comment . ";;2444: r13 <- r1, 0x10\n")
(comment . ";;2448: r4 <- r1, 0x18\n")
(comment . ";;2452: r12 <- r1, 0x20\n")
(comment . ";;2456: r9 <- r1, 0x8\n")
(comment . ";;2460: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2468: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2484: b r6")
chunklet-i: 2488; chunklet-start-i: 2504; chunklet-end-i: 2524
i: 2488
end-i: 2524
at header: 2488
i: 2504
end-i: 2524
i: 2508
end-i: 2524
i: 2512
end-i: 2524
i: 2516
end-i: 2524
i: 2520
end-i: 2524
i: 2524
end-i: 2524
i:2524 HIT CHUNK END
(comment . ";;2504: r1 <- r1, r8")
(comment . ";;2508: r13 <- r1, 0x10\n")
(comment . ";;2512: r4 <- r1, 0x18\n")
(comment . ";;2516: r12 <- r1, 0x20\n")
(comment . ";;2520: r9 <- r1, 0x8\n")
chunklet-i: 2524; chunklet-start-i: 2524; chunklet-end-i: 2568
i: 2524
end-i: 2568
i: 2524
end-i: 2568
i: 2528
end-i: 2568
i: 2532
end-i: 2568
i: 2536
end-i: 2568
i: 2540
end-i: 2568
i: 2544
end-i: 2568
i: 2548
end-i: 2568
i: 2552
end-i: 2568
i: 2564
end-i: 2568
i: 2568
end-i: 2568
at header: 2568
(comment . ";;2524: r10 <- 0x8")
(comment . ";;2528: r13 <- r1, 0x10\n")
(comment . ";;2532: r4 <- r1, 0x18\n")
(comment . ";;2536: r12 <- r1, 0x20\n")
(comment . ";;2540: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2548: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2564: b r6")
chunklet-i: 2568; chunklet-start-i: 2584; chunklet-end-i: 2612
i: 2568
end-i: 2612
at header: 2568
i: 2584
end-i: 2612
i: 2588
end-i: 2612
i: 2592
end-i: 2612
i: 2596
end-i: 2612
i: 2600
end-i: 2612
i: 2604
end-i: 2612
i: 2608
end-i: 2612
i: 2612
end-i: 2612
i:2612 HIT CHUNK END
(comment . ";;2584: r1 <- r1, r8")
(comment . ";;2588: r11 <- 0x4")
(comment . ";;2592: r13 <- r1, 0x10\n")
(comment . ";;2596: r4 <- r1, 0x18\n")
(comment . ";;2600: r12 <- r1, 0x20\n")
(comment . ";;2608 b -1412")
chunklet-i: 2612; chunklet-start-i: 2612; chunklet-end-i: 2632
i: 2612
end-i: 2632
i: 2612
end-i: 2632
i: 2616
end-i: 2632
i: 2628
end-i: 2632
i: 2632
end-i: 2632
i:2632 HIT CHUNK END
(comment . ";;2612: r9 <- 0xE")
(comment . ";; literal r6")
(comment . ";;2628: b r6")
chunklet-i: 2632; chunklet-start-i: 2632; chunklet-end-i: 2652
i: 2632
end-i: 2652
i: 2632
end-i: 2652
i: 2636
end-i: 2652
i: 2648
end-i: 2652
i: 2652
end-i: 2652
i:2652 HIT CHUNK END
(comment . ";;2632: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;2648: b r6")
chunklet-i: 2652; chunklet-start-i: 2652; chunklet-end-i: 2660
i: 2652
end-i: 2660
i: 2652
end-i: 2660
i: 2656
end-i: 2660
i: 2660
end-i: 2660
i:2660 HIT CHUNK END
(comment . ";;2652: r3 <- r3, 0x1\n")
(comment . ";;2656 b 100")
chunklet-i: 2660; chunklet-start-i: 2660; chunklet-end-i: 2712
i: 2660
end-i: 2712
i: 2664
end-i: 2712
i: 2668
end-i: 2712
i: 2672
end-i: 2712
i: 2676
end-i: 2712
i: 2680
end-i: 2712
i: 2684
end-i: 2712
i: 2688
end-i: 2712
i: 2692
end-i: 2712
i: 2696
end-i: 2712
i: 2708
end-i: 2712
i: 2712
end-i: 2712
at header: 2712
(comment . ";;2660: r15 <- r1, 0x8\n")
(comment . ";;2664: r13 <- r1, 0x10\n")
(comment . ";;2668: r4 <- r1, 0x18\n")
(comment . ";;2672: r12 <- r1, 0x20\n")
(comment . ";;2676: r14 <- r1, 0x28\n")
(comment . ";;2680: r9 <- r1, 0x30\n")
(comment . ";;2684: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2692: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2708: b r6")
chunklet-i: 2712; chunklet-start-i: 2728; chunklet-end-i: 2760
i: 2712
end-i: 2760
at header: 2712
i: 2728
end-i: 2760
i: 2732
end-i: 2760
i: 2736
end-i: 2760
i: 2740
end-i: 2760
i: 2744
end-i: 2760
i: 2748
end-i: 2760
i: 2752
end-i: 2760
i: 2756
end-i: 2760
i: 2760
end-i: 2760
i:2760 HIT CHUNK END
(comment . ";;2732: r1 <- r1, r8")
(comment . ";;2736: r15 <- r1, 0x8\n")
(comment . ";;2740: r13 <- r1, 0x10\n")
(comment . ";;2744: r4 <- r1, 0x18\n")
(comment . ";;2748: r12 <- r1, 0x20\n")
(comment . ";;2752: r14 <- r1, 0x28\n")
(comment . ";;2756: r9 <- r1, 0x30\n")
chunklet-i: 2760; chunklet-start-i: 2760; chunklet-end-i: 2808
i: 2760
end-i: 2808
i: 2760
end-i: 2808
i: 2764
end-i: 2808
i: 2768
end-i: 2808
i: 2772
end-i: 2808
i: 2776
end-i: 2808
i: 2780
end-i: 2808
i: 2784
end-i: 2808
i: 2788
end-i: 2808
i: 2792
end-i: 2808
i: 2804
end-i: 2808
i: 2808
end-i: 2808
at header: 2808
(comment . ";;2760: r15 <- r1, 0x8\n")
(comment . ";;2764: r13 <- r1, 0x10\n")
(comment . ";;2768: r4 <- r1, 0x18\n")
(comment . ";;2772: r12 <- r1, 0x20\n")
(comment . ";;2776: r14 <- r1, 0x28\n")
(comment . ";;2780: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2788: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2804: b r6")
chunklet-i: 2808; chunklet-start-i: 2824; chunklet-end-i: 2856
i: 2808
end-i: 2856
at header: 2808
i: 2824
end-i: 2856
i: 2828
end-i: 2856
i: 2832
end-i: 2856
i: 2836
end-i: 2856
i: 2840
end-i: 2856
i: 2844
end-i: 2856
i: 2848
end-i: 2856
i: 2852
end-i: 2856
i: 2856
end-i: 2856
i:2856 HIT CHUNK END
(comment . ";;2824: r1 <- r1, r0")
(comment . ";;2828: r9 <- 0x4")
(comment . ";;2832: r15 <- r1, 0x8\n")
(comment . ";;2836: r13 <- r1, 0x10\n")
(comment . ";;2840: r4 <- r1, 0x18\n")
(comment . ";;2844: r12 <- r1, 0x20\n")
(comment . ";;2848: r14 <- r1, 0x28\n")
(comment . ";;2852 b -1776")
chunklet-i: 2856; chunklet-start-i: 2856; chunklet-end-i: 2864
i: 2856
end-i: 2864
i: 2856
end-i: 2864
i: 2860
end-i: 2864
i: 2864
end-i: 2864
i:2864 HIT CHUNK END
(comment . ";;2856: r3 <- r3, 0x1\n")
(comment . ";;2860 b 92")
chunklet-i: 2864; chunklet-start-i: 2864; chunklet-end-i: 2912
i: 2864
end-i: 2912
i: 2868
end-i: 2912
i: 2872
end-i: 2912
i: 2876
end-i: 2912
i: 2880
end-i: 2912
i: 2884
end-i: 2912
i: 2888
end-i: 2912
i: 2892
end-i: 2912
i: 2896
end-i: 2912
i: 2908
end-i: 2912
i: 2912
end-i: 2912
at header: 2912
(comment . ";;2864: r15 <- r1, 0x8\n")
(comment . ";;2868: r13 <- r1, 0x10\n")
(comment . ";;2872: r4 <- r1, 0x18\n")
(comment . ";;2876: r12 <- r1, 0x20\n")
(comment . ";;2880: r9 <- r1, 0x28\n")
(comment . ";;2884: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2892: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2908: b r6")
chunklet-i: 2912; chunklet-start-i: 2928; chunklet-end-i: 2956
i: 2912
end-i: 2956
at header: 2912
i: 2928
end-i: 2956
i: 2932
end-i: 2956
i: 2936
end-i: 2956
i: 2940
end-i: 2956
i: 2944
end-i: 2956
i: 2948
end-i: 2956
i: 2952
end-i: 2956
i: 2956
end-i: 2956
i:2956 HIT CHUNK END
(comment . ";;2932: r1 <- r1, r0")
(comment . ";;2936: r15 <- r1, 0x8\n")
(comment . ";;2940: r13 <- r1, 0x10\n")
(comment . ";;2944: r4 <- r1, 0x18\n")
(comment . ";;2948: r12 <- r1, 0x20\n")
(comment . ";;2952: r9 <- r1, 0x28\n")
chunklet-i: 2956; chunklet-start-i: 2956; chunklet-end-i: 3000
i: 2956
end-i: 3000
i: 2956
end-i: 3000
i: 2960
end-i: 3000
i: 2964
end-i: 3000
i: 2968
end-i: 3000
i: 2972
end-i: 3000
i: 2976
end-i: 3000
i: 2980
end-i: 3000
i: 2984
end-i: 3000
i: 2996
end-i: 3000
i: 3000
end-i: 3000
at header: 3000
(comment . ";;2956: r15 <- r1, 0x8\n")
(comment . ";;2960: r13 <- r1, 0x10\n")
(comment . ";;2964: r4 <- r1, 0x18\n")
(comment . ";;2968: r12 <- r1, 0x20\n")
(comment . ";;2972: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2980: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2996: b r6")
chunklet-i: 3000; chunklet-start-i: 3016; chunklet-end-i: 3048
i: 3000
end-i: 3048
at header: 3000
i: 3016
end-i: 3048
i: 3020
end-i: 3048
i: 3024
end-i: 3048
i: 3028
end-i: 3048
i: 3032
end-i: 3048
i: 3036
end-i: 3048
i: 3040
end-i: 3048
i: 3044
end-i: 3048
i: 3048
end-i: 3048
i:3048 HIT CHUNK END
(comment . ";;3016: r1 <- r1, r8")
(comment . ";;3020: r14 <- 0x4")
(comment . ";;3024: r15 <- r1, 0x8\n")
(comment . ";;3028: r13 <- r1, 0x10\n")
(comment . ";;3032: r4 <- r1, 0x18\n")
(comment . ";;3036: r12 <- r1, 0x20\n")
(comment . ";;3044 b -1996")
chunklet-i: 3048; chunklet-start-i: 3048; chunklet-end-i: 3068
i: 3048
end-i: 3068
i: 3048
end-i: 3068
i: 3052
end-i: 3068
i: 3064
end-i: 3068
i: 3068
end-i: 3068
i:3068 HIT CHUNK END
(comment . ";;3048: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;3064: b r6")
chunklet-i: 3068; chunklet-start-i: 3068; chunklet-end-i: 3076
i: 3068
end-i: 3076
i: 3068
end-i: 3076
i: 3072
end-i: 3076
i: 3076
end-i: 3076
i:3076 HIT CHUNK END
(comment . ";;3068: r3 <- r3, 0x1\n")
(comment . ";;3072 b 84")
chunklet-i: 3076; chunklet-start-i: 3076; chunklet-end-i: 3120
i: 3076
end-i: 3120
i: 3080
end-i: 3120
i: 3084
end-i: 3120
i: 3088
end-i: 3120
i: 3092
end-i: 3120
i: 3096
end-i: 3120
i: 3100
end-i: 3120
i: 3104
end-i: 3120
i: 3116
end-i: 3120
i: 3120
end-i: 3120
at header: 3120
(comment . ";;3076: r15 <- r1, 0x8\n")
(comment . ";;3080: r13 <- r1, 0x10\n")
(comment . ";;3084: r4 <- r1, 0x18\n")
(comment . ";;3088: r9 <- r1, 0x20\n")
(comment . ";;3092: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3100: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3116: b r6")
chunklet-i: 3120; chunklet-start-i: 3136; chunklet-end-i: 3160
i: 3120
end-i: 3160
at header: 3120
i: 3136
end-i: 3160
i: 3140
end-i: 3160
i: 3144
end-i: 3160
i: 3148
end-i: 3160
i: 3152
end-i: 3160
i: 3156
end-i: 3160
i: 3160
end-i: 3160
i:3160 HIT CHUNK END
(comment . ";;3140: r1 <- r1, r8")
(comment . ";;3144: r15 <- r1, 0x8\n")
(comment . ";;3148: r13 <- r1, 0x10\n")
(comment . ";;3152: r4 <- r1, 0x18\n")
(comment . ";;3156: r9 <- r1, 0x20\n")
chunklet-i: 3160; chunklet-start-i: 3160; chunklet-end-i: 3200
i: 3160
end-i: 3200
i: 3160
end-i: 3200
i: 3164
end-i: 3200
i: 3168
end-i: 3200
i: 3172
end-i: 3200
i: 3176
end-i: 3200
i: 3180
end-i: 3200
i: 3184
end-i: 3200
i: 3196
end-i: 3200
i: 3200
end-i: 3200
at header: 3200
(comment . ";;3160: r15 <- r1, 0x8\n")
(comment . ";;3164: r13 <- r1, 0x10\n")
(comment . ";;3168: r4 <- r1, 0x18\n")
(comment . ";;3172: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3196: b r6")
chunklet-i: 3200; chunklet-start-i: 3216; chunklet-end-i: 3240
i: 3200
end-i: 3240
at header: 3200
i: 3216
end-i: 3240
i: 3220
end-i: 3240
i: 3224
end-i: 3240
i: 3228
end-i: 3240
i: 3232
end-i: 3240
i: 3236
end-i: 3240
i: 3240
end-i: 3240
i:3240 HIT CHUNK END
(comment . ";;3216: r1 <- r1, r0")
(comment . ";;3220: r9 <- 0x4")
(comment . ";;3224: r15 <- r1, 0x8\n")
(comment . ";;3228: r13 <- r1, 0x10\n")
(comment . ";;3232: r4 <- r1, 0x18\n")
(comment . ";;3236 b -2264")
chunklet-i: 3240; chunklet-start-i: 3240; chunklet-end-i: 3248
i: 3240
end-i: 3248
i: 3240
end-i: 3248
i: 3244
end-i: 3248
i: 3248
end-i: 3248
i:3248 HIT CHUNK END
(comment . ";;3240: r3 <- r3, 0x1\n")
(comment . ";;3244 b 76")
chunklet-i: 3248; chunklet-start-i: 3248; chunklet-end-i: 3288
i: 3248
end-i: 3288
i: 3252
end-i: 3288
i: 3256
end-i: 3288
i: 3260
end-i: 3288
i: 3264
end-i: 3288
i: 3268
end-i: 3288
i: 3272
end-i: 3288
i: 3284
end-i: 3288
i: 3288
end-i: 3288
at header: 3288
(comment . ";;3248: r15 <- r1, 0x8\n")
(comment . ";;3252: r13 <- r1, 0x10\n")
(comment . ";;3256: r9 <- r1, 0x18\n")
(comment . ";;3260: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3268: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3284: b r6")
chunklet-i: 3288; chunklet-start-i: 3304; chunklet-end-i: 3324
i: 3288
end-i: 3324
at header: 3288
i: 3304
end-i: 3324
i: 3308
end-i: 3324
i: 3312
end-i: 3324
i: 3316
end-i: 3324
i: 3320
end-i: 3324
i: 3324
end-i: 3324
i:3324 HIT CHUNK END
(comment . ";;3308: r1 <- r1, r0")
(comment . ";;3312: r15 <- r1, 0x8\n")
(comment . ";;3316: r13 <- r1, 0x10\n")
(comment . ";;3320: r9 <- r1, 0x18\n")
chunklet-i: 3324; chunklet-start-i: 3324; chunklet-end-i: 3360
i: 3324
end-i: 3360
i: 3324
end-i: 3360
i: 3328
end-i: 3360
i: 3332
end-i: 3360
i: 3336
end-i: 3360
i: 3340
end-i: 3360
i: 3344
end-i: 3360
i: 3356
end-i: 3360
i: 3360
end-i: 3360
at header: 3360
(comment . ";;3324: r15 <- r1, 0x8\n")
(comment . ";;3328: r13 <- r1, 0x10\n")
(comment . ";;3332: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3340: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3356: b r6")
chunklet-i: 3360; chunklet-start-i: 3376; chunklet-end-i: 3396
i: 3360
end-i: 3396
at header: 3360
i: 3376
end-i: 3396
i: 3380
end-i: 3396
i: 3384
end-i: 3396
i: 3388
end-i: 3396
i: 3392
end-i: 3396
i: 3396
end-i: 3396
i:3396 HIT CHUNK END
(comment . ";;3376: r1 <- r1, r8")
(comment . ";;3380: r15 <- r1, 0x8\n")
(comment . ";;3384: r13 <- r1, 0x10\n")
(comment . ";;3392 b -2448")
chunklet-i: 3396; chunklet-start-i: 3396; chunklet-end-i: 3404
i: 3396
end-i: 3404
i: 3396
end-i: 3404
i: 3400
end-i: 3404
i: 3404
end-i: 3404
i:3404 HIT CHUNK END
(comment . ";;3396: r3 <- r3, 0x1\n")
(comment . ";;3400 b 80")
chunklet-i: 3404; chunklet-start-i: 3404; chunklet-end-i: 3448
i: 3404
end-i: 3448
i: 3408
end-i: 3448
i: 3412
end-i: 3448
i: 3416
end-i: 3448
i: 3420
end-i: 3448
i: 3424
end-i: 3448
i: 3428
end-i: 3448
i: 3432
end-i: 3448
i: 3444
end-i: 3448
i: 3448
end-i: 3448
at header: 3448
(comment . ";;3404: r15 <- r1, 0x8\n")
(comment . ";;3408: r13 <- r1, 0x10\n")
(comment . ";;3412: r12 <- r1, 0x18\n")
(comment . ";;3416: r4 <- r1, 0x20\n")
(comment . ";;3420: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3444: b r6")
chunklet-i: 3448; chunklet-start-i: 3464; chunklet-end-i: 3484
i: 3448
end-i: 3484
at header: 3448
i: 3464
end-i: 3484
i: 3468
end-i: 3484
i: 3472
end-i: 3484
i: 3476
end-i: 3484
i: 3480
end-i: 3484
i: 3484
end-i: 3484
i:3484 HIT CHUNK END
(comment . ";;3464: r1 <- r1, r8")
(comment . ";;3468: r15 <- r1, 0x8\n")
(comment . ";;3472: r13 <- r1, 0x10\n")
(comment . ";;3476: r12 <- r1, 0x18\n")
(comment . ";;3480: r4 <- r1, 0x20\n")
chunklet-i: 3484; chunklet-start-i: 3484; chunklet-end-i: 3536
i: 3484
end-i: 3536
i: 3484
end-i: 3536
i: 3488
end-i: 3536
i: 3492
end-i: 3536
i: 3496
end-i: 3536
i: 3500
end-i: 3536
i: 3504
end-i: 3536
i: 3508
end-i: 3536
i: 3512
end-i: 3536
i: 3516
end-i: 3536
i: 3520
end-i: 3536
i: 3532
end-i: 3536
i: 3536
end-i: 3536
at header: 3536
(comment . ";;3484: r9 <- 0x4")
(comment . ";;3488: r10 <- 0xC")
(comment . ";;3492: r15 <- r1, 0x8\n")
(comment . ";;3496: r13 <- r1, 0x10\n")
(comment . ";;3500: r12 <- r1, 0x18\n")
(comment . ";;3504: r4 <- r1, 0x20\n")
(comment . ";;3508: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3516: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3532: b r6")
chunklet-i: 3536; chunklet-start-i: 3552; chunklet-end-i: 3584
i: 3536
end-i: 3584
at header: 3536
i: 3552
end-i: 3584
i: 3556
end-i: 3584
i: 3560
end-i: 3584
i: 3564
end-i: 3584
i: 3568
end-i: 3584
i: 3572
end-i: 3584
i: 3576
end-i: 3584
i: 3580
end-i: 3584
i: 3584
end-i: 3584
i:3584 HIT CHUNK END
(comment . ";;3552: r1 <- r1, r8")
(comment . ";;3556: r14 <- 0x4")
(comment . ";;3560: r15 <- r1, 0x8\n")
(comment . ";;3564: r13 <- r1, 0x10\n")
(comment . ";;3568: r12 <- r1, 0x18\n")
(comment . ";;3572: r4 <- r1, 0x20\n")
(comment . ";;3576: r14 <- 0x6")
(comment . ";;3580 b -3460")
chunklet-i: 3584; chunklet-start-i: 3584; chunklet-end-i: 3588
i: 3584
end-i: 3588
i: 3588
end-i: 3588
i:3588 HIT CHUNK END
(comment . ";;3584 b -2664")
chunklet-i: 3588; chunklet-start-i: 3588; chunklet-end-i: 3608
i: 3588
end-i: 3608
i: 3588
end-i: 3608
i: 3592
end-i: 3608
i: 3604
end-i: 3608
i: 3608
end-i: 3608
i:3608 HIT CHUNK END
(comment . ";;3588: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;3604: b r6")
chunklet-i: 3608; chunklet-start-i: 3608; chunklet-end-i: 3616
i: 3608
end-i: 3616
i: 3608
end-i: 3616
i: 3612
end-i: 3616
i: 3616
end-i: 3616
i:3616 HIT CHUNK END
(comment . ";;3608: r3 <- r3, 0x1\n")
(comment . ";;3612 b 76")
chunklet-i: 3616; chunklet-start-i: 3616; chunklet-end-i: 3656
i: 3616
end-i: 3656
i: 3620
end-i: 3656
i: 3624
end-i: 3656
i: 3628
end-i: 3656
i: 3632
end-i: 3656
i: 3636
end-i: 3656
i: 3640
end-i: 3656
i: 3652
end-i: 3656
i: 3656
end-i: 3656
at header: 3656
(comment . ";;3616: r15 <- r1, 0x8\n")
(comment . ";;3620: r13 <- r1, 0x10\n")
(comment . ";;3624: r9 <- r1, 0x18\n")
(comment . ";;3628: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3636: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3652: b r6")
chunklet-i: 3656; chunklet-start-i: 3672; chunklet-end-i: 3692
i: 3656
end-i: 3692
at header: 3656
i: 3672
end-i: 3692
i: 3676
end-i: 3692
i: 3680
end-i: 3692
i: 3684
end-i: 3692
i: 3688
end-i: 3692
i: 3692
end-i: 3692
i:3692 HIT CHUNK END
(comment . ";;3676: r1 <- r1, r0")
(comment . ";;3680: r15 <- r1, 0x8\n")
(comment . ";;3684: r13 <- r1, 0x10\n")
(comment . ";;3688: r9 <- r1, 0x18\n")
chunklet-i: 3692; chunklet-start-i: 3692; chunklet-end-i: 3728
i: 3692
end-i: 3728
i: 3692
end-i: 3728
i: 3696
end-i: 3728
i: 3700
end-i: 3728
i: 3704
end-i: 3728
i: 3708
end-i: 3728
i: 3712
end-i: 3728
i: 3724
end-i: 3728
i: 3728
end-i: 3728
at header: 3728
(comment . ";;3692: r15 <- r1, 0x8\n")
(comment . ";;3696: r13 <- r1, 0x10\n")
(comment . ";;3700: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3708: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3724: b r6")
chunklet-i: 3728; chunklet-start-i: 3744; chunklet-end-i: 3764
i: 3728
end-i: 3764
at header: 3728
i: 3744
end-i: 3764
i: 3748
end-i: 3764
i: 3752
end-i: 3764
i: 3756
end-i: 3764
i: 3760
end-i: 3764
i: 3764
end-i: 3764
i:3764 HIT CHUNK END
(comment . ";;3744: r1 <- r1, r8")
(comment . ";;3748: r9 <- 0x4")
(comment . ";;3752: r15 <- r1, 0x8\n")
(comment . ";;3756: r13 <- r1, 0x10\n")
(comment . ";;3760 b -3716")
chunklet-i: 3764; chunklet-start-i: 3764; chunklet-end-i: 3780
i: 3764
end-i: 3780
i: 3764
end-i: 3780
i: 3776
end-i: 3780
i: 3780
end-i: 3780
i:3780 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;3776: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: puzzle-remove
instruction range for chunk: 0 12
instruction range for chunk: 12 44
instruction range for chunk: 44 48
instruction range for chunk: 48 60
instruction range for chunk: 60 80
instruction range for chunk: 80 92
instruction range for chunk: 92 104
instruction range for chunk: 104 116
instruction range for chunk: 116 124
instruction range for chunk: 124 132
instruction range for chunk: 132 156
instruction range for chunk: 156 160
instruction range for chunk: 160 172
instruction range for chunk: 172 192
instruction range for chunk: 192 204
instruction range for chunk: 204 224
instruction range for chunk: 224 244
instruction range for chunk: 244 256
instruction range for chunk: 256 272
instruction range for chunk: 272 296
instruction range for chunk: 296 308
instruction range for chunk: 308 316
instruction range for chunk: 316 328
instruction range for chunk: 328 340
instruction range for chunk: 340 348
instruction range for chunk: 348 364
instruction range for chunk: 364 376
instruction range for chunk: 376 384
instruction range for chunk: 384 392
instruction range for chunk: 392 400
instruction range for chunk: 400 448
instruction range for chunk: 464 488
instruction range for chunk: 488 512
instruction range for chunk: 512 568
instruction range for chunk: 584 620
instruction range for chunk: 620 664
instruction range for chunk: 680 708
instruction range for chunk: 708 728
instruction range for chunk: 728 748
instruction range for chunk: 748 792
instruction range for chunk: 808 836
instruction range for chunk: 836 880
instruction range for chunk: 896 920
instruction range for chunk: 920 944
instruction range for chunk: 944 968
instruction range for chunk: 968 972
instruction range for chunk: 972 984
instruction range for chunk: 984 1004
instruction range for chunk: 1004 1016
instruction range for chunk: 1016 1048
instruction range for chunk: 1048 1072
instruction range for chunk: 1072 1076
instruction range for chunk: 1076 1088
instruction range for chunk: 1088 1108
instruction range for chunk: 1108 1120
instruction range for chunk: 1120 1140
instruction range for chunk: 1140 1160
instruction range for chunk: 1160 1172
instruction range for chunk: 1172 1188
instruction range for chunk: 1188 1196
instruction range for chunk: 1196 1208
instruction range for chunk: 1208 1220
instruction range for chunk: 1220 1228
instruction range for chunk: 1228 1244
instruction range for chunk: 1244 1264
instruction range for chunk: 1264 1272
instruction range for chunk: 1272 1284
instruction range for chunk: 1284 1304
instruction range for chunk: 1304 1316
instruction range for chunk: 1320 1328
instruction range for chunk: 1328 1352
instruction range for chunk: 1352 1360
instruction range for chunk: 1360 1400
instruction range for chunk: 1416 1432
instruction range for chunk: 1432 1472
instruction range for chunk: 1488 1512
instruction range for chunk: 1512 1532
instruction range for chunk: 1532 1552
instruction range for chunk: 1552 1560
instruction range for chunk: 1560 1608
instruction range for chunk: 1624 1652
instruction range for chunk: 1652 1696
instruction range for chunk: 1712 1740
instruction range for chunk: 1740 1748
instruction range for chunk: 1748 1792
instruction range for chunk: 1808 1832
instruction range for chunk: 1832 1872
instruction range for chunk: 1888 1916
instruction range for chunk: 1916 1936
instruction range for chunk: 1936 1944
instruction range for chunk: 1944 1984
instruction range for chunk: 2000 2020
instruction range for chunk: 2020 2056
instruction range for chunk: 2072 2092
instruction range for chunk: 2092 2100
instruction range for chunk: 2100 2136
instruction range for chunk: 2152 2168
instruction range for chunk: 2168 2200
instruction range for chunk: 2216 2228
instruction range for chunk: 2228 2236
instruction range for chunk: 2236 2280
instruction range for chunk: 2296 2316
instruction range for chunk: 2316 2368
instruction range for chunk: 2384 2416
instruction range for chunk: 2416 2420
instruction range for chunk: 2420 2440
instruction range for chunk: 2440 2448
instruction range for chunk: 2448 2488
instruction range for chunk: 2504 2524
instruction range for chunk: 2524 2560
instruction range for chunk: 2576 2596
instruction range for chunk: 2596 2612
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x2")
(comment . ";;8 b 2584")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;12: r15 <- 0x9")
(comment . ";;16: r13 <- 0xA")
(comment . ";; literal r9")
(comment . ";;32: r14 <- r9, 0x5\n")
(comment . ";;36: r14 <- 0x1E")
(comment . ";;40 b 2396")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;44: r9 <- 0xE")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 60
i: 48
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;48: r14 <- r9, r7")
(comment . ";;52: r14 <- 0x7")
(comment . ";;56 b 2360")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 80
i: 60
end-i: 80
i: 64
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;60: r12 <- r9, 0x1\n")
(comment . ";;64: r14 <- r12, r1")
(comment . ";;68: r14 <- r14, r8")
(comment . ";;72: r15 <- r14")
(comment . ";;76 b 2340")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;80: r14 <- r15, r12")
(comment . ";;84: r14 <- 0x7")
(comment . ";;88 b 2328")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;92: r14 <- r15, r9")
(comment . ";;96: r12 <- r9, r14")
(comment . ";;100: r4 <- 0x0")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 116
i: 104
end-i: 116
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r14 <- r4, r12")
(comment . ";;108: r14 <- 0x7")
(comment . ";;112 b 2112")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;116: r4 <- r12")
(comment . ";;120 b 796")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 132
i: 124
end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;124: r3 <- r3, 0x1\n")
(comment . ";;128 b 704")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 156
i: 132
end-i: 156
i: 132
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;144: r14 <- r9, 0x5\n")
(comment . ";;148: r14 <- 0x1E")
(comment . ";;152 b 592")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;156: r9 <- 0xE")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 172
i: 160
end-i: 172
i: 160
end-i: 172
i: 164
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";;160: r14 <- r9, r7")
(comment . ";;164: r14 <- 0x7")
(comment . ";;168 b 556")
chunklet-i: 172; chunklet-start-i: 172; chunklet-end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";;172: r11 <- r9, 0x1\n")
(comment . ";;176: r14 <- r11, r1")
(comment . ";;180: r14 <- r14, r8")
(comment . ";;184: r15 <- r14")
(comment . ";;188 b 536")
chunklet-i: 192; chunklet-start-i: 192; chunklet-end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";;192: r14 <- r15, r11")
(comment . ";;196: r14 <- 0x7")
(comment . ";;200 b 524")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 224
i: 204
end-i: 224
i: 208
end-i: 224
i: 212
end-i: 224
i: 216
end-i: 224
i: 220
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";;204: r14 <- r15, r9")
(comment . ";;208: r9 <- r9, r14")
(comment . ";;212: r14 <- r9, r7")
(comment . ";;216: r14 <- 0x7")
(comment . ";;220 b 484")
chunklet-i: 224; chunklet-start-i: 224; chunklet-end-i: 244
i: 224
end-i: 244
i: 228
end-i: 244
i: 232
end-i: 244
i: 236
end-i: 244
i: 240
end-i: 244
i: 244
end-i: 244
i:244 HIT CHUNK END
(comment . ";;224: r11 <- r9, 0x1\n")
(comment . ";;228: r14 <- r11, r1")
(comment . ";;232: r14 <- r14, r8")
(comment . ";;236: r4 <- r14")
(comment . ";;240 b 464")
chunklet-i: 244; chunklet-start-i: 244; chunklet-end-i: 256
i: 244
end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;244: r14 <- r4, r11")
(comment . ";;248: r14 <- 0x7")
(comment . ";;252 b 452")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 272
i: 256
end-i: 272
i: 260
end-i: 272
i: 264
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
i:272 HIT CHUNK END
(comment . ";;256: r14 <- r4, r9")
(comment . ";;260: r14 <- r9, r14")
(comment . ";;264: r14 <- 0x6")
(comment . ";;268 b 104")
chunklet-i: 272; chunklet-start-i: 272; chunklet-end-i: 296
i: 272
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;284: r14 <- r9, 0x5\n")
(comment . ";;288: r14 <- 0x1E")
(comment . ";;292 b 324")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 308
i: 296
end-i: 308
i: 296
end-i: 308
i: 300
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;296: r11 <- r13, r4")
(comment . ";;300: r11 <- 0x7")
(comment . ";;304 b 204")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 316
i: 308
end-i: 316
i: 312
end-i: 316
i: 316
end-i: 316
i:316 HIT CHUNK END
(comment . ";;308: r10 <- r13, r4")
(comment . ";;312 b 196")
chunklet-i: 316; chunklet-start-i: 316; chunklet-end-i: 328
i: 316
end-i: 328
i: 316
end-i: 328
i: 320
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
i:328 HIT CHUNK END
(comment . ";;316: r11 <- r14, r7")
(comment . ";;320: r11 <- 0x7")
(comment . ";;324 b 160")
chunklet-i: 328; chunklet-start-i: 328; chunklet-end-i: 340
i: 328
end-i: 340
i: 332
end-i: 340
i: 336
end-i: 340
i: 340
end-i: 340
i:340 HIT CHUNK END
(comment . ";;328: r11 <- r14, 0x1\n")
(comment . ";;332: r11 <- 0xF")
(comment . ";;336 b 148")
chunklet-i: 340; chunklet-start-i: 340; chunklet-end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";;340: r10 <- 0x7")
(comment . ";;344 b 140")
chunklet-i: 348; chunklet-start-i: 348; chunklet-end-i: 364
i: 348
end-i: 364
i: 352
end-i: 364
i: 356
end-i: 364
i: 360
end-i: 364
i: 364
end-i: 364
i:364 HIT CHUNK END
(comment . ";;348: r11 <- r11, r1")
(comment . ";;352: r11 <- r11, r8")
(comment . ";;356: r10 <- r11")
(comment . ";;360 b 124")
chunklet-i: 364; chunklet-start-i: 364; chunklet-end-i: 376
i: 364
end-i: 376
i: 368
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
i:376 HIT CHUNK END
(comment . ";;364: r9 <- 0x6")
(comment . ";;368: r11 <- r10, r9")
(comment . ";;372: r9 <- r14, r11")
chunklet-i: 376; chunklet-start-i: 376; chunklet-end-i: 384
i: 376
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
i:384 HIT CHUNK END
(comment . ";;376: r4 <- 0x7")
(comment . ";;380 b 16")
chunklet-i: 384; chunklet-start-i: 384; chunklet-end-i: 392
i: 384
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
i:392 HIT CHUNK END
(comment . ";;384: r14 <- r4, 0x8\n")
(comment . ";;388 b 8")
chunklet-i: 392; chunklet-start-i: 392; chunklet-end-i: 400
i: 392
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
i:400 HIT CHUNK END
(comment . ";;392: r4 <- 0xE")
(comment . ";;396 b -296")
chunklet-i: 400; chunklet-start-i: 400; chunklet-end-i: 448
i: 400
end-i: 448
i: 400
end-i: 448
i: 404
end-i: 448
i: 408
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 420
end-i: 448
i: 424
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;400: r9 <- 0x8")
(comment . ";;404: r10 <- 0x4")
(comment . ";;408: r15 <- r1, 0x8\n")
(comment . ";;412: r13 <- r1, 0x10\n")
(comment . ";;416: r12 <- r1, 0x18\n")
(comment . ";;420: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;444: b r6")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 488
i: 448
end-i: 488
at header: 448
i: 464
end-i: 488
i: 468
end-i: 488
i: 472
end-i: 488
i: 476
end-i: 488
i: 480
end-i: 488
i: 484
end-i: 488
i: 488
end-i: 488
i:488 HIT CHUNK END
(comment . ";;464: r1 <- r1, r0")
(comment . ";;468: r15 <- r1, 0x8\n")
(comment . ";;472: r13 <- r1, 0x10\n")
(comment . ";;476: r12 <- r1, 0x18\n")
(comment . ";;484 b -384")
chunklet-i: 488; chunklet-start-i: 488; chunklet-end-i: 512
i: 488
end-i: 512
i: 488
end-i: 512
i: 492
end-i: 512
i: 496
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;488: r9 <- 0xE")
(comment . ";;492: r11 <- 0x6")
(comment . ";; literal r6")
(comment . ";;508: b r6")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 568
i: 512
end-i: 568
i: 512
end-i: 568
i: 516
end-i: 568
i: 520
end-i: 568
i: 524
end-i: 568
i: 528
end-i: 568
i: 532
end-i: 568
i: 536
end-i: 568
i: 540
end-i: 568
i: 544
end-i: 568
i: 548
end-i: 568
i: 552
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
at header: 568
(comment . ";;512: r9 <- 0xD")
(comment . ";;516: r10 <- 0x4")
(comment . ";;520: r15 <- r1, 0x8\n")
(comment . ";;524: r13 <- r1, 0x10\n")
(comment . ";;528: r12 <- r1, 0x18\n")
(comment . ";;532: r4 <- r1, 0x20\n")
(comment . ";;536: r14 <- r1, 0x28\n")
(comment . ";;540: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;548: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;564: b r6")
chunklet-i: 568; chunklet-start-i: 584; chunklet-end-i: 620
i: 568
end-i: 620
at header: 568
i: 584
end-i: 620
i: 588
end-i: 620
i: 592
end-i: 620
i: 596
end-i: 620
i: 600
end-i: 620
i: 604
end-i: 620
i: 608
end-i: 620
i: 612
end-i: 620
i: 616
end-i: 620
i: 620
end-i: 620
i:620 HIT CHUNK END
(comment . ";;584: r1 <- r1, r0")
(comment . ";;588: r10 <- 0x4")
(comment . ";;592: r15 <- r1, 0x8\n")
(comment . ";;596: r13 <- r1, 0x10\n")
(comment . ";;600: r12 <- r1, 0x18\n")
(comment . ";;604: r4 <- r1, 0x20\n")
(comment . ";;608: r14 <- r1, 0x28\n")
(comment . ";;616 b -304")
chunklet-i: 620; chunklet-start-i: 620; chunklet-end-i: 664
i: 620
end-i: 664
i: 620
end-i: 664
i: 624
end-i: 664
i: 628
end-i: 664
i: 632
end-i: 664
i: 636
end-i: 664
i: 640
end-i: 664
i: 644
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
at header: 664
(comment . ";;620: r15 <- r1, 0x8\n")
(comment . ";;624: r13 <- r1, 0x10\n")
(comment . ";;628: r12 <- r1, 0x18\n")
(comment . ";;632: r4 <- r1, 0x20\n")
(comment . ";;636: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;644: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;660: b r6")
chunklet-i: 664; chunklet-start-i: 680; chunklet-end-i: 708
i: 664
end-i: 708
at header: 664
i: 680
end-i: 708
i: 684
end-i: 708
i: 688
end-i: 708
i: 692
end-i: 708
i: 696
end-i: 708
i: 700
end-i: 708
i: 704
end-i: 708
i: 708
end-i: 708
i:708 HIT CHUNK END
(comment . ";;680: r1 <- r1, r8")
(comment . ";;684: r14 <- 0x4")
(comment . ";;688: r15 <- r1, 0x8\n")
(comment . ";;692: r13 <- r1, 0x10\n")
(comment . ";;696: r12 <- r1, 0x18\n")
(comment . ";;700: r4 <- r1, 0x20\n")
(comment . ";;704 b -412")
chunklet-i: 708; chunklet-start-i: 708; chunklet-end-i: 728
i: 708
end-i: 728
i: 708
end-i: 728
i: 712
end-i: 728
i: 724
end-i: 728
i: 728
end-i: 728
i:728 HIT CHUNK END
(comment . ";;708: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;724: b r6")
chunklet-i: 728; chunklet-start-i: 728; chunklet-end-i: 748
i: 728
end-i: 748
i: 728
end-i: 748
i: 732
end-i: 748
i: 744
end-i: 748
i: 748
end-i: 748
i:748 HIT CHUNK END
(comment . ";;728: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;744: b r6")
chunklet-i: 748; chunklet-start-i: 748; chunklet-end-i: 792
i: 748
end-i: 792
i: 748
end-i: 792
i: 752
end-i: 792
i: 756
end-i: 792
i: 760
end-i: 792
i: 764
end-i: 792
i: 768
end-i: 792
i: 772
end-i: 792
i: 776
end-i: 792
i: 788
end-i: 792
i: 792
end-i: 792
at header: 792
(comment . ";;748: r15 <- r1, 0x8\n")
(comment . ";;752: r13 <- r1, 0x10\n")
(comment . ";;756: r12 <- r1, 0x18\n")
(comment . ";;760: r4 <- r1, 0x20\n")
(comment . ";;764: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;772: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;788: b r6")
chunklet-i: 792; chunklet-start-i: 808; chunklet-end-i: 836
i: 792
end-i: 836
at header: 792
i: 808
end-i: 836
i: 812
end-i: 836
i: 816
end-i: 836
i: 820
end-i: 836
i: 824
end-i: 836
i: 828
end-i: 836
i: 832
end-i: 836
i: 836
end-i: 836
i:836 HIT CHUNK END
(comment . ";;808: r1 <- r1, r8")
(comment . ";;812: r9 <- 0x4")
(comment . ";;816: r15 <- r1, 0x8\n")
(comment . ";;820: r13 <- r1, 0x10\n")
(comment . ";;824: r12 <- r1, 0x18\n")
(comment . ";;828: r4 <- r1, 0x20\n")
(comment . ";;832 b -676")
chunklet-i: 836; chunklet-start-i: 836; chunklet-end-i: 880
i: 836
end-i: 880
i: 836
end-i: 880
i: 840
end-i: 880
i: 844
end-i: 880
i: 848
end-i: 880
i: 852
end-i: 880
i: 856
end-i: 880
i: 860
end-i: 880
i: 864
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
at header: 880
(comment . ";;836: r15 <- r1, 0x8\n")
(comment . ";;840: r13 <- r1, 0x10\n")
(comment . ";;844: r12 <- r1, 0x18\n")
(comment . ";;848: r4 <- r1, 0x20\n")
(comment . ";;852: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;860: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;876: b r6")
chunklet-i: 880; chunklet-start-i: 896; chunklet-end-i: 920
i: 880
end-i: 920
at header: 880
i: 896
end-i: 920
i: 900
end-i: 920
i: 904
end-i: 920
i: 908
end-i: 920
i: 912
end-i: 920
i: 916
end-i: 920
i: 920
end-i: 920
i:920 HIT CHUNK END
(comment . ";;896: r1 <- r1, r8")
(comment . ";;900: r15 <- r1, 0x8\n")
(comment . ";;904: r13 <- r1, 0x10\n")
(comment . ";;908: r12 <- r1, 0x18\n")
(comment . ";;912: r4 <- r1, 0x20\n")
(comment . ";;916 b -788")
chunklet-i: 920; chunklet-start-i: 920; chunklet-end-i: 944
i: 920
end-i: 944
i: 920
end-i: 944
i: 932
end-i: 944
i: 936
end-i: 944
i: 940
end-i: 944
i: 944
end-i: 944
i:944 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;932: r4 <- r9, 0x5\n")
(comment . ";;936: r4 <- 0x1E")
(comment . ";;940 b 1148")
chunklet-i: 944; chunklet-start-i: 944; chunklet-end-i: 968
i: 944
end-i: 968
i: 944
end-i: 968
i: 956
end-i: 968
i: 960
end-i: 968
i: 964
end-i: 968
i: 968
end-i: 968
i:968 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;956: r14 <- r9, 0x5\n")
(comment . ";;960: r14 <- 0x1E")
(comment . ";;964 b 968")
chunklet-i: 968; chunklet-start-i: 968; chunklet-end-i: 972
i: 968
end-i: 972
i: 972
end-i: 972
i:972 HIT CHUNK END
(comment . ";;968: r9 <- 0xE")
chunklet-i: 972; chunklet-start-i: 972; chunklet-end-i: 984
i: 972
end-i: 984
i: 972
end-i: 984
i: 976
end-i: 984
i: 980
end-i: 984
i: 984
end-i: 984
i:984 HIT CHUNK END
(comment . ";;972: r14 <- r9, r7")
(comment . ";;976: r14 <- 0x7")
(comment . ";;980 b 932")
chunklet-i: 984; chunklet-start-i: 984; chunklet-end-i: 1004
i: 984
end-i: 1004
i: 988
end-i: 1004
i: 992
end-i: 1004
i: 996
end-i: 1004
i: 1000
end-i: 1004
i: 1004
end-i: 1004
i:1004 HIT CHUNK END
(comment . ";;984: r13 <- r9, 0x1\n")
(comment . ";;988: r14 <- r13, r1")
(comment . ";;992: r14 <- r14, r8")
(comment . ";;996: r15 <- r14")
(comment . ";;1000 b 912")
chunklet-i: 1004; chunklet-start-i: 1004; chunklet-end-i: 1016
i: 1004
end-i: 1016
i: 1008
end-i: 1016
i: 1012
end-i: 1016
i: 1016
end-i: 1016
i:1016 HIT CHUNK END
(comment . ";;1004: r14 <- r15, r13")
(comment . ";;1008: r14 <- 0x7")
(comment . ";;1012 b 900")
chunklet-i: 1016; chunklet-start-i: 1016; chunklet-end-i: 1048
i: 1016
end-i: 1048
i: 1020
end-i: 1048
i: 1024
end-i: 1048
i: 1036
end-i: 1048
i: 1040
end-i: 1048
i: 1044
end-i: 1048
i: 1048
end-i: 1048
i:1048 HIT CHUNK END
(comment . ";;1016: r14 <- r15, r9")
(comment . ";;1020: r13 <- r9, r14")
(comment . ";; literal r9")
(comment . ";;1036: r14 <- r9, 0x5\n")
(comment . ";;1040: r14 <- 0x1E")
(comment . ";;1044 b 692")
chunklet-i: 1048; chunklet-start-i: 1048; chunklet-end-i: 1072
i: 1048
end-i: 1072
i: 1048
end-i: 1072
i: 1060
end-i: 1072
i: 1064
end-i: 1072
i: 1068
end-i: 1072
i: 1072
end-i: 1072
i:1072 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1060: r12 <- r9, 0x5\n")
(comment . ";;1064: r12 <- 0x1E")
(comment . ";;1068 b 480")
chunklet-i: 1072; chunklet-start-i: 1072; chunklet-end-i: 1076
i: 1072
end-i: 1076
i: 1076
end-i: 1076
i:1076 HIT CHUNK END
(comment . ";;1072: r9 <- 0xC")
chunklet-i: 1076; chunklet-start-i: 1076; chunklet-end-i: 1088
i: 1076
end-i: 1088
i: 1076
end-i: 1088
i: 1080
end-i: 1088
i: 1084
end-i: 1088
i: 1088
end-i: 1088
i:1088 HIT CHUNK END
(comment . ";;1076: r12 <- r9, r7")
(comment . ";;1080: r12 <- 0x7")
(comment . ";;1084 b 444")
chunklet-i: 1088; chunklet-start-i: 1088; chunklet-end-i: 1108
i: 1088
end-i: 1108
i: 1092
end-i: 1108
i: 1096
end-i: 1108
i: 1100
end-i: 1108
i: 1104
end-i: 1108
i: 1108
end-i: 1108
i:1108 HIT CHUNK END
(comment . ";;1088: r11 <- r9, 0x1\n")
(comment . ";;1092: r12 <- r11, r1")
(comment . ";;1096: r12 <- r12, r8")
(comment . ";;1100: r15 <- r12")
(comment . ";;1104 b 424")
chunklet-i: 1108; chunklet-start-i: 1108; chunklet-end-i: 1120
i: 1108
end-i: 1120
i: 1112
end-i: 1120
i: 1116
end-i: 1120
i: 1120
end-i: 1120
i:1120 HIT CHUNK END
(comment . ";;1108: r12 <- r15, r11")
(comment . ";;1112: r12 <- 0x7")
(comment . ";;1116 b 412")
chunklet-i: 1120; chunklet-start-i: 1120; chunklet-end-i: 1140
i: 1120
end-i: 1140
i: 1124
end-i: 1140
i: 1128
end-i: 1140
i: 1132
end-i: 1140
i: 1136
end-i: 1140
i: 1140
end-i: 1140
i:1140 HIT CHUNK END
(comment . ";;1120: r15 <- r15, r9")
(comment . ";;1124: r10 <- r9, r15")
(comment . ";;1128: r15 <- r14, r7")
(comment . ";;1132: r15 <- 0x7")
(comment . ";;1136 b 372")
chunklet-i: 1140; chunklet-start-i: 1140; chunklet-end-i: 1160
i: 1140
end-i: 1160
i: 1144
end-i: 1160
i: 1148
end-i: 1160
i: 1152
end-i: 1160
i: 1156
end-i: 1160
i: 1160
end-i: 1160
i:1160 HIT CHUNK END
(comment . ";;1140: r12 <- r14, 0x1\n")
(comment . ";;1144: r15 <- r12, r1")
(comment . ";;1148: r15 <- r15, r8")
(comment . ";;1152: r10 <- r15")
(comment . ";;1156 b 352")
chunklet-i: 1160; chunklet-start-i: 1160; chunklet-end-i: 1172
i: 1160
end-i: 1172
i: 1164
end-i: 1172
i: 1168
end-i: 1172
i: 1172
end-i: 1172
i:1172 HIT CHUNK END
(comment . ";;1160: r15 <- r10, r12")
(comment . ";;1164: r15 <- 0x7")
(comment . ";;1168 b 340")
chunklet-i: 1172; chunklet-start-i: 1172; chunklet-end-i: 1188
i: 1172
end-i: 1188
i: 1176
end-i: 1188
i: 1180
end-i: 1188
i: 1184
end-i: 1188
i: 1188
end-i: 1188
i:1188 HIT CHUNK END
(comment . ";;1172: r15 <- r10, r9")
(comment . ";;1176: r10 <- r14, r15")
(comment . ";;1180: r10 <- 0x7")
(comment . ";;1184 b 164")
chunklet-i: 1188; chunklet-start-i: 1188; chunklet-end-i: 1196
i: 1188
end-i: 1196
i: 1192
end-i: 1196
i: 1196
end-i: 1196
i:1196 HIT CHUNK END
(comment . ";;1188: r11 <- r10, 0x8\n")
(comment . ";;1192 b 156")
chunklet-i: 1196; chunklet-start-i: 1196; chunklet-end-i: 1208
i: 1196
end-i: 1208
i: 1196
end-i: 1208
i: 1200
end-i: 1208
i: 1204
end-i: 1208
i: 1208
end-i: 1208
i:1208 HIT CHUNK END
(comment . ";;1196: r15 <- r4, r7")
(comment . ";;1200: r15 <- 0x7")
(comment . ";;1204 b 120")
chunklet-i: 1208; chunklet-start-i: 1208; chunklet-end-i: 1220
i: 1208
end-i: 1220
i: 1212
end-i: 1220
i: 1216
end-i: 1220
i: 1220
end-i: 1220
i:1220 HIT CHUNK END
(comment . ";;1208: r15 <- r4, 0x1\n")
(comment . ";;1212: r15 <- 0xF")
(comment . ";;1216 b 108")
chunklet-i: 1220; chunklet-start-i: 1220; chunklet-end-i: 1228
i: 1220
end-i: 1228
i: 1224
end-i: 1228
i: 1228
end-i: 1228
i:1228 HIT CHUNK END
(comment . ";;1220: r13 <- 0x7")
(comment . ";;1224 b 100")
chunklet-i: 1228; chunklet-start-i: 1228; chunklet-end-i: 1244
i: 1228
end-i: 1244
i: 1232
end-i: 1244
i: 1236
end-i: 1244
i: 1240
end-i: 1244
i: 1244
end-i: 1244
i:1244 HIT CHUNK END
(comment . ";;1228: r15 <- r15, r1")
(comment . ";;1232: r15 <- r15, r8")
(comment . ";;1236: r13 <- r15")
(comment . ";;1240 b 84")
chunklet-i: 1244; chunklet-start-i: 1244; chunklet-end-i: 1264
i: 1244
end-i: 1264
i: 1248
end-i: 1264
i: 1252
end-i: 1264
i: 1256
end-i: 1264
i: 1260
end-i: 1264
i: 1264
end-i: 1264
i:1264 HIT CHUNK END
(comment . ";;1244: r15 <- r4, r9")
(comment . ";;1248: r15 <- r13, r15")
(comment . ";;1252: r11 <- r15, 0x0\n")
(comment . ";;1256: r11 <- 0x7")
(comment . ";;1260 b 8")
chunklet-i: 1264; chunklet-start-i: 1264; chunklet-end-i: 1272
i: 1264
end-i: 1272
i: 1268
end-i: 1272
i: 1272
end-i: 1272
i:1272 HIT CHUNK END
(comment . ";;1264: r4 <- 0x2E")
(comment . ";;1268: b r1, 0")
chunklet-i: 1272; chunklet-start-i: 1272; chunklet-end-i: 1284
i: 1272
end-i: 1284
i: 1272
end-i: 1284
i: 1276
end-i: 1284
i: 1280
end-i: 1284
i: 1284
end-i: 1284
i:1284 HIT CHUNK END
(comment . ";;1272: r7 <- r0, 0x68\n")
(comment . ";;1276: r2 <- r7")
(comment . ";;1280 b 20")
chunklet-i: 1284; chunklet-start-i: 1284; chunklet-end-i: 1304
i: 1284
end-i: 1304
i: 1284
end-i: 1304
i: 1288
end-i: 1304
i: 1292
end-i: 1304
i: 1296
end-i: 1304
i: 1300
end-i: 1304
i: 1304
end-i: 1304
i:1304 HIT CHUNK END
(comment . ";;1284: r7 <- r7, r8")
(comment . ";;1288: r7 <- r0, 0x68\n")
(comment . ";;1292: r15 <- r7, 0x0\n")
(comment . ";;1296: r4 <- 0x2E")
(comment . ";;1300: b r1, 0")
chunklet-i: 1304; chunklet-start-i: 1304; chunklet-end-i: 1316
i: 1304
end-i: 1316
i: 1304
end-i: 1316
i: 1316
end-i: 1316
i:1316 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 1316; chunklet-start-i: 1320; chunklet-end-i: 1328
i: 1316
end-i: 1328
i: 1320
end-i: 1328
i: 1324
end-i: 1328
i: 1328
end-i: 1328
i:1328 HIT CHUNK END
(comment . ";; instruction 1316 not included")
(comment . ";;1320: r7 <- r0, 0x68\n")
(comment . ";;1324 b -44")
chunklet-i: 1328; chunklet-start-i: 1328; chunklet-end-i: 1352
i: 1328
end-i: 1352
i: 1328
end-i: 1352
i: 1332
end-i: 1352
i: 1336
end-i: 1352
i: 1348
end-i: 1352
i: 1352
end-i: 1352
i:1352 HIT CHUNK END
(comment . ";;1328: r9 <- 0x4")
(comment . ";;1332: r10 <- 0xD")
(comment . ";; literal r6")
(comment . ";;1348: b r6")
chunklet-i: 1352; chunklet-start-i: 1352; chunklet-end-i: 1360
i: 1352
end-i: 1360
i: 1352
end-i: 1360
i: 1356
end-i: 1360
i: 1360
end-i: 1360
i:1360 HIT CHUNK END
(comment . ";;1352: r3 <- r3, 0x1\n")
(comment . ";;1356 b 72")
chunklet-i: 1360; chunklet-start-i: 1360; chunklet-end-i: 1400
i: 1360
end-i: 1400
i: 1364
end-i: 1400
i: 1368
end-i: 1400
i: 1372
end-i: 1400
i: 1376
end-i: 1400
i: 1380
end-i: 1400
i: 1384
end-i: 1400
i: 1396
end-i: 1400
i: 1400
end-i: 1400
at header: 1400
(comment . ";;1360: r4 <- r1, 0x10\n")
(comment . ";;1364: r13 <- r1, 0x18\n")
(comment . ";;1368: r10 <- r1, 0x8\n")
(comment . ";;1372: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1396: b r6")
chunklet-i: 1400; chunklet-start-i: 1416; chunklet-end-i: 1432
i: 1400
end-i: 1432
at header: 1400
i: 1416
end-i: 1432
i: 1420
end-i: 1432
i: 1424
end-i: 1432
i: 1428
end-i: 1432
i: 1432
end-i: 1432
i:1432 HIT CHUNK END
(comment . ";;1416: r1 <- r1, r0")
(comment . ";;1420: r4 <- r1, 0x10\n")
(comment . ";;1424: r13 <- r1, 0x18\n")
(comment . ";;1428: r10 <- r1, 0x8\n")
chunklet-i: 1432; chunklet-start-i: 1432; chunklet-end-i: 1472
i: 1432
end-i: 1472
i: 1432
end-i: 1472
i: 1436
end-i: 1472
i: 1440
end-i: 1472
i: 1444
end-i: 1472
i: 1448
end-i: 1472
i: 1452
end-i: 1472
i: 1456
end-i: 1472
i: 1468
end-i: 1472
i: 1472
end-i: 1472
at header: 1472
(comment . ";;1432: r9 <- 0x8")
(comment . ";;1436: r4 <- r1, 0x10\n")
(comment . ";;1440: r13 <- r1, 0x18\n")
(comment . ";;1444: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1452: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1468: b r6")
chunklet-i: 1472; chunklet-start-i: 1488; chunklet-end-i: 1512
i: 1472
end-i: 1512
at header: 1472
i: 1488
end-i: 1512
i: 1492
end-i: 1512
i: 1496
end-i: 1512
i: 1500
end-i: 1512
i: 1504
end-i: 1512
i: 1508
end-i: 1512
i: 1512
end-i: 1512
i:1512 HIT CHUNK END
(comment . ";;1488: r1 <- r1, r0")
(comment . ";;1492: r11 <- 0x4")
(comment . ";;1496: r4 <- r1, 0x10\n")
(comment . ";;1500: r13 <- r1, 0x18\n")
(comment . ";;1508 b -316")
chunklet-i: 1512; chunklet-start-i: 1512; chunklet-end-i: 1532
i: 1512
end-i: 1532
i: 1512
end-i: 1532
i: 1516
end-i: 1532
i: 1528
end-i: 1532
i: 1532
end-i: 1532
i:1532 HIT CHUNK END
(comment . ";;1512: r9 <- 0xE")
(comment . ";; literal r6")
(comment . ";;1528: b r6")
chunklet-i: 1532; chunklet-start-i: 1532; chunklet-end-i: 1552
i: 1532
end-i: 1552
i: 1532
end-i: 1552
i: 1536
end-i: 1552
i: 1548
end-i: 1552
i: 1552
end-i: 1552
i:1552 HIT CHUNK END
(comment . ";;1532: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1548: b r6")
chunklet-i: 1552; chunklet-start-i: 1552; chunklet-end-i: 1560
i: 1552
end-i: 1560
i: 1552
end-i: 1560
i: 1556
end-i: 1560
i: 1560
end-i: 1560
i:1560 HIT CHUNK END
(comment . ";;1552: r3 <- r3, 0x1\n")
(comment . ";;1556 b 92")
chunklet-i: 1560; chunklet-start-i: 1560; chunklet-end-i: 1608
i: 1560
end-i: 1608
i: 1564
end-i: 1608
i: 1568
end-i: 1608
i: 1572
end-i: 1608
i: 1576
end-i: 1608
i: 1580
end-i: 1608
i: 1584
end-i: 1608
i: 1588
end-i: 1608
i: 1592
end-i: 1608
i: 1604
end-i: 1608
i: 1608
end-i: 1608
at header: 1608
(comment . ";;1560: r15 <- r1, 0x8\n")
(comment . ";;1564: r4 <- r1, 0x10\n")
(comment . ";;1568: r13 <- r1, 0x18\n")
(comment . ";;1572: r14 <- r1, 0x20\n")
(comment . ";;1576: r9 <- r1, 0x28\n")
(comment . ";;1580: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1604: b r6")
chunklet-i: 1608; chunklet-start-i: 1624; chunklet-end-i: 1652
i: 1608
end-i: 1652
at header: 1608
i: 1624
end-i: 1652
i: 1628
end-i: 1652
i: 1632
end-i: 1652
i: 1636
end-i: 1652
i: 1640
end-i: 1652
i: 1644
end-i: 1652
i: 1648
end-i: 1652
i: 1652
end-i: 1652
i:1652 HIT CHUNK END
(comment . ";;1628: r1 <- r1, r0")
(comment . ";;1632: r15 <- r1, 0x8\n")
(comment . ";;1636: r4 <- r1, 0x10\n")
(comment . ";;1640: r13 <- r1, 0x18\n")
(comment . ";;1644: r14 <- r1, 0x20\n")
(comment . ";;1648: r9 <- r1, 0x28\n")
chunklet-i: 1652; chunklet-start-i: 1652; chunklet-end-i: 1696
i: 1652
end-i: 1696
i: 1652
end-i: 1696
i: 1656
end-i: 1696
i: 1660
end-i: 1696
i: 1664
end-i: 1696
i: 1668
end-i: 1696
i: 1672
end-i: 1696
i: 1676
end-i: 1696
i: 1680
end-i: 1696
i: 1692
end-i: 1696
i: 1696
end-i: 1696
at header: 1696
(comment . ";;1652: r15 <- r1, 0x8\n")
(comment . ";;1656: r4 <- r1, 0x10\n")
(comment . ";;1660: r13 <- r1, 0x18\n")
(comment . ";;1664: r14 <- r1, 0x20\n")
(comment . ";;1668: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1676: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1692: b r6")
chunklet-i: 1696; chunklet-start-i: 1712; chunklet-end-i: 1740
i: 1696
end-i: 1740
at header: 1696
i: 1712
end-i: 1740
i: 1716
end-i: 1740
i: 1720
end-i: 1740
i: 1724
end-i: 1740
i: 1728
end-i: 1740
i: 1732
end-i: 1740
i: 1736
end-i: 1740
i: 1740
end-i: 1740
i:1740 HIT CHUNK END
(comment . ";;1712: r1 <- r1, r8")
(comment . ";;1716: r9 <- 0x4")
(comment . ";;1720: r15 <- r1, 0x8\n")
(comment . ";;1724: r4 <- r1, 0x10\n")
(comment . ";;1728: r13 <- r1, 0x18\n")
(comment . ";;1732: r14 <- r1, 0x20\n")
(comment . ";;1736 b -664")
chunklet-i: 1740; chunklet-start-i: 1740; chunklet-end-i: 1748
i: 1740
end-i: 1748
i: 1740
end-i: 1748
i: 1744
end-i: 1748
i: 1748
end-i: 1748
i:1748 HIT CHUNK END
(comment . ";;1740: r3 <- r3, 0x1\n")
(comment . ";;1744 b 84")
chunklet-i: 1748; chunklet-start-i: 1748; chunklet-end-i: 1792
i: 1748
end-i: 1792
i: 1752
end-i: 1792
i: 1756
end-i: 1792
i: 1760
end-i: 1792
i: 1764
end-i: 1792
i: 1768
end-i: 1792
i: 1772
end-i: 1792
i: 1776
end-i: 1792
i: 1788
end-i: 1792
i: 1792
end-i: 1792
at header: 1792
(comment . ";;1748: r15 <- r1, 0x8\n")
(comment . ";;1752: r4 <- r1, 0x10\n")
(comment . ";;1756: r13 <- r1, 0x18\n")
(comment . ";;1760: r9 <- r1, 0x20\n")
(comment . ";;1764: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1772: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1788: b r6")
chunklet-i: 1792; chunklet-start-i: 1808; chunklet-end-i: 1832
i: 1792
end-i: 1832
at header: 1792
i: 1808
end-i: 1832
i: 1812
end-i: 1832
i: 1816
end-i: 1832
i: 1820
end-i: 1832
i: 1824
end-i: 1832
i: 1828
end-i: 1832
i: 1832
end-i: 1832
i:1832 HIT CHUNK END
(comment . ";;1812: r1 <- r1, r8")
(comment . ";;1816: r15 <- r1, 0x8\n")
(comment . ";;1820: r4 <- r1, 0x10\n")
(comment . ";;1824: r13 <- r1, 0x18\n")
(comment . ";;1828: r9 <- r1, 0x20\n")
chunklet-i: 1832; chunklet-start-i: 1832; chunklet-end-i: 1872
i: 1832
end-i: 1872
i: 1832
end-i: 1872
i: 1836
end-i: 1872
i: 1840
end-i: 1872
i: 1844
end-i: 1872
i: 1848
end-i: 1872
i: 1852
end-i: 1872
i: 1856
end-i: 1872
i: 1868
end-i: 1872
i: 1872
end-i: 1872
at header: 1872
(comment . ";;1832: r15 <- r1, 0x8\n")
(comment . ";;1836: r4 <- r1, 0x10\n")
(comment . ";;1840: r13 <- r1, 0x18\n")
(comment . ";;1844: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1852: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1868: b r6")
chunklet-i: 1872; chunklet-start-i: 1888; chunklet-end-i: 1916
i: 1872
end-i: 1916
at header: 1872
i: 1888
end-i: 1916
i: 1892
end-i: 1916
i: 1896
end-i: 1916
i: 1900
end-i: 1916
i: 1904
end-i: 1916
i: 1908
end-i: 1916
i: 1912
end-i: 1916
i: 1916
end-i: 1916
i:1916 HIT CHUNK END
(comment . ";;1888: r1 <- r1, r0")
(comment . ";;1892: r14 <- 0x4")
(comment . ";;1896: r15 <- r1, 0x8\n")
(comment . ";;1900: r4 <- r1, 0x10\n")
(comment . ";;1904: r13 <- r1, 0x18\n")
(comment . ";;1912 b -868")
chunklet-i: 1916; chunklet-start-i: 1916; chunklet-end-i: 1936
i: 1916
end-i: 1936
i: 1916
end-i: 1936
i: 1920
end-i: 1936
i: 1932
end-i: 1936
i: 1936
end-i: 1936
i:1936 HIT CHUNK END
(comment . ";;1916: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1932: b r6")
chunklet-i: 1936; chunklet-start-i: 1936; chunklet-end-i: 1944
i: 1936
end-i: 1944
i: 1936
end-i: 1944
i: 1940
end-i: 1944
i: 1944
end-i: 1944
i:1944 HIT CHUNK END
(comment . ";;1936: r3 <- r3, 0x1\n")
(comment . ";;1940 b 76")
chunklet-i: 1944; chunklet-start-i: 1944; chunklet-end-i: 1984
i: 1944
end-i: 1984
i: 1948
end-i: 1984
i: 1952
end-i: 1984
i: 1956
end-i: 1984
i: 1960
end-i: 1984
i: 1964
end-i: 1984
i: 1968
end-i: 1984
i: 1980
end-i: 1984
i: 1984
end-i: 1984
at header: 1984
(comment . ";;1944: r15 <- r1, 0x8\n")
(comment . ";;1948: r4 <- r1, 0x10\n")
(comment . ";;1952: r9 <- r1, 0x18\n")
(comment . ";;1956: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1964: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1980: b r6")
chunklet-i: 1984; chunklet-start-i: 2000; chunklet-end-i: 2020
i: 1984
end-i: 2020
at header: 1984
i: 2000
end-i: 2020
i: 2004
end-i: 2020
i: 2008
end-i: 2020
i: 2012
end-i: 2020
i: 2016
end-i: 2020
i: 2020
end-i: 2020
i:2020 HIT CHUNK END
(comment . ";;2004: r1 <- r1, r0")
(comment . ";;2008: r15 <- r1, 0x8\n")
(comment . ";;2012: r4 <- r1, 0x10\n")
(comment . ";;2016: r9 <- r1, 0x18\n")
chunklet-i: 2020; chunklet-start-i: 2020; chunklet-end-i: 2056
i: 2020
end-i: 2056
i: 2020
end-i: 2056
i: 2024
end-i: 2056
i: 2028
end-i: 2056
i: 2032
end-i: 2056
i: 2036
end-i: 2056
i: 2040
end-i: 2056
i: 2052
end-i: 2056
i: 2056
end-i: 2056
at header: 2056
(comment . ";;2020: r15 <- r1, 0x8\n")
(comment . ";;2024: r4 <- r1, 0x10\n")
(comment . ";;2028: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2036: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2052: b r6")
chunklet-i: 2056; chunklet-start-i: 2072; chunklet-end-i: 2092
i: 2056
end-i: 2092
at header: 2056
i: 2072
end-i: 2092
i: 2076
end-i: 2092
i: 2080
end-i: 2092
i: 2084
end-i: 2092
i: 2088
end-i: 2092
i: 2092
end-i: 2092
i:2092 HIT CHUNK END
(comment . ";;2072: r1 <- r1, r8")
(comment . ";;2076: r9 <- 0x4")
(comment . ";;2080: r15 <- r1, 0x8\n")
(comment . ";;2084: r4 <- r1, 0x10\n")
(comment . ";;2088 b -1120")
chunklet-i: 2092; chunklet-start-i: 2092; chunklet-end-i: 2100
i: 2092
end-i: 2100
i: 2092
end-i: 2100
i: 2096
end-i: 2100
i: 2100
end-i: 2100
i:2100 HIT CHUNK END
(comment . ";;2092: r3 <- r3, 0x1\n")
(comment . ";;2096 b 68")
chunklet-i: 2100; chunklet-start-i: 2100; chunklet-end-i: 2136
i: 2100
end-i: 2136
i: 2104
end-i: 2136
i: 2108
end-i: 2136
i: 2112
end-i: 2136
i: 2116
end-i: 2136
i: 2120
end-i: 2136
i: 2132
end-i: 2136
i: 2136
end-i: 2136
at header: 2136
(comment . ";;2100: r15 <- r1, 0x8\n")
(comment . ";;2104: r9 <- r1, 0x10\n")
(comment . ";;2108: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2116: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2132: b r6")
chunklet-i: 2136; chunklet-start-i: 2152; chunklet-end-i: 2168
i: 2136
end-i: 2168
at header: 2136
i: 2152
end-i: 2168
i: 2156
end-i: 2168
i: 2160
end-i: 2168
i: 2164
end-i: 2168
i: 2168
end-i: 2168
i:2168 HIT CHUNK END
(comment . ";;2156: r1 <- r1, r8")
(comment . ";;2160: r15 <- r1, 0x8\n")
(comment . ";;2164: r9 <- r1, 0x10\n")
chunklet-i: 2168; chunklet-start-i: 2168; chunklet-end-i: 2200
i: 2168
end-i: 2200
i: 2168
end-i: 2200
i: 2172
end-i: 2200
i: 2176
end-i: 2200
i: 2180
end-i: 2200
i: 2184
end-i: 2200
i: 2196
end-i: 2200
i: 2200
end-i: 2200
at header: 2200
(comment . ";;2168: r15 <- r1, 0x8\n")
(comment . ";;2172: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2196: b r6")
chunklet-i: 2200; chunklet-start-i: 2216; chunklet-end-i: 2228
i: 2200
end-i: 2228
at header: 2200
i: 2216
end-i: 2228
i: 2220
end-i: 2228
i: 2224
end-i: 2228
i: 2228
end-i: 2228
i:2228 HIT CHUNK END
(comment . ";;2216: r1 <- r1, r0")
(comment . ";;2220: r15 <- r1, 0x8\n")
(comment . ";;2224 b -1284")
chunklet-i: 2228; chunklet-start-i: 2228; chunklet-end-i: 2236
i: 2228
end-i: 2236
i: 2228
end-i: 2236
i: 2232
end-i: 2236
i: 2236
end-i: 2236
i:2236 HIT CHUNK END
(comment . ";;2228: r3 <- r3, 0x1\n")
(comment . ";;2232 b 80")
chunklet-i: 2236; chunklet-start-i: 2236; chunklet-end-i: 2280
i: 2236
end-i: 2280
i: 2240
end-i: 2280
i: 2244
end-i: 2280
i: 2248
end-i: 2280
i: 2252
end-i: 2280
i: 2256
end-i: 2280
i: 2260
end-i: 2280
i: 2264
end-i: 2280
i: 2276
end-i: 2280
i: 2280
end-i: 2280
at header: 2280
(comment . ";;2236: r15 <- r1, 0x8\n")
(comment . ";;2240: r13 <- r1, 0x10\n")
(comment . ";;2244: r12 <- r1, 0x18\n")
(comment . ";;2248: r4 <- r1, 0x20\n")
(comment . ";;2252: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2260: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2276: b r6")
chunklet-i: 2280; chunklet-start-i: 2296; chunklet-end-i: 2316
i: 2280
end-i: 2316
at header: 2280
i: 2296
end-i: 2316
i: 2300
end-i: 2316
i: 2304
end-i: 2316
i: 2308
end-i: 2316
i: 2312
end-i: 2316
i: 2316
end-i: 2316
i:2316 HIT CHUNK END
(comment . ";;2296: r1 <- r1, r8")
(comment . ";;2300: r15 <- r1, 0x8\n")
(comment . ";;2304: r13 <- r1, 0x10\n")
(comment . ";;2308: r12 <- r1, 0x18\n")
(comment . ";;2312: r4 <- r1, 0x20\n")
chunklet-i: 2316; chunklet-start-i: 2316; chunklet-end-i: 2368
i: 2316
end-i: 2368
i: 2316
end-i: 2368
i: 2320
end-i: 2368
i: 2324
end-i: 2368
i: 2328
end-i: 2368
i: 2332
end-i: 2368
i: 2336
end-i: 2368
i: 2340
end-i: 2368
i: 2344
end-i: 2368
i: 2348
end-i: 2368
i: 2352
end-i: 2368
i: 2364
end-i: 2368
i: 2368
end-i: 2368
at header: 2368
(comment . ";;2316: r9 <- 0x4")
(comment . ";;2320: r10 <- 0xC")
(comment . ";;2324: r15 <- r1, 0x8\n")
(comment . ";;2328: r13 <- r1, 0x10\n")
(comment . ";;2332: r12 <- r1, 0x18\n")
(comment . ";;2336: r4 <- r1, 0x20\n")
(comment . ";;2340: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2348: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2364: b r6")
chunklet-i: 2368; chunklet-start-i: 2384; chunklet-end-i: 2416
i: 2368
end-i: 2416
at header: 2368
i: 2384
end-i: 2416
i: 2388
end-i: 2416
i: 2392
end-i: 2416
i: 2396
end-i: 2416
i: 2400
end-i: 2416
i: 2404
end-i: 2416
i: 2408
end-i: 2416
i: 2412
end-i: 2416
i: 2416
end-i: 2416
i:2416 HIT CHUNK END
(comment . ";;2384: r1 <- r1, r8")
(comment . ";;2388: r14 <- 0x4")
(comment . ";;2392: r15 <- r1, 0x8\n")
(comment . ";;2396: r13 <- r1, 0x10\n")
(comment . ";;2400: r12 <- r1, 0x18\n")
(comment . ";;2404: r4 <- r1, 0x20\n")
(comment . ";;2408: r14 <- 0x6")
(comment . ";;2412 b -2292")
chunklet-i: 2416; chunklet-start-i: 2416; chunklet-end-i: 2420
i: 2416
end-i: 2420
i: 2420
end-i: 2420
i:2420 HIT CHUNK END
(comment . ";;2416 b -1500")
chunklet-i: 2420; chunklet-start-i: 2420; chunklet-end-i: 2440
i: 2420
end-i: 2440
i: 2420
end-i: 2440
i: 2424
end-i: 2440
i: 2436
end-i: 2440
i: 2440
end-i: 2440
i:2440 HIT CHUNK END
(comment . ";;2420: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;2436: b r6")
chunklet-i: 2440; chunklet-start-i: 2440; chunklet-end-i: 2448
i: 2440
end-i: 2448
i: 2440
end-i: 2448
i: 2444
end-i: 2448
i: 2448
end-i: 2448
i:2448 HIT CHUNK END
(comment . ";;2440: r3 <- r3, 0x1\n")
(comment . ";;2444 b 76")
chunklet-i: 2448; chunklet-start-i: 2448; chunklet-end-i: 2488
i: 2448
end-i: 2488
i: 2452
end-i: 2488
i: 2456
end-i: 2488
i: 2460
end-i: 2488
i: 2464
end-i: 2488
i: 2468
end-i: 2488
i: 2472
end-i: 2488
i: 2484
end-i: 2488
i: 2488
end-i: 2488
at header: 2488
(comment . ";;2448: r15 <- r1, 0x8\n")
(comment . ";;2452: r13 <- r1, 0x10\n")
(comment . ";;2456: r9 <- r1, 0x18\n")
(comment . ";;2460: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2468: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2484: b r6")
chunklet-i: 2488; chunklet-start-i: 2504; chunklet-end-i: 2524
i: 2488
end-i: 2524
at header: 2488
i: 2504
end-i: 2524
i: 2508
end-i: 2524
i: 2512
end-i: 2524
i: 2516
end-i: 2524
i: 2520
end-i: 2524
i: 2524
end-i: 2524
i:2524 HIT CHUNK END
(comment . ";;2508: r1 <- r1, r0")
(comment . ";;2512: r15 <- r1, 0x8\n")
(comment . ";;2516: r13 <- r1, 0x10\n")
(comment . ";;2520: r9 <- r1, 0x18\n")
chunklet-i: 2524; chunklet-start-i: 2524; chunklet-end-i: 2560
i: 2524
end-i: 2560
i: 2524
end-i: 2560
i: 2528
end-i: 2560
i: 2532
end-i: 2560
i: 2536
end-i: 2560
i: 2540
end-i: 2560
i: 2544
end-i: 2560
i: 2556
end-i: 2560
i: 2560
end-i: 2560
at header: 2560
(comment . ";;2524: r15 <- r1, 0x8\n")
(comment . ";;2528: r13 <- r1, 0x10\n")
(comment . ";;2532: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2540: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2556: b r6")
chunklet-i: 2560; chunklet-start-i: 2576; chunklet-end-i: 2596
i: 2560
end-i: 2596
at header: 2560
i: 2576
end-i: 2596
i: 2580
end-i: 2596
i: 2584
end-i: 2596
i: 2588
end-i: 2596
i: 2592
end-i: 2596
i: 2596
end-i: 2596
i:2596 HIT CHUNK END
(comment . ";;2576: r1 <- r1, r8")
(comment . ";;2580: r9 <- 0x4")
(comment . ";;2584: r15 <- r1, 0x8\n")
(comment . ";;2588: r13 <- r1, 0x10\n")
(comment . ";;2592 b -2548")
chunklet-i: 2596; chunklet-start-i: 2596; chunklet-end-i: 2612
i: 2596
end-i: 2612
i: 2596
end-i: 2612
i: 2608
end-i: 2612
i: 2612
end-i: 2612
i:2612 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;2608: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: trial
instruction range for chunk: 0 8
instruction range for chunk: 8 24
instruction range for chunk: 24 48
instruction range for chunk: 48 76
instruction range for chunk: 80 88
instruction range for chunk: 88 112
instruction range for chunk: 112 124
instruction range for chunk: 124 132
instruction range for chunk: 132 140
instruction range for chunk: 140 164
instruction range for chunk: 164 188
instruction range for chunk: 188 192
instruction range for chunk: 192 204
instruction range for chunk: 204 224
instruction range for chunk: 224 236
instruction range for chunk: 236 256
instruction range for chunk: 256 276
instruction range for chunk: 276 288
instruction range for chunk: 288 304
instruction range for chunk: 304 312
instruction range for chunk: 312 360
instruction range for chunk: 376 400
instruction range for chunk: 400 448
instruction range for chunk: 464 496
instruction range for chunk: 496 508
instruction range for chunk: 508 520
instruction range for chunk: 520 568
instruction range for chunk: 584 608
instruction range for chunk: 608 624
instruction range for chunk: 624 632
instruction range for chunk: 632 680
instruction range for chunk: 696 708
instruction range for chunk: 708 716
instruction range for chunk: 716 724
instruction range for chunk: 724 732
instruction range for chunk: 732 768
instruction range for chunk: 784 792
instruction range for chunk: 792 824
instruction range for chunk: 840 864
instruction range for chunk: 864 900
instruction range for chunk: 900 908
instruction range for chunk: 908 916
instruction range for chunk: 916 932
instruction range for chunk: 932 944
instruction range for chunk: 944 956
instruction range for chunk: 956 1008
instruction range for chunk: 1008 1016
instruction range for chunk: 1016 1032
instruction range for chunk: 1048 1064
instruction range for chunk: 1064 1076
instruction range for chunk: 1080 1088
instruction range for chunk: 1088 1128
instruction range for chunk: 1144 1164
instruction range for chunk: 1164 1200
instruction range for chunk: 1216 1240
instruction range for chunk: 1240 1252
instruction range for chunk: 1256 1264
instruction range for chunk: 1264 1296
instruction range for chunk: 1312 1336
instruction range for chunk: 1336 1340
instruction range for chunk: 1340 1360
instruction range for chunk: 1360 1380
instruction range for chunk: 1380 1416
instruction range for chunk: 1432 1456
instruction range for chunk: 1456 1488
instruction range for chunk: 1504 1520
instruction range for chunk: 1520 1552
instruction range for chunk: 1568 1584
instruction range for chunk: 1584 1620
instruction range for chunk: 1620 1628
instruction range for chunk: 1628 1636
instruction range for chunk: 1636 1652
instruction range for chunk: 1652 1664
instruction range for chunk: 1664 1676
instruction range for chunk: 1676 1700
instruction range for chunk: 1700 1712
instruction range for chunk: 1716 1724
instruction range for chunk: 1724 1732
instruction range for chunk: 1732 1768
instruction range for chunk: 1784 1796
instruction range for chunk: 1796 1832
instruction range for chunk: 1848 1860
instruction range for chunk: 1860 1868
instruction range for chunk: 1868 1904
instruction range for chunk: 1920 1936
instruction range for chunk: 1936 1968
instruction range for chunk: 1984 2004
instruction range for chunk: 2004 2012
instruction range for chunk: 2012 2048
instruction range for chunk: 2064 2076
instruction range for chunk: 2076 2112
instruction range for chunk: 2128 2152
instruction range for chunk: 2152 2156
instruction range for chunk: 2156 2164
instruction range for chunk: 2164 2200
instruction range for chunk: 2216 2232
instruction range for chunk: 2232 2264
instruction range for chunk: 2280 2296
instruction range for chunk: 2296 2308
instruction range for chunk: 2312 2316
instruction range for chunk: 2316 2328
instruction range for chunk: 2332 2336
instruction range for chunk: 2336 2352
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 2328")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 24
i: 8
end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;8: r9 <- r1, 0x8\n")
(comment . ";;12: r15 <- r0, 0x58\n")
(comment . ";;16: r1 <- r15")
(comment . ";;20 b 2292")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 48
i: 24
end-i: 48
i: 24
end-i: 48
i: 28
end-i: 48
i: 32
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;24: r15 <- 0x0")
(comment . ";;28: r5 <- r2, r9")
(comment . ";;32: r2 <- r2, r0")
(comment . ";;36: r14 <- r0, 0x68\n")
(comment . ";;40: r14 <- r2")
(comment . ";;44 b 2248")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 76
i: 48
end-i: 76
i: 48
end-i: 76
i: 52
end-i: 76
i: 56
end-i: 76
i: 60
end-i: 76
i: 64
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;48: r15 <- r5, 0x7\n")
(comment . ";;52: r15 <- 0x1E")
(comment . ";;56: r15 <- r5, 0xF\n")
(comment . ";;60: r5 <- r1, 0x10\n")
(comment . ";; literal r15")
chunklet-i: 76; chunklet-start-i: 80; chunklet-end-i: 88
i: 76
end-i: 88
i: 80
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
i:88 HIT CHUNK END
(comment . ";; instruction 76 not included")
(comment . ";;80: r7 <- r1, 0x18\n")
(comment . ";;84: r4 <- 0x0")
chunklet-i: 88; chunklet-start-i: 88; chunklet-end-i: 112
i: 88
end-i: 112
i: 88
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
i:112 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;100: r10 <- r9, 0x5\n")
(comment . ";;104: r10 <- 0x1E")
(comment . ";;108 b 2044")
chunklet-i: 112; chunklet-start-i: 112; chunklet-end-i: 124
i: 112
end-i: 124
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r15 <- r4, r10")
(comment . ";;116: r15 <- 0x7")
(comment . ";;120 b 1880")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;124: r4 <- r10")
(comment . ";;128 b 1452")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 140
i: 132
end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";;132: r3 <- r3, 0x1\n")
(comment . ";;136 b 1380")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 164
i: 140
end-i: 164
i: 140
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;152: r15 <- r9, 0x5\n")
(comment . ";;156: r15 <- 0x1E")
(comment . ";;160 b 1292")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 188
i: 164
end-i: 188
i: 164
end-i: 188
i: 176
end-i: 188
i: 180
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;176: r14 <- r9, 0x5\n")
(comment . ";;180: r14 <- 0x1E")
(comment . ";;184 b 1192")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";;188: r9 <- 0xE")
chunklet-i: 192; chunklet-start-i: 192; chunklet-end-i: 204
i: 192
end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";;192: r14 <- r9, r7")
(comment . ";;196: r14 <- 0x7")
(comment . ";;200 b 1156")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 224
i: 204
end-i: 224
i: 208
end-i: 224
i: 212
end-i: 224
i: 216
end-i: 224
i: 220
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";;204: r13 <- r9, 0x1\n")
(comment . ";;208: r14 <- r13, r1")
(comment . ";;212: r14 <- r14, r8")
(comment . ";;216: r4 <- r14")
(comment . ";;220 b 1136")
chunklet-i: 224; chunklet-start-i: 224; chunklet-end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";;224: r14 <- r4, r13")
(comment . ";;228: r14 <- 0x7")
(comment . ";;232 b 1124")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 256
i: 236
end-i: 256
i: 240
end-i: 256
i: 244
end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;236: r14 <- r4, r9")
(comment . ";;240: r10 <- r9, r14")
(comment . ";;244: r14 <- r15, r7")
(comment . ";;248: r14 <- 0x7")
(comment . ";;252 b 1084")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 276
i: 256
end-i: 276
i: 260
end-i: 276
i: 264
end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";;256: r13 <- r15, 0x1\n")
(comment . ";;260: r14 <- r13, r1")
(comment . ";;264: r14 <- r14, r8")
(comment . ";;268: r10 <- r14")
(comment . ";;272 b 1064")
chunklet-i: 276; chunklet-start-i: 276; chunklet-end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
i:288 HIT CHUNK END
(comment . ";;276: r14 <- r10, r13")
(comment . ";;280: r14 <- 0x7")
(comment . ";;284 b 1052")
chunklet-i: 288; chunklet-start-i: 288; chunklet-end-i: 304
i: 288
end-i: 304
i: 292
end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;288: r14 <- r10, r9")
(comment . ";;292: r9 <- r15, r14")
(comment . ";;296: r9 <- 0x0")
(comment . ";;300 b 404")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 312
i: 304
end-i: 312
i: 308
end-i: 312
i: 312
end-i: 312
i:312 HIT CHUNK END
(comment . ";;304: r9 <- 0x7")
(comment . ";;308 b 952")
chunklet-i: 312; chunklet-start-i: 312; chunklet-end-i: 360
i: 312
end-i: 360
i: 312
end-i: 360
i: 316
end-i: 360
i: 320
end-i: 360
i: 324
end-i: 360
i: 328
end-i: 360
i: 340
end-i: 360
i: 344
end-i: 360
i: 348
end-i: 360
i: 352
end-i: 360
i: 356
end-i: 360
i: 360
end-i: 360
at header: 360
(comment . ";;312: r9 <- 0x4")
(comment . ";;316: r10 <- r1, 0x8\n")
(comment . ";;320: r4 <- r1, 0x20\n")
(comment . ";;324: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;340: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;348: r15 <- r1, 0x0\n")
(comment . ";;352: r4 <- 0x2")
(comment . ";;356: b r5, 13")
chunklet-i: 360; chunklet-start-i: 376; chunklet-end-i: 400
i: 360
end-i: 400
at header: 360
i: 376
end-i: 400
i: 380
end-i: 400
i: 384
end-i: 400
i: 388
end-i: 400
i: 392
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
i:400 HIT CHUNK END
(comment . ";;376: r1 <- r1, r8")
(comment . ";;380: r15 <- 0x4")
(comment . ";;384: r4 <- r1, 0x20\n")
(comment . ";;388: r15 <- 0x6")
(comment . ";;396 b 308")
chunklet-i: 400; chunklet-start-i: 400; chunklet-end-i: 448
i: 400
end-i: 448
i: 404
end-i: 448
i: 408
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 436
end-i: 448
i: 440
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;400: r9 <- 0x4")
(comment . ";;404: r10 <- r1, 0x8\n")
(comment . ";;408: r4 <- r1, 0x20\n")
(comment . ";;412: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;428: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";;440: r4 <- 0x2")
(comment . ";;444: b r5, 13")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 496
i: 448
end-i: 496
at header: 448
i: 464
end-i: 496
i: 468
end-i: 496
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 484
end-i: 496
i: 488
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";;464: r1 <- r1, r8")
(comment . ";;468: r15 <- 0x4")
(comment . ";;472: r4 <- r1, 0x20\n")
(comment . ";;476: r14 <- r1, 0x10\n")
(comment . ";;480: r14 <- r14, r7")
(comment . ";;484: r15 <- r14, 0x0\n")
(comment . ";;488: r15 <- 0x7")
(comment . ";;492 b 24")
chunklet-i: 496; chunklet-start-i: 496; chunklet-end-i: 508
i: 496
end-i: 508
i: 500
end-i: 508
i: 504
end-i: 508
i: 508
end-i: 508
i:508 HIT CHUNK END
(comment . ";;496: r7 <- r0, 0x68\n")
(comment . ";;500: r2 <- r7")
(comment . ";;504 b 732")
chunklet-i: 508; chunklet-start-i: 508; chunklet-end-i: 520
i: 508
end-i: 520
i: 508
end-i: 520
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;508: r7 <- r7, r8")
(comment . ";;512: r7 <- r0, 0x68\n")
(comment . ";;516: r14 <- r7, 0x0\n")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 568
i: 520
end-i: 568
i: 520
end-i: 568
i: 524
end-i: 568
i: 528
end-i: 568
i: 532
end-i: 568
i: 536
end-i: 568
i: 548
end-i: 568
i: 552
end-i: 568
i: 556
end-i: 568
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
at header: 568
(comment . ";;520: r15 <- r1, 0x10\n")
(comment . ";;524: r9 <- r15, 0x7\n")
(comment . ";;528: r4 <- r1, 0x20\n")
(comment . ";;532: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;548: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;556: r15 <- r1, 0x0\n")
(comment . ";;560: r4 <- 0x1")
(comment . ";;564: b r5, 13")
chunklet-i: 568; chunklet-start-i: 584; chunklet-end-i: 608
i: 568
end-i: 608
at header: 568
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 596
end-i: 608
i: 600
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
i:608 HIT CHUNK END
(comment . ";;584: r1 <- r1, r8")
(comment . ";;588: r15 <- 0x4")
(comment . ";;592: r4 <- r1, 0x20\n")
(comment . ";;596: r15 <- 0x6")
(comment . ";;604 b 256")
chunklet-i: 608; chunklet-start-i: 608; chunklet-end-i: 624
i: 608
end-i: 624
i: 612
end-i: 624
i: 616
end-i: 624
i: 620
end-i: 624
i: 624
end-i: 624
i:624 HIT CHUNK END
(comment . ";;608: r15 <- r1, 0x10\n")
(comment . ";;612: r9 <- r15, 0x7\n")
(comment . ";;616: r9 <- 0x0")
(comment . ";;620 b 240")
chunklet-i: 624; chunklet-start-i: 624; chunklet-end-i: 632
i: 624
end-i: 632
i: 628
end-i: 632
i: 632
end-i: 632
i:632 HIT CHUNK END
(comment . ";;624: r9 <- 0x7")
(comment . ";;628 b 160")
chunklet-i: 632; chunklet-start-i: 632; chunklet-end-i: 680
i: 632
end-i: 680
i: 632
end-i: 680
i: 636
end-i: 680
i: 640
end-i: 680
i: 644
end-i: 680
i: 648
end-i: 680
i: 660
end-i: 680
i: 664
end-i: 680
i: 668
end-i: 680
i: 672
end-i: 680
i: 676
end-i: 680
i: 680
end-i: 680
at header: 680
(comment . ";;632: r9 <- 0x4")
(comment . ";;636: r10 <- r1, 0x8\n")
(comment . ";;640: r4 <- r1, 0x20\n")
(comment . ";;644: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;660: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;668: r15 <- r1, 0x0\n")
(comment . ";;672: r4 <- 0x2")
(comment . ";;676: b r5, 13")
chunklet-i: 680; chunklet-start-i: 696; chunklet-end-i: 708
i: 680
end-i: 708
at header: 680
i: 696
end-i: 708
i: 700
end-i: 708
i: 704
end-i: 708
i: 708
end-i: 708
i:708 HIT CHUNK END
(comment . ";;700: r1 <- r1, r8")
(comment . ";;704: r4 <- r1, 0x20\n")
chunklet-i: 708; chunklet-start-i: 708; chunklet-end-i: 716
i: 708
end-i: 716
i: 708
end-i: 716
i: 712
end-i: 716
i: 716
end-i: 716
i:716 HIT CHUNK END
(comment . ";;708: r4 <- 0x7")
(comment . ";;712 b 16")
chunklet-i: 716; chunklet-start-i: 716; chunklet-end-i: 724
i: 716
end-i: 724
i: 720
end-i: 724
i: 724
end-i: 724
i:724 HIT CHUNK END
(comment . ";;716: r15 <- r4, 0x8\n")
(comment . ";;720 b 8")
chunklet-i: 724; chunklet-start-i: 724; chunklet-end-i: 732
i: 724
end-i: 732
i: 728
end-i: 732
i: 732
end-i: 732
i:732 HIT CHUNK END
(comment . ";;724: r4 <- 0xF")
(comment . ";;728 b -644")
chunklet-i: 732; chunklet-start-i: 732; chunklet-end-i: 768
i: 732
end-i: 768
i: 732
end-i: 768
i: 736
end-i: 768
i: 740
end-i: 768
i: 744
end-i: 768
i: 748
end-i: 768
i: 752
end-i: 768
i: 764
end-i: 768
i: 768
end-i: 768
at header: 768
(comment . ";;732: r9 <- 0x8")
(comment . ";;736: r10 <- 0x4")
(comment . ";;740: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;748: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;764: b r6")
chunklet-i: 768; chunklet-start-i: 784; chunklet-end-i: 792
i: 768
end-i: 792
at header: 768
i: 784
end-i: 792
i: 788
end-i: 792
i: 792
end-i: 792
i:792 HIT CHUNK END
(comment . ";;784: r1 <- r1, r0")
(comment . ";;788 b -704")
chunklet-i: 792; chunklet-start-i: 792; chunklet-end-i: 824
i: 792
end-i: 824
i: 792
end-i: 824
i: 796
end-i: 824
i: 800
end-i: 824
i: 804
end-i: 824
i: 808
end-i: 824
i: 820
end-i: 824
i: 824
end-i: 824
at header: 824
(comment . ";;792: r4 <- r1, 0x20\n")
(comment . ";;796: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;804: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;820: b r6")
chunklet-i: 824; chunklet-start-i: 840; chunklet-end-i: 864
i: 824
end-i: 864
at header: 824
i: 840
end-i: 864
i: 844
end-i: 864
i: 848
end-i: 864
i: 852
end-i: 864
i: 856
end-i: 864
i: 860
end-i: 864
i: 864
end-i: 864
i:864 HIT CHUNK END
(comment . ";;840: r1 <- r1, r8")
(comment . ";;844: r15 <- 0x4")
(comment . ";;848: r4 <- r1, 0x20\n")
(comment . ";;852: r15 <- 0x6")
(comment . ";;860 b -232")
chunklet-i: 864; chunklet-start-i: 864; chunklet-end-i: 900
i: 864
end-i: 900
i: 864
end-i: 900
i: 876
end-i: 900
i: 888
end-i: 900
i: 892
end-i: 900
i: 896
end-i: 900
i: 900
end-i: 900
i:900 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;888: r10 <- r9, 0x5\n")
(comment . ";;892: r10 <- 0x1E")
(comment . ";;896 b 264")
chunklet-i: 900; chunklet-start-i: 900; chunklet-end-i: 908
i: 900
end-i: 908
i: 900
end-i: 908
i: 904
end-i: 908
i: 908
end-i: 908
i:908 HIT CHUNK END
(comment . ";;900: r10 <- 0x7")
(comment . ";;904 b 180")
chunklet-i: 908; chunklet-start-i: 908; chunklet-end-i: 916
i: 908
end-i: 916
i: 912
end-i: 916
i: 916
end-i: 916
i:916 HIT CHUNK END
(comment . ";;908: r14 <- r10, 0x8\n")
(comment . ";;912 b 172")
chunklet-i: 916; chunklet-start-i: 916; chunklet-end-i: 932
i: 916
end-i: 932
i: 916
end-i: 932
i: 920
end-i: 932
i: 924
end-i: 932
i: 928
end-i: 932
i: 932
end-i: 932
i:932 HIT CHUNK END
(comment . ";;916: r13 <- r15, r5")
(comment . ";;920: r14 <- r13, 0x0\n")
(comment . ";;924: r14 <- 0x7")
(comment . ";;928 b 24")
chunklet-i: 932; chunklet-start-i: 932; chunklet-end-i: 944
i: 932
end-i: 944
i: 936
end-i: 944
i: 940
end-i: 944
i: 944
end-i: 944
i:944 HIT CHUNK END
(comment . ";;932: r7 <- r0, 0x68\n")
(comment . ";;936: r2 <- r7")
(comment . ";;940 b 120")
chunklet-i: 944; chunklet-start-i: 944; chunklet-end-i: 956
i: 944
end-i: 956
i: 944
end-i: 956
i: 948
end-i: 956
i: 952
end-i: 956
i: 956
end-i: 956
i:956 HIT CHUNK END
(comment . ";;944: r7 <- r7, r8")
(comment . ";;948: r7 <- r0, 0x68\n")
(comment . ";;952: r13 <- r7, 0x0\n")
chunklet-i: 956; chunklet-start-i: 956; chunklet-end-i: 1008
i: 956
end-i: 1008
i: 956
end-i: 1008
i: 968
end-i: 1008
i: 972
end-i: 1008
i: 976
end-i: 1008
i: 980
end-i: 1008
i: 984
end-i: 1008
i: 988
end-i: 1008
i: 992
end-i: 1008
i: 996
end-i: 1008
i: 1000
end-i: 1008
i: 1004
end-i: 1008
i: 1008
end-i: 1008
i:1008 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;968: r14 <- r15, 0xD\n")
(comment . ";;972: r9 <- 0xE")
(comment . ";;976: r4 <- r1, 0x20\n")
(comment . ";;980: r1 <- r1, r8")
(comment . ";;984: r8 <- r1, 0x-10\n")
(comment . ";; adr r15")
(comment . ";;992: r15 <- r1, 0x0\n")
(comment . ";;996: r15 <- r8, r7")
(comment . ";;1000: r15 <- 0x5")
(comment . ";;1004 b 8")
chunklet-i: 1008; chunklet-start-i: 1008; chunklet-end-i: 1016
i: 1008
end-i: 1016
i: 1012
end-i: 1016
i: 1016
end-i: 1016
i:1016 HIT CHUNK END
(comment . ";;1008: r4 <- 0x1")
(comment . ";;1012: b r8, 3")
chunklet-i: 1016; chunklet-start-i: 1016; chunklet-end-i: 1032
i: 1016
end-i: 1032
i: 1016
end-i: 1032
i: 1028
end-i: 1032
i: 1032
end-i: 1032
at header: 1032
(comment . ";; literal r6")
(comment . ";;1028: b r6")
chunklet-i: 1032; chunklet-start-i: 1048; chunklet-end-i: 1064
i: 1032
end-i: 1064
at header: 1032
i: 1048
end-i: 1064
i: 1052
end-i: 1064
i: 1056
end-i: 1064
i: 1060
end-i: 1064
i: 1064
end-i: 1064
i:1064 HIT CHUNK END
(comment . ";;1052: r1 <- r1, r8")
(comment . ";;1056: r4 <- r1, 0x20\n")
(comment . ";;1060 b -356")
chunklet-i: 1064; chunklet-start-i: 1064; chunklet-end-i: 1076
i: 1064
end-i: 1076
i: 1064
end-i: 1076
i: 1076
end-i: 1076
i:1076 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 1076; chunklet-start-i: 1080; chunklet-end-i: 1088
i: 1076
end-i: 1088
i: 1080
end-i: 1088
i: 1084
end-i: 1088
i: 1088
end-i: 1088
i:1088 HIT CHUNK END
(comment . ";; instruction 1076 not included")
(comment . ";;1080: r7 <- r0, 0x68\n")
(comment . ";;1084 b -144")
chunklet-i: 1088; chunklet-start-i: 1088; chunklet-end-i: 1128
i: 1088
end-i: 1128
i: 1088
end-i: 1128
i: 1092
end-i: 1128
i: 1096
end-i: 1128
i: 1100
end-i: 1128
i: 1104
end-i: 1128
i: 1108
end-i: 1128
i: 1112
end-i: 1128
i: 1124
end-i: 1128
i: 1128
end-i: 1128
at header: 1128
(comment . ";;1088: r9 <- 0x8")
(comment . ";;1092: r4 <- r1, 0x20\n")
(comment . ";;1096: r15 <- r1, 0x28\n")
(comment . ";;1100: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1108: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1124: b r6")
chunklet-i: 1128; chunklet-start-i: 1144; chunklet-end-i: 1164
i: 1128
end-i: 1164
at header: 1128
i: 1144
end-i: 1164
i: 1148
end-i: 1164
i: 1152
end-i: 1164
i: 1156
end-i: 1164
i: 1160
end-i: 1164
i: 1164
end-i: 1164
i:1164 HIT CHUNK END
(comment . ";;1144: r1 <- r1, r0")
(comment . ";;1148: r14 <- 0x4")
(comment . ";;1152: r4 <- r1, 0x20\n")
(comment . ";;1156: r15 <- r1, 0x28\n")
(comment . ";;1160 b -248")
chunklet-i: 1164; chunklet-start-i: 1164; chunklet-end-i: 1200
i: 1164
end-i: 1200
i: 1164
end-i: 1200
i: 1168
end-i: 1200
i: 1172
end-i: 1200
i: 1176
end-i: 1200
i: 1180
end-i: 1200
i: 1184
end-i: 1200
i: 1196
end-i: 1200
i: 1200
end-i: 1200
at header: 1200
(comment . ";;1164: r4 <- r1, 0x20\n")
(comment . ";;1168: r15 <- r1, 0x28\n")
(comment . ";;1172: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1196: b r6")
chunklet-i: 1200; chunklet-start-i: 1216; chunklet-end-i: 1240
i: 1200
end-i: 1240
at header: 1200
i: 1216
end-i: 1240
i: 1220
end-i: 1240
i: 1224
end-i: 1240
i: 1228
end-i: 1240
i: 1232
end-i: 1240
i: 1236
end-i: 1240
i: 1240
end-i: 1240
i:1240 HIT CHUNK END
(comment . ";;1216: r1 <- r1, r0")
(comment . ";;1220: r10 <- 0x4")
(comment . ";;1224: r4 <- r1, 0x20\n")
(comment . ";;1228: r15 <- r1, 0x28\n")
(comment . ";;1236 b -340")
chunklet-i: 1240; chunklet-start-i: 1240; chunklet-end-i: 1252
i: 1240
end-i: 1252
i: 1240
end-i: 1252
i: 1252
end-i: 1252
i:1252 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 1252; chunklet-start-i: 1256; chunklet-end-i: 1264
i: 1252
end-i: 1264
i: 1256
end-i: 1264
i: 1260
end-i: 1264
i: 1264
end-i: 1264
i:1264 HIT CHUNK END
(comment . ";; instruction 1252 not included")
(comment . ";;1256: r7 <- r0, 0x68\n")
(comment . ";;1260 b -756")
chunklet-i: 1264; chunklet-start-i: 1264; chunklet-end-i: 1296
i: 1264
end-i: 1296
i: 1264
end-i: 1296
i: 1268
end-i: 1296
i: 1272
end-i: 1296
i: 1276
end-i: 1296
i: 1280
end-i: 1296
i: 1292
end-i: 1296
i: 1296
end-i: 1296
at header: 1296
(comment . ";;1264: r4 <- r1, 0x20\n")
(comment . ";;1268: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1276: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1292: b r6")
chunklet-i: 1296; chunklet-start-i: 1312; chunklet-end-i: 1336
i: 1296
end-i: 1336
at header: 1296
i: 1312
end-i: 1336
i: 1316
end-i: 1336
i: 1320
end-i: 1336
i: 1324
end-i: 1336
i: 1328
end-i: 1336
i: 1332
end-i: 1336
i: 1336
end-i: 1336
i:1336 HIT CHUNK END
(comment . ";;1312: r1 <- r1, r8")
(comment . ";;1316: r15 <- 0x4")
(comment . ";;1320: r4 <- r1, 0x20\n")
(comment . ";;1324: r15 <- 0x6")
(comment . ";;1332 b -1024")
chunklet-i: 1336; chunklet-start-i: 1336; chunklet-end-i: 1340
i: 1336
end-i: 1340
i: 1340
end-i: 1340
i:1340 HIT CHUNK END
(comment . ";;1336 b -632")
chunklet-i: 1340; chunklet-start-i: 1340; chunklet-end-i: 1360
i: 1340
end-i: 1360
i: 1340
end-i: 1360
i: 1344
end-i: 1360
i: 1356
end-i: 1360
i: 1360
end-i: 1360
i:1360 HIT CHUNK END
(comment . ";;1340: r9 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1356: b r6")
chunklet-i: 1360; chunklet-start-i: 1360; chunklet-end-i: 1380
i: 1360
end-i: 1380
i: 1360
end-i: 1380
i: 1364
end-i: 1380
i: 1376
end-i: 1380
i: 1380
end-i: 1380
i:1380 HIT CHUNK END
(comment . ";;1360: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1376: b r6")
chunklet-i: 1380; chunklet-start-i: 1380; chunklet-end-i: 1416
i: 1380
end-i: 1416
i: 1380
end-i: 1416
i: 1384
end-i: 1416
i: 1388
end-i: 1416
i: 1392
end-i: 1416
i: 1396
end-i: 1416
i: 1400
end-i: 1416
i: 1412
end-i: 1416
i: 1416
end-i: 1416
at header: 1416
(comment . ";;1380: r4 <- r1, 0x20\n")
(comment . ";;1384: r15 <- r1, 0x28\n")
(comment . ";;1388: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1396: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1412: b r6")
chunklet-i: 1416; chunklet-start-i: 1432; chunklet-end-i: 1456
i: 1416
end-i: 1456
at header: 1416
i: 1432
end-i: 1456
i: 1436
end-i: 1456
i: 1440
end-i: 1456
i: 1444
end-i: 1456
i: 1448
end-i: 1456
i: 1452
end-i: 1456
i: 1456
end-i: 1456
i:1456 HIT CHUNK END
(comment . ";;1432: r1 <- r1, r0")
(comment . ";;1436: r9 <- 0x4")
(comment . ";;1440: r4 <- r1, 0x20\n")
(comment . ";;1444: r15 <- r1, 0x28\n")
(comment . ";;1452 b -1264")
chunklet-i: 1456; chunklet-start-i: 1456; chunklet-end-i: 1488
i: 1456
end-i: 1488
i: 1456
end-i: 1488
i: 1460
end-i: 1488
i: 1464
end-i: 1488
i: 1468
end-i: 1488
i: 1472
end-i: 1488
i: 1484
end-i: 1488
i: 1488
end-i: 1488
at header: 1488
(comment . ";;1456: r4 <- r1, 0x20\n")
(comment . ";;1460: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1468: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1484: b r6")
chunklet-i: 1488; chunklet-start-i: 1504; chunklet-end-i: 1520
i: 1488
end-i: 1520
at header: 1488
i: 1504
end-i: 1520
i: 1508
end-i: 1520
i: 1512
end-i: 1520
i: 1516
end-i: 1520
i: 1520
end-i: 1520
i:1520 HIT CHUNK END
(comment . ";;1504: r1 <- r1, r8")
(comment . ";;1508: r15 <- 0x4")
(comment . ";;1512: r4 <- r1, 0x20\n")
(comment . ";;1516 b -1356")
chunklet-i: 1520; chunklet-start-i: 1520; chunklet-end-i: 1552
i: 1520
end-i: 1552
i: 1520
end-i: 1552
i: 1524
end-i: 1552
i: 1528
end-i: 1552
i: 1532
end-i: 1552
i: 1536
end-i: 1552
i: 1548
end-i: 1552
i: 1552
end-i: 1552
at header: 1552
(comment . ";;1520: r4 <- r1, 0x20\n")
(comment . ";;1524: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1532: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1548: b r6")
chunklet-i: 1552; chunklet-start-i: 1568; chunklet-end-i: 1584
i: 1552
end-i: 1584
at header: 1552
i: 1568
end-i: 1584
i: 1572
end-i: 1584
i: 1576
end-i: 1584
i: 1580
end-i: 1584
i: 1584
end-i: 1584
i:1584 HIT CHUNK END
(comment . ";;1572: r1 <- r1, r8")
(comment . ";;1576: r4 <- r1, 0x20\n")
(comment . ";;1580 b -1444")
chunklet-i: 1584; chunklet-start-i: 1584; chunklet-end-i: 1620
i: 1584
end-i: 1620
i: 1584
end-i: 1620
i: 1596
end-i: 1620
i: 1608
end-i: 1620
i: 1612
end-i: 1620
i: 1616
end-i: 1620
i: 1620
end-i: 1620
i:1620 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;1608: r10 <- r9, 0x5\n")
(comment . ";;1612: r10 <- 0x1E")
(comment . ";;1616 b 240")
chunklet-i: 1620; chunklet-start-i: 1620; chunklet-end-i: 1628
i: 1620
end-i: 1628
i: 1620
end-i: 1628
i: 1624
end-i: 1628
i: 1628
end-i: 1628
i:1628 HIT CHUNK END
(comment . ";;1620: r10 <- 0x7")
(comment . ";;1624 b 96")
chunklet-i: 1628; chunklet-start-i: 1628; chunklet-end-i: 1636
i: 1628
end-i: 1636
i: 1632
end-i: 1636
i: 1636
end-i: 1636
i:1636 HIT CHUNK END
(comment . ";;1628: r4 <- r10, 0x8\n")
(comment . ";;1632 b 88")
chunklet-i: 1636; chunklet-start-i: 1636; chunklet-end-i: 1652
i: 1636
end-i: 1652
i: 1636
end-i: 1652
i: 1640
end-i: 1652
i: 1644
end-i: 1652
i: 1648
end-i: 1652
i: 1652
end-i: 1652
i:1652 HIT CHUNK END
(comment . ";;1636: r14 <- r15, r5")
(comment . ";;1640: r4 <- r14, 0x0\n")
(comment . ";;1644: r4 <- 0x7")
(comment . ";;1648 b 24")
chunklet-i: 1652; chunklet-start-i: 1652; chunklet-end-i: 1664
i: 1652
end-i: 1664
i: 1656
end-i: 1664
i: 1660
end-i: 1664
i: 1664
end-i: 1664
i:1664 HIT CHUNK END
(comment . ";;1652: r7 <- r0, 0x68\n")
(comment . ";;1656: r2 <- r7")
(comment . ";;1660 b 36")
chunklet-i: 1664; chunklet-start-i: 1664; chunklet-end-i: 1676
i: 1664
end-i: 1676
i: 1664
end-i: 1676
i: 1668
end-i: 1676
i: 1672
end-i: 1676
i: 1676
end-i: 1676
i:1676 HIT CHUNK END
(comment . ";;1664: r7 <- r7, r8")
(comment . ";;1668: r7 <- r0, 0x68\n")
(comment . ";;1672: r14 <- r7, 0x0\n")
chunklet-i: 1676; chunklet-start-i: 1676; chunklet-end-i: 1700
i: 1676
end-i: 1700
i: 1676
end-i: 1700
i: 1688
end-i: 1700
i: 1692
end-i: 1700
i: 1696
end-i: 1700
i: 1700
end-i: 1700
i:1700 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;1688: r14 <- r15, 0xD\n")
(comment . ";;1692: r4 <- 0x6")
(comment . ";;1696: b r1, 0")
chunklet-i: 1700; chunklet-start-i: 1700; chunklet-end-i: 1712
i: 1700
end-i: 1712
i: 1700
end-i: 1712
i: 1712
end-i: 1712
i:1712 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 1712; chunklet-start-i: 1716; chunklet-end-i: 1724
i: 1712
end-i: 1724
i: 1716
end-i: 1724
i: 1720
end-i: 1724
i: 1724
end-i: 1724
i:1724 HIT CHUNK END
(comment . ";; instruction 1712 not included")
(comment . ";;1716: r7 <- r0, 0x68\n")
(comment . ";;1720 b -60")
chunklet-i: 1724; chunklet-start-i: 1724; chunklet-end-i: 1732
i: 1724
end-i: 1732
i: 1724
end-i: 1732
i: 1728
end-i: 1732
i: 1732
end-i: 1732
i:1732 HIT CHUNK END
(comment . ";;1724: r3 <- r3, 0x1\n")
(comment . ";;1728 b 64")
chunklet-i: 1732; chunklet-start-i: 1732; chunklet-end-i: 1768
i: 1732
end-i: 1768
i: 1736
end-i: 1768
i: 1740
end-i: 1768
i: 1744
end-i: 1768
i: 1748
end-i: 1768
i: 1752
end-i: 1768
i: 1764
end-i: 1768
i: 1768
end-i: 1768
at header: 1768
(comment . ";;1732: r15 <- r1, 0x8\n")
(comment . ";;1736: r10 <- r1, 0x10\n")
(comment . ";;1740: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1748: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1764: b r6")
chunklet-i: 1768; chunklet-start-i: 1784; chunklet-end-i: 1796
i: 1768
end-i: 1796
at header: 1768
i: 1784
end-i: 1796
i: 1788
end-i: 1796
i: 1792
end-i: 1796
i: 1796
end-i: 1796
i:1796 HIT CHUNK END
(comment . ";;1784: r1 <- r1, r8")
(comment . ";;1788: r15 <- r1, 0x8\n")
(comment . ";;1792: r10 <- r1, 0x10\n")
chunklet-i: 1796; chunklet-start-i: 1796; chunklet-end-i: 1832
i: 1796
end-i: 1832
i: 1796
end-i: 1832
i: 1800
end-i: 1832
i: 1804
end-i: 1832
i: 1808
end-i: 1832
i: 1812
end-i: 1832
i: 1816
end-i: 1832
i: 1828
end-i: 1832
i: 1832
end-i: 1832
at header: 1832
(comment . ";;1796: r9 <- 0x8")
(comment . ";;1800: r15 <- r1, 0x8\n")
(comment . ";;1804: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1812: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1828: b r6")
chunklet-i: 1832; chunklet-start-i: 1848; chunklet-end-i: 1860
i: 1832
end-i: 1860
at header: 1832
i: 1848
end-i: 1860
i: 1852
end-i: 1860
i: 1856
end-i: 1860
i: 1860
end-i: 1860
i:1860 HIT CHUNK END
(comment . ";;1848: r1 <- r1, r0")
(comment . ";;1852: r15 <- r1, 0x8\n")
(comment . ";;1856 b -224")
chunklet-i: 1860; chunklet-start-i: 1860; chunklet-end-i: 1868
i: 1860
end-i: 1868
i: 1860
end-i: 1868
i: 1864
end-i: 1868
i: 1868
end-i: 1868
i:1868 HIT CHUNK END
(comment . ";;1860: r3 <- r3, 0x1\n")
(comment . ";;1864 b 68")
chunklet-i: 1868; chunklet-start-i: 1868; chunklet-end-i: 1904
i: 1868
end-i: 1904
i: 1872
end-i: 1904
i: 1876
end-i: 1904
i: 1880
end-i: 1904
i: 1884
end-i: 1904
i: 1888
end-i: 1904
i: 1900
end-i: 1904
i: 1904
end-i: 1904
at header: 1904
(comment . ";;1868: r15 <- r1, 0x8\n")
(comment . ";;1872: r9 <- r1, 0x10\n")
(comment . ";;1876: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1884: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1900: b r6")
chunklet-i: 1904; chunklet-start-i: 1920; chunklet-end-i: 1936
i: 1904
end-i: 1936
at header: 1904
i: 1920
end-i: 1936
i: 1924
end-i: 1936
i: 1928
end-i: 1936
i: 1932
end-i: 1936
i: 1936
end-i: 1936
i:1936 HIT CHUNK END
(comment . ";;1924: r1 <- r1, r8")
(comment . ";;1928: r15 <- r1, 0x8\n")
(comment . ";;1932: r9 <- r1, 0x10\n")
chunklet-i: 1936; chunklet-start-i: 1936; chunklet-end-i: 1968
i: 1936
end-i: 1968
i: 1936
end-i: 1968
i: 1940
end-i: 1968
i: 1944
end-i: 1968
i: 1948
end-i: 1968
i: 1952
end-i: 1968
i: 1964
end-i: 1968
i: 1968
end-i: 1968
at header: 1968
(comment . ";;1936: r15 <- r1, 0x8\n")
(comment . ";;1940: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1948: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1964: b r6")
chunklet-i: 1968; chunklet-start-i: 1984; chunklet-end-i: 2004
i: 1968
end-i: 2004
at header: 1968
i: 1984
end-i: 2004
i: 1988
end-i: 2004
i: 1992
end-i: 2004
i: 1996
end-i: 2004
i: 2000
end-i: 2004
i: 2004
end-i: 2004
i:2004 HIT CHUNK END
(comment . ";;1984: r1 <- r1, r0")
(comment . ";;1988: r10 <- 0x4")
(comment . ";;1992: r15 <- r1, 0x8\n")
(comment . ";;2000 b -384")
chunklet-i: 2004; chunklet-start-i: 2004; chunklet-end-i: 2012
i: 2004
end-i: 2012
i: 2004
end-i: 2012
i: 2008
end-i: 2012
i: 2012
end-i: 2012
i:2012 HIT CHUNK END
(comment . ";;2004: r3 <- r3, 0x1\n")
(comment . ";;2008 b 64")
chunklet-i: 2012; chunklet-start-i: 2012; chunklet-end-i: 2048
i: 2012
end-i: 2048
i: 2016
end-i: 2048
i: 2020
end-i: 2048
i: 2024
end-i: 2048
i: 2028
end-i: 2048
i: 2032
end-i: 2048
i: 2044
end-i: 2048
i: 2048
end-i: 2048
at header: 2048
(comment . ";;2012: r4 <- r1, 0x20\n")
(comment . ";;2016: r10 <- r1, 0x28\n")
(comment . ";;2020: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2028: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2044: b r6")
chunklet-i: 2048; chunklet-start-i: 2064; chunklet-end-i: 2076
i: 2048
end-i: 2076
at header: 2048
i: 2064
end-i: 2076
i: 2068
end-i: 2076
i: 2072
end-i: 2076
i: 2076
end-i: 2076
i:2076 HIT CHUNK END
(comment . ";;2064: r1 <- r1, r0")
(comment . ";;2068: r4 <- r1, 0x20\n")
(comment . ";;2072: r10 <- r1, 0x28\n")
chunklet-i: 2076; chunklet-start-i: 2076; chunklet-end-i: 2112
i: 2076
end-i: 2112
i: 2076
end-i: 2112
i: 2080
end-i: 2112
i: 2084
end-i: 2112
i: 2088
end-i: 2112
i: 2092
end-i: 2112
i: 2096
end-i: 2112
i: 2108
end-i: 2112
i: 2112
end-i: 2112
at header: 2112
(comment . ";;2076: r9 <- 0x4")
(comment . ";;2080: r4 <- r1, 0x20\n")
(comment . ";;2084: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2092: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2108: b r6")
chunklet-i: 2112; chunklet-start-i: 2128; chunklet-end-i: 2152
i: 2112
end-i: 2152
at header: 2112
i: 2128
end-i: 2152
i: 2132
end-i: 2152
i: 2136
end-i: 2152
i: 2140
end-i: 2152
i: 2144
end-i: 2152
i: 2148
end-i: 2152
i: 2152
end-i: 2152
i:2152 HIT CHUNK END
(comment . ";;2128: r1 <- r1, r8")
(comment . ";;2132: r15 <- 0x4")
(comment . ";;2136: r4 <- r1, 0x20\n")
(comment . ";;2140: r15 <- 0x6")
(comment . ";;2148 b -2020")
chunklet-i: 2152; chunklet-start-i: 2152; chunklet-end-i: 2156
i: 2152
end-i: 2156
i: 2156
end-i: 2156
i:2156 HIT CHUNK END
(comment . ";;2152 b -572")
chunklet-i: 2156; chunklet-start-i: 2156; chunklet-end-i: 2164
i: 2156
end-i: 2164
i: 2156
end-i: 2164
i: 2160
end-i: 2164
i: 2164
end-i: 2164
i:2164 HIT CHUNK END
(comment . ";;2156: r3 <- r3, 0x1\n")
(comment . ";;2160 b 68")
chunklet-i: 2164; chunklet-start-i: 2164; chunklet-end-i: 2200
i: 2164
end-i: 2200
i: 2168
end-i: 2200
i: 2172
end-i: 2200
i: 2176
end-i: 2200
i: 2180
end-i: 2200
i: 2184
end-i: 2200
i: 2196
end-i: 2200
i: 2200
end-i: 2200
at header: 2200
(comment . ";;2164: r4 <- r1, 0x20\n")
(comment . ";;2168: r9 <- r1, 0x28\n")
(comment . ";;2172: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2196: b r6")
chunklet-i: 2200; chunklet-start-i: 2216; chunklet-end-i: 2232
i: 2200
end-i: 2232
at header: 2200
i: 2216
end-i: 2232
i: 2220
end-i: 2232
i: 2224
end-i: 2232
i: 2228
end-i: 2232
i: 2232
end-i: 2232
i:2232 HIT CHUNK END
(comment . ";;2220: r1 <- r1, r0")
(comment . ";;2224: r4 <- r1, 0x20\n")
(comment . ";;2228: r9 <- r1, 0x28\n")
chunklet-i: 2232; chunklet-start-i: 2232; chunklet-end-i: 2264
i: 2232
end-i: 2264
i: 2232
end-i: 2264
i: 2236
end-i: 2264
i: 2240
end-i: 2264
i: 2244
end-i: 2264
i: 2248
end-i: 2264
i: 2260
end-i: 2264
i: 2264
end-i: 2264
at header: 2264
(comment . ";;2232: r4 <- r1, 0x20\n")
(comment . ";;2236: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2244: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2260: b r6")
chunklet-i: 2264; chunklet-start-i: 2280; chunklet-end-i: 2296
i: 2264
end-i: 2296
at header: 2264
i: 2280
end-i: 2296
i: 2284
end-i: 2296
i: 2288
end-i: 2296
i: 2292
end-i: 2296
i: 2296
end-i: 2296
i:2296 HIT CHUNK END
(comment . ";;2280: r1 <- r1, r8")
(comment . ";;2284: r10 <- 0x4")
(comment . ";;2288: r4 <- r1, 0x20\n")
(comment . ";;2292 b -2184")
chunklet-i: 2296; chunklet-start-i: 2296; chunklet-end-i: 2308
i: 2296
end-i: 2308
i: 2296
end-i: 2308
i: 2308
end-i: 2308
i:2308 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 2308; chunklet-start-i: 2312; chunklet-end-i: 2316
i: 2308
end-i: 2316
i: 2312
end-i: 2316
i: 2316
end-i: 2316
i:2316 HIT CHUNK END
(comment . ";; instruction 2308 not included")
(comment . ";;2312 b -2268")
chunklet-i: 2316; chunklet-start-i: 2316; chunklet-end-i: 2328
i: 2316
end-i: 2328
i: 2316
end-i: 2328
i: 2328
end-i: 2328
i:2328 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 2328; chunklet-start-i: 2332; chunklet-end-i: 2336
i: 2328
end-i: 2336
i: 2332
end-i: 2336
i: 2336
end-i: 2336
i:2336 HIT CHUNK END
(comment . ";; instruction 2328 not included")
(comment . ";;2332 b -2312")
chunklet-i: 2336; chunklet-start-i: 2336; chunklet-end-i: 2352
i: 2336
end-i: 2352
i: 2336
end-i: 2352
i: 2348
end-i: 2352
i: 2352
end-i: 2352
i:2352 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;2348: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: definePiece
instruction range for chunk: 0 12
instruction range for chunk: 12 48
instruction range for chunk: 48 64
instruction range for chunk: 64 76
instruction range for chunk: 76 84
instruction range for chunk: 84 92
instruction range for chunk: 92 96
instruction range for chunk: 96 108
instruction range for chunk: 108 116
instruction range for chunk: 116 124
instruction range for chunk: 124 128
instruction range for chunk: 128 140
instruction range for chunk: 140 148
instruction range for chunk: 148 156
instruction range for chunk: 156 180
instruction range for chunk: 180 204
instruction range for chunk: 204 208
instruction range for chunk: 208 220
instruction range for chunk: 220 232
instruction range for chunk: 232 244
instruction range for chunk: 244 252
instruction range for chunk: 252 256
instruction range for chunk: 256 268
instruction range for chunk: 268 280
instruction range for chunk: 280 284
instruction range for chunk: 284 296
instruction range for chunk: 296 304
instruction range for chunk: 304 308
instruction range for chunk: 308 324
instruction range for chunk: 324 336
instruction range for chunk: 336 348
instruction range for chunk: 348 372
instruction range for chunk: 372 396
instruction range for chunk: 396 408
instruction range for chunk: 408 428
instruction range for chunk: 428 440
instruction range for chunk: 440 464
instruction range for chunk: 464 476
instruction range for chunk: 476 484
instruction range for chunk: 484 500
instruction range for chunk: 500 520
instruction range for chunk: 520 528
instruction range for chunk: 528 536
instruction range for chunk: 536 600
instruction range for chunk: 616 660
instruction range for chunk: 660 680
instruction range for chunk: 680 704
instruction range for chunk: 704 768
instruction range for chunk: 784 836
instruction range for chunk: 836 896
instruction range for chunk: 912 960
instruction range for chunk: 960 972
instruction range for chunk: 976 984
instruction range for chunk: 984 1048
instruction range for chunk: 1064 1112
instruction range for chunk: 1112 1176
instruction range for chunk: 1192 1236
instruction range for chunk: 1236 1304
instruction range for chunk: 1320 1372
instruction range for chunk: 1372 1440
instruction range for chunk: 1456 1504
instruction range for chunk: 1504 1568
instruction range for chunk: 1584 1636
instruction range for chunk: 1636 1696
instruction range for chunk: 1712 1756
instruction range for chunk: 1756 1816
instruction range for chunk: 1832 1876
instruction range for chunk: 1876 1884
instruction range for chunk: 1884 1892
instruction range for chunk: 1892 1900
instruction range for chunk: 1900 1960
instruction range for chunk: 1976 2012
instruction range for chunk: 2012 2020
instruction range for chunk: 2020 2080
instruction range for chunk: 2096 2132
instruction range for chunk: 2132 2200
instruction range for chunk: 2216 2268
instruction range for chunk: 2268 2272
instruction range for chunk: 2272 2328
instruction range for chunk: 2344 2384
instruction range for chunk: 2384 2392
instruction range for chunk: 2392 2400
instruction range for chunk: 2400 2408
instruction range for chunk: 2408 2464
instruction range for chunk: 2480 2512
instruction range for chunk: 2512 2520
instruction range for chunk: 2520 2576
instruction range for chunk: 2592 2624
instruction range for chunk: 2624 2688
instruction range for chunk: 2704 2752
instruction range for chunk: 2752 2756
instruction range for chunk: 2756 2808
instruction range for chunk: 2824 2856
instruction range for chunk: 2856 2880
instruction range for chunk: 2880 2904
instruction range for chunk: 2904 2916
instruction range for chunk: 2916 2928
instruction range for chunk: 2928 2936
instruction range for chunk: 2936 2952
instruction range for chunk: 2952 2972
instruction range for chunk: 2972 2984
instruction range for chunk: 2984 2996
instruction range for chunk: 2996 3020
instruction range for chunk: 3020 3044
instruction range for chunk: 3044 3060
instruction range for chunk: 3060 3072
instruction range for chunk: 3072 3080
instruction range for chunk: 3080 3096
instruction range for chunk: 3096 3116
instruction range for chunk: 3116 3128
instruction range for chunk: 3128 3140
instruction range for chunk: 3140 3164
instruction range for chunk: 3164 3188
instruction range for chunk: 3188 3200
instruction range for chunk: 3200 3208
instruction range for chunk: 3208 3216
instruction range for chunk: 3216 3252
instruction range for chunk: 3252 3260
instruction range for chunk: 3260 3268
instruction range for chunk: 3268 3284
instruction range for chunk: 3284 3296
instruction range for chunk: 3296 3308
instruction range for chunk: 3308 3332
instruction range for chunk: 3332 3344
instruction range for chunk: 3348 3356
instruction range for chunk: 3356 3364
instruction range for chunk: 3364 3400
instruction range for chunk: 3416 3428
instruction range for chunk: 3428 3464
instruction range for chunk: 3480 3492
instruction range for chunk: 3492 3500
instruction range for chunk: 3500 3536
instruction range for chunk: 3552 3568
instruction range for chunk: 3568 3600
instruction range for chunk: 3616 3636
instruction range for chunk: 3636 3644
instruction range for chunk: 3644 3680
instruction range for chunk: 3696 3712
instruction range for chunk: 3712 3744
instruction range for chunk: 3760 3776
instruction range for chunk: 3776 3780
instruction range for chunk: 3780 3788
instruction range for chunk: 3788 3824
instruction range for chunk: 3840 3856
instruction range for chunk: 3856 3888
instruction range for chunk: 3904 3920
instruction range for chunk: 3920 3928
instruction range for chunk: 3928 3960
instruction range for chunk: 3976 3988
instruction range for chunk: 3988 4016
instruction range for chunk: 4032 4044
instruction range for chunk: 4044 4056
instruction range for chunk: 4060 4068
instruction range for chunk: 4068 4088
instruction range for chunk: 4088 4096
instruction range for chunk: 4096 4136
instruction range for chunk: 4152 4172
instruction range for chunk: 4172 4208
instruction range for chunk: 4224 4244
instruction range for chunk: 4244 4252
instruction range for chunk: 4252 4288
instruction range for chunk: 4304 4320
instruction range for chunk: 4320 4352
instruction range for chunk: 4368 4380
instruction range for chunk: 4380 4392
instruction range for chunk: 4396 4404
instruction range for chunk: 4404 4428
instruction range for chunk: 4428 4436
instruction range for chunk: 4436 4480
instruction range for chunk: 4496 4520
instruction range for chunk: 4520 4560
instruction range for chunk: 4576 4600
instruction range for chunk: 4600 4608
instruction range for chunk: 4608 4648
instruction range for chunk: 4664 4684
instruction range for chunk: 4684 4720
instruction range for chunk: 4736 4756
instruction range for chunk: 4756 4764
instruction range for chunk: 4764 4816
instruction range for chunk: 4832 4860
instruction range for chunk: 4860 4920
instruction range for chunk: 4936 4976
instruction range for chunk: 4976 4980
instruction range for chunk: 4980 4992
instruction range for chunk: 4996 5000
instruction range for chunk: 5000 5016
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x4")
(comment . ";;8 b 4988")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 48
i: 12
end-i: 48
i: 16
end-i: 48
i: 20
end-i: 48
i: 24
end-i: 48
i: 28
end-i: 48
i: 32
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;12: r15 <- 0x9")
(comment . ";;16: r14 <- 0xA")
(comment . ";;20: r13 <- r1, 0x8\n")
(comment . ";;24: r12 <- 0x0")
(comment . ";;28: r5 <- r2, r9")
(comment . ";;32: r2 <- r2, r0")
(comment . ";;36: r10 <- r0, 0x68\n")
(comment . ";;40: r10 <- r2")
(comment . ";;44 b 4932")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 64
i: 48
end-i: 64
i: 48
end-i: 64
i: 52
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;48: r12 <- r5, 0x7\n")
(comment . ";;52: r12 <- 0x1E")
(comment . ";;56: r12 <- r5, 0xF\n")
(comment . ";;60: r4 <- 0x0")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 76
i: 64
end-i: 76
i: 64
end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;64: r12 <- r4, r14")
(comment . ";;68: r12 <- 0x7")
(comment . ";;72 b 4680")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 84
i: 76
end-i: 84
i: 80
end-i: 84
i: 84
end-i: 84
i:84 HIT CHUNK END
(comment . ";;76: r4 <- r14")
(comment . ";;80 b 2772")
chunklet-i: 84; chunklet-start-i: 84; chunklet-end-i: 92
i: 84
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;84: r3 <- r3, 0x1\n")
(comment . ";;88 b 2664")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 96
i: 92
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
i:96 HIT CHUNK END
(comment . ";;92: r12 <- 0x0")
chunklet-i: 96; chunklet-start-i: 96; chunklet-end-i: 108
i: 96
end-i: 108
i: 96
end-i: 108
i: 100
end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
(comment . ";;96: r10 <- r12, r11")
(comment . ";;100: r10 <- 0x7")
(comment . ";;104 b 2404")
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;108: r12 <- r11")
(comment . ";;112 b 2268")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 124
i: 116
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;116: r3 <- r3, 0x1\n")
(comment . ";;120 b 2148")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 128
i: 124
end-i: 128
i: 124
end-i: 128
i: 128
end-i: 128
i:128 HIT CHUNK END
(comment . ";;124: r8 <- 0x0")
chunklet-i: 128; chunklet-start-i: 128; chunklet-end-i: 140
i: 128
end-i: 140
i: 128
end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";;128: r10 <- r8, r13")
(comment . ";;132: r10 <- 0x7")
(comment . ";;136 b 1872")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 148
i: 140
end-i: 148
i: 144
end-i: 148
i: 148
end-i: 148
i:148 HIT CHUNK END
(comment . ";;140: r8 <- r13")
(comment . ";;144 b 1728")
chunklet-i: 148; chunklet-start-i: 148; chunklet-end-i: 156
i: 148
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;148: r3 <- r3, 0x1\n")
(comment . ";;152 b 1600")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 180
i: 156
end-i: 180
i: 156
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;168: r7 <- r9, 0x5\n")
(comment . ";;172: r7 <- 0x1E")
(comment . ";;176 b 1456")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 204
i: 180
end-i: 204
i: 180
end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;192: r10 <- r9, 0x5\n")
(comment . ";;196: r10 <- 0x1E")
(comment . ";;200 b 1300")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 208
i: 204
end-i: 208
i: 208
end-i: 208
i:208 HIT CHUNK END
(comment . ";;204: r9 <- 0xA")
chunklet-i: 208; chunklet-start-i: 208; chunklet-end-i: 220
i: 208
end-i: 220
i: 208
end-i: 220
i: 212
end-i: 220
i: 216
end-i: 220
i: 220
end-i: 220
i:220 HIT CHUNK END
(comment . ";;208: r10 <- r9, r8")
(comment . ";;212: r10 <- 0x7")
(comment . ";;216 b 1152")
chunklet-i: 220; chunklet-start-i: 220; chunklet-end-i: 232
i: 220
end-i: 232
i: 224
end-i: 232
i: 228
end-i: 232
i: 232
end-i: 232
i:232 HIT CHUNK END
(comment . ";;220: r10 <- r8, r3")
(comment . ";;224: r10 <- r9, r10")
(comment . ";;228 b 1140")
chunklet-i: 232; chunklet-start-i: 232; chunklet-end-i: 244
i: 232
end-i: 244
i: 232
end-i: 244
i: 236
end-i: 244
i: 240
end-i: 244
i: 244
end-i: 244
i:244 HIT CHUNK END
(comment . ";;232: r9 <- r12, r10")
(comment . ";;236: r9 <- 0x7")
(comment . ";;240 b 992")
chunklet-i: 244; chunklet-start-i: 244; chunklet-end-i: 252
i: 244
end-i: 252
i: 248
end-i: 252
i: 252
end-i: 252
i:252 HIT CHUNK END
(comment . ";;244: r9 <- r12, r10")
(comment . ";;248 b 984")
chunklet-i: 252; chunklet-start-i: 252; chunklet-end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;252: r10 <- 0x9")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 268
i: 256
end-i: 268
i: 256
end-i: 268
i: 260
end-i: 268
i: 264
end-i: 268
i: 268
end-i: 268
i:268 HIT CHUNK END
(comment . ";;256: r9 <- r7, r10")
(comment . ";;260: r9 <- 0x7")
(comment . ";;264 b 844")
chunklet-i: 268; chunklet-start-i: 268; chunklet-end-i: 280
i: 268
end-i: 280
i: 272
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";;268: r9 <- r10, r3")
(comment . ";;272: r9 <- r7, r9")
(comment . ";;276 b 832")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 284
i: 280
end-i: 284
i: 284
end-i: 284
i:284 HIT CHUNK END
(comment . ";;280: r10 <- 0x9")
chunklet-i: 284; chunklet-start-i: 284; chunklet-end-i: 296
i: 284
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";;284: r9 <- r4, r10")
(comment . ";;288: r9 <- 0x7")
(comment . ";;292 b 688")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;296: r9 <- r4, r10")
(comment . ";;300 b 680")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;304: r10 <- 0x9")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 324
i: 308
end-i: 324
i: 308
end-i: 324
i: 312
end-i: 324
i: 316
end-i: 324
i: 320
end-i: 324
i: 324
end-i: 324
i:324 HIT CHUNK END
(comment . ";;308: r9 <- r5, r7")
(comment . ";;312: r10 <- r9, 0x0\n")
(comment . ";;316: r10 <- 0x7")
(comment . ";;320 b 24")
chunklet-i: 324; chunklet-start-i: 324; chunklet-end-i: 336
i: 324
end-i: 336
i: 328
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
i:336 HIT CHUNK END
(comment . ";;324: r7 <- r0, 0x68\n")
(comment . ";;328: r2 <- r7")
(comment . ";;332 b 624")
chunklet-i: 336; chunklet-start-i: 336; chunklet-end-i: 348
i: 336
end-i: 348
i: 336
end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";;336: r7 <- r7, r8")
(comment . ";;340: r7 <- r0, 0x68\n")
(comment . ";;344: r9 <- r7, 0x0\n")
chunklet-i: 348; chunklet-start-i: 348; chunklet-end-i: 372
i: 348
end-i: 372
i: 348
end-i: 372
i: 360
end-i: 372
i: 364
end-i: 372
i: 368
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;360: r10 <- r9, 0x5\n")
(comment . ";;364: r10 <- 0x1E")
(comment . ";;368 b 464")
chunklet-i: 372; chunklet-start-i: 372; chunklet-end-i: 396
i: 372
end-i: 396
i: 372
end-i: 396
i: 384
end-i: 396
i: 388
end-i: 396
i: 392
end-i: 396
i: 396
end-i: 396
i:396 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;384: r7 <- r9, 0x5\n")
(comment . ";;388: r7 <- 0x1E")
(comment . ";;392 b 308")
chunklet-i: 396; chunklet-start-i: 396; chunklet-end-i: 408
i: 396
end-i: 408
i: 396
end-i: 408
i: 400
end-i: 408
i: 404
end-i: 408
i: 408
end-i: 408
i:408 HIT CHUNK END
(comment . ";;396: r9 <- r10, r7")
(comment . ";;400: r9 <- 0x7")
(comment . ";;404 b 272")
chunklet-i: 408; chunklet-start-i: 408; chunklet-end-i: 428
i: 408
end-i: 428
i: 412
end-i: 428
i: 416
end-i: 428
i: 420
end-i: 428
i: 424
end-i: 428
i: 428
end-i: 428
i:428 HIT CHUNK END
(comment . ";;408: r9 <- r10, 0x1\n")
(comment . ";;412: r6 <- r9, r1")
(comment . ";;416: r6 <- r6, r8")
(comment . ";;420: r7 <- r6")
(comment . ";;424 b 252")
chunklet-i: 428; chunklet-start-i: 428; chunklet-end-i: 440
i: 428
end-i: 440
i: 432
end-i: 440
i: 436
end-i: 440
i: 440
end-i: 440
i:440 HIT CHUNK END
(comment . ";;428: r9 <- r7, r9")
(comment . ";;432: r9 <- 0x7")
(comment . ";;436 b 240")
chunklet-i: 440; chunklet-start-i: 440; chunklet-end-i: 464
i: 440
end-i: 464
i: 444
end-i: 464
i: 448
end-i: 464
i: 452
end-i: 464
i: 456
end-i: 464
i: 460
end-i: 464
i: 464
end-i: 464
i:464 HIT CHUNK END
(comment . ";;440: r9 <- r7, r9")
(comment . ";;444: r9 <- r10, r9")
(comment . ";;448: r10 <- r5, 0x7\n")
(comment . ";;452: r7 <- r9, r7")
(comment . ";;456: r7 <- 0x7")
(comment . ";;460 b 196")
chunklet-i: 464; chunklet-start-i: 464; chunklet-end-i: 476
i: 464
end-i: 476
i: 468
end-i: 476
i: 472
end-i: 476
i: 476
end-i: 476
i:476 HIT CHUNK END
(comment . ";;464: r7 <- r9, 0x1\n")
(comment . ";;468: r7 <- 0xF")
(comment . ";;472 b 184")
chunklet-i: 476; chunklet-start-i: 476; chunklet-end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;476: r10 <- 0x7")
(comment . ";;480 b 176")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 500
i: 484
end-i: 500
i: 488
end-i: 500
i: 492
end-i: 500
i: 496
end-i: 500
i: 500
end-i: 500
i:500 HIT CHUNK END
(comment . ";;484: r7 <- r7, r1")
(comment . ";;488: r7 <- r7, r8")
(comment . ";;492: r10 <- r7")
(comment . ";;496 b 160")
chunklet-i: 500; chunklet-start-i: 500; chunklet-end-i: 520
i: 500
end-i: 520
i: 504
end-i: 520
i: 508
end-i: 520
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;500: r7 <- 0xE")
(comment . ";;504: r10 <- r10, r9")
(comment . ";;508: r7 <- r9, r10")
(comment . ";;512: r8 <- 0x7")
(comment . ";;516 b 16")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 528
i: 520
end-i: 528
i: 524
end-i: 528
i: 528
end-i: 528
i:528 HIT CHUNK END
(comment . ";;520: r10 <- r8, 0x8\n")
(comment . ";;524 b 8")
chunklet-i: 528; chunklet-start-i: 528; chunklet-end-i: 536
i: 528
end-i: 536
i: 532
end-i: 536
i: 536
end-i: 536
i:536 HIT CHUNK END
(comment . ";;528: r8 <- 0xA")
(comment . ";;532 b -408")
chunklet-i: 536; chunklet-start-i: 536; chunklet-end-i: 600
i: 536
end-i: 600
i: 536
end-i: 600
i: 540
end-i: 600
i: 544
end-i: 600
i: 548
end-i: 600
i: 552
end-i: 600
i: 556
end-i: 600
i: 560
end-i: 600
i: 564
end-i: 600
i: 568
end-i: 600
i: 572
end-i: 600
i: 576
end-i: 600
i: 580
end-i: 600
i: 584
end-i: 600
i: 596
end-i: 600
i: 600
end-i: 600
at header: 600
(comment . ";;536: r9 <- 0x8")
(comment . ";;540: r10 <- 0x8")
(comment . ";;544: r15 <- r1, 0x10\n")
(comment . ";;548: r14 <- r1, 0x18\n")
(comment . ";;552: r11 <- r1, 0x20\n")
(comment . ";;556: r13 <- r1, 0x8\n")
(comment . ";;560: r5 <- r1, 0x28\n")
(comment . ";;564: r4 <- r1, 0x30\n")
(comment . ";;568: r12 <- r1, 0x38\n")
(comment . ";;572: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;580: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;596: b r6")
chunklet-i: 600; chunklet-start-i: 616; chunklet-end-i: 660
i: 600
end-i: 660
at header: 600
i: 616
end-i: 660
i: 620
end-i: 660
i: 624
end-i: 660
i: 628
end-i: 660
i: 632
end-i: 660
i: 636
end-i: 660
i: 640
end-i: 660
i: 644
end-i: 660
i: 648
end-i: 660
i: 652
end-i: 660
i: 656
end-i: 660
i: 660
end-i: 660
i:660 HIT CHUNK END
(comment . ";;616: r1 <- r1, r0")
(comment . ";;620: r8 <- 0x4")
(comment . ";;624: r15 <- r1, 0x10\n")
(comment . ";;628: r14 <- r1, 0x18\n")
(comment . ";;632: r11 <- r1, 0x20\n")
(comment . ";;636: r13 <- r1, 0x8\n")
(comment . ";;640: r5 <- r1, 0x28\n")
(comment . ";;644: r4 <- r1, 0x30\n")
(comment . ";;648: r12 <- r1, 0x38\n")
(comment . ";;656 b -532")
chunklet-i: 660; chunklet-start-i: 660; chunklet-end-i: 680
i: 660
end-i: 680
i: 660
end-i: 680
i: 664
end-i: 680
i: 676
end-i: 680
i: 680
end-i: 680
i:680 HIT CHUNK END
(comment . ";;660: r11 <- 0xE")
(comment . ";; literal r6")
(comment . ";;676: b r6")
chunklet-i: 680; chunklet-start-i: 680; chunklet-end-i: 704
i: 680
end-i: 704
i: 680
end-i: 704
i: 684
end-i: 704
i: 688
end-i: 704
i: 700
end-i: 704
i: 704
end-i: 704
i:704 HIT CHUNK END
(comment . ";;680: r9 <- 0xA")
(comment . ";;684: r10 <- 0x7")
(comment . ";; literal r6")
(comment . ";;700: b r6")
chunklet-i: 704; chunklet-start-i: 704; chunklet-end-i: 768
i: 704
end-i: 768
i: 704
end-i: 768
i: 708
end-i: 768
i: 712
end-i: 768
i: 716
end-i: 768
i: 720
end-i: 768
i: 724
end-i: 768
i: 728
end-i: 768
i: 732
end-i: 768
i: 736
end-i: 768
i: 740
end-i: 768
i: 744
end-i: 768
i: 748
end-i: 768
i: 752
end-i: 768
i: 764
end-i: 768
i: 768
end-i: 768
at header: 768
(comment . ";;704: r15 <- r1, 0x10\n")
(comment . ";;708: r14 <- r1, 0x18\n")
(comment . ";;712: r11 <- r1, 0x20\n")
(comment . ";;716: r13 <- r1, 0x8\n")
(comment . ";;720: r5 <- r1, 0x28\n")
(comment . ";;724: r4 <- r1, 0x30\n")
(comment . ";;728: r12 <- r1, 0x38\n")
(comment . ";;732: r8 <- r1, 0x40\n")
(comment . ";;736: r10 <- r1, 0x48\n")
(comment . ";;740: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;748: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;764: b r6")
chunklet-i: 768; chunklet-start-i: 784; chunklet-end-i: 836
i: 768
end-i: 836
at header: 768
i: 784
end-i: 836
i: 788
end-i: 836
i: 792
end-i: 836
i: 796
end-i: 836
i: 800
end-i: 836
i: 804
end-i: 836
i: 808
end-i: 836
i: 812
end-i: 836
i: 816
end-i: 836
i: 820
end-i: 836
i: 824
end-i: 836
i: 828
end-i: 836
i: 832
end-i: 836
i: 836
end-i: 836
i:836 HIT CHUNK END
(comment . ";;784: r1 <- r1, r0")
(comment . ";;788: r7 <- 0x4")
(comment . ";;792: r15 <- r1, 0x10\n")
(comment . ";;796: r14 <- r1, 0x18\n")
(comment . ";;800: r11 <- r1, 0x20\n")
(comment . ";;804: r13 <- r1, 0x8\n")
(comment . ";;808: r5 <- r1, 0x28\n")
(comment . ";;812: r4 <- r1, 0x30\n")
(comment . ";;816: r12 <- r1, 0x38\n")
(comment . ";;820: r8 <- r1, 0x40\n")
(comment . ";;824: r10 <- r1, 0x48\n")
(comment . ";;832 b -440")
chunklet-i: 836; chunklet-start-i: 836; chunklet-end-i: 896
i: 836
end-i: 896
i: 836
end-i: 896
i: 840
end-i: 896
i: 844
end-i: 896
i: 848
end-i: 896
i: 852
end-i: 896
i: 856
end-i: 896
i: 860
end-i: 896
i: 864
end-i: 896
i: 868
end-i: 896
i: 872
end-i: 896
i: 876
end-i: 896
i: 880
end-i: 896
i: 892
end-i: 896
i: 896
end-i: 896
at header: 896
(comment . ";;836: r15 <- r1, 0x10\n")
(comment . ";;840: r14 <- r1, 0x18\n")
(comment . ";;844: r11 <- r1, 0x20\n")
(comment . ";;848: r13 <- r1, 0x8\n")
(comment . ";;852: r5 <- r1, 0x28\n")
(comment . ";;856: r4 <- r1, 0x30\n")
(comment . ";;860: r12 <- r1, 0x38\n")
(comment . ";;864: r8 <- r1, 0x40\n")
(comment . ";;868: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;876: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;892: b r6")
chunklet-i: 896; chunklet-start-i: 912; chunklet-end-i: 960
i: 896
end-i: 960
at header: 896
i: 912
end-i: 960
i: 916
end-i: 960
i: 920
end-i: 960
i: 924
end-i: 960
i: 928
end-i: 960
i: 932
end-i: 960
i: 936
end-i: 960
i: 940
end-i: 960
i: 944
end-i: 960
i: 948
end-i: 960
i: 952
end-i: 960
i: 956
end-i: 960
i: 960
end-i: 960
i:960 HIT CHUNK END
(comment . ";;912: r1 <- r1, r8")
(comment . ";;916: r10 <- 0x4")
(comment . ";;920: r15 <- r1, 0x10\n")
(comment . ";;924: r14 <- r1, 0x18\n")
(comment . ";;928: r11 <- r1, 0x20\n")
(comment . ";;932: r13 <- r1, 0x8\n")
(comment . ";;936: r5 <- r1, 0x28\n")
(comment . ";;940: r4 <- r1, 0x30\n")
(comment . ";;944: r12 <- r1, 0x38\n")
(comment . ";;948: r8 <- r1, 0x40\n")
(comment . ";;956 b -588")
chunklet-i: 960; chunklet-start-i: 960; chunklet-end-i: 972
i: 960
end-i: 972
i: 960
end-i: 972
i: 972
end-i: 972
i:972 HIT CHUNK END
(comment . ";; literal r10")
chunklet-i: 972; chunklet-start-i: 976; chunklet-end-i: 984
i: 972
end-i: 984
i: 976
end-i: 984
i: 980
end-i: 984
i: 984
end-i: 984
i:984 HIT CHUNK END
(comment . ";; instruction 972 not included")
(comment . ";;976: r7 <- r0, 0x68\n")
(comment . ";;980 b -648")
chunklet-i: 984; chunklet-start-i: 984; chunklet-end-i: 1048
i: 984
end-i: 1048
i: 984
end-i: 1048
i: 988
end-i: 1048
i: 992
end-i: 1048
i: 996
end-i: 1048
i: 1000
end-i: 1048
i: 1004
end-i: 1048
i: 1008
end-i: 1048
i: 1012
end-i: 1048
i: 1016
end-i: 1048
i: 1020
end-i: 1048
i: 1024
end-i: 1048
i: 1028
end-i: 1048
i: 1032
end-i: 1048
i: 1044
end-i: 1048
i: 1048
end-i: 1048
at header: 1048
(comment . ";;984: r9 <- 0x4")
(comment . ";;988: r15 <- r1, 0x10\n")
(comment . ";;992: r14 <- r1, 0x18\n")
(comment . ";;996: r11 <- r1, 0x20\n")
(comment . ";;1000: r13 <- r1, 0x8\n")
(comment . ";;1004: r5 <- r1, 0x28\n")
(comment . ";;1008: r4 <- r1, 0x30\n")
(comment . ";;1012: r12 <- r1, 0x38\n")
(comment . ";;1016: r8 <- r1, 0x40\n")
(comment . ";;1020: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1028: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1044: b r6")
chunklet-i: 1048; chunklet-start-i: 1064; chunklet-end-i: 1112
i: 1048
end-i: 1112
at header: 1048
i: 1064
end-i: 1112
i: 1068
end-i: 1112
i: 1072
end-i: 1112
i: 1076
end-i: 1112
i: 1080
end-i: 1112
i: 1084
end-i: 1112
i: 1088
end-i: 1112
i: 1092
end-i: 1112
i: 1096
end-i: 1112
i: 1100
end-i: 1112
i: 1104
end-i: 1112
i: 1108
end-i: 1112
i: 1112
end-i: 1112
i:1112 HIT CHUNK END
(comment . ";;1064: r1 <- r1, r8")
(comment . ";;1068: r10 <- 0x4")
(comment . ";;1072: r15 <- r1, 0x10\n")
(comment . ";;1076: r14 <- r1, 0x18\n")
(comment . ";;1080: r11 <- r1, 0x20\n")
(comment . ";;1084: r13 <- r1, 0x8\n")
(comment . ";;1088: r5 <- r1, 0x28\n")
(comment . ";;1092: r4 <- r1, 0x30\n")
(comment . ";;1096: r12 <- r1, 0x38\n")
(comment . ";;1100: r8 <- r1, 0x40\n")
(comment . ";;1108 b -804")
chunklet-i: 1112; chunklet-start-i: 1112; chunklet-end-i: 1176
i: 1112
end-i: 1176
i: 1112
end-i: 1176
i: 1116
end-i: 1176
i: 1120
end-i: 1176
i: 1124
end-i: 1176
i: 1128
end-i: 1176
i: 1132
end-i: 1176
i: 1136
end-i: 1176
i: 1140
end-i: 1176
i: 1144
end-i: 1176
i: 1148
end-i: 1176
i: 1152
end-i: 1176
i: 1156
end-i: 1176
i: 1160
end-i: 1176
i: 1172
end-i: 1176
i: 1176
end-i: 1176
at header: 1176
(comment . ";;1112: r9 <- 0x7")
(comment . ";;1116: r15 <- r1, 0x10\n")
(comment . ";;1120: r14 <- r1, 0x18\n")
(comment . ";;1124: r11 <- r1, 0x20\n")
(comment . ";;1128: r13 <- r1, 0x8\n")
(comment . ";;1132: r5 <- r1, 0x28\n")
(comment . ";;1136: r4 <- r1, 0x30\n")
(comment . ";;1140: r12 <- r1, 0x38\n")
(comment . ";;1144: r8 <- r1, 0x40\n")
(comment . ";;1148: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1156: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1172: b r6")
chunklet-i: 1176; chunklet-start-i: 1192; chunklet-end-i: 1236
i: 1176
end-i: 1236
at header: 1176
i: 1192
end-i: 1236
i: 1196
end-i: 1236
i: 1200
end-i: 1236
i: 1204
end-i: 1236
i: 1208
end-i: 1236
i: 1212
end-i: 1236
i: 1216
end-i: 1236
i: 1220
end-i: 1236
i: 1224
end-i: 1236
i: 1228
end-i: 1236
i: 1232
end-i: 1236
i: 1236
end-i: 1236
i:1236 HIT CHUNK END
(comment . ";;1192: r1 <- r1, r8")
(comment . ";;1196: r10 <- 0x4")
(comment . ";;1200: r15 <- r1, 0x10\n")
(comment . ";;1204: r14 <- r1, 0x18\n")
(comment . ";;1208: r11 <- r1, 0x20\n")
(comment . ";;1212: r13 <- r1, 0x8\n")
(comment . ";;1216: r5 <- r1, 0x28\n")
(comment . ";;1220: r4 <- r1, 0x30\n")
(comment . ";;1224: r12 <- r1, 0x38\n")
(comment . ";;1228: r8 <- r1, 0x40\n")
(comment . ";;1232 b -952")
chunklet-i: 1236; chunklet-start-i: 1236; chunklet-end-i: 1304
i: 1236
end-i: 1304
i: 1236
end-i: 1304
i: 1240
end-i: 1304
i: 1244
end-i: 1304
i: 1248
end-i: 1304
i: 1252
end-i: 1304
i: 1256
end-i: 1304
i: 1260
end-i: 1304
i: 1264
end-i: 1304
i: 1268
end-i: 1304
i: 1272
end-i: 1304
i: 1276
end-i: 1304
i: 1280
end-i: 1304
i: 1284
end-i: 1304
i: 1288
end-i: 1304
i: 1300
end-i: 1304
i: 1304
end-i: 1304
at header: 1304
(comment . ";;1236: r9 <- 0xC")
(comment . ";;1240: r15 <- r1, 0x10\n")
(comment . ";;1244: r14 <- r1, 0x18\n")
(comment . ";;1248: r11 <- r1, 0x20\n")
(comment . ";;1252: r13 <- r1, 0x8\n")
(comment . ";;1256: r5 <- r1, 0x28\n")
(comment . ";;1260: r4 <- r1, 0x30\n")
(comment . ";;1264: r12 <- r1, 0x38\n")
(comment . ";;1268: r8 <- r1, 0x40\n")
(comment . ";;1272: r7 <- r1, 0x48\n")
(comment . ";;1276: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1284: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1300: b r6")
chunklet-i: 1304; chunklet-start-i: 1320; chunklet-end-i: 1372
i: 1304
end-i: 1372
at header: 1304
i: 1320
end-i: 1372
i: 1324
end-i: 1372
i: 1328
end-i: 1372
i: 1332
end-i: 1372
i: 1336
end-i: 1372
i: 1340
end-i: 1372
i: 1344
end-i: 1372
i: 1348
end-i: 1372
i: 1352
end-i: 1372
i: 1356
end-i: 1372
i: 1360
end-i: 1372
i: 1364
end-i: 1372
i: 1368
end-i: 1372
i: 1372
end-i: 1372
i:1372 HIT CHUNK END
(comment . ";;1320: r1 <- r1, r0")
(comment . ";;1324: r10 <- 0x4")
(comment . ";;1328: r15 <- r1, 0x10\n")
(comment . ";;1332: r14 <- r1, 0x18\n")
(comment . ";;1336: r11 <- r1, 0x20\n")
(comment . ";;1340: r13 <- r1, 0x8\n")
(comment . ";;1344: r5 <- r1, 0x28\n")
(comment . ";;1348: r4 <- r1, 0x30\n")
(comment . ";;1352: r12 <- r1, 0x38\n")
(comment . ";;1356: r8 <- r1, 0x40\n")
(comment . ";;1360: r7 <- r1, 0x48\n")
(comment . ";;1368 b -1116")
chunklet-i: 1372; chunklet-start-i: 1372; chunklet-end-i: 1440
i: 1372
end-i: 1440
i: 1372
end-i: 1440
i: 1376
end-i: 1440
i: 1380
end-i: 1440
i: 1384
end-i: 1440
i: 1388
end-i: 1440
i: 1392
end-i: 1440
i: 1396
end-i: 1440
i: 1400
end-i: 1440
i: 1404
end-i: 1440
i: 1408
end-i: 1440
i: 1412
end-i: 1440
i: 1416
end-i: 1440
i: 1420
end-i: 1440
i: 1424
end-i: 1440
i: 1436
end-i: 1440
i: 1440
end-i: 1440
at header: 1440
(comment . ";;1372: r10 <- 0x8")
(comment . ";;1376: r15 <- r1, 0x10\n")
(comment . ";;1380: r14 <- r1, 0x18\n")
(comment . ";;1384: r11 <- r1, 0x20\n")
(comment . ";;1388: r13 <- r1, 0x8\n")
(comment . ";;1392: r5 <- r1, 0x28\n")
(comment . ";;1396: r4 <- r1, 0x30\n")
(comment . ";;1400: r12 <- r1, 0x38\n")
(comment . ";;1404: r8 <- r1, 0x40\n")
(comment . ";;1408: r7 <- r1, 0x48\n")
(comment . ";;1412: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1420: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1436: b r6")
chunklet-i: 1440; chunklet-start-i: 1456; chunklet-end-i: 1504
i: 1440
end-i: 1504
at header: 1440
i: 1456
end-i: 1504
i: 1460
end-i: 1504
i: 1464
end-i: 1504
i: 1468
end-i: 1504
i: 1472
end-i: 1504
i: 1476
end-i: 1504
i: 1480
end-i: 1504
i: 1484
end-i: 1504
i: 1488
end-i: 1504
i: 1492
end-i: 1504
i: 1496
end-i: 1504
i: 1500
end-i: 1504
i: 1504
end-i: 1504
i:1504 HIT CHUNK END
(comment . ";;1456: r1 <- r1, r0")
(comment . ";;1460: r10 <- 0x4")
(comment . ";;1464: r15 <- r1, 0x10\n")
(comment . ";;1468: r14 <- r1, 0x18\n")
(comment . ";;1472: r11 <- r1, 0x20\n")
(comment . ";;1476: r13 <- r1, 0x8\n")
(comment . ";;1480: r5 <- r1, 0x28\n")
(comment . ";;1484: r4 <- r1, 0x30\n")
(comment . ";;1488: r12 <- r1, 0x38\n")
(comment . ";;1492: r8 <- r1, 0x40\n")
(comment . ";;1496: r7 <- r1, 0x48\n")
(comment . ";;1500 b -1272")
chunklet-i: 1504; chunklet-start-i: 1504; chunklet-end-i: 1568
i: 1504
end-i: 1568
i: 1504
end-i: 1568
i: 1508
end-i: 1568
i: 1512
end-i: 1568
i: 1516
end-i: 1568
i: 1520
end-i: 1568
i: 1524
end-i: 1568
i: 1528
end-i: 1568
i: 1532
end-i: 1568
i: 1536
end-i: 1568
i: 1540
end-i: 1568
i: 1544
end-i: 1568
i: 1548
end-i: 1568
i: 1552
end-i: 1568
i: 1564
end-i: 1568
i: 1568
end-i: 1568
at header: 1568
(comment . ";;1504: r15 <- r1, 0x10\n")
(comment . ";;1508: r14 <- r1, 0x18\n")
(comment . ";;1512: r11 <- r1, 0x20\n")
(comment . ";;1516: r13 <- r1, 0x8\n")
(comment . ";;1520: r5 <- r1, 0x28\n")
(comment . ";;1524: r4 <- r1, 0x30\n")
(comment . ";;1528: r12 <- r1, 0x38\n")
(comment . ";;1532: r8 <- r1, 0x40\n")
(comment . ";;1536: r7 <- r1, 0x48\n")
(comment . ";;1540: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1548: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1564: b r6")
chunklet-i: 1568; chunklet-start-i: 1584; chunklet-end-i: 1636
i: 1568
end-i: 1636
at header: 1568
i: 1584
end-i: 1636
i: 1588
end-i: 1636
i: 1592
end-i: 1636
i: 1596
end-i: 1636
i: 1600
end-i: 1636
i: 1604
end-i: 1636
i: 1608
end-i: 1636
i: 1612
end-i: 1636
i: 1616
end-i: 1636
i: 1620
end-i: 1636
i: 1624
end-i: 1636
i: 1628
end-i: 1636
i: 1632
end-i: 1636
i: 1636
end-i: 1636
i:1636 HIT CHUNK END
(comment . ";;1584: r1 <- r1, r0")
(comment . ";;1588: r9 <- 0x4")
(comment . ";;1592: r15 <- r1, 0x10\n")
(comment . ";;1596: r14 <- r1, 0x18\n")
(comment . ";;1600: r11 <- r1, 0x20\n")
(comment . ";;1604: r13 <- r1, 0x8\n")
(comment . ";;1608: r5 <- r1, 0x28\n")
(comment . ";;1612: r4 <- r1, 0x30\n")
(comment . ";;1616: r12 <- r1, 0x38\n")
(comment . ";;1620: r8 <- r1, 0x40\n")
(comment . ";;1624: r7 <- r1, 0x48\n")
(comment . ";;1632 b -1428")
chunklet-i: 1636; chunklet-start-i: 1636; chunklet-end-i: 1696
i: 1636
end-i: 1696
i: 1636
end-i: 1696
i: 1640
end-i: 1696
i: 1644
end-i: 1696
i: 1648
end-i: 1696
i: 1652
end-i: 1696
i: 1656
end-i: 1696
i: 1660
end-i: 1696
i: 1664
end-i: 1696
i: 1668
end-i: 1696
i: 1672
end-i: 1696
i: 1676
end-i: 1696
i: 1680
end-i: 1696
i: 1692
end-i: 1696
i: 1696
end-i: 1696
at header: 1696
(comment . ";;1636: r15 <- r1, 0x10\n")
(comment . ";;1640: r14 <- r1, 0x18\n")
(comment . ";;1644: r11 <- r1, 0x20\n")
(comment . ";;1648: r13 <- r1, 0x8\n")
(comment . ";;1652: r5 <- r1, 0x28\n")
(comment . ";;1656: r4 <- r1, 0x30\n")
(comment . ";;1660: r12 <- r1, 0x38\n")
(comment . ";;1664: r8 <- r1, 0x40\n")
(comment . ";;1668: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1676: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1692: b r6")
chunklet-i: 1696; chunklet-start-i: 1712; chunklet-end-i: 1756
i: 1696
end-i: 1756
at header: 1696
i: 1712
end-i: 1756
i: 1716
end-i: 1756
i: 1720
end-i: 1756
i: 1724
end-i: 1756
i: 1728
end-i: 1756
i: 1732
end-i: 1756
i: 1736
end-i: 1756
i: 1740
end-i: 1756
i: 1744
end-i: 1756
i: 1748
end-i: 1756
i: 1752
end-i: 1756
i: 1756
end-i: 1756
i:1756 HIT CHUNK END
(comment . ";;1712: r1 <- r1, r8")
(comment . ";;1716: r7 <- 0x4")
(comment . ";;1720: r15 <- r1, 0x10\n")
(comment . ";;1724: r14 <- r1, 0x18\n")
(comment . ";;1728: r11 <- r1, 0x20\n")
(comment . ";;1732: r13 <- r1, 0x8\n")
(comment . ";;1736: r5 <- r1, 0x28\n")
(comment . ";;1740: r4 <- r1, 0x30\n")
(comment . ";;1744: r12 <- r1, 0x38\n")
(comment . ";;1748: r8 <- r1, 0x40\n")
(comment . ";;1752 b -1576")
chunklet-i: 1756; chunklet-start-i: 1756; chunklet-end-i: 1816
i: 1756
end-i: 1816
i: 1756
end-i: 1816
i: 1760
end-i: 1816
i: 1764
end-i: 1816
i: 1768
end-i: 1816
i: 1772
end-i: 1816
i: 1776
end-i: 1816
i: 1780
end-i: 1816
i: 1784
end-i: 1816
i: 1788
end-i: 1816
i: 1792
end-i: 1816
i: 1796
end-i: 1816
i: 1800
end-i: 1816
i: 1812
end-i: 1816
i: 1816
end-i: 1816
at header: 1816
(comment . ";;1756: r15 <- r1, 0x10\n")
(comment . ";;1760: r14 <- r1, 0x18\n")
(comment . ";;1764: r11 <- r1, 0x20\n")
(comment . ";;1768: r13 <- r1, 0x8\n")
(comment . ";;1772: r5 <- r1, 0x28\n")
(comment . ";;1776: r4 <- r1, 0x30\n")
(comment . ";;1780: r12 <- r1, 0x38\n")
(comment . ";;1784: r8 <- r1, 0x40\n")
(comment . ";;1788: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1796: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1812: b r6")
chunklet-i: 1816; chunklet-start-i: 1832; chunklet-end-i: 1876
i: 1816
end-i: 1876
at header: 1816
i: 1832
end-i: 1876
i: 1836
end-i: 1876
i: 1840
end-i: 1876
i: 1844
end-i: 1876
i: 1848
end-i: 1876
i: 1852
end-i: 1876
i: 1856
end-i: 1876
i: 1860
end-i: 1876
i: 1864
end-i: 1876
i: 1868
end-i: 1876
i: 1872
end-i: 1876
i: 1876
end-i: 1876
i:1876 HIT CHUNK END
(comment . ";;1836: r1 <- r1, r8")
(comment . ";;1840: r15 <- r1, 0x10\n")
(comment . ";;1844: r14 <- r1, 0x18\n")
(comment . ";;1848: r11 <- r1, 0x20\n")
(comment . ";;1852: r13 <- r1, 0x8\n")
(comment . ";;1856: r5 <- r1, 0x28\n")
(comment . ";;1860: r4 <- r1, 0x30\n")
(comment . ";;1864: r12 <- r1, 0x38\n")
(comment . ";;1868: r8 <- r1, 0x40\n")
(comment . ";;1872 b -1720")
chunklet-i: 1876; chunklet-start-i: 1876; chunklet-end-i: 1884
i: 1876
end-i: 1884
i: 1876
end-i: 1884
i: 1880
end-i: 1884
i: 1884
end-i: 1884
i:1884 HIT CHUNK END
(comment . ";;1876: r12 <- 0x7")
(comment . ";;1880 b 16")
chunklet-i: 1884; chunklet-start-i: 1884; chunklet-end-i: 1892
i: 1884
end-i: 1892
i: 1888
end-i: 1892
i: 1892
end-i: 1892
i:1892 HIT CHUNK END
(comment . ";;1884: r10 <- r12, 0x8\n")
(comment . ";;1888 b 8")
chunklet-i: 1892; chunklet-start-i: 1892; chunklet-end-i: 1900
i: 1892
end-i: 1900
i: 1896
end-i: 1900
i: 1900
end-i: 1900
i:1900 HIT CHUNK END
(comment . ";;1892: r12 <- 0xA")
(comment . ";;1896 b -1804")
chunklet-i: 1900; chunklet-start-i: 1900; chunklet-end-i: 1960
i: 1900
end-i: 1960
i: 1900
end-i: 1960
i: 1904
end-i: 1960
i: 1908
end-i: 1960
i: 1912
end-i: 1960
i: 1916
end-i: 1960
i: 1920
end-i: 1960
i: 1924
end-i: 1960
i: 1928
end-i: 1960
i: 1932
end-i: 1960
i: 1936
end-i: 1960
i: 1940
end-i: 1960
i: 1944
end-i: 1960
i: 1956
end-i: 1960
i: 1960
end-i: 1960
at header: 1960
(comment . ";;1900: r9 <- 0x8")
(comment . ";;1904: r10 <- 0xC")
(comment . ";;1908: r15 <- r1, 0x10\n")
(comment . ";;1912: r14 <- r1, 0x18\n")
(comment . ";;1916: r11 <- r1, 0x20\n")
(comment . ";;1920: r13 <- r1, 0x8\n")
(comment . ";;1924: r5 <- r1, 0x28\n")
(comment . ";;1928: r4 <- r1, 0x30\n")
(comment . ";;1932: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1940: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1956: b r6")
chunklet-i: 1960; chunklet-start-i: 1976; chunklet-end-i: 2012
i: 1960
end-i: 2012
at header: 1960
i: 1976
end-i: 2012
i: 1980
end-i: 2012
i: 1984
end-i: 2012
i: 1988
end-i: 2012
i: 1992
end-i: 2012
i: 1996
end-i: 2012
i: 2000
end-i: 2012
i: 2004
end-i: 2012
i: 2008
end-i: 2012
i: 2012
end-i: 2012
i:2012 HIT CHUNK END
(comment . ";;1976: r1 <- r1, r8")
(comment . ";;1980: r12 <- 0x4")
(comment . ";;1984: r15 <- r1, 0x10\n")
(comment . ";;1988: r14 <- r1, 0x18\n")
(comment . ";;1992: r11 <- r1, 0x20\n")
(comment . ";;1996: r13 <- r1, 0x8\n")
(comment . ";;2000: r5 <- r1, 0x28\n")
(comment . ";;2004: r4 <- r1, 0x30\n")
(comment . ";;2008 b -1916")
chunklet-i: 2012; chunklet-start-i: 2012; chunklet-end-i: 2020
i: 2012
end-i: 2020
i: 2012
end-i: 2020
i: 2016
end-i: 2020
i: 2020
end-i: 2020
i:2020 HIT CHUNK END
(comment . ";;2012: r3 <- r3, 0x1\n")
(comment . ";;2016 b 112")
chunklet-i: 2020; chunklet-start-i: 2020; chunklet-end-i: 2080
i: 2020
end-i: 2080
i: 2024
end-i: 2080
i: 2028
end-i: 2080
i: 2032
end-i: 2080
i: 2036
end-i: 2080
i: 2040
end-i: 2080
i: 2044
end-i: 2080
i: 2048
end-i: 2080
i: 2052
end-i: 2080
i: 2056
end-i: 2080
i: 2060
end-i: 2080
i: 2064
end-i: 2080
i: 2076
end-i: 2080
i: 2080
end-i: 2080
at header: 2080
(comment . ";;2020: r15 <- r1, 0x10\n")
(comment . ";;2024: r14 <- r1, 0x18\n")
(comment . ";;2028: r11 <- r1, 0x20\n")
(comment . ";;2032: r13 <- r1, 0x8\n")
(comment . ";;2036: r5 <- r1, 0x28\n")
(comment . ";;2040: r4 <- r1, 0x30\n")
(comment . ";;2044: r12 <- r1, 0x38\n")
(comment . ";;2048: r8 <- r1, 0x40\n")
(comment . ";;2052: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2060: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2076: b r6")
chunklet-i: 2080; chunklet-start-i: 2096; chunklet-end-i: 2132
i: 2080
end-i: 2132
at header: 2080
i: 2096
end-i: 2132
i: 2100
end-i: 2132
i: 2104
end-i: 2132
i: 2108
end-i: 2132
i: 2112
end-i: 2132
i: 2116
end-i: 2132
i: 2120
end-i: 2132
i: 2124
end-i: 2132
i: 2128
end-i: 2132
i: 2132
end-i: 2132
i:2132 HIT CHUNK END
(comment . ";;2096: r1 <- r1, r8")
(comment . ";;2100: r15 <- r1, 0x10\n")
(comment . ";;2104: r14 <- r1, 0x18\n")
(comment . ";;2108: r11 <- r1, 0x20\n")
(comment . ";;2112: r13 <- r1, 0x8\n")
(comment . ";;2116: r5 <- r1, 0x28\n")
(comment . ";;2120: r4 <- r1, 0x30\n")
(comment . ";;2124: r12 <- r1, 0x38\n")
(comment . ";;2128: r8 <- r1, 0x40\n")
chunklet-i: 2132; chunklet-start-i: 2132; chunklet-end-i: 2200
i: 2132
end-i: 2200
i: 2132
end-i: 2200
i: 2136
end-i: 2200
i: 2140
end-i: 2200
i: 2144
end-i: 2200
i: 2148
end-i: 2200
i: 2152
end-i: 2200
i: 2156
end-i: 2200
i: 2160
end-i: 2200
i: 2164
end-i: 2200
i: 2168
end-i: 2200
i: 2172
end-i: 2200
i: 2176
end-i: 2200
i: 2180
end-i: 2200
i: 2184
end-i: 2200
i: 2196
end-i: 2200
i: 2200
end-i: 2200
at header: 2200
(comment . ";;2132: r9 <- 0x8")
(comment . ";;2136: r10 <- 0xD")
(comment . ";;2140: r15 <- r1, 0x10\n")
(comment . ";;2144: r14 <- r1, 0x18\n")
(comment . ";;2148: r11 <- r1, 0x20\n")
(comment . ";;2152: r13 <- r1, 0x8\n")
(comment . ";;2156: r5 <- r1, 0x28\n")
(comment . ";;2160: r4 <- r1, 0x30\n")
(comment . ";;2164: r12 <- r1, 0x38\n")
(comment . ";;2168: r8 <- r1, 0x40\n")
(comment . ";;2172: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2196: b r6")
chunklet-i: 2200; chunklet-start-i: 2216; chunklet-end-i: 2268
i: 2200
end-i: 2268
at header: 2200
i: 2216
end-i: 2268
i: 2220
end-i: 2268
i: 2224
end-i: 2268
i: 2228
end-i: 2268
i: 2232
end-i: 2268
i: 2236
end-i: 2268
i: 2240
end-i: 2268
i: 2244
end-i: 2268
i: 2248
end-i: 2268
i: 2252
end-i: 2268
i: 2256
end-i: 2268
i: 2260
end-i: 2268
i: 2264
end-i: 2268
i: 2268
end-i: 2268
i:2268 HIT CHUNK END
(comment . ";;2216: r1 <- r1, r8")
(comment . ";;2220: r10 <- 0x4")
(comment . ";;2224: r15 <- r1, 0x10\n")
(comment . ";;2228: r14 <- r1, 0x18\n")
(comment . ";;2232: r11 <- r1, 0x20\n")
(comment . ";;2236: r13 <- r1, 0x8\n")
(comment . ";;2240: r5 <- r1, 0x28\n")
(comment . ";;2244: r4 <- r1, 0x30\n")
(comment . ";;2248: r12 <- r1, 0x38\n")
(comment . ";;2252: r8 <- r1, 0x40\n")
(comment . ";;2256: r10 <- 0x6")
(comment . ";;2264 b -2120")
chunklet-i: 2268; chunklet-start-i: 2268; chunklet-end-i: 2272
i: 2268
end-i: 2272
i: 2272
end-i: 2272
i:2272 HIT CHUNK END
(comment . ";;2268 b -396")
chunklet-i: 2272; chunklet-start-i: 2272; chunklet-end-i: 2328
i: 2272
end-i: 2328
i: 2272
end-i: 2328
i: 2276
end-i: 2328
i: 2280
end-i: 2328
i: 2284
end-i: 2328
i: 2288
end-i: 2328
i: 2292
end-i: 2328
i: 2296
end-i: 2328
i: 2300
end-i: 2328
i: 2304
end-i: 2328
i: 2308
end-i: 2328
i: 2312
end-i: 2328
i: 2324
end-i: 2328
i: 2328
end-i: 2328
at header: 2328
(comment . ";;2272: r15 <- r1, 0x10\n")
(comment . ";;2276: r14 <- r1, 0x18\n")
(comment . ";;2280: r11 <- r1, 0x20\n")
(comment . ";;2284: r13 <- r1, 0x8\n")
(comment . ";;2288: r5 <- r1, 0x28\n")
(comment . ";;2292: r4 <- r1, 0x30\n")
(comment . ";;2296: r12 <- r1, 0x38\n")
(comment . ";;2300: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2308: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2324: b r6")
chunklet-i: 2328; chunklet-start-i: 2344; chunklet-end-i: 2384
i: 2328
end-i: 2384
at header: 2328
i: 2344
end-i: 2384
i: 2348
end-i: 2384
i: 2352
end-i: 2384
i: 2356
end-i: 2384
i: 2360
end-i: 2384
i: 2364
end-i: 2384
i: 2368
end-i: 2384
i: 2372
end-i: 2384
i: 2376
end-i: 2384
i: 2380
end-i: 2384
i: 2384
end-i: 2384
i:2384 HIT CHUNK END
(comment . ";;2348: r1 <- r1, r0")
(comment . ";;2352: r15 <- r1, 0x10\n")
(comment . ";;2356: r14 <- r1, 0x18\n")
(comment . ";;2360: r11 <- r1, 0x20\n")
(comment . ";;2364: r13 <- r1, 0x8\n")
(comment . ";;2368: r5 <- r1, 0x28\n")
(comment . ";;2372: r4 <- r1, 0x30\n")
(comment . ";;2376: r12 <- r1, 0x38\n")
(comment . ";;2380 b -2260")
chunklet-i: 2384; chunklet-start-i: 2384; chunklet-end-i: 2392
i: 2384
end-i: 2392
i: 2384
end-i: 2392
i: 2388
end-i: 2392
i: 2392
end-i: 2392
i:2392 HIT CHUNK END
(comment . ";;2384: r4 <- 0x7")
(comment . ";;2388 b 16")
chunklet-i: 2392; chunklet-start-i: 2392; chunklet-end-i: 2400
i: 2392
end-i: 2400
i: 2396
end-i: 2400
i: 2400
end-i: 2400
i:2400 HIT CHUNK END
(comment . ";;2392: r12 <- r4, 0x8\n")
(comment . ";;2396 b 8")
chunklet-i: 2400; chunklet-start-i: 2400; chunklet-end-i: 2408
i: 2400
end-i: 2408
i: 2404
end-i: 2408
i: 2408
end-i: 2408
i:2408 HIT CHUNK END
(comment . ";;2400: r4 <- 0xC")
(comment . ";;2404 b -2344")
chunklet-i: 2408; chunklet-start-i: 2408; chunklet-end-i: 2464
i: 2408
end-i: 2464
i: 2408
end-i: 2464
i: 2412
end-i: 2464
i: 2416
end-i: 2464
i: 2420
end-i: 2464
i: 2424
end-i: 2464
i: 2428
end-i: 2464
i: 2432
end-i: 2464
i: 2436
end-i: 2464
i: 2440
end-i: 2464
i: 2444
end-i: 2464
i: 2448
end-i: 2464
i: 2460
end-i: 2464
i: 2464
end-i: 2464
at header: 2464
(comment . ";;2408: r9 <- 0x8")
(comment . ";;2412: r10 <- 0x4")
(comment . ";;2416: r15 <- r1, 0x10\n")
(comment . ";;2420: r14 <- r1, 0x18\n")
(comment . ";;2424: r11 <- r1, 0x20\n")
(comment . ";;2428: r13 <- r1, 0x8\n")
(comment . ";;2432: r5 <- r1, 0x28\n")
(comment . ";;2436: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2444: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2460: b r6")
chunklet-i: 2464; chunklet-start-i: 2480; chunklet-end-i: 2512
i: 2464
end-i: 2512
at header: 2464
i: 2480
end-i: 2512
i: 2484
end-i: 2512
i: 2488
end-i: 2512
i: 2492
end-i: 2512
i: 2496
end-i: 2512
i: 2500
end-i: 2512
i: 2504
end-i: 2512
i: 2508
end-i: 2512
i: 2512
end-i: 2512
i:2512 HIT CHUNK END
(comment . ";;2480: r1 <- r1, r0")
(comment . ";;2484: r15 <- r1, 0x10\n")
(comment . ";;2488: r14 <- r1, 0x18\n")
(comment . ";;2492: r11 <- r1, 0x20\n")
(comment . ";;2496: r13 <- r1, 0x8\n")
(comment . ";;2500: r5 <- r1, 0x28\n")
(comment . ";;2508 b -2448")
chunklet-i: 2512; chunklet-start-i: 2512; chunklet-end-i: 2520
i: 2512
end-i: 2520
i: 2512
end-i: 2520
i: 2516
end-i: 2520
i: 2520
end-i: 2520
i:2520 HIT CHUNK END
(comment . ";;2512: r3 <- r3, 0x1\n")
(comment . ";;2516 b 104")
chunklet-i: 2520; chunklet-start-i: 2520; chunklet-end-i: 2576
i: 2520
end-i: 2576
i: 2524
end-i: 2576
i: 2528
end-i: 2576
i: 2532
end-i: 2576
i: 2536
end-i: 2576
i: 2540
end-i: 2576
i: 2544
end-i: 2576
i: 2548
end-i: 2576
i: 2552
end-i: 2576
i: 2556
end-i: 2576
i: 2560
end-i: 2576
i: 2572
end-i: 2576
i: 2576
end-i: 2576
at header: 2576
(comment . ";;2520: r15 <- r1, 0x10\n")
(comment . ";;2524: r14 <- r1, 0x18\n")
(comment . ";;2528: r11 <- r1, 0x20\n")
(comment . ";;2532: r13 <- r1, 0x8\n")
(comment . ";;2536: r5 <- r1, 0x28\n")
(comment . ";;2540: r4 <- r1, 0x30\n")
(comment . ";;2544: r12 <- r1, 0x38\n")
(comment . ";;2548: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2556: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2572: b r6")
chunklet-i: 2576; chunklet-start-i: 2592; chunklet-end-i: 2624
i: 2576
end-i: 2624
at header: 2576
i: 2592
end-i: 2624
i: 2596
end-i: 2624
i: 2600
end-i: 2624
i: 2604
end-i: 2624
i: 2608
end-i: 2624
i: 2612
end-i: 2624
i: 2616
end-i: 2624
i: 2620
end-i: 2624
i: 2624
end-i: 2624
i:2624 HIT CHUNK END
(comment . ";;2592: r1 <- r1, r0")
(comment . ";;2596: r15 <- r1, 0x10\n")
(comment . ";;2600: r14 <- r1, 0x18\n")
(comment . ";;2604: r11 <- r1, 0x20\n")
(comment . ";;2608: r13 <- r1, 0x8\n")
(comment . ";;2612: r5 <- r1, 0x28\n")
(comment . ";;2616: r4 <- r1, 0x30\n")
(comment . ";;2620: r12 <- r1, 0x38\n")
chunklet-i: 2624; chunklet-start-i: 2624; chunklet-end-i: 2688
i: 2624
end-i: 2688
i: 2624
end-i: 2688
i: 2628
end-i: 2688
i: 2632
end-i: 2688
i: 2636
end-i: 2688
i: 2640
end-i: 2688
i: 2644
end-i: 2688
i: 2648
end-i: 2688
i: 2652
end-i: 2688
i: 2656
end-i: 2688
i: 2660
end-i: 2688
i: 2664
end-i: 2688
i: 2668
end-i: 2688
i: 2672
end-i: 2688
i: 2684
end-i: 2688
i: 2688
end-i: 2688
at header: 2688
(comment . ";;2624: r9 <- 0xC")
(comment . ";;2628: r10 <- 0xB")
(comment . ";;2632: r15 <- r1, 0x10\n")
(comment . ";;2636: r14 <- r1, 0x18\n")
(comment . ";;2640: r11 <- r1, 0x20\n")
(comment . ";;2644: r13 <- r1, 0x8\n")
(comment . ";;2648: r5 <- r1, 0x28\n")
(comment . ";;2652: r4 <- r1, 0x30\n")
(comment . ";;2656: r12 <- r1, 0x38\n")
(comment . ";;2660: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2668: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2684: b r6")
chunklet-i: 2688; chunklet-start-i: 2704; chunklet-end-i: 2752
i: 2688
end-i: 2752
at header: 2688
i: 2704
end-i: 2752
i: 2708
end-i: 2752
i: 2712
end-i: 2752
i: 2716
end-i: 2752
i: 2720
end-i: 2752
i: 2724
end-i: 2752
i: 2728
end-i: 2752
i: 2732
end-i: 2752
i: 2736
end-i: 2752
i: 2740
end-i: 2752
i: 2744
end-i: 2752
i: 2748
end-i: 2752
i: 2752
end-i: 2752
i:2752 HIT CHUNK END
(comment . ";;2704: r1 <- r1, r0")
(comment . ";;2708: r10 <- 0x4")
(comment . ";;2712: r15 <- r1, 0x10\n")
(comment . ";;2716: r14 <- r1, 0x18\n")
(comment . ";;2720: r11 <- r1, 0x20\n")
(comment . ";;2724: r13 <- r1, 0x8\n")
(comment . ";;2728: r5 <- r1, 0x28\n")
(comment . ";;2732: r4 <- r1, 0x30\n")
(comment . ";;2736: r12 <- r1, 0x38\n")
(comment . ";;2740: r10 <- 0x6")
(comment . ";;2748 b -2636")
chunklet-i: 2752; chunklet-start-i: 2752; chunklet-end-i: 2756
i: 2752
end-i: 2756
i: 2756
end-i: 2756
i:2756 HIT CHUNK END
(comment . ";;2752 b -372")
chunklet-i: 2756; chunklet-start-i: 2756; chunklet-end-i: 2808
i: 2756
end-i: 2808
i: 2756
end-i: 2808
i: 2760
end-i: 2808
i: 2764
end-i: 2808
i: 2768
end-i: 2808
i: 2772
end-i: 2808
i: 2776
end-i: 2808
i: 2780
end-i: 2808
i: 2784
end-i: 2808
i: 2788
end-i: 2808
i: 2792
end-i: 2808
i: 2804
end-i: 2808
i: 2808
end-i: 2808
at header: 2808
(comment . ";;2756: r15 <- r1, 0x10\n")
(comment . ";;2760: r14 <- r1, 0x18\n")
(comment . ";;2764: r11 <- r1, 0x20\n")
(comment . ";;2768: r13 <- r1, 0x8\n")
(comment . ";;2772: r5 <- r1, 0x28\n")
(comment . ";;2776: r4 <- r1, 0x30\n")
(comment . ";;2780: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2788: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2804: b r6")
chunklet-i: 2808; chunklet-start-i: 2824; chunklet-end-i: 2856
i: 2808
end-i: 2856
at header: 2808
i: 2824
end-i: 2856
i: 2828
end-i: 2856
i: 2832
end-i: 2856
i: 2836
end-i: 2856
i: 2840
end-i: 2856
i: 2844
end-i: 2856
i: 2848
end-i: 2856
i: 2852
end-i: 2856
i: 2856
end-i: 2856
i:2856 HIT CHUNK END
(comment . ";;2824: r1 <- r1, r8")
(comment . ";;2828: r15 <- r1, 0x10\n")
(comment . ";;2832: r14 <- r1, 0x18\n")
(comment . ";;2836: r11 <- r1, 0x20\n")
(comment . ";;2840: r13 <- r1, 0x8\n")
(comment . ";;2844: r5 <- r1, 0x28\n")
(comment . ";;2848: r4 <- r1, 0x30\n")
(comment . ";;2852 b -2764")
chunklet-i: 2856; chunklet-start-i: 2856; chunklet-end-i: 2880
i: 2856
end-i: 2880
i: 2856
end-i: 2880
i: 2868
end-i: 2880
i: 2872
end-i: 2880
i: 2876
end-i: 2880
i: 2880
end-i: 2880
i:2880 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;2868: r4 <- r9, 0x5\n")
(comment . ";;2872: r4 <- 0x1E")
(comment . ";;2876 b 1720")
chunklet-i: 2880; chunklet-start-i: 2880; chunklet-end-i: 2904
i: 2880
end-i: 2904
i: 2880
end-i: 2904
i: 2892
end-i: 2904
i: 2896
end-i: 2904
i: 2900
end-i: 2904
i: 2904
end-i: 2904
i:2904 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;2892: r10 <- r9, 0x5\n")
(comment . ";;2896: r10 <- 0x1E")
(comment . ";;2900 b 1524")
chunklet-i: 2904; chunklet-start-i: 2904; chunklet-end-i: 2916
i: 2904
end-i: 2916
i: 2904
end-i: 2916
i: 2908
end-i: 2916
i: 2912
end-i: 2916
i: 2916
end-i: 2916
i:2916 HIT CHUNK END
(comment . ";;2904: r14 <- r4, r7")
(comment . ";;2908: r14 <- 0x7")
(comment . ";;2912 b 1488")
chunklet-i: 2916; chunklet-start-i: 2916; chunklet-end-i: 2928
i: 2916
end-i: 2928
i: 2920
end-i: 2928
i: 2924
end-i: 2928
i: 2928
end-i: 2928
i:2928 HIT CHUNK END
(comment . ";;2916: r14 <- r4, 0x1\n")
(comment . ";;2920: r14 <- 0xF")
(comment . ";;2924 b 1476")
chunklet-i: 2928; chunklet-start-i: 2928; chunklet-end-i: 2936
i: 2928
end-i: 2936
i: 2932
end-i: 2936
i: 2936
end-i: 2936
i:2936 HIT CHUNK END
(comment . ";;2928: r10 <- 0x7")
(comment . ";;2932 b 1468")
chunklet-i: 2936; chunklet-start-i: 2936; chunklet-end-i: 2952
i: 2936
end-i: 2952
i: 2940
end-i: 2952
i: 2944
end-i: 2952
i: 2948
end-i: 2952
i: 2952
end-i: 2952
i:2952 HIT CHUNK END
(comment . ";;2936: r14 <- r14, r1")
(comment . ";;2940: r14 <- r14, r8")
(comment . ";;2944: r10 <- r14")
(comment . ";;2948 b 1452")
chunklet-i: 2952; chunklet-start-i: 2952; chunklet-end-i: 2972
i: 2952
end-i: 2972
i: 2956
end-i: 2972
i: 2960
end-i: 2972
i: 2964
end-i: 2972
i: 2968
end-i: 2972
i: 2972
end-i: 2972
i:2972 HIT CHUNK END
(comment . ";;2952: r14 <- r4, r9")
(comment . ";;2956: r14 <- r10, r14")
(comment . ";;2960: r15 <- r14, 0x0\n")
(comment . ";;2964: r15 <- 0x7")
(comment . ";;2968 b 24")
chunklet-i: 2972; chunklet-start-i: 2972; chunklet-end-i: 2984
i: 2972
end-i: 2984
i: 2976
end-i: 2984
i: 2980
end-i: 2984
i: 2984
end-i: 2984
i:2984 HIT CHUNK END
(comment . ";;2972: r7 <- r0, 0x68\n")
(comment . ";;2976: r2 <- r7")
(comment . ";;2980 b 1396")
chunklet-i: 2984; chunklet-start-i: 2984; chunklet-end-i: 2996
i: 2984
end-i: 2996
i: 2984
end-i: 2996
i: 2988
end-i: 2996
i: 2992
end-i: 2996
i: 2996
end-i: 2996
i:2996 HIT CHUNK END
(comment . ";;2984: r7 <- r7, r8")
(comment . ";;2988: r7 <- r0, 0x68\n")
(comment . ";;2992: r14 <- r7, 0x0\n")
chunklet-i: 2996; chunklet-start-i: 2996; chunklet-end-i: 3020
i: 2996
end-i: 3020
i: 2996
end-i: 3020
i: 3008
end-i: 3020
i: 3012
end-i: 3020
i: 3016
end-i: 3020
i: 3020
end-i: 3020
i:3020 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;3008: r4 <- r9, 0x5\n")
(comment . ";;3012: r4 <- 0x1E")
(comment . ";;3016 b 1224")
chunklet-i: 3020; chunklet-start-i: 3020; chunklet-end-i: 3044
i: 3020
end-i: 3044
i: 3020
end-i: 3044
i: 3032
end-i: 3044
i: 3036
end-i: 3044
i: 3040
end-i: 3044
i: 3044
end-i: 3044
i:3044 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;3032: r10 <- r9, 0x5\n")
(comment . ";;3036: r10 <- 0x1E")
(comment . ";;3040 b 1044")
chunklet-i: 3044; chunklet-start-i: 3044; chunklet-end-i: 3060
i: 3044
end-i: 3060
i: 3044
end-i: 3060
i: 3048
end-i: 3060
i: 3052
end-i: 3060
i: 3056
end-i: 3060
i: 3060
end-i: 3060
i:3060 HIT CHUNK END
(comment . ";;3044: r11 <- r5, 0x7\n")
(comment . ";;3048: r15 <- r4, r7")
(comment . ";;3052: r15 <- 0x7")
(comment . ";;3056 b 1008")
chunklet-i: 3060; chunklet-start-i: 3060; chunklet-end-i: 3072
i: 3060
end-i: 3072
i: 3064
end-i: 3072
i: 3068
end-i: 3072
i: 3072
end-i: 3072
i:3072 HIT CHUNK END
(comment . ";;3060: r15 <- r4, 0x1\n")
(comment . ";;3064: r15 <- 0xF")
(comment . ";;3068 b 996")
chunklet-i: 3072; chunklet-start-i: 3072; chunklet-end-i: 3080
i: 3072
end-i: 3080
i: 3076
end-i: 3080
i: 3080
end-i: 3080
i:3080 HIT CHUNK END
(comment . ";;3072: r10 <- 0x7")
(comment . ";;3076 b 988")
chunklet-i: 3080; chunklet-start-i: 3080; chunklet-end-i: 3096
i: 3080
end-i: 3096
i: 3084
end-i: 3096
i: 3088
end-i: 3096
i: 3092
end-i: 3096
i: 3096
end-i: 3096
i:3096 HIT CHUNK END
(comment . ";;3080: r15 <- r15, r1")
(comment . ";;3084: r15 <- r15, r8")
(comment . ";;3088: r10 <- r15")
(comment . ";;3092 b 972")
chunklet-i: 3096; chunklet-start-i: 3096; chunklet-end-i: 3116
i: 3096
end-i: 3116
i: 3100
end-i: 3116
i: 3104
end-i: 3116
i: 3108
end-i: 3116
i: 3112
end-i: 3116
i: 3116
end-i: 3116
i:3116 HIT CHUNK END
(comment . ";;3096: r15 <- r4, r9")
(comment . ";;3100: r15 <- r10, r15")
(comment . ";;3104: r11 <- r15, 0x0\n")
(comment . ";;3108: r11 <- 0x7")
(comment . ";;3112 b 24")
chunklet-i: 3116; chunklet-start-i: 3116; chunklet-end-i: 3128
i: 3116
end-i: 3128
i: 3120
end-i: 3128
i: 3124
end-i: 3128
i: 3128
end-i: 3128
i:3128 HIT CHUNK END
(comment . ";;3116: r7 <- r0, 0x68\n")
(comment . ";;3120: r2 <- r7")
(comment . ";;3124 b 916")
chunklet-i: 3128; chunklet-start-i: 3128; chunklet-end-i: 3140
i: 3128
end-i: 3140
i: 3128
end-i: 3140
i: 3132
end-i: 3140
i: 3136
end-i: 3140
i: 3140
end-i: 3140
i:3140 HIT CHUNK END
(comment . ";;3128: r7 <- r7, r8")
(comment . ";;3132: r7 <- r0, 0x68\n")
(comment . ";;3136: r15 <- r7, 0x0\n")
chunklet-i: 3140; chunklet-start-i: 3140; chunklet-end-i: 3164
i: 3140
end-i: 3164
i: 3140
end-i: 3164
i: 3152
end-i: 3164
i: 3156
end-i: 3164
i: 3160
end-i: 3164
i: 3164
end-i: 3164
i:3164 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;3152: r4 <- r9, 0x5\n")
(comment . ";;3156: r4 <- 0x1E")
(comment . ";;3160 b 756")
chunklet-i: 3164; chunklet-start-i: 3164; chunklet-end-i: 3188
i: 3164
end-i: 3188
i: 3164
end-i: 3188
i: 3176
end-i: 3188
i: 3180
end-i: 3188
i: 3184
end-i: 3188
i: 3188
end-i: 3188
i:3188 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;3176: r10 <- r9, 0x5\n")
(comment . ";;3180: r10 <- 0x1E")
(comment . ";;3184 b 592")
chunklet-i: 3188; chunklet-start-i: 3188; chunklet-end-i: 3200
i: 3188
end-i: 3200
i: 3188
end-i: 3200
i: 3192
end-i: 3200
i: 3196
end-i: 3200
i: 3200
end-i: 3200
i:3200 HIT CHUNK END
(comment . ";;3188: r15 <- r4, r10")
(comment . ";;3192: r15 <- 0x7")
(comment . ";;3196 b 436")
chunklet-i: 3200; chunklet-start-i: 3200; chunklet-end-i: 3208
i: 3200
end-i: 3208
i: 3204
end-i: 3208
i: 3208
end-i: 3208
i:3208 HIT CHUNK END
(comment . ";;3200: r4 <- r10")
(comment . ";;3204 b 8")
chunklet-i: 3208; chunklet-start-i: 3208; chunklet-end-i: 3216
i: 3208
end-i: 3216
i: 3208
end-i: 3216
i: 3212
end-i: 3216
i: 3216
end-i: 3216
i:3216 HIT CHUNK END
(comment . ";;3208: r4 <- 0x2E")
(comment . ";;3212: b r1, 0")
chunklet-i: 3216; chunklet-start-i: 3216; chunklet-end-i: 3252
i: 3216
end-i: 3252
i: 3216
end-i: 3252
i: 3228
end-i: 3252
i: 3240
end-i: 3252
i: 3244
end-i: 3252
i: 3248
end-i: 3252
i: 3252
end-i: 3252
i:3252 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;3240: r10 <- r9, 0x5\n")
(comment . ";;3244: r10 <- 0x1E")
(comment . ";;3248 b 240")
chunklet-i: 3252; chunklet-start-i: 3252; chunklet-end-i: 3260
i: 3252
end-i: 3260
i: 3252
end-i: 3260
i: 3256
end-i: 3260
i: 3260
end-i: 3260
i:3260 HIT CHUNK END
(comment . ";;3252: r10 <- 0x7")
(comment . ";;3256 b 96")
chunklet-i: 3260; chunklet-start-i: 3260; chunklet-end-i: 3268
i: 3260
end-i: 3268
i: 3264
end-i: 3268
i: 3268
end-i: 3268
i:3268 HIT CHUNK END
(comment . ";;3260: r4 <- r10, 0x8\n")
(comment . ";;3264 b 88")
chunklet-i: 3268; chunklet-start-i: 3268; chunklet-end-i: 3284
i: 3268
end-i: 3284
i: 3268
end-i: 3284
i: 3272
end-i: 3284
i: 3276
end-i: 3284
i: 3280
end-i: 3284
i: 3284
end-i: 3284
i:3284 HIT CHUNK END
(comment . ";;3268: r14 <- r15, r5")
(comment . ";;3272: r4 <- r14, 0x0\n")
(comment . ";;3276: r4 <- 0x7")
(comment . ";;3280 b 24")
chunklet-i: 3284; chunklet-start-i: 3284; chunklet-end-i: 3296
i: 3284
end-i: 3296
i: 3288
end-i: 3296
i: 3292
end-i: 3296
i: 3296
end-i: 3296
i:3296 HIT CHUNK END
(comment . ";;3284: r7 <- r0, 0x68\n")
(comment . ";;3288: r2 <- r7")
(comment . ";;3292 b 36")
chunklet-i: 3296; chunklet-start-i: 3296; chunklet-end-i: 3308
i: 3296
end-i: 3308
i: 3296
end-i: 3308
i: 3300
end-i: 3308
i: 3304
end-i: 3308
i: 3308
end-i: 3308
i:3308 HIT CHUNK END
(comment . ";;3296: r7 <- r7, r8")
(comment . ";;3300: r7 <- r0, 0x68\n")
(comment . ";;3304: r14 <- r7, 0x0\n")
chunklet-i: 3308; chunklet-start-i: 3308; chunklet-end-i: 3332
i: 3308
end-i: 3332
i: 3308
end-i: 3332
i: 3320
end-i: 3332
i: 3324
end-i: 3332
i: 3328
end-i: 3332
i: 3332
end-i: 3332
i:3332 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;3320: r14 <- r15, 0xD\n")
(comment . ";;3324: r4 <- 0x2E")
(comment . ";;3328: b r1, 0")
chunklet-i: 3332; chunklet-start-i: 3332; chunklet-end-i: 3344
i: 3332
end-i: 3344
i: 3332
end-i: 3344
i: 3344
end-i: 3344
i:3344 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 3344; chunklet-start-i: 3348; chunklet-end-i: 3356
i: 3344
end-i: 3356
i: 3348
end-i: 3356
i: 3352
end-i: 3356
i: 3356
end-i: 3356
i:3356 HIT CHUNK END
(comment . ";; instruction 3344 not included")
(comment . ";;3348: r7 <- r0, 0x68\n")
(comment . ";;3352 b -60")
chunklet-i: 3356; chunklet-start-i: 3356; chunklet-end-i: 3364
i: 3356
end-i: 3364
i: 3356
end-i: 3364
i: 3360
end-i: 3364
i: 3364
end-i: 3364
i:3364 HIT CHUNK END
(comment . ";;3356: r3 <- r3, 0x1\n")
(comment . ";;3360 b 64")
chunklet-i: 3364; chunklet-start-i: 3364; chunklet-end-i: 3400
i: 3364
end-i: 3400
i: 3368
end-i: 3400
i: 3372
end-i: 3400
i: 3376
end-i: 3400
i: 3380
end-i: 3400
i: 3384
end-i: 3400
i: 3396
end-i: 3400
i: 3400
end-i: 3400
at header: 3400
(comment . ";;3364: r15 <- r1, 0x8\n")
(comment . ";;3368: r10 <- r1, 0x10\n")
(comment . ";;3372: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3396: b r6")
chunklet-i: 3400; chunklet-start-i: 3416; chunklet-end-i: 3428
i: 3400
end-i: 3428
at header: 3400
i: 3416
end-i: 3428
i: 3420
end-i: 3428
i: 3424
end-i: 3428
i: 3428
end-i: 3428
i:3428 HIT CHUNK END
(comment . ";;3416: r1 <- r1, r8")
(comment . ";;3420: r15 <- r1, 0x8\n")
(comment . ";;3424: r10 <- r1, 0x10\n")
chunklet-i: 3428; chunklet-start-i: 3428; chunklet-end-i: 3464
i: 3428
end-i: 3464
i: 3428
end-i: 3464
i: 3432
end-i: 3464
i: 3436
end-i: 3464
i: 3440
end-i: 3464
i: 3444
end-i: 3464
i: 3448
end-i: 3464
i: 3460
end-i: 3464
i: 3464
end-i: 3464
at header: 3464
(comment . ";;3428: r9 <- 0x8")
(comment . ";;3432: r15 <- r1, 0x8\n")
(comment . ";;3436: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3444: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3460: b r6")
chunklet-i: 3464; chunklet-start-i: 3480; chunklet-end-i: 3492
i: 3464
end-i: 3492
at header: 3464
i: 3480
end-i: 3492
i: 3484
end-i: 3492
i: 3488
end-i: 3492
i: 3492
end-i: 3492
i:3492 HIT CHUNK END
(comment . ";;3480: r1 <- r1, r0")
(comment . ";;3484: r15 <- r1, 0x8\n")
(comment . ";;3488 b -224")
chunklet-i: 3492; chunklet-start-i: 3492; chunklet-end-i: 3500
i: 3492
end-i: 3500
i: 3492
end-i: 3500
i: 3496
end-i: 3500
i: 3500
end-i: 3500
i:3500 HIT CHUNK END
(comment . ";;3492: r3 <- r3, 0x1\n")
(comment . ";;3496 b 68")
chunklet-i: 3500; chunklet-start-i: 3500; chunklet-end-i: 3536
i: 3500
end-i: 3536
i: 3504
end-i: 3536
i: 3508
end-i: 3536
i: 3512
end-i: 3536
i: 3516
end-i: 3536
i: 3520
end-i: 3536
i: 3532
end-i: 3536
i: 3536
end-i: 3536
at header: 3536
(comment . ";;3500: r15 <- r1, 0x8\n")
(comment . ";;3504: r9 <- r1, 0x10\n")
(comment . ";;3508: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3516: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3532: b r6")
chunklet-i: 3536; chunklet-start-i: 3552; chunklet-end-i: 3568
i: 3536
end-i: 3568
at header: 3536
i: 3552
end-i: 3568
i: 3556
end-i: 3568
i: 3560
end-i: 3568
i: 3564
end-i: 3568
i: 3568
end-i: 3568
i:3568 HIT CHUNK END
(comment . ";;3556: r1 <- r1, r8")
(comment . ";;3560: r15 <- r1, 0x8\n")
(comment . ";;3564: r9 <- r1, 0x10\n")
chunklet-i: 3568; chunklet-start-i: 3568; chunklet-end-i: 3600
i: 3568
end-i: 3600
i: 3568
end-i: 3600
i: 3572
end-i: 3600
i: 3576
end-i: 3600
i: 3580
end-i: 3600
i: 3584
end-i: 3600
i: 3596
end-i: 3600
i: 3600
end-i: 3600
at header: 3600
(comment . ";;3568: r15 <- r1, 0x8\n")
(comment . ";;3572: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3580: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3596: b r6")
chunklet-i: 3600; chunklet-start-i: 3616; chunklet-end-i: 3636
i: 3600
end-i: 3636
at header: 3600
i: 3616
end-i: 3636
i: 3620
end-i: 3636
i: 3624
end-i: 3636
i: 3628
end-i: 3636
i: 3632
end-i: 3636
i: 3636
end-i: 3636
i:3636 HIT CHUNK END
(comment . ";;3616: r1 <- r1, r0")
(comment . ";;3620: r10 <- 0x4")
(comment . ";;3624: r15 <- r1, 0x8\n")
(comment . ";;3632 b -384")
chunklet-i: 3636; chunklet-start-i: 3636; chunklet-end-i: 3644
i: 3636
end-i: 3644
i: 3636
end-i: 3644
i: 3640
end-i: 3644
i: 3644
end-i: 3644
i:3644 HIT CHUNK END
(comment . ";;3636: r3 <- r3, 0x1\n")
(comment . ";;3640 b 68")
chunklet-i: 3644; chunklet-start-i: 3644; chunklet-end-i: 3680
i: 3644
end-i: 3680
i: 3648
end-i: 3680
i: 3652
end-i: 3680
i: 3656
end-i: 3680
i: 3660
end-i: 3680
i: 3664
end-i: 3680
i: 3676
end-i: 3680
i: 3680
end-i: 3680
at header: 3680
(comment . ";;3644: r4 <- r1, 0x8\n")
(comment . ";;3648: r10 <- r1, 0x10\n")
(comment . ";;3652: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3660: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3676: b r6")
chunklet-i: 3680; chunklet-start-i: 3696; chunklet-end-i: 3712
i: 3680
end-i: 3712
at header: 3680
i: 3696
end-i: 3712
i: 3700
end-i: 3712
i: 3704
end-i: 3712
i: 3708
end-i: 3712
i: 3712
end-i: 3712
i:3712 HIT CHUNK END
(comment . ";;3700: r1 <- r1, r8")
(comment . ";;3704: r4 <- r1, 0x8\n")
(comment . ";;3708: r10 <- r1, 0x10\n")
chunklet-i: 3712; chunklet-start-i: 3712; chunklet-end-i: 3744
i: 3712
end-i: 3744
i: 3712
end-i: 3744
i: 3716
end-i: 3744
i: 3720
end-i: 3744
i: 3724
end-i: 3744
i: 3728
end-i: 3744
i: 3740
end-i: 3744
i: 3744
end-i: 3744
at header: 3744
(comment . ";;3712: r9 <- 0x4")
(comment . ";;3716: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3724: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3740: b r6")
chunklet-i: 3744; chunklet-start-i: 3760; chunklet-end-i: 3776
i: 3744
end-i: 3776
at header: 3744
i: 3760
end-i: 3776
i: 3764
end-i: 3776
i: 3768
end-i: 3776
i: 3772
end-i: 3776
i: 3776
end-i: 3776
i:3776 HIT CHUNK END
(comment . ";;3760: r1 <- r1, r8")
(comment . ";;3764: r4 <- 0x6")
(comment . ";;3772 b -560")
chunklet-i: 3776; chunklet-start-i: 3776; chunklet-end-i: 3780
i: 3776
end-i: 3780
i: 3780
end-i: 3780
i:3780 HIT CHUNK END
(comment . ";;3776 b -572")
chunklet-i: 3780; chunklet-start-i: 3780; chunklet-end-i: 3788
i: 3780
end-i: 3788
i: 3780
end-i: 3788
i: 3784
end-i: 3788
i: 3788
end-i: 3788
i:3788 HIT CHUNK END
(comment . ";;3780: r3 <- r3, 0x1\n")
(comment . ";;3784 b 68")
chunklet-i: 3788; chunklet-start-i: 3788; chunklet-end-i: 3824
i: 3788
end-i: 3824
i: 3792
end-i: 3824
i: 3796
end-i: 3824
i: 3800
end-i: 3824
i: 3804
end-i: 3824
i: 3808
end-i: 3824
i: 3820
end-i: 3824
i: 3824
end-i: 3824
at header: 3824
(comment . ";;3788: r4 <- r1, 0x8\n")
(comment . ";;3792: r9 <- r1, 0x10\n")
(comment . ";;3796: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3804: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3820: b r6")
chunklet-i: 3824; chunklet-start-i: 3840; chunklet-end-i: 3856
i: 3824
end-i: 3856
at header: 3824
i: 3840
end-i: 3856
i: 3844
end-i: 3856
i: 3848
end-i: 3856
i: 3852
end-i: 3856
i: 3856
end-i: 3856
i:3856 HIT CHUNK END
(comment . ";;3844: r1 <- r1, r8")
(comment . ";;3848: r4 <- r1, 0x8\n")
(comment . ";;3852: r9 <- r1, 0x10\n")
chunklet-i: 3856; chunklet-start-i: 3856; chunklet-end-i: 3888
i: 3856
end-i: 3888
i: 3856
end-i: 3888
i: 3860
end-i: 3888
i: 3864
end-i: 3888
i: 3868
end-i: 3888
i: 3872
end-i: 3888
i: 3884
end-i: 3888
i: 3888
end-i: 3888
at header: 3888
(comment . ";;3856: r4 <- r1, 0x8\n")
(comment . ";;3860: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3868: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3884: b r6")
chunklet-i: 3888; chunklet-start-i: 3904; chunklet-end-i: 3920
i: 3888
end-i: 3920
at header: 3888
i: 3904
end-i: 3920
i: 3908
end-i: 3920
i: 3912
end-i: 3920
i: 3916
end-i: 3920
i: 3920
end-i: 3920
i:3920 HIT CHUNK END
(comment . ";;3904: r1 <- r1, r0")
(comment . ";;3908: r10 <- 0x4")
(comment . ";;3912: r4 <- r1, 0x8\n")
(comment . ";;3916 b -732")
chunklet-i: 3920; chunklet-start-i: 3920; chunklet-end-i: 3928
i: 3920
end-i: 3928
i: 3920
end-i: 3928
i: 3924
end-i: 3928
i: 3928
end-i: 3928
i:3928 HIT CHUNK END
(comment . ";;3920: r3 <- r3, 0x1\n")
(comment . ";;3924 b 60")
chunklet-i: 3928; chunklet-start-i: 3928; chunklet-end-i: 3960
i: 3928
end-i: 3960
i: 3932
end-i: 3960
i: 3936
end-i: 3960
i: 3940
end-i: 3960
i: 3944
end-i: 3960
i: 3956
end-i: 3960
i: 3960
end-i: 3960
at header: 3960
(comment . ";;3928: r9 <- r1, 0x8\n")
(comment . ";;3932: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3940: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3956: b r6")
chunklet-i: 3960; chunklet-start-i: 3976; chunklet-end-i: 3988
i: 3960
end-i: 3988
at header: 3960
i: 3976
end-i: 3988
i: 3980
end-i: 3988
i: 3984
end-i: 3988
i: 3988
end-i: 3988
i:3988 HIT CHUNK END
(comment . ";;3980: r1 <- r1, r0")
(comment . ";;3984: r9 <- r1, 0x8\n")
chunklet-i: 3988; chunklet-start-i: 3988; chunklet-end-i: 4016
i: 3988
end-i: 4016
i: 3988
end-i: 4016
i: 3992
end-i: 4016
i: 3996
end-i: 4016
i: 4000
end-i: 4016
i: 4012
end-i: 4016
i: 4016
end-i: 4016
at header: 4016
(comment . ";;3988: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3996: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4012: b r6")
chunklet-i: 4016; chunklet-start-i: 4032; chunklet-end-i: 4044
i: 4016
end-i: 4044
at header: 4016
i: 4032
end-i: 4044
i: 4036
end-i: 4044
i: 4040
end-i: 4044
i: 4044
end-i: 4044
i:4044 HIT CHUNK END
(comment . ";;4032: r1 <- r1, r8")
(comment . ";;4040 b -880")
chunklet-i: 4044; chunklet-start-i: 4044; chunklet-end-i: 4056
i: 4044
end-i: 4056
i: 4044
end-i: 4056
i: 4056
end-i: 4056
i:4056 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 4056; chunklet-start-i: 4060; chunklet-end-i: 4068
i: 4056
end-i: 4068
i: 4060
end-i: 4068
i: 4064
end-i: 4068
i: 4068
end-i: 4068
i:4068 HIT CHUNK END
(comment . ";; instruction 4056 not included")
(comment . ";;4060: r7 <- r0, 0x68\n")
(comment . ";;4064 b -940")
chunklet-i: 4068; chunklet-start-i: 4068; chunklet-end-i: 4088
i: 4068
end-i: 4088
i: 4068
end-i: 4088
i: 4072
end-i: 4088
i: 4084
end-i: 4088
i: 4088
end-i: 4088
i:4088 HIT CHUNK END
(comment . ";;4068: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;4084: b r6")
chunklet-i: 4088; chunklet-start-i: 4088; chunklet-end-i: 4096
i: 4088
end-i: 4096
i: 4088
end-i: 4096
i: 4092
end-i: 4096
i: 4096
end-i: 4096
i:4096 HIT CHUNK END
(comment . ";;4088: r3 <- r3, 0x1\n")
(comment . ";;4092 b 76")
chunklet-i: 4096; chunklet-start-i: 4096; chunklet-end-i: 4136
i: 4096
end-i: 4136
i: 4100
end-i: 4136
i: 4104
end-i: 4136
i: 4108
end-i: 4136
i: 4112
end-i: 4136
i: 4116
end-i: 4136
i: 4120
end-i: 4136
i: 4132
end-i: 4136
i: 4136
end-i: 4136
at header: 4136
(comment . ";;4096: r5 <- r1, 0x28\n")
(comment . ";;4100: r4 <- r1, 0x8\n")
(comment . ";;4104: r9 <- r1, 0x10\n")
(comment . ";;4108: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4116: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4132: b r6")
chunklet-i: 4136; chunklet-start-i: 4152; chunklet-end-i: 4172
i: 4136
end-i: 4172
at header: 4136
i: 4152
end-i: 4172
i: 4156
end-i: 4172
i: 4160
end-i: 4172
i: 4164
end-i: 4172
i: 4168
end-i: 4172
i: 4172
end-i: 4172
i:4172 HIT CHUNK END
(comment . ";;4156: r1 <- r1, r0")
(comment . ";;4160: r5 <- r1, 0x28\n")
(comment . ";;4164: r4 <- r1, 0x8\n")
(comment . ";;4168: r9 <- r1, 0x10\n")
chunklet-i: 4172; chunklet-start-i: 4172; chunklet-end-i: 4208
i: 4172
end-i: 4208
i: 4172
end-i: 4208
i: 4176
end-i: 4208
i: 4180
end-i: 4208
i: 4184
end-i: 4208
i: 4188
end-i: 4208
i: 4192
end-i: 4208
i: 4204
end-i: 4208
i: 4208
end-i: 4208
at header: 4208
(comment . ";;4172: r5 <- r1, 0x28\n")
(comment . ";;4176: r4 <- r1, 0x8\n")
(comment . ";;4180: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4188: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4204: b r6")
chunklet-i: 4208; chunklet-start-i: 4224; chunklet-end-i: 4244
i: 4208
end-i: 4244
at header: 4208
i: 4224
end-i: 4244
i: 4228
end-i: 4244
i: 4232
end-i: 4244
i: 4236
end-i: 4244
i: 4240
end-i: 4244
i: 4244
end-i: 4244
i:4244 HIT CHUNK END
(comment . ";;4224: r1 <- r1, r0")
(comment . ";;4228: r10 <- 0x4")
(comment . ";;4232: r5 <- r1, 0x28\n")
(comment . ";;4236: r4 <- r1, 0x8\n")
(comment . ";;4240 b -1200")
chunklet-i: 4244; chunklet-start-i: 4244; chunklet-end-i: 4252
i: 4244
end-i: 4252
i: 4244
end-i: 4252
i: 4248
end-i: 4252
i: 4252
end-i: 4252
i:4252 HIT CHUNK END
(comment . ";;4244: r3 <- r3, 0x1\n")
(comment . ";;4248 b 68")
chunklet-i: 4252; chunklet-start-i: 4252; chunklet-end-i: 4288
i: 4252
end-i: 4288
i: 4256
end-i: 4288
i: 4260
end-i: 4288
i: 4264
end-i: 4288
i: 4268
end-i: 4288
i: 4272
end-i: 4288
i: 4284
end-i: 4288
i: 4288
end-i: 4288
at header: 4288
(comment . ";;4252: r5 <- r1, 0x28\n")
(comment . ";;4256: r9 <- r1, 0x8\n")
(comment . ";;4260: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4268: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4284: b r6")
chunklet-i: 4288; chunklet-start-i: 4304; chunklet-end-i: 4320
i: 4288
end-i: 4320
at header: 4288
i: 4304
end-i: 4320
i: 4308
end-i: 4320
i: 4312
end-i: 4320
i: 4316
end-i: 4320
i: 4320
end-i: 4320
i:4320 HIT CHUNK END
(comment . ";;4308: r1 <- r1, r0")
(comment . ";;4312: r5 <- r1, 0x28\n")
(comment . ";;4316: r9 <- r1, 0x8\n")
chunklet-i: 4320; chunklet-start-i: 4320; chunklet-end-i: 4352
i: 4320
end-i: 4352
i: 4320
end-i: 4352
i: 4324
end-i: 4352
i: 4328
end-i: 4352
i: 4332
end-i: 4352
i: 4336
end-i: 4352
i: 4348
end-i: 4352
i: 4352
end-i: 4352
at header: 4352
(comment . ";;4320: r5 <- r1, 0x28\n")
(comment . ";;4324: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4332: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4348: b r6")
chunklet-i: 4352; chunklet-start-i: 4368; chunklet-end-i: 4380
i: 4352
end-i: 4380
at header: 4352
i: 4368
end-i: 4380
i: 4372
end-i: 4380
i: 4376
end-i: 4380
i: 4380
end-i: 4380
i:4380 HIT CHUNK END
(comment . ";;4368: r1 <- r1, r0")
(comment . ";;4372: r5 <- r1, 0x28\n")
(comment . ";;4376 b -1360")
chunklet-i: 4380; chunklet-start-i: 4380; chunklet-end-i: 4392
i: 4380
end-i: 4392
i: 4380
end-i: 4392
i: 4392
end-i: 4392
i:4392 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 4392; chunklet-start-i: 4396; chunklet-end-i: 4404
i: 4392
end-i: 4404
i: 4396
end-i: 4404
i: 4400
end-i: 4404
i: 4404
end-i: 4404
i:4404 HIT CHUNK END
(comment . ";; instruction 4392 not included")
(comment . ";;4396: r7 <- r0, 0x68\n")
(comment . ";;4400 b -1420")
chunklet-i: 4404; chunklet-start-i: 4404; chunklet-end-i: 4428
i: 4404
end-i: 4428
i: 4404
end-i: 4428
i: 4408
end-i: 4428
i: 4412
end-i: 4428
i: 4424
end-i: 4428
i: 4428
end-i: 4428
i:4428 HIT CHUNK END
(comment . ";;4404: r9 <- 0x4")
(comment . ";;4408: r11 <- 0xF")
(comment . ";; literal r6")
(comment . ";;4424: b r6")
chunklet-i: 4428; chunklet-start-i: 4428; chunklet-end-i: 4436
i: 4428
end-i: 4436
i: 4428
end-i: 4436
i: 4432
end-i: 4436
i: 4436
end-i: 4436
i:4436 HIT CHUNK END
(comment . ";;4428: r3 <- r3, 0x1\n")
(comment . ";;4432 b 84")
chunklet-i: 4436; chunklet-start-i: 4436; chunklet-end-i: 4480
i: 4436
end-i: 4480
i: 4440
end-i: 4480
i: 4444
end-i: 4480
i: 4448
end-i: 4480
i: 4452
end-i: 4480
i: 4456
end-i: 4480
i: 4460
end-i: 4480
i: 4464
end-i: 4480
i: 4476
end-i: 4480
i: 4480
end-i: 4480
at header: 4480
(comment . ";;4436: r15 <- r1, 0x10\n")
(comment . ";;4440: r5 <- r1, 0x28\n")
(comment . ";;4444: r4 <- r1, 0x8\n")
(comment . ";;4448: r9 <- r1, 0x18\n")
(comment . ";;4452: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4460: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4476: b r6")
chunklet-i: 4480; chunklet-start-i: 4496; chunklet-end-i: 4520
i: 4480
end-i: 4520
at header: 4480
i: 4496
end-i: 4520
i: 4500
end-i: 4520
i: 4504
end-i: 4520
i: 4508
end-i: 4520
i: 4512
end-i: 4520
i: 4516
end-i: 4520
i: 4520
end-i: 4520
i:4520 HIT CHUNK END
(comment . ";;4500: r1 <- r1, r0")
(comment . ";;4504: r15 <- r1, 0x10\n")
(comment . ";;4508: r5 <- r1, 0x28\n")
(comment . ";;4512: r4 <- r1, 0x8\n")
(comment . ";;4516: r9 <- r1, 0x18\n")
chunklet-i: 4520; chunklet-start-i: 4520; chunklet-end-i: 4560
i: 4520
end-i: 4560
i: 4520
end-i: 4560
i: 4524
end-i: 4560
i: 4528
end-i: 4560
i: 4532
end-i: 4560
i: 4536
end-i: 4560
i: 4540
end-i: 4560
i: 4544
end-i: 4560
i: 4556
end-i: 4560
i: 4560
end-i: 4560
at header: 4560
(comment . ";;4520: r15 <- r1, 0x10\n")
(comment . ";;4524: r5 <- r1, 0x28\n")
(comment . ";;4528: r4 <- r1, 0x8\n")
(comment . ";;4532: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4540: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4556: b r6")
chunklet-i: 4560; chunklet-start-i: 4576; chunklet-end-i: 4600
i: 4560
end-i: 4600
at header: 4560
i: 4576
end-i: 4600
i: 4580
end-i: 4600
i: 4584
end-i: 4600
i: 4588
end-i: 4600
i: 4592
end-i: 4600
i: 4596
end-i: 4600
i: 4600
end-i: 4600
i:4600 HIT CHUNK END
(comment . ";;4576: r1 <- r1, r0")
(comment . ";;4580: r10 <- 0x4")
(comment . ";;4584: r15 <- r1, 0x10\n")
(comment . ";;4588: r5 <- r1, 0x28\n")
(comment . ";;4592: r4 <- r1, 0x8\n")
(comment . ";;4596 b -1696")
chunklet-i: 4600; chunklet-start-i: 4600; chunklet-end-i: 4608
i: 4600
end-i: 4608
i: 4600
end-i: 4608
i: 4604
end-i: 4608
i: 4608
end-i: 4608
i:4608 HIT CHUNK END
(comment . ";;4600: r3 <- r3, 0x1\n")
(comment . ";;4604 b 76")
chunklet-i: 4608; chunklet-start-i: 4608; chunklet-end-i: 4648
i: 4608
end-i: 4648
i: 4612
end-i: 4648
i: 4616
end-i: 4648
i: 4620
end-i: 4648
i: 4624
end-i: 4648
i: 4628
end-i: 4648
i: 4632
end-i: 4648
i: 4644
end-i: 4648
i: 4648
end-i: 4648
at header: 4648
(comment . ";;4608: r15 <- r1, 0x10\n")
(comment . ";;4612: r5 <- r1, 0x28\n")
(comment . ";;4616: r9 <- r1, 0x8\n")
(comment . ";;4620: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4628: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4644: b r6")
chunklet-i: 4648; chunklet-start-i: 4664; chunklet-end-i: 4684
i: 4648
end-i: 4684
at header: 4648
i: 4664
end-i: 4684
i: 4668
end-i: 4684
i: 4672
end-i: 4684
i: 4676
end-i: 4684
i: 4680
end-i: 4684
i: 4684
end-i: 4684
i:4684 HIT CHUNK END
(comment . ";;4668: r1 <- r1, r0")
(comment . ";;4672: r15 <- r1, 0x10\n")
(comment . ";;4676: r5 <- r1, 0x28\n")
(comment . ";;4680: r9 <- r1, 0x8\n")
chunklet-i: 4684; chunklet-start-i: 4684; chunklet-end-i: 4720
i: 4684
end-i: 4720
i: 4684
end-i: 4720
i: 4688
end-i: 4720
i: 4692
end-i: 4720
i: 4696
end-i: 4720
i: 4700
end-i: 4720
i: 4704
end-i: 4720
i: 4716
end-i: 4720
i: 4720
end-i: 4720
at header: 4720
(comment . ";;4684: r15 <- r1, 0x10\n")
(comment . ";;4688: r5 <- r1, 0x28\n")
(comment . ";;4692: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4700: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4716: b r6")
chunklet-i: 4720; chunklet-start-i: 4736; chunklet-end-i: 4756
i: 4720
end-i: 4756
at header: 4720
i: 4736
end-i: 4756
i: 4740
end-i: 4756
i: 4744
end-i: 4756
i: 4748
end-i: 4756
i: 4752
end-i: 4756
i: 4756
end-i: 4756
i:4756 HIT CHUNK END
(comment . ";;4736: r1 <- r1, r0")
(comment . ";;4740: r15 <- r1, 0x10\n")
(comment . ";;4744: r5 <- r1, 0x28\n")
(comment . ";;4752 b -1876")
chunklet-i: 4756; chunklet-start-i: 4756; chunklet-end-i: 4764
i: 4756
end-i: 4764
i: 4756
end-i: 4764
i: 4760
end-i: 4764
i: 4764
end-i: 4764
i:4764 HIT CHUNK END
(comment . ";;4756: r3 <- r3, 0x1\n")
(comment . ";;4760 b 96")
chunklet-i: 4764; chunklet-start-i: 4764; chunklet-end-i: 4816
i: 4764
end-i: 4816
i: 4768
end-i: 4816
i: 4772
end-i: 4816
i: 4776
end-i: 4816
i: 4780
end-i: 4816
i: 4784
end-i: 4816
i: 4788
end-i: 4816
i: 4792
end-i: 4816
i: 4796
end-i: 4816
i: 4800
end-i: 4816
i: 4812
end-i: 4816
i: 4816
end-i: 4816
at header: 4816
(comment . ";;4764: r15 <- r1, 0x10\n")
(comment . ";;4768: r14 <- r1, 0x18\n")
(comment . ";;4772: r11 <- r1, 0x20\n")
(comment . ";;4776: r13 <- r1, 0x8\n")
(comment . ";;4780: r5 <- r1, 0x28\n")
(comment . ";;4784: r4 <- r1, 0x30\n")
(comment . ";;4788: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;4796: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4812: b r6")
chunklet-i: 4816; chunklet-start-i: 4832; chunklet-end-i: 4860
i: 4816
end-i: 4860
at header: 4816
i: 4832
end-i: 4860
i: 4836
end-i: 4860
i: 4840
end-i: 4860
i: 4844
end-i: 4860
i: 4848
end-i: 4860
i: 4852
end-i: 4860
i: 4856
end-i: 4860
i: 4860
end-i: 4860
i:4860 HIT CHUNK END
(comment . ";;4832: r1 <- r1, r8")
(comment . ";;4836: r15 <- r1, 0x10\n")
(comment . ";;4840: r14 <- r1, 0x18\n")
(comment . ";;4844: r11 <- r1, 0x20\n")
(comment . ";;4848: r13 <- r1, 0x8\n")
(comment . ";;4852: r5 <- r1, 0x28\n")
(comment . ";;4856: r4 <- r1, 0x30\n")
chunklet-i: 4860; chunklet-start-i: 4860; chunklet-end-i: 4920
i: 4860
end-i: 4920
i: 4860
end-i: 4920
i: 4864
end-i: 4920
i: 4868
end-i: 4920
i: 4872
end-i: 4920
i: 4876
end-i: 4920
i: 4880
end-i: 4920
i: 4884
end-i: 4920
i: 4888
end-i: 4920
i: 4892
end-i: 4920
i: 4896
end-i: 4920
i: 4900
end-i: 4920
i: 4904
end-i: 4920
i: 4916
end-i: 4920
i: 4920
end-i: 4920
at header: 4920
(comment . ";;4860: r9 <- 0x4")
(comment . ";;4864: r10 <- 0xE")
(comment . ";;4868: r15 <- r1, 0x10\n")
(comment . ";;4872: r14 <- r1, 0x18\n")
(comment . ";;4876: r11 <- r1, 0x20\n")
(comment . ";;4880: r13 <- r1, 0x8\n")
(comment . ";;4884: r5 <- r1, 0x28\n")
(comment . ";;4888: r4 <- r1, 0x30\n")
(comment . ";;4892: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;4900: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4916: b r6")
chunklet-i: 4920; chunklet-start-i: 4936; chunklet-end-i: 4976
i: 4920
end-i: 4976
at header: 4920
i: 4936
end-i: 4976
i: 4940
end-i: 4976
i: 4944
end-i: 4976
i: 4948
end-i: 4976
i: 4952
end-i: 4976
i: 4956
end-i: 4976
i: 4960
end-i: 4976
i: 4964
end-i: 4976
i: 4968
end-i: 4976
i: 4972
end-i: 4976
i: 4976
end-i: 4976
i:4976 HIT CHUNK END
(comment . ";;4936: r1 <- r1, r8")
(comment . ";;4940: r12 <- 0x4")
(comment . ";;4944: r15 <- r1, 0x10\n")
(comment . ";;4948: r14 <- r1, 0x18\n")
(comment . ";;4952: r11 <- r1, 0x20\n")
(comment . ";;4956: r13 <- r1, 0x8\n")
(comment . ";;4960: r5 <- r1, 0x28\n")
(comment . ";;4964: r4 <- r1, 0x30\n")
(comment . ";;4968: r12 <- 0x6")
(comment . ";;4972 b -4892")
chunklet-i: 4976; chunklet-start-i: 4976; chunklet-end-i: 4980
i: 4976
end-i: 4980
i: 4980
end-i: 4980
i:4980 HIT CHUNK END
(comment . ";;4976 b -2124")
chunklet-i: 4980; chunklet-start-i: 4980; chunklet-end-i: 4992
i: 4980
end-i: 4992
i: 4980
end-i: 4992
i: 4992
end-i: 4992
i:4992 HIT CHUNK END
(comment . ";; literal r10")
chunklet-i: 4992; chunklet-start-i: 4996; chunklet-end-i: 5000
i: 4992
end-i: 5000
i: 4996
end-i: 5000
i: 5000
end-i: 5000
i:5000 HIT CHUNK END
(comment . ";; instruction 4992 not included")
(comment . ";;4996 b -4952")
chunklet-i: 5000; chunklet-start-i: 5000; chunklet-end-i: 5016
i: 5000
end-i: 5016
i: 5000
end-i: 5016
i: 5012
end-i: 5016
i: 5016
end-i: 5016
i:5016 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;5012: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: start
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 36
instruction range for chunk: 36 76
instruction range for chunk: 76 88
instruction range for chunk: 88 96
instruction range for chunk: 96 104
instruction range for chunk: 104 128
instruction range for chunk: 128 132
instruction range for chunk: 132 144
instruction range for chunk: 144 156
instruction range for chunk: 156 164
instruction range for chunk: 164 180
instruction range for chunk: 180 200
instruction range for chunk: 200 208
instruction range for chunk: 208 216
instruction range for chunk: 216 256
instruction range for chunk: 272 284
instruction range for chunk: 284 308
instruction range for chunk: 308 344
instruction range for chunk: 360 380
instruction range for chunk: 380 416
instruction range for chunk: 432 448
instruction range for chunk: 448 452
instruction range for chunk: 452 460
instruction range for chunk: 460 468
instruction range for chunk: 468 476
instruction range for chunk: 476 480
instruction range for chunk: 480 488
instruction range for chunk: 488 496
instruction range for chunk: 496 504
instruction range for chunk: 504 508
instruction range for chunk: 508 516
instruction range for chunk: 516 524
instruction range for chunk: 524 532
instruction range for chunk: 532 556
instruction range for chunk: 556 580
instruction range for chunk: 580 604
instruction range for chunk: 604 608
instruction range for chunk: 608 620
instruction range for chunk: 620 632
instruction range for chunk: 632 644
instruction range for chunk: 644 652
instruction range for chunk: 652 656
instruction range for chunk: 656 668
instruction range for chunk: 668 680
instruction range for chunk: 680 684
instruction range for chunk: 684 696
instruction range for chunk: 696 704
instruction range for chunk: 704 708
instruction range for chunk: 708 720
instruction range for chunk: 720 732
instruction range for chunk: 732 740
instruction range for chunk: 740 756
instruction range for chunk: 756 776
instruction range for chunk: 776 784
instruction range for chunk: 784 792
instruction range for chunk: 792 840
instruction range for chunk: 856 884
instruction range for chunk: 884 908
instruction range for chunk: 908 960
instruction range for chunk: 976 1012
instruction range for chunk: 1012 1064
instruction range for chunk: 1080 1112
instruction range for chunk: 1112 1168
instruction range for chunk: 1184 1224
instruction range for chunk: 1224 1280
instruction range for chunk: 1296 1332
instruction range for chunk: 1332 1384
instruction range for chunk: 1400 1440
instruction range for chunk: 1440 1488
instruction range for chunk: 1504 1540
instruction range for chunk: 1540 1584
instruction range for chunk: 1600 1628
instruction range for chunk: 1628 1672
instruction range for chunk: 1688 1716
instruction range for chunk: 1716 1724
instruction range for chunk: 1724 1732
instruction range for chunk: 1732 1740
instruction range for chunk: 1740 1784
instruction range for chunk: 1800 1820
instruction range for chunk: 1820 1828
instruction range for chunk: 1828 1872
instruction range for chunk: 1888 1908
instruction range for chunk: 1908 1960
instruction range for chunk: 1976 2012
instruction range for chunk: 2012 2016
instruction range for chunk: 2016 2056
instruction range for chunk: 2072 2096
instruction range for chunk: 2096 2104
instruction range for chunk: 2104 2112
instruction range for chunk: 2112 2120
instruction range for chunk: 2120 2160
instruction range for chunk: 2176 2192
instruction range for chunk: 2192 2200
instruction range for chunk: 2200 2240
instruction range for chunk: 2256 2272
instruction range for chunk: 2272 2320
instruction range for chunk: 2336 2368
instruction range for chunk: 2368 2372
instruction range for chunk: 2372 2408
instruction range for chunk: 2424 2440
instruction range for chunk: 2440 2444
instruction range for chunk: 2444 2468
instruction range for chunk: 2468 2480
instruction range for chunk: 2480 2488
instruction range for chunk: 2488 2496
instruction range for chunk: 2496 2500
instruction range for chunk: 2500 2512
instruction range for chunk: 2512 2520
instruction range for chunk: 2520 2528
instruction range for chunk: 2528 2552
instruction range for chunk: 2552 2556
instruction range for chunk: 2556 2568
instruction range for chunk: 2568 2588
instruction range for chunk: 2588 2600
instruction range for chunk: 2600 2620
instruction range for chunk: 2620 2632
instruction range for chunk: 2632 2640
instruction range for chunk: 2640 2656
instruction range for chunk: 2656 2676
instruction range for chunk: 2676 2684
instruction range for chunk: 2684 2692
instruction range for chunk: 2692 2736
instruction range for chunk: 2752 2772
instruction range for chunk: 2772 2796
instruction range for chunk: 2796 2816
instruction range for chunk: 2816 2856
instruction range for chunk: 2872 2896
instruction range for chunk: 2896 2936
instruction range for chunk: 2952 2976
instruction range for chunk: 2976 2984
instruction range for chunk: 2984 2992
instruction range for chunk: 2992 3000
instruction range for chunk: 3000 3040
instruction range for chunk: 3056 3072
instruction range for chunk: 3072 3080
instruction range for chunk: 3080 3120
instruction range for chunk: 3136 3152
instruction range for chunk: 3152 3200
instruction range for chunk: 3216 3248
instruction range for chunk: 3248 3252
instruction range for chunk: 3252 3288
instruction range for chunk: 3304 3324
instruction range for chunk: 3324 3416
instruction range for chunk: 3432 3496
instruction range for chunk: 3512 3576
instruction range for chunk: 3592 3656
instruction range for chunk: 3672 3736
instruction range for chunk: 3752 3816
instruction range for chunk: 3832 3896
instruction range for chunk: 3912 3976
instruction range for chunk: 3992 4056
instruction range for chunk: 4072 4136
instruction range for chunk: 4152 4216
instruction range for chunk: 4232 4296
instruction range for chunk: 4312 4376
instruction range for chunk: 4392 4424
instruction range for chunk: 4424 4428
instruction range for chunk: 4428 4440
instruction range for chunk: 4440 4452
instruction range for chunk: 4452 4460
instruction range for chunk: 4460 4492
instruction range for chunk: 4492 4496
instruction range for chunk: 4496 4508
instruction range for chunk: 4508 4520
instruction range for chunk: 4520 4528
instruction range for chunk: 4528 4560
instruction range for chunk: 4560 4564
instruction range for chunk: 4564 4576
instruction range for chunk: 4576 4588
instruction range for chunk: 4588 4596
instruction range for chunk: 4596 4628
instruction range for chunk: 4628 4632
instruction range for chunk: 4632 4644
instruction range for chunk: 4644 4656
instruction range for chunk: 4656 4664
instruction range for chunk: 4664 4700
instruction range for chunk: 4700 4724
instruction range for chunk: 4724 4732
instruction range for chunk: 4732 4740
instruction range for chunk: 4740 4744
instruction range for chunk: 4744 4756
instruction range for chunk: 4756 4768
instruction range for chunk: 4768 4772
instruction range for chunk: 4772 4780
instruction range for chunk: 4780 4788
instruction range for chunk: 4788 4792
instruction range for chunk: 4792 4812
instruction range for chunk: 4812 4872
instruction range for chunk: 4888 4908
instruction range for chunk: 4908 4924
instruction range for chunk: 4924 4944
instruction range for chunk: 4944 4992
instruction range for chunk: 5008 5012
instruction range for chunk: 5012 5056
instruction range for chunk: 5072 5088
instruction range for chunk: 5088 5096
instruction range for chunk: 5096 5120
instruction range for chunk: 5120 5124
instruction range for chunk: 5124 5140
instruction range for chunk: 5140 5168
instruction range for chunk: 5184 5192
instruction range for chunk: 5192 5232
instruction range for chunk: 5248 5276
instruction range for chunk: 5276 5288
instruction range for chunk: 5288 5304
instruction range for chunk: 5304 5316
instruction range for chunk: 5320 5328
instruction range for chunk: 5328 5340
instruction range for chunk: 5344 5348
instruction range for chunk: 5348 5384
instruction range for chunk: 5400 5420
instruction range for chunk: 5420 5456
instruction range for chunk: 5472 5488
instruction range for chunk: 5488 5528
instruction range for chunk: 5544 5564
instruction range for chunk: 5564 5600
instruction range for chunk: 5616 5640
instruction range for chunk: 5640 5672
instruction range for chunk: 5688 5700
instruction range for chunk: 5700 5724
instruction range for chunk: 5724 5752
instruction range for chunk: 5768 5780
instruction range for chunk: 5780 5804
instruction range for chunk: 5804 5832
instruction range for chunk: 5848 5860
instruction range for chunk: 5860 5884
instruction range for chunk: 5884 5912
instruction range for chunk: 5928 5940
instruction range for chunk: 5940 5964
instruction range for chunk: 5964 5992
instruction range for chunk: 6008 6024
instruction range for chunk: 6024 6032
instruction range for chunk: 6032 6072
instruction range for chunk: 6088 6104
instruction range for chunk: 6104 6144
instruction range for chunk: 6160 6188
instruction range for chunk: 6188 6192
instruction range for chunk: 6192 6200
instruction range for chunk: 6200 6240
instruction range for chunk: 6256 6276
instruction range for chunk: 6276 6312
instruction range for chunk: 6328 6348
instruction range for chunk: 6348 6356
instruction range for chunk: 6356 6392
instruction range for chunk: 6408 6420
instruction range for chunk: 6420 6464
instruction range for chunk: 6480 6504
instruction range for chunk: 6504 6508
instruction range for chunk: 6508 6516
instruction range for chunk: 6516 6552
instruction range for chunk: 6568 6580
instruction range for chunk: 6580 6624
instruction range for chunk: 6640 6664
instruction range for chunk: 6664 6668
instruction range for chunk: 6668 6680
instruction range for chunk: 6684 6688
instruction range for chunk: 6688 6704
instruction range for chunk: 6704 6720
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
i: 20
end-i: 36
i: 24
end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
i: 36
end-i: 76
i: 40
end-i: 76
i: 44
end-i: 76
i: 48
end-i: 76
i: 52
end-i: 76
i: 56
end-i: 76
i: 60
end-i: 76
i: 64
end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
i: 76
end-i: 88
i: 80
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
i:88 HIT CHUNK END
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
i:96 HIT CHUNK END
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
i: 104
end-i: 128
i: 108
end-i: 128
i: 112
end-i: 128
i: 116
end-i: 128
i: 120
end-i: 128
i: 124
end-i: 128
i: 128
end-i: 128
i:128 HIT CHUNK END
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
i: 132
end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
i:144 HIT CHUNK END
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
i: 164
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
i:200 HIT CHUNK END
i: 200
end-i: 208
i: 204
end-i: 208
i: 208
end-i: 208
i:208 HIT CHUNK END
i: 208
end-i: 216
i: 212
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
i: 216
end-i: 256
i: 220
end-i: 256
i: 224
end-i: 256
i: 228
end-i: 256
i: 232
end-i: 256
i: 236
end-i: 256
i: 240
end-i: 256
i: 244
end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
at header: 256
i: 256
end-i: 284
at header: 256
i: 272
end-i: 284
i: 276
end-i: 284
i: 280
end-i: 284
i: 284
end-i: 284
i:284 HIT CHUNK END
i: 284
end-i: 308
i: 288
end-i: 308
i: 292
end-i: 308
i: 296
end-i: 308
i: 300
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
i: 308
end-i: 344
i: 312
end-i: 344
i: 316
end-i: 344
i: 320
end-i: 344
i: 324
end-i: 344
i: 328
end-i: 344
i: 332
end-i: 344
i: 336
end-i: 344
i: 340
end-i: 344
i: 344
end-i: 344
at header: 344
i: 344
end-i: 380
at header: 344
i: 360
end-i: 380
i: 364
end-i: 380
i: 368
end-i: 380
i: 372
end-i: 380
i: 376
end-i: 380
i: 380
end-i: 380
i:380 HIT CHUNK END
i: 380
end-i: 416
i: 384
end-i: 416
i: 388
end-i: 416
i: 392
end-i: 416
i: 396
end-i: 416
i: 400
end-i: 416
i: 404
end-i: 416
i: 408
end-i: 416
i: 412
end-i: 416
i: 416
end-i: 416
at header: 416
i: 416
end-i: 448
at header: 416
i: 432
end-i: 448
i: 436
end-i: 448
i: 440
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
i:448 HIT CHUNK END
i: 448
end-i: 452
i: 452
end-i: 452
i:452 HIT CHUNK END
i: 452
end-i: 460
i: 456
end-i: 460
i: 460
end-i: 460
i:460 HIT CHUNK END
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
i: 468
end-i: 476
i: 472
end-i: 476
i: 476
end-i: 476
i:476 HIT CHUNK END
i: 476
end-i: 480
i: 480
end-i: 480
i:480 HIT CHUNK END
i: 480
end-i: 488
i: 484
end-i: 488
i: 488
end-i: 488
i:488 HIT CHUNK END
i: 488
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
i: 496
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
i:504 HIT CHUNK END
i: 504
end-i: 508
i: 508
end-i: 508
i:508 HIT CHUNK END
i: 508
end-i: 516
i: 512
end-i: 516
i: 516
end-i: 516
i:516 HIT CHUNK END
i: 516
end-i: 524
i: 520
end-i: 524
i: 524
end-i: 524
i:524 HIT CHUNK END
i: 524
end-i: 532
i: 528
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
i: 532
end-i: 556
i: 536
end-i: 556
i: 540
end-i: 556
i: 544
end-i: 556
i: 548
end-i: 556
i: 552
end-i: 556
i: 556
end-i: 556
i:556 HIT CHUNK END
i: 556
end-i: 580
i: 560
end-i: 580
i: 564
end-i: 580
i: 568
end-i: 580
i: 572
end-i: 580
i: 576
end-i: 580
i: 580
end-i: 580
i:580 HIT CHUNK END
i: 580
end-i: 604
i: 584
end-i: 604
i: 588
end-i: 604
i: 592
end-i: 604
i: 596
end-i: 604
i: 600
end-i: 604
i: 604
end-i: 604
i:604 HIT CHUNK END
i: 604
end-i: 608
i: 608
end-i: 608
i:608 HIT CHUNK END
i: 608
end-i: 620
i: 612
end-i: 620
i: 616
end-i: 620
i: 620
end-i: 620
i:620 HIT CHUNK END
i: 620
end-i: 632
i: 624
end-i: 632
i: 628
end-i: 632
i: 632
end-i: 632
i:632 HIT CHUNK END
i: 632
end-i: 644
i: 636
end-i: 644
i: 640
end-i: 644
i: 644
end-i: 644
i:644 HIT CHUNK END
i: 644
end-i: 652
i: 648
end-i: 652
i: 652
end-i: 652
i:652 HIT CHUNK END
i: 652
end-i: 656
i: 656
end-i: 656
i:656 HIT CHUNK END
i: 656
end-i: 668
i: 660
end-i: 668
i: 664
end-i: 668
i: 668
end-i: 668
i:668 HIT CHUNK END
i: 668
end-i: 680
i: 672
end-i: 680
i: 676
end-i: 680
i: 680
end-i: 680
i:680 HIT CHUNK END
i: 680
end-i: 684
i: 684
end-i: 684
i:684 HIT CHUNK END
i: 684
end-i: 696
i: 688
end-i: 696
i: 692
end-i: 696
i: 696
end-i: 696
i:696 HIT CHUNK END
i: 696
end-i: 704
i: 700
end-i: 704
i: 704
end-i: 704
i:704 HIT CHUNK END
i: 704
end-i: 708
i: 708
end-i: 708
i:708 HIT CHUNK END
i: 708
end-i: 720
i: 712
end-i: 720
i: 716
end-i: 720
i: 720
end-i: 720
i:720 HIT CHUNK END
i: 720
end-i: 732
i: 724
end-i: 732
i: 728
end-i: 732
i: 732
end-i: 732
i:732 HIT CHUNK END
i: 732
end-i: 740
i: 736
end-i: 740
i: 740
end-i: 740
i:740 HIT CHUNK END
i: 740
end-i: 756
i: 744
end-i: 756
i: 748
end-i: 756
i: 752
end-i: 756
i: 756
end-i: 756
i:756 HIT CHUNK END
i: 756
end-i: 776
i: 760
end-i: 776
i: 764
end-i: 776
i: 768
end-i: 776
i: 772
end-i: 776
i: 776
end-i: 776
i:776 HIT CHUNK END
i: 776
end-i: 784
i: 780
end-i: 784
i: 784
end-i: 784
i:784 HIT CHUNK END
i: 784
end-i: 792
i: 788
end-i: 792
i: 792
end-i: 792
i:792 HIT CHUNK END
i: 792
end-i: 840
i: 796
end-i: 840
i: 800
end-i: 840
i: 804
end-i: 840
i: 808
end-i: 840
i: 812
end-i: 840
i: 816
end-i: 840
i: 820
end-i: 840
i: 824
end-i: 840
i: 828
end-i: 840
i: 832
end-i: 840
i: 836
end-i: 840
i: 840
end-i: 840
at header: 840
i: 840
end-i: 884
at header: 840
i: 856
end-i: 884
i: 860
end-i: 884
i: 864
end-i: 884
i: 868
end-i: 884
i: 872
end-i: 884
i: 876
end-i: 884
i: 880
end-i: 884
i: 884
end-i: 884
i:884 HIT CHUNK END
i: 884
end-i: 908
i: 888
end-i: 908
i: 892
end-i: 908
i: 896
end-i: 908
i: 900
end-i: 908
i: 904
end-i: 908
i: 908
end-i: 908
i:908 HIT CHUNK END
i: 908
end-i: 960
i: 912
end-i: 960
i: 916
end-i: 960
i: 920
end-i: 960
i: 924
end-i: 960
i: 928
end-i: 960
i: 932
end-i: 960
i: 936
end-i: 960
i: 940
end-i: 960
i: 944
end-i: 960
i: 948
end-i: 960
i: 952
end-i: 960
i: 956
end-i: 960
i: 960
end-i: 960
at header: 960
i: 960
end-i: 1012
at header: 960
i: 976
end-i: 1012
i: 980
end-i: 1012
i: 984
end-i: 1012
i: 988
end-i: 1012
i: 992
end-i: 1012
i: 996
end-i: 1012
i: 1000
end-i: 1012
i: 1004
end-i: 1012
i: 1008
end-i: 1012
i: 1012
end-i: 1012
i:1012 HIT CHUNK END
i: 1012
end-i: 1064
i: 1016
end-i: 1064
i: 1020
end-i: 1064
i: 1024
end-i: 1064
i: 1028
end-i: 1064
i: 1032
end-i: 1064
i: 1036
end-i: 1064
i: 1040
end-i: 1064
i: 1044
end-i: 1064
i: 1048
end-i: 1064
i: 1052
end-i: 1064
i: 1056
end-i: 1064
i: 1060
end-i: 1064
i: 1064
end-i: 1064
at header: 1064
i: 1064
end-i: 1112
at header: 1064
i: 1080
end-i: 1112
i: 1084
end-i: 1112
i: 1088
end-i: 1112
i: 1092
end-i: 1112
i: 1096
end-i: 1112
i: 1100
end-i: 1112
i: 1104
end-i: 1112
i: 1108
end-i: 1112
i: 1112
end-i: 1112
i:1112 HIT CHUNK END
i: 1112
end-i: 1168
i: 1116
end-i: 1168
i: 1120
end-i: 1168
i: 1124
end-i: 1168
i: 1128
end-i: 1168
i: 1132
end-i: 1168
i: 1136
end-i: 1168
i: 1140
end-i: 1168
i: 1144
end-i: 1168
i: 1148
end-i: 1168
i: 1152
end-i: 1168
i: 1156
end-i: 1168
i: 1160
end-i: 1168
i: 1164
end-i: 1168
i: 1168
end-i: 1168
at header: 1168
i: 1168
end-i: 1224
at header: 1168
i: 1184
end-i: 1224
i: 1188
end-i: 1224
i: 1192
end-i: 1224
i: 1196
end-i: 1224
i: 1200
end-i: 1224
i: 1204
end-i: 1224
i: 1208
end-i: 1224
i: 1212
end-i: 1224
i: 1216
end-i: 1224
i: 1220
end-i: 1224
i: 1224
end-i: 1224
i:1224 HIT CHUNK END
i: 1224
end-i: 1280
i: 1228
end-i: 1280
i: 1232
end-i: 1280
i: 1236
end-i: 1280
i: 1240
end-i: 1280
i: 1244
end-i: 1280
i: 1248
end-i: 1280
i: 1252
end-i: 1280
i: 1256
end-i: 1280
i: 1260
end-i: 1280
i: 1264
end-i: 1280
i: 1268
end-i: 1280
i: 1272
end-i: 1280
i: 1276
end-i: 1280
i: 1280
end-i: 1280
at header: 1280
i: 1280
end-i: 1332
at header: 1280
i: 1296
end-i: 1332
i: 1300
end-i: 1332
i: 1304
end-i: 1332
i: 1308
end-i: 1332
i: 1312
end-i: 1332
i: 1316
end-i: 1332
i: 1320
end-i: 1332
i: 1324
end-i: 1332
i: 1328
end-i: 1332
i: 1332
end-i: 1332
i:1332 HIT CHUNK END
i: 1332
end-i: 1384
i: 1336
end-i: 1384
i: 1340
end-i: 1384
i: 1344
end-i: 1384
i: 1348
end-i: 1384
i: 1352
end-i: 1384
i: 1356
end-i: 1384
i: 1360
end-i: 1384
i: 1364
end-i: 1384
i: 1368
end-i: 1384
i: 1372
end-i: 1384
i: 1376
end-i: 1384
i: 1380
end-i: 1384
i: 1384
end-i: 1384
at header: 1384
i: 1384
end-i: 1440
at header: 1384
i: 1400
end-i: 1440
i: 1404
end-i: 1440
i: 1408
end-i: 1440
i: 1412
end-i: 1440
i: 1416
end-i: 1440
i: 1420
end-i: 1440
i: 1424
end-i: 1440
i: 1428
end-i: 1440
i: 1432
end-i: 1440
i: 1436
end-i: 1440
i: 1440
end-i: 1440
i:1440 HIT CHUNK END
i: 1440
end-i: 1488
i: 1444
end-i: 1488
i: 1448
end-i: 1488
i: 1452
end-i: 1488
i: 1456
end-i: 1488
i: 1460
end-i: 1488
i: 1464
end-i: 1488
i: 1468
end-i: 1488
i: 1472
end-i: 1488
i: 1476
end-i: 1488
i: 1480
end-i: 1488
i: 1484
end-i: 1488
i: 1488
end-i: 1488
at header: 1488
i: 1488
end-i: 1540
at header: 1488
i: 1504
end-i: 1540
i: 1508
end-i: 1540
i: 1512
end-i: 1540
i: 1516
end-i: 1540
i: 1520
end-i: 1540
i: 1524
end-i: 1540
i: 1528
end-i: 1540
i: 1532
end-i: 1540
i: 1536
end-i: 1540
i: 1540
end-i: 1540
i:1540 HIT CHUNK END
i: 1540
end-i: 1584
i: 1544
end-i: 1584
i: 1548
end-i: 1584
i: 1552
end-i: 1584
i: 1556
end-i: 1584
i: 1560
end-i: 1584
i: 1564
end-i: 1584
i: 1568
end-i: 1584
i: 1572
end-i: 1584
i: 1576
end-i: 1584
i: 1580
end-i: 1584
i: 1584
end-i: 1584
at header: 1584
i: 1584
end-i: 1628
at header: 1584
i: 1600
end-i: 1628
i: 1604
end-i: 1628
i: 1608
end-i: 1628
i: 1612
end-i: 1628
i: 1616
end-i: 1628
i: 1620
end-i: 1628
i: 1624
end-i: 1628
i: 1628
end-i: 1628
i:1628 HIT CHUNK END
i: 1628
end-i: 1672
i: 1632
end-i: 1672
i: 1636
end-i: 1672
i: 1640
end-i: 1672
i: 1644
end-i: 1672
i: 1648
end-i: 1672
i: 1652
end-i: 1672
i: 1656
end-i: 1672
i: 1660
end-i: 1672
i: 1664
end-i: 1672
i: 1668
end-i: 1672
i: 1672
end-i: 1672
at header: 1672
i: 1672
end-i: 1716
at header: 1672
i: 1688
end-i: 1716
i: 1692
end-i: 1716
i: 1696
end-i: 1716
i: 1700
end-i: 1716
i: 1704
end-i: 1716
i: 1708
end-i: 1716
i: 1712
end-i: 1716
i: 1716
end-i: 1716
i:1716 HIT CHUNK END
i: 1716
end-i: 1724
i: 1720
end-i: 1724
i: 1724
end-i: 1724
i:1724 HIT CHUNK END
i: 1724
end-i: 1732
i: 1728
end-i: 1732
i: 1732
end-i: 1732
i:1732 HIT CHUNK END
i: 1732
end-i: 1740
i: 1736
end-i: 1740
i: 1740
end-i: 1740
i:1740 HIT CHUNK END
i: 1740
end-i: 1784
i: 1744
end-i: 1784
i: 1748
end-i: 1784
i: 1752
end-i: 1784
i: 1756
end-i: 1784
i: 1760
end-i: 1784
i: 1764
end-i: 1784
i: 1768
end-i: 1784
i: 1772
end-i: 1784
i: 1776
end-i: 1784
i: 1780
end-i: 1784
i: 1784
end-i: 1784
at header: 1784
i: 1784
end-i: 1820
at header: 1784
i: 1800
end-i: 1820
i: 1804
end-i: 1820
i: 1808
end-i: 1820
i: 1812
end-i: 1820
i: 1816
end-i: 1820
i: 1820
end-i: 1820
i:1820 HIT CHUNK END
i: 1820
end-i: 1828
i: 1824
end-i: 1828
i: 1828
end-i: 1828
i:1828 HIT CHUNK END
i: 1828
end-i: 1872
i: 1832
end-i: 1872
i: 1836
end-i: 1872
i: 1840
end-i: 1872
i: 1844
end-i: 1872
i: 1848
end-i: 1872
i: 1852
end-i: 1872
i: 1856
end-i: 1872
i: 1860
end-i: 1872
i: 1864
end-i: 1872
i: 1868
end-i: 1872
i: 1872
end-i: 1872
at header: 1872
i: 1872
end-i: 1908
at header: 1872
i: 1888
end-i: 1908
i: 1892
end-i: 1908
i: 1896
end-i: 1908
i: 1900
end-i: 1908
i: 1904
end-i: 1908
i: 1908
end-i: 1908
i:1908 HIT CHUNK END
i: 1908
end-i: 1960
i: 1912
end-i: 1960
i: 1916
end-i: 1960
i: 1920
end-i: 1960
i: 1924
end-i: 1960
i: 1928
end-i: 1960
i: 1932
end-i: 1960
i: 1936
end-i: 1960
i: 1940
end-i: 1960
i: 1944
end-i: 1960
i: 1948
end-i: 1960
i: 1952
end-i: 1960
i: 1956
end-i: 1960
i: 1960
end-i: 1960
at header: 1960
i: 1960
end-i: 2012
at header: 1960
i: 1976
end-i: 2012
i: 1980
end-i: 2012
i: 1984
end-i: 2012
i: 1988
end-i: 2012
i: 1992
end-i: 2012
i: 1996
end-i: 2012
i: 2000
end-i: 2012
i: 2004
end-i: 2012
i: 2008
end-i: 2012
i: 2012
end-i: 2012
i:2012 HIT CHUNK END
i: 2012
end-i: 2016
i: 2016
end-i: 2016
i:2016 HIT CHUNK END
i: 2016
end-i: 2056
i: 2020
end-i: 2056
i: 2024
end-i: 2056
i: 2028
end-i: 2056
i: 2032
end-i: 2056
i: 2036
end-i: 2056
i: 2040
end-i: 2056
i: 2044
end-i: 2056
i: 2048
end-i: 2056
i: 2052
end-i: 2056
i: 2056
end-i: 2056
at header: 2056
i: 2056
end-i: 2096
at header: 2056
i: 2072
end-i: 2096
i: 2076
end-i: 2096
i: 2080
end-i: 2096
i: 2084
end-i: 2096
i: 2088
end-i: 2096
i: 2092
end-i: 2096
i: 2096
end-i: 2096
i:2096 HIT CHUNK END
i: 2096
end-i: 2104
i: 2100
end-i: 2104
i: 2104
end-i: 2104
i:2104 HIT CHUNK END
i: 2104
end-i: 2112
i: 2108
end-i: 2112
i: 2112
end-i: 2112
i:2112 HIT CHUNK END
i: 2112
end-i: 2120
i: 2116
end-i: 2120
i: 2120
end-i: 2120
i:2120 HIT CHUNK END
i: 2120
end-i: 2160
i: 2124
end-i: 2160
i: 2128
end-i: 2160
i: 2132
end-i: 2160
i: 2136
end-i: 2160
i: 2140
end-i: 2160
i: 2144
end-i: 2160
i: 2148
end-i: 2160
i: 2152
end-i: 2160
i: 2156
end-i: 2160
i: 2160
end-i: 2160
at header: 2160
i: 2160
end-i: 2192
at header: 2160
i: 2176
end-i: 2192
i: 2180
end-i: 2192
i: 2184
end-i: 2192
i: 2188
end-i: 2192
i: 2192
end-i: 2192
i:2192 HIT CHUNK END
i: 2192
end-i: 2200
i: 2196
end-i: 2200
i: 2200
end-i: 2200
i:2200 HIT CHUNK END
i: 2200
end-i: 2240
i: 2204
end-i: 2240
i: 2208
end-i: 2240
i: 2212
end-i: 2240
i: 2216
end-i: 2240
i: 2220
end-i: 2240
i: 2224
end-i: 2240
i: 2228
end-i: 2240
i: 2232
end-i: 2240
i: 2236
end-i: 2240
i: 2240
end-i: 2240
at header: 2240
i: 2240
end-i: 2272
at header: 2240
i: 2256
end-i: 2272
i: 2260
end-i: 2272
i: 2264
end-i: 2272
i: 2268
end-i: 2272
i: 2272
end-i: 2272
i:2272 HIT CHUNK END
i: 2272
end-i: 2320
i: 2276
end-i: 2320
i: 2280
end-i: 2320
i: 2284
end-i: 2320
i: 2288
end-i: 2320
i: 2292
end-i: 2320
i: 2296
end-i: 2320
i: 2300
end-i: 2320
i: 2304
end-i: 2320
i: 2308
end-i: 2320
i: 2312
end-i: 2320
i: 2316
end-i: 2320
i: 2320
end-i: 2320
at header: 2320
i: 2320
end-i: 2368
at header: 2320
i: 2336
end-i: 2368
i: 2340
end-i: 2368
i: 2344
end-i: 2368
i: 2348
end-i: 2368
i: 2352
end-i: 2368
i: 2356
end-i: 2368
i: 2360
end-i: 2368
i: 2364
end-i: 2368
i: 2368
end-i: 2368
i:2368 HIT CHUNK END
i: 2368
end-i: 2372
i: 2372
end-i: 2372
i:2372 HIT CHUNK END
i: 2372
end-i: 2408
i: 2376
end-i: 2408
i: 2380
end-i: 2408
i: 2384
end-i: 2408
i: 2388
end-i: 2408
i: 2392
end-i: 2408
i: 2396
end-i: 2408
i: 2400
end-i: 2408
i: 2404
end-i: 2408
i: 2408
end-i: 2408
at header: 2408
i: 2408
end-i: 2440
at header: 2408
i: 2424
end-i: 2440
i: 2428
end-i: 2440
i: 2432
end-i: 2440
i: 2436
end-i: 2440
i: 2440
end-i: 2440
i:2440 HIT CHUNK END
i: 2440
end-i: 2444
i: 2444
end-i: 2444
i:2444 HIT CHUNK END
i: 2444
end-i: 2468
i: 2448
end-i: 2468
i: 2452
end-i: 2468
i: 2456
end-i: 2468
i: 2460
end-i: 2468
i: 2464
end-i: 2468
i: 2468
end-i: 2468
i:2468 HIT CHUNK END
i: 2468
end-i: 2480
i: 2472
end-i: 2480
i: 2476
end-i: 2480
i: 2480
end-i: 2480
i:2480 HIT CHUNK END
i: 2480
end-i: 2488
i: 2484
end-i: 2488
i: 2488
end-i: 2488
i:2488 HIT CHUNK END
i: 2488
end-i: 2496
i: 2492
end-i: 2496
i: 2496
end-i: 2496
i:2496 HIT CHUNK END
i: 2496
end-i: 2500
i: 2500
end-i: 2500
i:2500 HIT CHUNK END
i: 2500
end-i: 2512
i: 2504
end-i: 2512
i: 2508
end-i: 2512
i: 2512
end-i: 2512
i:2512 HIT CHUNK END
i: 2512
end-i: 2520
i: 2516
end-i: 2520
i: 2520
end-i: 2520
i:2520 HIT CHUNK END
i: 2520
end-i: 2528
i: 2524
end-i: 2528
i: 2528
end-i: 2528
i:2528 HIT CHUNK END
i: 2528
end-i: 2552
i: 2532
end-i: 2552
i: 2536
end-i: 2552
i: 2540
end-i: 2552
i: 2544
end-i: 2552
i: 2548
end-i: 2552
i: 2552
end-i: 2552
i:2552 HIT CHUNK END
i: 2552
end-i: 2556
i: 2556
end-i: 2556
i:2556 HIT CHUNK END
i: 2556
end-i: 2568
i: 2560
end-i: 2568
i: 2564
end-i: 2568
i: 2568
end-i: 2568
i:2568 HIT CHUNK END
i: 2568
end-i: 2588
i: 2572
end-i: 2588
i: 2576
end-i: 2588
i: 2580
end-i: 2588
i: 2584
end-i: 2588
i: 2588
end-i: 2588
i:2588 HIT CHUNK END
i: 2588
end-i: 2600
i: 2592
end-i: 2600
i: 2596
end-i: 2600
i: 2600
end-i: 2600
i:2600 HIT CHUNK END
i: 2600
end-i: 2620
i: 2604
end-i: 2620
i: 2608
end-i: 2620
i: 2612
end-i: 2620
i: 2616
end-i: 2620
i: 2620
end-i: 2620
i:2620 HIT CHUNK END
i: 2620
end-i: 2632
i: 2624
end-i: 2632
i: 2628
end-i: 2632
i: 2632
end-i: 2632
i:2632 HIT CHUNK END
i: 2632
end-i: 2640
i: 2636
end-i: 2640
i: 2640
end-i: 2640
i:2640 HIT CHUNK END
i: 2640
end-i: 2656
i: 2644
end-i: 2656
i: 2648
end-i: 2656
i: 2652
end-i: 2656
i: 2656
end-i: 2656
i:2656 HIT CHUNK END
i: 2656
end-i: 2676
i: 2660
end-i: 2676
i: 2664
end-i: 2676
i: 2668
end-i: 2676
i: 2672
end-i: 2676
i: 2676
end-i: 2676
i:2676 HIT CHUNK END
i: 2676
end-i: 2684
i: 2680
end-i: 2684
i: 2684
end-i: 2684
i:2684 HIT CHUNK END
i: 2684
end-i: 2692
i: 2688
end-i: 2692
i: 2692
end-i: 2692
i:2692 HIT CHUNK END
i: 2692
end-i: 2736
i: 2696
end-i: 2736
i: 2700
end-i: 2736
i: 2704
end-i: 2736
i: 2708
end-i: 2736
i: 2712
end-i: 2736
i: 2716
end-i: 2736
i: 2720
end-i: 2736
i: 2724
end-i: 2736
i: 2728
end-i: 2736
i: 2732
end-i: 2736
i: 2736
end-i: 2736
at header: 2736
i: 2736
end-i: 2772
at header: 2736
i: 2752
end-i: 2772
i: 2756
end-i: 2772
i: 2760
end-i: 2772
i: 2764
end-i: 2772
i: 2768
end-i: 2772
i: 2772
end-i: 2772
i:2772 HIT CHUNK END
i: 2772
end-i: 2796
i: 2776
end-i: 2796
i: 2780
end-i: 2796
i: 2784
end-i: 2796
i: 2788
end-i: 2796
i: 2792
end-i: 2796
i: 2796
end-i: 2796
i:2796 HIT CHUNK END
i: 2796
end-i: 2816
i: 2800
end-i: 2816
i: 2804
end-i: 2816
i: 2808
end-i: 2816
i: 2812
end-i: 2816
i: 2816
end-i: 2816
i:2816 HIT CHUNK END
i: 2816
end-i: 2856
i: 2820
end-i: 2856
i: 2824
end-i: 2856
i: 2828
end-i: 2856
i: 2832
end-i: 2856
i: 2836
end-i: 2856
i: 2840
end-i: 2856
i: 2844
end-i: 2856
i: 2848
end-i: 2856
i: 2852
end-i: 2856
i: 2856
end-i: 2856
at header: 2856
i: 2856
end-i: 2896
at header: 2856
i: 2872
end-i: 2896
i: 2876
end-i: 2896
i: 2880
end-i: 2896
i: 2884
end-i: 2896
i: 2888
end-i: 2896
i: 2892
end-i: 2896
i: 2896
end-i: 2896
i:2896 HIT CHUNK END
i: 2896
end-i: 2936
i: 2900
end-i: 2936
i: 2904
end-i: 2936
i: 2908
end-i: 2936
i: 2912
end-i: 2936
i: 2916
end-i: 2936
i: 2920
end-i: 2936
i: 2924
end-i: 2936
i: 2928
end-i: 2936
i: 2932
end-i: 2936
i: 2936
end-i: 2936
at header: 2936
i: 2936
end-i: 2976
at header: 2936
i: 2952
end-i: 2976
i: 2956
end-i: 2976
i: 2960
end-i: 2976
i: 2964
end-i: 2976
i: 2968
end-i: 2976
i: 2972
end-i: 2976
i: 2976
end-i: 2976
i:2976 HIT CHUNK END
i: 2976
end-i: 2984
i: 2980
end-i: 2984
i: 2984
end-i: 2984
i:2984 HIT CHUNK END
i: 2984
end-i: 2992
i: 2988
end-i: 2992
i: 2992
end-i: 2992
i:2992 HIT CHUNK END
i: 2992
end-i: 3000
i: 2996
end-i: 3000
i: 3000
end-i: 3000
i:3000 HIT CHUNK END
i: 3000
end-i: 3040
i: 3004
end-i: 3040
i: 3008
end-i: 3040
i: 3012
end-i: 3040
i: 3016
end-i: 3040
i: 3020
end-i: 3040
i: 3024
end-i: 3040
i: 3028
end-i: 3040
i: 3032
end-i: 3040
i: 3036
end-i: 3040
i: 3040
end-i: 3040
at header: 3040
i: 3040
end-i: 3072
at header: 3040
i: 3056
end-i: 3072
i: 3060
end-i: 3072
i: 3064
end-i: 3072
i: 3068
end-i: 3072
i: 3072
end-i: 3072
i:3072 HIT CHUNK END
i: 3072
end-i: 3080
i: 3076
end-i: 3080
i: 3080
end-i: 3080
i:3080 HIT CHUNK END
i: 3080
end-i: 3120
i: 3084
end-i: 3120
i: 3088
end-i: 3120
i: 3092
end-i: 3120
i: 3096
end-i: 3120
i: 3100
end-i: 3120
i: 3104
end-i: 3120
i: 3108
end-i: 3120
i: 3112
end-i: 3120
i: 3116
end-i: 3120
i: 3120
end-i: 3120
at header: 3120
i: 3120
end-i: 3152
at header: 3120
i: 3136
end-i: 3152
i: 3140
end-i: 3152
i: 3144
end-i: 3152
i: 3148
end-i: 3152
i: 3152
end-i: 3152
i:3152 HIT CHUNK END
i: 3152
end-i: 3200
i: 3156
end-i: 3200
i: 3160
end-i: 3200
i: 3164
end-i: 3200
i: 3168
end-i: 3200
i: 3172
end-i: 3200
i: 3176
end-i: 3200
i: 3180
end-i: 3200
i: 3184
end-i: 3200
i: 3188
end-i: 3200
i: 3192
end-i: 3200
i: 3196
end-i: 3200
i: 3200
end-i: 3200
at header: 3200
i: 3200
end-i: 3248
at header: 3200
i: 3216
end-i: 3248
i: 3220
end-i: 3248
i: 3224
end-i: 3248
i: 3228
end-i: 3248
i: 3232
end-i: 3248
i: 3236
end-i: 3248
i: 3240
end-i: 3248
i: 3244
end-i: 3248
i: 3248
end-i: 3248
i:3248 HIT CHUNK END
i: 3248
end-i: 3252
i: 3252
end-i: 3252
i:3252 HIT CHUNK END
i: 3252
end-i: 3288
i: 3256
end-i: 3288
i: 3260
end-i: 3288
i: 3264
end-i: 3288
i: 3268
end-i: 3288
i: 3272
end-i: 3288
i: 3276
end-i: 3288
i: 3280
end-i: 3288
i: 3284
end-i: 3288
i: 3288
end-i: 3288
at header: 3288
i: 3288
end-i: 3324
at header: 3288
i: 3304
end-i: 3324
i: 3308
end-i: 3324
i: 3312
end-i: 3324
i: 3316
end-i: 3324
i: 3320
end-i: 3324
i: 3324
end-i: 3324
i:3324 HIT CHUNK END
i: 3324
end-i: 3416
i: 3328
end-i: 3416
i: 3332
end-i: 3416
i: 3336
end-i: 3416
i: 3340
end-i: 3416
i: 3344
end-i: 3416
i: 3348
end-i: 3416
i: 3352
end-i: 3416
i: 3356
end-i: 3416
i: 3360
end-i: 3416
i: 3364
end-i: 3416
i: 3368
end-i: 3416
i: 3372
end-i: 3416
i: 3376
end-i: 3416
i: 3380
end-i: 3416
i: 3384
end-i: 3416
i: 3388
end-i: 3416
i: 3392
end-i: 3416
i: 3396
end-i: 3416
i: 3400
end-i: 3416
i: 3404
end-i: 3416
i: 3408
end-i: 3416
i: 3412
end-i: 3416
i: 3416
end-i: 3416
at header: 3416
i: 3416
end-i: 3496
at header: 3416
i: 3432
end-i: 3496
i: 3436
end-i: 3496
i: 3440
end-i: 3496
i: 3444
end-i: 3496
i: 3448
end-i: 3496
i: 3452
end-i: 3496
i: 3456
end-i: 3496
i: 3460
end-i: 3496
i: 3464
end-i: 3496
i: 3468
end-i: 3496
i: 3472
end-i: 3496
i: 3476
end-i: 3496
i: 3480
end-i: 3496
i: 3484
end-i: 3496
i: 3488
end-i: 3496
i: 3492
end-i: 3496
i: 3496
end-i: 3496
at header: 3496
i: 3496
end-i: 3576
at header: 3496
i: 3512
end-i: 3576
i: 3516
end-i: 3576
i: 3520
end-i: 3576
i: 3524
end-i: 3576
i: 3528
end-i: 3576
i: 3532
end-i: 3576
i: 3536
end-i: 3576
i: 3540
end-i: 3576
i: 3544
end-i: 3576
i: 3548
end-i: 3576
i: 3552
end-i: 3576
i: 3556
end-i: 3576
i: 3560
end-i: 3576
i: 3564
end-i: 3576
i: 3568
end-i: 3576
i: 3572
end-i: 3576
i: 3576
end-i: 3576
at header: 3576
i: 3576
end-i: 3656
at header: 3576
i: 3592
end-i: 3656
i: 3596
end-i: 3656
i: 3600
end-i: 3656
i: 3604
end-i: 3656
i: 3608
end-i: 3656
i: 3612
end-i: 3656
i: 3616
end-i: 3656
i: 3620
end-i: 3656
i: 3624
end-i: 3656
i: 3628
end-i: 3656
i: 3632
end-i: 3656
i: 3636
end-i: 3656
i: 3640
end-i: 3656
i: 3644
end-i: 3656
i: 3648
end-i: 3656
i: 3652
end-i: 3656
i: 3656
end-i: 3656
at header: 3656
i: 3656
end-i: 3736
at header: 3656
i: 3672
end-i: 3736
i: 3676
end-i: 3736
i: 3680
end-i: 3736
i: 3684
end-i: 3736
i: 3688
end-i: 3736
i: 3692
end-i: 3736
i: 3696
end-i: 3736
i: 3700
end-i: 3736
i: 3704
end-i: 3736
i: 3708
end-i: 3736
i: 3712
end-i: 3736
i: 3716
end-i: 3736
i: 3720
end-i: 3736
i: 3724
end-i: 3736
i: 3728
end-i: 3736
i: 3732
end-i: 3736
i: 3736
end-i: 3736
at header: 3736
i: 3736
end-i: 3816
at header: 3736
i: 3752
end-i: 3816
i: 3756
end-i: 3816
i: 3760
end-i: 3816
i: 3764
end-i: 3816
i: 3768
end-i: 3816
i: 3772
end-i: 3816
i: 3776
end-i: 3816
i: 3780
end-i: 3816
i: 3784
end-i: 3816
i: 3788
end-i: 3816
i: 3792
end-i: 3816
i: 3796
end-i: 3816
i: 3800
end-i: 3816
i: 3804
end-i: 3816
i: 3808
end-i: 3816
i: 3812
end-i: 3816
i: 3816
end-i: 3816
at header: 3816
i: 3816
end-i: 3896
at header: 3816
i: 3832
end-i: 3896
i: 3836
end-i: 3896
i: 3840
end-i: 3896
i: 3844
end-i: 3896
i: 3848
end-i: 3896
i: 3852
end-i: 3896
i: 3856
end-i: 3896
i: 3860
end-i: 3896
i: 3864
end-i: 3896
i: 3868
end-i: 3896
i: 3872
end-i: 3896
i: 3876
end-i: 3896
i: 3880
end-i: 3896
i: 3884
end-i: 3896
i: 3888
end-i: 3896
i: 3892
end-i: 3896
i: 3896
end-i: 3896
at header: 3896
i: 3896
end-i: 3976
at header: 3896
i: 3912
end-i: 3976
i: 3916
end-i: 3976
i: 3920
end-i: 3976
i: 3924
end-i: 3976
i: 3928
end-i: 3976
i: 3932
end-i: 3976
i: 3936
end-i: 3976
i: 3940
end-i: 3976
i: 3944
end-i: 3976
i: 3948
end-i: 3976
i: 3952
end-i: 3976
i: 3956
end-i: 3976
i: 3960
end-i: 3976
i: 3964
end-i: 3976
i: 3968
end-i: 3976
i: 3972
end-i: 3976
i: 3976
end-i: 3976
at header: 3976
i: 3976
end-i: 4056
at header: 3976
i: 3992
end-i: 4056
i: 3996
end-i: 4056
i: 4000
end-i: 4056
i: 4004
end-i: 4056
i: 4008
end-i: 4056
i: 4012
end-i: 4056
i: 4016
end-i: 4056
i: 4020
end-i: 4056
i: 4024
end-i: 4056
i: 4028
end-i: 4056
i: 4032
end-i: 4056
i: 4036
end-i: 4056
i: 4040
end-i: 4056
i: 4044
end-i: 4056
i: 4048
end-i: 4056
i: 4052
end-i: 4056
i: 4056
end-i: 4056
at header: 4056
i: 4056
end-i: 4136
at header: 4056
i: 4072
end-i: 4136
i: 4076
end-i: 4136
i: 4080
end-i: 4136
i: 4084
end-i: 4136
i: 4088
end-i: 4136
i: 4092
end-i: 4136
i: 4096
end-i: 4136
i: 4100
end-i: 4136
i: 4104
end-i: 4136
i: 4108
end-i: 4136
i: 4112
end-i: 4136
i: 4116
end-i: 4136
i: 4120
end-i: 4136
i: 4124
end-i: 4136
i: 4128
end-i: 4136
i: 4132
end-i: 4136
i: 4136
end-i: 4136
at header: 4136
i: 4136
end-i: 4216
at header: 4136
i: 4152
end-i: 4216
i: 4156
end-i: 4216
i: 4160
end-i: 4216
i: 4164
end-i: 4216
i: 4168
end-i: 4216
i: 4172
end-i: 4216
i: 4176
end-i: 4216
i: 4180
end-i: 4216
i: 4184
end-i: 4216
i: 4188
end-i: 4216
i: 4192
end-i: 4216
i: 4196
end-i: 4216
i: 4200
end-i: 4216
i: 4204
end-i: 4216
i: 4208
end-i: 4216
i: 4212
end-i: 4216
i: 4216
end-i: 4216
at header: 4216
i: 4216
end-i: 4296
at header: 4216
i: 4232
end-i: 4296
i: 4236
end-i: 4296
i: 4240
end-i: 4296
i: 4244
end-i: 4296
i: 4248
end-i: 4296
i: 4252
end-i: 4296
i: 4256
end-i: 4296
i: 4260
end-i: 4296
i: 4264
end-i: 4296
i: 4268
end-i: 4296
i: 4272
end-i: 4296
i: 4276
end-i: 4296
i: 4280
end-i: 4296
i: 4284
end-i: 4296
i: 4288
end-i: 4296
i: 4292
end-i: 4296
i: 4296
end-i: 4296
at header: 4296
i: 4296
end-i: 4376
at header: 4296
i: 4312
end-i: 4376
i: 4316
end-i: 4376
i: 4320
end-i: 4376
i: 4324
end-i: 4376
i: 4328
end-i: 4376
i: 4332
end-i: 4376
i: 4336
end-i: 4376
i: 4340
end-i: 4376
i: 4344
end-i: 4376
i: 4348
end-i: 4376
i: 4352
end-i: 4376
i: 4356
end-i: 4376
i: 4360
end-i: 4376
i: 4364
end-i: 4376
i: 4368
end-i: 4376
i: 4372
end-i: 4376
i: 4376
end-i: 4376
at header: 4376
i: 4376
end-i: 4424
at header: 4376
i: 4392
end-i: 4424
i: 4396
end-i: 4424
i: 4400
end-i: 4424
i: 4404
end-i: 4424
i: 4408
end-i: 4424
i: 4412
end-i: 4424
i: 4416
end-i: 4424
i: 4420
end-i: 4424
i: 4424
end-i: 4424
i:4424 HIT CHUNK END
i: 4424
end-i: 4428
i: 4428
end-i: 4428
i:4428 HIT CHUNK END
i: 4428
end-i: 4440
i: 4432
end-i: 4440
i: 4436
end-i: 4440
i: 4440
end-i: 4440
i:4440 HIT CHUNK END
i: 4440
end-i: 4452
i: 4444
end-i: 4452
i: 4448
end-i: 4452
i: 4452
end-i: 4452
i:4452 HIT CHUNK END
i: 4452
end-i: 4460
i: 4456
end-i: 4460
i: 4460
end-i: 4460
i:4460 HIT CHUNK END
i: 4460
end-i: 4492
i: 4464
end-i: 4492
i: 4468
end-i: 4492
i: 4472
end-i: 4492
i: 4476
end-i: 4492
i: 4480
end-i: 4492
i: 4484
end-i: 4492
i: 4488
end-i: 4492
i: 4492
end-i: 4492
i:4492 HIT CHUNK END
i: 4492
end-i: 4496
i: 4496
end-i: 4496
i:4496 HIT CHUNK END
i: 4496
end-i: 4508
i: 4500
end-i: 4508
i: 4504
end-i: 4508
i: 4508
end-i: 4508
i:4508 HIT CHUNK END
i: 4508
end-i: 4520
i: 4512
end-i: 4520
i: 4516
end-i: 4520
i: 4520
end-i: 4520
i:4520 HIT CHUNK END
i: 4520
end-i: 4528
i: 4524
end-i: 4528
i: 4528
end-i: 4528
i:4528 HIT CHUNK END
i: 4528
end-i: 4560
i: 4532
end-i: 4560
i: 4536
end-i: 4560
i: 4540
end-i: 4560
i: 4544
end-i: 4560
i: 4548
end-i: 4560
i: 4552
end-i: 4560
i: 4556
end-i: 4560
i: 4560
end-i: 4560
i:4560 HIT CHUNK END
i: 4560
end-i: 4564
i: 4564
end-i: 4564
i:4564 HIT CHUNK END
i: 4564
end-i: 4576
i: 4568
end-i: 4576
i: 4572
end-i: 4576
i: 4576
end-i: 4576
i:4576 HIT CHUNK END
i: 4576
end-i: 4588
i: 4580
end-i: 4588
i: 4584
end-i: 4588
i: 4588
end-i: 4588
i:4588 HIT CHUNK END
i: 4588
end-i: 4596
i: 4592
end-i: 4596
i: 4596
end-i: 4596
i:4596 HIT CHUNK END
i: 4596
end-i: 4628
i: 4600
end-i: 4628
i: 4604
end-i: 4628
i: 4608
end-i: 4628
i: 4612
end-i: 4628
i: 4616
end-i: 4628
i: 4620
end-i: 4628
i: 4624
end-i: 4628
i: 4628
end-i: 4628
i:4628 HIT CHUNK END
i: 4628
end-i: 4632
i: 4632
end-i: 4632
i:4632 HIT CHUNK END
i: 4632
end-i: 4644
i: 4636
end-i: 4644
i: 4640
end-i: 4644
i: 4644
end-i: 4644
i:4644 HIT CHUNK END
i: 4644
end-i: 4656
i: 4648
end-i: 4656
i: 4652
end-i: 4656
i: 4656
end-i: 4656
i:4656 HIT CHUNK END
i: 4656
end-i: 4664
i: 4660
end-i: 4664
i: 4664
end-i: 4664
i:4664 HIT CHUNK END
i: 4664
end-i: 4700
i: 4668
end-i: 4700
i: 4672
end-i: 4700
i: 4676
end-i: 4700
i: 4680
end-i: 4700
i: 4684
end-i: 4700
i: 4688
end-i: 4700
i: 4692
end-i: 4700
i: 4696
end-i: 4700
i: 4700
end-i: 4700
i:4700 HIT CHUNK END
i: 4700
end-i: 4724
i: 4704
end-i: 4724
i: 4708
end-i: 4724
i: 4712
end-i: 4724
i: 4716
end-i: 4724
i: 4720
end-i: 4724
i: 4724
end-i: 4724
i:4724 HIT CHUNK END
i: 4724
end-i: 4732
i: 4728
end-i: 4732
i: 4732
end-i: 4732
i:4732 HIT CHUNK END
i: 4732
end-i: 4740
i: 4736
end-i: 4740
i: 4740
end-i: 4740
i:4740 HIT CHUNK END
i: 4740
end-i: 4744
i: 4744
end-i: 4744
i:4744 HIT CHUNK END
i: 4744
end-i: 4756
i: 4748
end-i: 4756
i: 4752
end-i: 4756
i: 4756
end-i: 4756
i:4756 HIT CHUNK END
i: 4756
end-i: 4768
i: 4760
end-i: 4768
i: 4764
end-i: 4768
i: 4768
end-i: 4768
i:4768 HIT CHUNK END
i: 4768
end-i: 4772
i: 4772
end-i: 4772
i:4772 HIT CHUNK END
i: 4772
end-i: 4780
i: 4776
end-i: 4780
i: 4780
end-i: 4780
i:4780 HIT CHUNK END
i: 4780
end-i: 4788
i: 4784
end-i: 4788
i: 4788
end-i: 4788
i:4788 HIT CHUNK END
i: 4788
end-i: 4792
i: 4792
end-i: 4792
i:4792 HIT CHUNK END
i: 4792
end-i: 4812
i: 4796
end-i: 4812
i: 4800
end-i: 4812
i: 4804
end-i: 4812
i: 4808
end-i: 4812
i: 4812
end-i: 4812
i:4812 HIT CHUNK END
i: 4812
end-i: 4872
i: 4816
end-i: 4872
i: 4820
end-i: 4872
i: 4824
end-i: 4872
i: 4828
end-i: 4872
i: 4832
end-i: 4872
i: 4836
end-i: 4872
i: 4840
end-i: 4872
i: 4844
end-i: 4872
i: 4848
end-i: 4872
i: 4852
end-i: 4872
i: 4856
end-i: 4872
i: 4860
end-i: 4872
i: 4864
end-i: 4872
i: 4868
end-i: 4872
i: 4872
end-i: 4872
at header: 4872
i: 4872
end-i: 4908
at header: 4872
i: 4888
end-i: 4908
i: 4892
end-i: 4908
i: 4896
end-i: 4908
i: 4900
end-i: 4908
i: 4904
end-i: 4908
i: 4908
end-i: 4908
i:4908 HIT CHUNK END
i: 4908
end-i: 4924
i: 4912
end-i: 4924
i: 4916
end-i: 4924
i: 4920
end-i: 4924
i: 4924
end-i: 4924
i:4924 HIT CHUNK END
i: 4924
end-i: 4944
i: 4928
end-i: 4944
i: 4932
end-i: 4944
i: 4936
end-i: 4944
i: 4940
end-i: 4944
i: 4944
end-i: 4944
i:4944 HIT CHUNK END
i: 4944
end-i: 4992
i: 4948
end-i: 4992
i: 4952
end-i: 4992
i: 4956
end-i: 4992
i: 4960
end-i: 4992
i: 4964
end-i: 4992
i: 4968
end-i: 4992
i: 4972
end-i: 4992
i: 4976
end-i: 4992
i: 4980
end-i: 4992
i: 4984
end-i: 4992
i: 4988
end-i: 4992
i: 4992
end-i: 4992
at header: 4992
i: 4992
end-i: 5012
at header: 4992
i: 5008
end-i: 5012
i: 5012
end-i: 5012
i:5012 HIT CHUNK END
i: 5012
end-i: 5056
i: 5016
end-i: 5056
i: 5020
end-i: 5056
i: 5024
end-i: 5056
i: 5028
end-i: 5056
i: 5032
end-i: 5056
i: 5036
end-i: 5056
i: 5040
end-i: 5056
i: 5044
end-i: 5056
i: 5048
end-i: 5056
i: 5052
end-i: 5056
i: 5056
end-i: 5056
at header: 5056
i: 5056
end-i: 5088
at header: 5056
i: 5072
end-i: 5088
i: 5076
end-i: 5088
i: 5080
end-i: 5088
i: 5084
end-i: 5088
i: 5088
end-i: 5088
i:5088 HIT CHUNK END
i: 5088
end-i: 5096
i: 5092
end-i: 5096
i: 5096
end-i: 5096
i:5096 HIT CHUNK END
i: 5096
end-i: 5120
i: 5100
end-i: 5120
i: 5104
end-i: 5120
i: 5108
end-i: 5120
i: 5112
end-i: 5120
i: 5116
end-i: 5120
i: 5120
end-i: 5120
i:5120 HIT CHUNK END
i: 5120
end-i: 5124
i: 5124
end-i: 5124
i:5124 HIT CHUNK END
i: 5124
end-i: 5140
i: 5128
end-i: 5140
i: 5132
end-i: 5140
i: 5136
end-i: 5140
i: 5140
end-i: 5140
i:5140 HIT CHUNK END
i: 5140
end-i: 5168
i: 5144
end-i: 5168
i: 5148
end-i: 5168
i: 5152
end-i: 5168
i: 5156
end-i: 5168
i: 5160
end-i: 5168
i: 5164
end-i: 5168
i: 5168
end-i: 5168
at header: 5168
i: 5168
end-i: 5192
at header: 5168
i: 5184
end-i: 5192
i: 5188
end-i: 5192
i: 5192
end-i: 5192
i:5192 HIT CHUNK END
i: 5192
end-i: 5232
i: 5196
end-i: 5232
i: 5200
end-i: 5232
i: 5204
end-i: 5232
i: 5208
end-i: 5232
i: 5212
end-i: 5232
i: 5216
end-i: 5232
i: 5220
end-i: 5232
i: 5224
end-i: 5232
i: 5228
end-i: 5232
i: 5232
end-i: 5232
at header: 5232
i: 5232
end-i: 5276
at header: 5232
i: 5248
end-i: 5276
i: 5252
end-i: 5276
i: 5256
end-i: 5276
i: 5260
end-i: 5276
i: 5264
end-i: 5276
i: 5268
end-i: 5276
i: 5272
end-i: 5276
i: 5276
end-i: 5276
i:5276 HIT CHUNK END
i: 5276
end-i: 5288
i: 5280
end-i: 5288
i: 5284
end-i: 5288
i: 5288
end-i: 5288
i:5288 HIT CHUNK END
i: 5288
end-i: 5304
i: 5292
end-i: 5304
i: 5296
end-i: 5304
i: 5300
end-i: 5304
i: 5304
end-i: 5304
i:5304 HIT CHUNK END
i: 5304
end-i: 5316
i: 5308
end-i: 5316
i: 5312
end-i: 5316
i: 5316
end-i: 5316
i:5316 HIT CHUNK END
i: 5316
end-i: 5328
i: 5320
end-i: 5328
i: 5324
end-i: 5328
i: 5328
end-i: 5328
i:5328 HIT CHUNK END
i: 5328
end-i: 5340
i: 5332
end-i: 5340
i: 5336
end-i: 5340
i: 5340
end-i: 5340
i:5340 HIT CHUNK END
i: 5340
end-i: 5348
i: 5344
end-i: 5348
i: 5348
end-i: 5348
i:5348 HIT CHUNK END
i: 5348
end-i: 5384
i: 5352
end-i: 5384
i: 5356
end-i: 5384
i: 5360
end-i: 5384
i: 5364
end-i: 5384
i: 5368
end-i: 5384
i: 5372
end-i: 5384
i: 5376
end-i: 5384
i: 5380
end-i: 5384
i: 5384
end-i: 5384
at header: 5384
i: 5384
end-i: 5420
at header: 5384
i: 5400
end-i: 5420
i: 5404
end-i: 5420
i: 5408
end-i: 5420
i: 5412
end-i: 5420
i: 5416
end-i: 5420
i: 5420
end-i: 5420
i:5420 HIT CHUNK END
i: 5420
end-i: 5456
i: 5424
end-i: 5456
i: 5428
end-i: 5456
i: 5432
end-i: 5456
i: 5436
end-i: 5456
i: 5440
end-i: 5456
i: 5444
end-i: 5456
i: 5448
end-i: 5456
i: 5452
end-i: 5456
i: 5456
end-i: 5456
at header: 5456
i: 5456
end-i: 5488
at header: 5456
i: 5472
end-i: 5488
i: 5476
end-i: 5488
i: 5480
end-i: 5488
i: 5484
end-i: 5488
i: 5488
end-i: 5488
i:5488 HIT CHUNK END
i: 5488
end-i: 5528
i: 5492
end-i: 5528
i: 5496
end-i: 5528
i: 5500
end-i: 5528
i: 5504
end-i: 5528
i: 5508
end-i: 5528
i: 5512
end-i: 5528
i: 5516
end-i: 5528
i: 5520
end-i: 5528
i: 5524
end-i: 5528
i: 5528
end-i: 5528
at header: 5528
i: 5528
end-i: 5564
at header: 5528
i: 5544
end-i: 5564
i: 5548
end-i: 5564
i: 5552
end-i: 5564
i: 5556
end-i: 5564
i: 5560
end-i: 5564
i: 5564
end-i: 5564
i:5564 HIT CHUNK END
i: 5564
end-i: 5600
i: 5568
end-i: 5600
i: 5572
end-i: 5600
i: 5576
end-i: 5600
i: 5580
end-i: 5600
i: 5584
end-i: 5600
i: 5588
end-i: 5600
i: 5592
end-i: 5600
i: 5596
end-i: 5600
i: 5600
end-i: 5600
at header: 5600
i: 5600
end-i: 5640
at header: 5600
i: 5616
end-i: 5640
i: 5620
end-i: 5640
i: 5624
end-i: 5640
i: 5628
end-i: 5640
i: 5632
end-i: 5640
i: 5636
end-i: 5640
i: 5640
end-i: 5640
i:5640 HIT CHUNK END
i: 5640
end-i: 5672
i: 5644
end-i: 5672
i: 5648
end-i: 5672
i: 5652
end-i: 5672
i: 5656
end-i: 5672
i: 5660
end-i: 5672
i: 5664
end-i: 5672
i: 5668
end-i: 5672
i: 5672
end-i: 5672
at header: 5672
i: 5672
end-i: 5700
at header: 5672
i: 5688
end-i: 5700
i: 5692
end-i: 5700
i: 5696
end-i: 5700
i: 5700
end-i: 5700
i:5700 HIT CHUNK END
i: 5700
end-i: 5724
i: 5704
end-i: 5724
i: 5708
end-i: 5724
i: 5712
end-i: 5724
i: 5716
end-i: 5724
i: 5720
end-i: 5724
i: 5724
end-i: 5724
i:5724 HIT CHUNK END
i: 5724
end-i: 5752
i: 5728
end-i: 5752
i: 5732
end-i: 5752
i: 5736
end-i: 5752
i: 5740
end-i: 5752
i: 5744
end-i: 5752
i: 5748
end-i: 5752
i: 5752
end-i: 5752
at header: 5752
i: 5752
end-i: 5780
at header: 5752
i: 5768
end-i: 5780
i: 5772
end-i: 5780
i: 5776
end-i: 5780
i: 5780
end-i: 5780
i:5780 HIT CHUNK END
i: 5780
end-i: 5804
i: 5784
end-i: 5804
i: 5788
end-i: 5804
i: 5792
end-i: 5804
i: 5796
end-i: 5804
i: 5800
end-i: 5804
i: 5804
end-i: 5804
i:5804 HIT CHUNK END
i: 5804
end-i: 5832
i: 5808
end-i: 5832
i: 5812
end-i: 5832
i: 5816
end-i: 5832
i: 5820
end-i: 5832
i: 5824
end-i: 5832
i: 5828
end-i: 5832
i: 5832
end-i: 5832
at header: 5832
i: 5832
end-i: 5860
at header: 5832
i: 5848
end-i: 5860
i: 5852
end-i: 5860
i: 5856
end-i: 5860
i: 5860
end-i: 5860
i:5860 HIT CHUNK END
i: 5860
end-i: 5884
i: 5864
end-i: 5884
i: 5868
end-i: 5884
i: 5872
end-i: 5884
i: 5876
end-i: 5884
i: 5880
end-i: 5884
i: 5884
end-i: 5884
i:5884 HIT CHUNK END
i: 5884
end-i: 5912
i: 5888
end-i: 5912
i: 5892
end-i: 5912
i: 5896
end-i: 5912
i: 5900
end-i: 5912
i: 5904
end-i: 5912
i: 5908
end-i: 5912
i: 5912
end-i: 5912
at header: 5912
i: 5912
end-i: 5940
at header: 5912
i: 5928
end-i: 5940
i: 5932
end-i: 5940
i: 5936
end-i: 5940
i: 5940
end-i: 5940
i:5940 HIT CHUNK END
i: 5940
end-i: 5964
i: 5944
end-i: 5964
i: 5948
end-i: 5964
i: 5952
end-i: 5964
i: 5956
end-i: 5964
i: 5960
end-i: 5964
i: 5964
end-i: 5964
i:5964 HIT CHUNK END
i: 5964
end-i: 5992
i: 5968
end-i: 5992
i: 5972
end-i: 5992
i: 5976
end-i: 5992
i: 5980
end-i: 5992
i: 5984
end-i: 5992
i: 5988
end-i: 5992
i: 5992
end-i: 5992
at header: 5992
i: 5992
end-i: 6024
at header: 5992
i: 6008
end-i: 6024
i: 6012
end-i: 6024
i: 6016
end-i: 6024
i: 6020
end-i: 6024
i: 6024
end-i: 6024
i:6024 HIT CHUNK END
i: 6024
end-i: 6032
i: 6028
end-i: 6032
i: 6032
end-i: 6032
i:6032 HIT CHUNK END
i: 6032
end-i: 6072
i: 6036
end-i: 6072
i: 6040
end-i: 6072
i: 6044
end-i: 6072
i: 6048
end-i: 6072
i: 6052
end-i: 6072
i: 6056
end-i: 6072
i: 6060
end-i: 6072
i: 6064
end-i: 6072
i: 6068
end-i: 6072
i: 6072
end-i: 6072
at header: 6072
i: 6072
end-i: 6104
at header: 6072
i: 6088
end-i: 6104
i: 6092
end-i: 6104
i: 6096
end-i: 6104
i: 6100
end-i: 6104
i: 6104
end-i: 6104
i:6104 HIT CHUNK END
i: 6104
end-i: 6144
i: 6108
end-i: 6144
i: 6112
end-i: 6144
i: 6116
end-i: 6144
i: 6120
end-i: 6144
i: 6124
end-i: 6144
i: 6128
end-i: 6144
i: 6132
end-i: 6144
i: 6136
end-i: 6144
i: 6140
end-i: 6144
i: 6144
end-i: 6144
at header: 6144
i: 6144
end-i: 6188
at header: 6144
i: 6160
end-i: 6188
i: 6164
end-i: 6188
i: 6168
end-i: 6188
i: 6172
end-i: 6188
i: 6176
end-i: 6188
i: 6180
end-i: 6188
i: 6184
end-i: 6188
i: 6188
end-i: 6188
i:6188 HIT CHUNK END
i: 6188
end-i: 6192
i: 6192
end-i: 6192
i:6192 HIT CHUNK END
i: 6192
end-i: 6200
i: 6196
end-i: 6200
i: 6200
end-i: 6200
i:6200 HIT CHUNK END
i: 6200
end-i: 6240
i: 6204
end-i: 6240
i: 6208
end-i: 6240
i: 6212
end-i: 6240
i: 6216
end-i: 6240
i: 6220
end-i: 6240
i: 6224
end-i: 6240
i: 6228
end-i: 6240
i: 6232
end-i: 6240
i: 6236
end-i: 6240
i: 6240
end-i: 6240
at header: 6240
i: 6240
end-i: 6276
at header: 6240
i: 6256
end-i: 6276
i: 6260
end-i: 6276
i: 6264
end-i: 6276
i: 6268
end-i: 6276
i: 6272
end-i: 6276
i: 6276
end-i: 6276
i:6276 HIT CHUNK END
i: 6276
end-i: 6312
i: 6280
end-i: 6312
i: 6284
end-i: 6312
i: 6288
end-i: 6312
i: 6292
end-i: 6312
i: 6296
end-i: 6312
i: 6300
end-i: 6312
i: 6304
end-i: 6312
i: 6308
end-i: 6312
i: 6312
end-i: 6312
at header: 6312
i: 6312
end-i: 6348
at header: 6312
i: 6328
end-i: 6348
i: 6332
end-i: 6348
i: 6336
end-i: 6348
i: 6340
end-i: 6348
i: 6344
end-i: 6348
i: 6348
end-i: 6348
i:6348 HIT CHUNK END
i: 6348
end-i: 6356
i: 6352
end-i: 6356
i: 6356
end-i: 6356
i:6356 HIT CHUNK END
i: 6356
end-i: 6392
i: 6360
end-i: 6392
i: 6364
end-i: 6392
i: 6368
end-i: 6392
i: 6372
end-i: 6392
i: 6376
end-i: 6392
i: 6380
end-i: 6392
i: 6384
end-i: 6392
i: 6388
end-i: 6392
i: 6392
end-i: 6392
at header: 6392
i: 6392
end-i: 6420
at header: 6392
i: 6408
end-i: 6420
i: 6412
end-i: 6420
i: 6416
end-i: 6420
i: 6420
end-i: 6420
i:6420 HIT CHUNK END
i: 6420
end-i: 6464
i: 6424
end-i: 6464
i: 6428
end-i: 6464
i: 6432
end-i: 6464
i: 6436
end-i: 6464
i: 6440
end-i: 6464
i: 6444
end-i: 6464
i: 6448
end-i: 6464
i: 6452
end-i: 6464
i: 6456
end-i: 6464
i: 6460
end-i: 6464
i: 6464
end-i: 6464
at header: 6464
i: 6464
end-i: 6504
at header: 6464
i: 6480
end-i: 6504
i: 6484
end-i: 6504
i: 6488
end-i: 6504
i: 6492
end-i: 6504
i: 6496
end-i: 6504
i: 6500
end-i: 6504
i: 6504
end-i: 6504
i:6504 HIT CHUNK END
i: 6504
end-i: 6508
i: 6508
end-i: 6508
i:6508 HIT CHUNK END
i: 6508
end-i: 6516
i: 6512
end-i: 6516
i: 6516
end-i: 6516
i:6516 HIT CHUNK END
i: 6516
end-i: 6552
i: 6520
end-i: 6552
i: 6524
end-i: 6552
i: 6528
end-i: 6552
i: 6532
end-i: 6552
i: 6536
end-i: 6552
i: 6540
end-i: 6552
i: 6544
end-i: 6552
i: 6548
end-i: 6552
i: 6552
end-i: 6552
at header: 6552
i: 6552
end-i: 6580
at header: 6552
i: 6568
end-i: 6580
i: 6572
end-i: 6580
i: 6576
end-i: 6580
i: 6580
end-i: 6580
i:6580 HIT CHUNK END
i: 6580
end-i: 6624
i: 6584
end-i: 6624
i: 6588
end-i: 6624
i: 6592
end-i: 6624
i: 6596
end-i: 6624
i: 6600
end-i: 6624
i: 6604
end-i: 6624
i: 6608
end-i: 6624
i: 6612
end-i: 6624
i: 6616
end-i: 6624
i: 6620
end-i: 6624
i: 6624
end-i: 6624
at header: 6624
i: 6624
end-i: 6664
at header: 6624
i: 6640
end-i: 6664
i: 6644
end-i: 6664
i: 6648
end-i: 6664
i: 6652
end-i: 6664
i: 6656
end-i: 6664
i: 6660
end-i: 6664
i: 6664
end-i: 6664
i:6664 HIT CHUNK END
i: 6664
end-i: 6668
i: 6668
end-i: 6668
i:6668 HIT CHUNK END
i: 6668
end-i: 6680
i: 6672
end-i: 6680
i: 6676
end-i: 6680
i: 6680
end-i: 6680
i:6680 HIT CHUNK END
i: 6680
end-i: 6688
i: 6684
end-i: 6688
i: 6688
end-i: 6688
i:6688 HIT CHUNK END
i: 6688
end-i: 6704
i: 6692
end-i: 6704
i: 6696
end-i: 6704
i: 6700
end-i: 6704
i: 6704
end-i: 6704
i:6704 HIT CHUNK END
i: 6704
end-i: 6720
i: 6708
end-i: 6720
i: 6712
end-i: 6720
i: 6716
end-i: 6720
i: 6720
end-i: 6720
i:6720 HIT CHUNK END
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 44
instruction range for chunk: 44 60
instruction range for chunk: 60 76
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 52")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x1")
(comment . ";;12 b 28")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;16: r10 <- r8, 0xB\n")
(comment . ";; literal r5")
(comment . ";;32: r8 <- r5, 0x5\n")
(comment . ";;36: r4 <- 0x2")
(comment . ";;40: b r5, 13")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 60
i: 44
end-i: 60
i: 44
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;56: b r6")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 76
i: 60
end-i: 76
i: 60
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;72: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 96
instruction range for chunk: 112 156
instruction range for chunk: 156 160
instruction range for chunk: 160 192
instruction range for chunk: 208 220
instruction range for chunk: 220 248
instruction range for chunk: 264 276
instruction range for chunk: 276 304
instruction range for chunk: 320 328
instruction range for chunk: 328 340
instruction range for chunk: 344 348
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;0: r15 <- r0, 0x58\n")
(comment . ";;4: r1 <- r15")
(comment . ";;8 b 316")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r3 <- r3, 0x1\n")
(comment . ";;16 b 256")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 44
i: 20
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;32: r10 <- r9, 0x5\n")
(comment . ";;36: r10 <- 0x1E")
(comment . ";;40 b 176")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r10 <- 0x7")
(comment . ";;48 b 108")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r9 <- r10, 0x8\n")
(comment . ";;56 b 100")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x1")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 156
i: 96
end-i: 156
at header: 96
i: 112
end-i: 156
i: 116
end-i: 156
i: 120
end-i: 156
i: 132
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116: r10 <- 0x4")
(comment . ";; literal r9")
(comment . ";; literal r5")
(comment . ";;144: r8 <- r5, 0x5\n")
(comment . ";;148: r4 <- 0x2")
(comment . ";;152: b r5, 13")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 192
i: 160
end-i: 192
i: 160
end-i: 192
i: 164
end-i: 192
i: 168
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;160: r9 <- 0x8")
(comment . ";;164: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;172: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;188: b r6")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 220
i: 192
end-i: 220
at header: 192
i: 208
end-i: 220
i: 212
end-i: 220
i: 216
end-i: 220
i: 220
end-i: 220
i:220 HIT CHUNK END
(comment . ";;208: r1 <- r1, r8")
(comment . ";;212: r9 <- 0x4")
(comment . ";;216 b -160")
chunklet-i: 220; chunklet-start-i: 220; chunklet-end-i: 248
i: 220
end-i: 248
i: 220
end-i: 248
i: 224
end-i: 248
i: 228
end-i: 248
i: 232
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
at header: 248
(comment . ";;220: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;228: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;244: b r6")
chunklet-i: 248; chunklet-start-i: 264; chunklet-end-i: 276
i: 248
end-i: 276
at header: 248
i: 264
end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";;264: r1 <- r1, r8")
(comment . ";;268: r10 <- 0x4")
(comment . ";;272 b -232")
chunklet-i: 276; chunklet-start-i: 276; chunklet-end-i: 304
i: 276
end-i: 304
i: 276
end-i: 304
i: 280
end-i: 304
i: 284
end-i: 304
i: 288
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
at header: 304
(comment . ";;276: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;284: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;300: b r6")
chunklet-i: 304; chunklet-start-i: 320; chunklet-end-i: 328
i: 304
end-i: 328
at header: 304
i: 320
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
i:328 HIT CHUNK END
(comment . ";;320: r1 <- r1, r8")
(comment . ";;324 b -308")
chunklet-i: 328; chunklet-start-i: 328; chunklet-end-i: 340
i: 328
end-i: 340
i: 328
end-i: 340
i: 340
end-i: 340
i:340 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 340; chunklet-start-i: 344; chunklet-end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";; instruction 340 not included")
(comment . ";;344 b -336")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 36
instruction range for chunk: 36 60
instruction range for chunk: 60 84
instruction range for chunk: 84 92
instruction range for chunk: 92 100
instruction range for chunk: 100 144
instruction range for chunk: 160 192
instruction range for chunk: 192 204
instruction range for chunk: 204 212
instruction range for chunk: 212 228
instruction range for chunk: 228 248
instruction range for chunk: 248 256
instruction range for chunk: 256 268
instruction range for chunk: 268 288
instruction range for chunk: 288 300
instruction range for chunk: 304 312
instruction range for chunk: 312 336
instruction range for chunk: 336 376
instruction range for chunk: 392 412
instruction range for chunk: 412 448
instruction range for chunk: 464 488
instruction range for chunk: 488 520
instruction range for chunk: 536 548
instruction range for chunk: 548 560
instruction range for chunk: 564 568
instruction range for chunk: 568 584
instruction range for chunk: 584 600
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r3 <- r3, 0x1\n")
(comment . ";;8 b 572")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r4 <- 0x1")
(comment . ";;16 b 548")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 36
i: 20
end-i: 36
i: 24
end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;20: r15 <- 0x9")
(comment . ";;24: r14 <- r0, 0x58\n")
(comment . ";;28: r1 <- r14")
(comment . ";;32 b 512")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;48: r4 <- r9, 0x5\n")
(comment . ";;52: r4 <- 0x1E")
(comment . ";;56 b 428")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 84
i: 60
end-i: 84
i: 60
end-i: 84
i: 72
end-i: 84
i: 76
end-i: 84
i: 80
end-i: 84
i: 84
end-i: 84
i:84 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;72: r10 <- r9, 0x5\n")
(comment . ";;76: r10 <- 0x1E")
(comment . ";;80 b 328")
chunklet-i: 84; chunklet-start-i: 84; chunklet-end-i: 92
i: 84
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;84: r10 <- 0x7")
(comment . ";;88 b 244")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 100
i: 92
end-i: 100
i: 96
end-i: 100
i: 100
end-i: 100
i:100 HIT CHUNK END
(comment . ";;92: r9 <- r10, 0x8\n")
(comment . ";;96 b 236")
chunklet-i: 100; chunklet-start-i: 100; chunklet-end-i: 144
i: 100
end-i: 144
i: 100
end-i: 144
i: 104
end-i: 144
i: 108
end-i: 144
i: 112
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 132
end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;100: r15 <- r1, 0x8\n")
(comment . ";;104: r4 <- r1, 0x10\n")
(comment . ";;108: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;124: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;132: r15 <- r1, 0x0\n")
(comment . ";;136: r4 <- 0x1")
(comment . ";;140: b r5, 13")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 192
i: 144
end-i: 192
at header: 144
i: 160
end-i: 192
i: 164
end-i: 192
i: 168
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164: r11 <- 0x4")
(comment . ";;168: r15 <- r1, 0x8\n")
(comment . ";;172: r4 <- r1, 0x10\n")
(comment . ";;176: r14 <- r4, r7")
(comment . ";;180: r14 <- 0x7")
(comment . ";;188 b 120")
chunklet-i: 192; chunklet-start-i: 192; chunklet-end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";;192: r14 <- r4, 0x1\n")
(comment . ";;196: r14 <- 0xF")
(comment . ";;200 b 108")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 212
i: 204
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";;204: r15 <- 0x7")
(comment . ";;208 b 100")
chunklet-i: 212; chunklet-start-i: 212; chunklet-end-i: 228
i: 212
end-i: 228
i: 216
end-i: 228
i: 220
end-i: 228
i: 224
end-i: 228
i: 228
end-i: 228
i:228 HIT CHUNK END
(comment . ";;212: r14 <- r14, r1")
(comment . ";;216: r14 <- r14, r8")
(comment . ";;220: r15 <- r14")
(comment . ";;224 b 84")
chunklet-i: 228; chunklet-start-i: 228; chunklet-end-i: 248
i: 228
end-i: 248
i: 232
end-i: 248
i: 236
end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;228: r14 <- r4, r9")
(comment . ";;232: r15 <- r15, r14")
(comment . ";;236: r11 <- r15, 0x0\n")
(comment . ";;240: r11 <- 0x7")
(comment . ";;244 b 8")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r4 <- 0x2E")
(comment . ";;252: b r1, 0")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 268
i: 256
end-i: 268
i: 256
end-i: 268
i: 260
end-i: 268
i: 264
end-i: 268
i: 268
end-i: 268
i:268 HIT CHUNK END
(comment . ";;256: r7 <- r0, 0x68\n")
(comment . ";;260: r2 <- r7")
(comment . ";;264 b 20")
chunklet-i: 268; chunklet-start-i: 268; chunklet-end-i: 288
i: 268
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
i:288 HIT CHUNK END
(comment . ";;268: r7 <- r7, r8")
(comment . ";;272: r7 <- r0, 0x68\n")
(comment . ";;276: r15 <- r7, 0x0\n")
(comment . ";;280: r4 <- 0x2E")
(comment . ";;284: b r1, 0")
chunklet-i: 288; chunklet-start-i: 288; chunklet-end-i: 300
i: 288
end-i: 300
i: 288
end-i: 300
i: 300
end-i: 300
i:300 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 300; chunklet-start-i: 304; chunklet-end-i: 312
i: 300
end-i: 312
i: 304
end-i: 312
i: 308
end-i: 312
i: 312
end-i: 312
i:312 HIT CHUNK END
(comment . ";; instruction 300 not included")
(comment . ";;304: r7 <- r0, 0x68\n")
(comment . ";;308 b -44")
chunklet-i: 312; chunklet-start-i: 312; chunklet-end-i: 336
i: 312
end-i: 336
i: 312
end-i: 336
i: 316
end-i: 336
i: 320
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
i:336 HIT CHUNK END
(comment . ";;312: r9 <- 0x4")
(comment . ";;316: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;332: b r6")
chunklet-i: 336; chunklet-start-i: 336; chunklet-end-i: 376
i: 336
end-i: 376
i: 336
end-i: 376
i: 340
end-i: 376
i: 344
end-i: 376
i: 348
end-i: 376
i: 352
end-i: 376
i: 356
end-i: 376
i: 360
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
at header: 376
(comment . ";;336: r9 <- 0x8")
(comment . ";;340: r15 <- r1, 0x8\n")
(comment . ";;344: r4 <- r1, 0x10\n")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;356: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;372: b r6")
chunklet-i: 376; chunklet-start-i: 392; chunklet-end-i: 412
i: 376
end-i: 412
at header: 376
i: 392
end-i: 412
i: 396
end-i: 412
i: 400
end-i: 412
i: 404
end-i: 412
i: 408
end-i: 412
i: 412
end-i: 412
i:412 HIT CHUNK END
(comment . ";;392: r1 <- r1, r8")
(comment . ";;396: r9 <- 0x4")
(comment . ";;400: r15 <- r1, 0x8\n")
(comment . ";;404: r4 <- r1, 0x10\n")
(comment . ";;408 b -312")
chunklet-i: 412; chunklet-start-i: 412; chunklet-end-i: 448
i: 412
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 420
end-i: 448
i: 424
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;412: r15 <- r1, 0x8\n")
(comment . ";;416: r4 <- r1, 0x10\n")
(comment . ";;420: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;444: b r6")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 488
i: 448
end-i: 488
at header: 448
i: 464
end-i: 488
i: 468
end-i: 488
i: 472
end-i: 488
i: 476
end-i: 488
i: 480
end-i: 488
i: 484
end-i: 488
i: 488
end-i: 488
i:488 HIT CHUNK END
(comment . ";;464: r1 <- r1, r8")
(comment . ";;468: r10 <- 0x4")
(comment . ";;472: r15 <- r1, 0x8\n")
(comment . ";;476: r4 <- r1, 0x10\n")
(comment . ";;484 b -404")
chunklet-i: 488; chunklet-start-i: 488; chunklet-end-i: 520
i: 488
end-i: 520
i: 488
end-i: 520
i: 492
end-i: 520
i: 496
end-i: 520
i: 500
end-i: 520
i: 504
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
at header: 520
(comment . ";;488: r15 <- r1, 0x8\n")
(comment . ";;492: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;500: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;516: b r6")
chunklet-i: 520; chunklet-start-i: 536; chunklet-end-i: 548
i: 520
end-i: 548
at header: 520
i: 536
end-i: 548
i: 540
end-i: 548
i: 544
end-i: 548
i: 548
end-i: 548
i:548 HIT CHUNK END
(comment . ";;536: r1 <- r1, r0")
(comment . ";;540: r15 <- r1, 0x8\n")
(comment . ";;544 b -488")
chunklet-i: 548; chunklet-start-i: 548; chunklet-end-i: 560
i: 548
end-i: 560
i: 548
end-i: 560
i: 560
end-i: 560
i:560 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 560; chunklet-start-i: 564; chunklet-end-i: 568
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";; instruction 560 not included")
(comment . ";;564 b -532")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 584
i: 568
end-i: 584
i: 568
end-i: 584
i: 580
end-i: 584
i: 584
end-i: 584
i:584 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;580: b r6")
chunklet-i: 584; chunklet-start-i: 584; chunklet-end-i: 600
i: 584
end-i: 600
i: 584
end-i: 600
i: 596
end-i: 600
i: 600
end-i: 600
i:600 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;596: b r6")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 32
instruction range for chunk: 32 36
instruction range for chunk: 36 60
instruction range for chunk: 60 88
instruction range for chunk: 104 116
instruction range for chunk: 116 144
instruction range for chunk: 160 168
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 108")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 32
i: 8
end-i: 32
i: 8
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;20: r15 <- r9, 0x5\n")
(comment . ";;24: r15 <- 0x1E")
(comment . ";;28 b 28")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: r9 <- 0xF")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r5")
(comment . ";;48: r8 <- r5, 0x5\n")
(comment . ";;52: r4 <- 0x1")
(comment . ";;56: b r5, 13")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 88
i: 60
end-i: 88
i: 60
end-i: 88
i: 64
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";;60: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;84: b r6")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 116
i: 88
end-i: 116
at header: 88
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r1 <- r1, r8")
(comment . ";;108: r9 <- 0x4")
(comment . ";;112 b -80")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 144
i: 116
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 168
i: 144
end-i: 168
at header: 144
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164 b -160")
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_puzzle0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
wat2wasm -r -o em-pb64l/c/pbchunk_puzzle0.wasm pbchunk-out/pbchunk_puzzle0.wat
pbchunk-out/pbchunk_puzzle0.wat:100171:1: error: unexpected token /*, expected ).
/* (too many entry points) */
^^
shell command failed
 in build-one
 in loop
 in module->hash
Running...
trying ./fibc.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running fibc:511:500

Testing puzzle under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/puzzle.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/puzzle.scm with output to /tmp/larcenous/puzzle.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/puzzle.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/puzzle.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 480
instruction range for chunk: 496 576
instruction range for chunk: 592 672
instruction range for chunk: 688 768
instruction range for chunk: 784 852
instruction range for chunk: 852 880
instruction range for chunk: 896 904
instruction range for chunk: 904 916
instruction range for chunk: 920 924
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 888")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 828")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 480
i: 384
end-i: 480
at header: 384
i: 400
end-i: 480
i: 404
end-i: 480
i: 408
end-i: 480
i: 420
end-i: 480
i: 432
end-i: 480
i: 444
end-i: 480
i: 448
end-i: 480
i: 460
end-i: 480
i: 464
end-i: 480
i: 468
end-i: 480
i: 472
end-i: 480
i: 476
end-i: 480
i: 480
end-i: 480
at header: 480
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;444: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;460: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;468: r15 <- r1, 0x0\n")
(comment . ";;472: r4 <- 0x3")
(comment . ";;476: b r5, 13")
chunklet-i: 480; chunklet-start-i: 496; chunklet-end-i: 576
i: 480
end-i: 576
at header: 480
i: 496
end-i: 576
i: 500
end-i: 576
i: 504
end-i: 576
i: 516
end-i: 576
i: 528
end-i: 576
i: 540
end-i: 576
i: 544
end-i: 576
i: 556
end-i: 576
i: 560
end-i: 576
i: 564
end-i: 576
i: 568
end-i: 576
i: 572
end-i: 576
i: 576
end-i: 576
at header: 576
(comment . ";;500: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;540: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;556: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;564: r15 <- r1, 0x0\n")
(comment . ";;568: r4 <- 0x3")
(comment . ";;572: b r5, 13")
chunklet-i: 576; chunklet-start-i: 592; chunklet-end-i: 672
i: 576
end-i: 672
at header: 576
i: 592
end-i: 672
i: 596
end-i: 672
i: 600
end-i: 672
i: 612
end-i: 672
i: 624
end-i: 672
i: 636
end-i: 672
i: 640
end-i: 672
i: 652
end-i: 672
i: 656
end-i: 672
i: 660
end-i: 672
i: 664
end-i: 672
i: 668
end-i: 672
i: 672
end-i: 672
at header: 672
(comment . ";;596: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;636: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;652: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;660: r15 <- r1, 0x0\n")
(comment . ";;664: r4 <- 0x3")
(comment . ";;668: b r5, 13")
chunklet-i: 672; chunklet-start-i: 688; chunklet-end-i: 768
i: 672
end-i: 768
at header: 672
i: 688
end-i: 768
i: 692
end-i: 768
i: 696
end-i: 768
i: 708
end-i: 768
i: 720
end-i: 768
i: 732
end-i: 768
i: 736
end-i: 768
i: 748
end-i: 768
i: 752
end-i: 768
i: 756
end-i: 768
i: 760
end-i: 768
i: 764
end-i: 768
i: 768
end-i: 768
at header: 768
(comment . ";;692: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;732: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;748: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;756: r15 <- r1, 0x0\n")
(comment . ";;760: r4 <- 0x3")
(comment . ";;764: b r5, 13")
chunklet-i: 768; chunklet-start-i: 784; chunklet-end-i: 852
i: 768
end-i: 852
at header: 768
i: 784
end-i: 852
i: 788
end-i: 852
i: 792
end-i: 852
i: 804
end-i: 852
i: 816
end-i: 852
i: 828
end-i: 852
i: 840
end-i: 852
i: 844
end-i: 852
i: 848
end-i: 852
i: 852
end-i: 852
i:852 HIT CHUNK END
(comment . ";;788: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;840: r8 <- r5, 0x5\n")
(comment . ";;844: r4 <- 0x3")
(comment . ";;848: b r5, 13")
chunklet-i: 852; chunklet-start-i: 852; chunklet-end-i: 880
i: 852
end-i: 880
i: 852
end-i: 880
i: 856
end-i: 880
i: 860
end-i: 880
i: 864
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
at header: 880
(comment . ";;852: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;860: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;876: b r6")
chunklet-i: 880; chunklet-start-i: 896; chunklet-end-i: 904
i: 880
end-i: 904
at header: 880
i: 896
end-i: 904
i: 900
end-i: 904
i: 904
end-i: 904
i:904 HIT CHUNK END
(comment . ";;896: r1 <- r1, r8")
(comment . ";;900 b -880")
chunklet-i: 904; chunklet-start-i: 904; chunklet-end-i: 916
i: 904
end-i: 916
i: 904
end-i: 916
i: 916
end-i: 916
i:916 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 916; chunklet-start-i: 920; chunklet-end-i: 924
i: 916
end-i: 924
i: 920
end-i: 924
i: 924
end-i: 924
i:924 HIT CHUNK END
(comment . ";; instruction 916 not included")
(comment . ";;920 b -908")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: my-iota
instruction range for chunk: 0 8
instruction range for chunk: 8 12
instruction range for chunk: 12 20
instruction range for chunk: 20 28
instruction range for chunk: 28 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 72
instruction range for chunk: 72 92
instruction range for chunk: 92 100
instruction range for chunk: 100 108
instruction range for chunk: 108 144
instruction range for chunk: 160 180
instruction range for chunk: 180 192
instruction range for chunk: 196 200
instruction range for chunk: 200 240
instruction range for chunk: 256 276
instruction range for chunk: 276 312
instruction range for chunk: 328 348
instruction range for chunk: 348 356
instruction range for chunk: 356 392
instruction range for chunk: 408 420
instruction range for chunk: 420 456
instruction range for chunk: 472 496
instruction range for chunk: 496 500
instruction range for chunk: 500 516
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 492")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;8: r4 <- 0x26")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r9 <- 0x0")
(comment . ";;16 b 476")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;20: r9 <- 0x7")
(comment . ";;24 b 320")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r3 <- r3, 0x1\n")
(comment . ";;32 b 240")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r9 <- 0x7")
(comment . ";;40 b 156")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r15 <- r9, 0x8\n")
(comment . ";;48 b 148")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 72
i: 52
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;52: r5 <- r2, r9")
(comment . ";;56: r2 <- r2, r0")
(comment . ";;60: r14 <- r0, 0x68\n")
(comment . ";;64: r14 <- r2")
(comment . ";;68 b 108")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 92
i: 72
end-i: 92
i: 72
end-i: 92
i: 76
end-i: 92
i: 80
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;72: r15 <- r5, 0x7\n")
(comment . ";;76: r4 <- r5, 0xF\n")
(comment . ";;80: r4 <- 0x5")
(comment . ";;84: r9 <- 0x7")
(comment . ";;88 b 16")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 100
i: 92
end-i: 100
i: 96
end-i: 100
i: 100
end-i: 100
i:100 HIT CHUNK END
(comment . ";;92: r15 <- r9, 0x8\n")
(comment . ";;96 b 8")
chunklet-i: 100; chunklet-start-i: 100; chunklet-end-i: 108
i: 100
end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
(comment . ";;100: r9 <- 0xF")
(comment . ";;104 b -96")
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 144
i: 108
end-i: 144
i: 108
end-i: 144
i: 112
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;108: r10 <- 0x8")
(comment . ";;112: r4 <- r1, 0x8\n")
(comment . ";;116: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 180
i: 144
end-i: 180
at header: 144
i: 160
end-i: 180
i: 164
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";;160: r1 <- r1, r0")
(comment . ";;164: r9 <- 0x4")
(comment . ";;168: r4 <- r1, 0x8\n")
(comment . ";;176 b -168")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 192
i: 180
end-i: 192
i: 180
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 192; chunklet-start-i: 196; chunklet-end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
i:200 HIT CHUNK END
(comment . ";; instruction 192 not included")
(comment . ";;196 b -128")
chunklet-i: 200; chunklet-start-i: 200; chunklet-end-i: 240
i: 200
end-i: 240
i: 200
end-i: 240
i: 204
end-i: 240
i: 208
end-i: 240
i: 212
end-i: 240
i: 216
end-i: 240
i: 220
end-i: 240
i: 224
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
at header: 240
(comment . ";;200: r10 <- 0x8")
(comment . ";;204: r9 <- r1, 0x10\n")
(comment . ";;208: r4 <- r1, 0x8\n")
(comment . ";;212: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;220: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;236: b r6")
chunklet-i: 240; chunklet-start-i: 256; chunklet-end-i: 276
i: 240
end-i: 276
at header: 240
i: 256
end-i: 276
i: 260
end-i: 276
i: 264
end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";;256: r1 <- r1, r8")
(comment . ";;260: r15 <- 0x4")
(comment . ";;264: r9 <- r1, 0x10\n")
(comment . ";;268: r4 <- r1, 0x8\n")
(comment . ";;272 b -224")
chunklet-i: 276; chunklet-start-i: 276; chunklet-end-i: 312
i: 276
end-i: 312
i: 276
end-i: 312
i: 280
end-i: 312
i: 284
end-i: 312
i: 288
end-i: 312
i: 292
end-i: 312
i: 296
end-i: 312
i: 308
end-i: 312
i: 312
end-i: 312
at header: 312
(comment . ";;276: r9 <- r1, 0x10\n")
(comment . ";;280: r4 <- r1, 0x8\n")
(comment . ";;284: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;292: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;308: b r6")
chunklet-i: 312; chunklet-start-i: 328; chunklet-end-i: 348
i: 312
end-i: 348
at header: 312
i: 328
end-i: 348
i: 332
end-i: 348
i: 336
end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";;332: r1 <- r1, r8")
(comment . ";;336: r9 <- r1, 0x10\n")
(comment . ";;340: r4 <- r1, 0x8\n")
(comment . ";;344 b -312")
chunklet-i: 348; chunklet-start-i: 348; chunklet-end-i: 356
i: 348
end-i: 356
i: 348
end-i: 356
i: 352
end-i: 356
i: 356
end-i: 356
i:356 HIT CHUNK END
(comment . ";;348: r3 <- r3, 0x1\n")
(comment . ";;352 b 64")
chunklet-i: 356; chunklet-start-i: 356; chunklet-end-i: 392
i: 356
end-i: 392
i: 360
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;356: r9 <- r1, 0x10\n")
(comment . ";;360: r4 <- r1, 0x8\n")
(comment . ";;364: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 420
i: 392
end-i: 420
at header: 392
i: 408
end-i: 420
i: 412
end-i: 420
i: 416
end-i: 420
i: 420
end-i: 420
i:420 HIT CHUNK END
(comment . ";;408: r1 <- r1, r8")
(comment . ";;412: r9 <- r1, 0x10\n")
(comment . ";;416: r4 <- r1, 0x8\n")
chunklet-i: 420; chunklet-start-i: 420; chunklet-end-i: 456
i: 420
end-i: 456
i: 420
end-i: 456
i: 424
end-i: 456
i: 428
end-i: 456
i: 432
end-i: 456
i: 436
end-i: 456
i: 440
end-i: 456
i: 452
end-i: 456
i: 456
end-i: 456
at header: 456
(comment . ";;420: r9 <- r1, 0x10\n")
(comment . ";;424: r4 <- r1, 0x8\n")
(comment . ";;428: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;452: b r6")
chunklet-i: 456; chunklet-start-i: 472; chunklet-end-i: 496
i: 456
end-i: 496
at header: 456
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 484
end-i: 496
i: 488
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";;472: r1 <- r1, r8")
(comment . ";;476: r15 <- 0x4")
(comment . ";;480: r9 <- r1, 0x10\n")
(comment . ";;484: r4 <- r1, 0x8\n")
(comment . ";;488: r15 <- 0x6")
(comment . ";;492 b -468")
chunklet-i: 496; chunklet-start-i: 496; chunklet-end-i: 500
i: 496
end-i: 500
i: 496
end-i: 500
i: 500
end-i: 500
i:500 HIT CHUNK END
(comment . ";;496: b r1, 0")
chunklet-i: 500; chunklet-start-i: 500; chunklet-end-i: 516
i: 500
end-i: 516
i: 500
end-i: 516
i: 512
end-i: 516
i: 516
end-i: 516
i:516 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;512: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0xFF8")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x18")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x60")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x0")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x0")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x40")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 60
instruction range for chunk: 60 68
instruction range for chunk: 68 76
instruction range for chunk: 76 120
instruction range for chunk: 136 164
instruction range for chunk: 164 176
instruction range for chunk: 176 188
instruction range for chunk: 188 212
instruction range for chunk: 212 224
instruction range for chunk: 228 236
instruction range for chunk: 236 272
instruction range for chunk: 288 304
instruction range for chunk: 304 336
instruction range for chunk: 352 372
instruction range for chunk: 372 400
instruction range for chunk: 416 424
instruction range for chunk: 424 436
instruction range for chunk: 440 444
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 408")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 348")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 60
i: 24
end-i: 60
i: 24
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;48: r10 <- r9, 0x5\n")
(comment . ";;52: r10 <- 0x1E")
(comment . ";;56 b 244")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 68
i: 60
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";;60: r10 <- 0x7")
(comment . ";;64 b 168")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;68: r9 <- r10, 0x8\n")
(comment . ";;72 b 160")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 120
i: 76
end-i: 120
i: 76
end-i: 120
i: 80
end-i: 120
i: 84
end-i: 120
i: 88
end-i: 120
i: 100
end-i: 120
i: 104
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
at header: 120
(comment . ";;76: r10 <- 0x0")
(comment . ";;80: r15 <- r1, 0x8\n")
(comment . ";;84: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;100: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;108: r15 <- r1, 0x0\n")
(comment . ";;112: r4 <- 0x2")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 136; chunklet-end-i: 164
i: 120
end-i: 164
at header: 120
i: 136
end-i: 164
i: 140
end-i: 164
i: 144
end-i: 164
i: 148
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;136: r1 <- r1, r0")
(comment . ";;140: r15 <- r1, 0x8\n")
(comment . ";;144: r14 <- r15, r5")
(comment . ";;148: r4 <- r14, 0x0\n")
(comment . ";;152: r4 <- 0x7")
(comment . ";;160 b 24")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 176
i: 164
end-i: 176
i: 168
end-i: 176
i: 172
end-i: 176
i: 176
end-i: 176
i:176 HIT CHUNK END
(comment . ";;164: r7 <- r0, 0x68\n")
(comment . ";;168: r2 <- r7")
(comment . ";;172 b 36")
chunklet-i: 176; chunklet-start-i: 176; chunklet-end-i: 188
i: 176
end-i: 188
i: 176
end-i: 188
i: 180
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";;176: r7 <- r7, r8")
(comment . ";;180: r7 <- r0, 0x68\n")
(comment . ";;184: r14 <- r7, 0x0\n")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 212
i: 188
end-i: 212
i: 188
end-i: 212
i: 200
end-i: 212
i: 204
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;200: r14 <- r15, 0xD\n")
(comment . ";;204: r4 <- 0x2E")
(comment . ";;208: b r1, 0")
chunklet-i: 212; chunklet-start-i: 212; chunklet-end-i: 224
i: 212
end-i: 224
i: 212
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 224; chunklet-start-i: 228; chunklet-end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";; instruction 224 not included")
(comment . ";;228: r7 <- r0, 0x68\n")
(comment . ";;232 b -60")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 272
i: 236
end-i: 272
i: 236
end-i: 272
i: 240
end-i: 272
i: 244
end-i: 272
i: 248
end-i: 272
i: 252
end-i: 272
i: 256
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
at header: 272
(comment . ";;236: r9 <- 0x8")
(comment . ";;240: r15 <- r1, 0x8\n")
(comment . ";;244: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;252: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;268: b r6")
chunklet-i: 272; chunklet-start-i: 288; chunklet-end-i: 304
i: 272
end-i: 304
at header: 272
i: 288
end-i: 304
i: 292
end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;288: r1 <- r1, r0")
(comment . ";;292: r9 <- 0x4")
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300 b -228")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 336
i: 304
end-i: 336
i: 304
end-i: 336
i: 308
end-i: 336
i: 312
end-i: 336
i: 316
end-i: 336
i: 320
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
at header: 336
(comment . ";;304: r15 <- r1, 0x8\n")
(comment . ";;308: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;316: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;332: b r6")
chunklet-i: 336; chunklet-start-i: 352; chunklet-end-i: 372
i: 336
end-i: 372
at header: 336
i: 352
end-i: 372
i: 356
end-i: 372
i: 360
end-i: 372
i: 364
end-i: 372
i: 368
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";;352: r1 <- r1, r0")
(comment . ";;356: r10 <- 0x4")
(comment . ";;360: r15 <- r1, 0x8\n")
(comment . ";;368 b -312")
chunklet-i: 372; chunklet-start-i: 372; chunklet-end-i: 400
i: 372
end-i: 400
i: 372
end-i: 400
i: 376
end-i: 400
i: 380
end-i: 400
i: 384
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
at header: 400
(comment . ";;372: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;396: b r6")
chunklet-i: 400; chunklet-start-i: 416; chunklet-end-i: 424
i: 400
end-i: 424
at header: 400
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;416: r1 <- r1, r8")
(comment . ";;420 b -400")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 436
i: 424
end-i: 436
i: 424
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 436; chunklet-start-i: 440; chunklet-end-i: 444
i: 436
end-i: 444
i: 440
end-i: 444
i: 444
end-i: 444
i:444 HIT CHUNK END
(comment . ";; instruction 436 not included")
(comment . ";;440 b -428")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 60
instruction range for chunk: 60 68
instruction range for chunk: 68 76
instruction range for chunk: 76 120
instruction range for chunk: 136 164
instruction range for chunk: 164 176
instruction range for chunk: 176 188
instruction range for chunk: 188 212
instruction range for chunk: 212 224
instruction range for chunk: 228 236
instruction range for chunk: 236 272
instruction range for chunk: 288 304
instruction range for chunk: 304 336
instruction range for chunk: 352 372
instruction range for chunk: 372 400
instruction range for chunk: 416 424
instruction range for chunk: 424 436
instruction range for chunk: 440 444
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 408")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 348")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 60
i: 24
end-i: 60
i: 24
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;48: r10 <- r9, 0x5\n")
(comment . ";;52: r10 <- 0x1E")
(comment . ";;56 b 244")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 68
i: 60
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";;60: r10 <- 0x7")
(comment . ";;64 b 168")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;68: r9 <- r10, 0x8\n")
(comment . ";;72 b 160")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 120
i: 76
end-i: 120
i: 76
end-i: 120
i: 80
end-i: 120
i: 84
end-i: 120
i: 88
end-i: 120
i: 100
end-i: 120
i: 104
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
at header: 120
(comment . ";;76: r10 <- 0x0")
(comment . ";;80: r15 <- r1, 0x8\n")
(comment . ";;84: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;100: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;108: r15 <- r1, 0x0\n")
(comment . ";;112: r4 <- 0x2")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 136; chunklet-end-i: 164
i: 120
end-i: 164
at header: 120
i: 136
end-i: 164
i: 140
end-i: 164
i: 144
end-i: 164
i: 148
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;136: r1 <- r1, r0")
(comment . ";;140: r15 <- r1, 0x8\n")
(comment . ";;144: r14 <- r15, r5")
(comment . ";;148: r4 <- r14, 0x0\n")
(comment . ";;152: r4 <- 0x7")
(comment . ";;160 b 24")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 176
i: 164
end-i: 176
i: 168
end-i: 176
i: 172
end-i: 176
i: 176
end-i: 176
i:176 HIT CHUNK END
(comment . ";;164: r7 <- r0, 0x68\n")
(comment . ";;168: r2 <- r7")
(comment . ";;172 b 36")
chunklet-i: 176; chunklet-start-i: 176; chunklet-end-i: 188
i: 176
end-i: 188
i: 176
end-i: 188
i: 180
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";;176: r7 <- r7, r8")
(comment . ";;180: r7 <- r0, 0x68\n")
(comment . ";;184: r14 <- r7, 0x0\n")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 212
i: 188
end-i: 212
i: 188
end-i: 212
i: 200
end-i: 212
i: 204
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;200: r14 <- r15, 0xD\n")
(comment . ";;204: r4 <- 0x2E")
(comment . ";;208: b r1, 0")
chunklet-i: 212; chunklet-start-i: 212; chunklet-end-i: 224
i: 212
end-i: 224
i: 212
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 224; chunklet-start-i: 228; chunklet-end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";; instruction 224 not included")
(comment . ";;228: r7 <- r0, 0x68\n")
(comment . ";;232 b -60")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 272
i: 236
end-i: 272
i: 236
end-i: 272
i: 240
end-i: 272
i: 244
end-i: 272
i: 248
end-i: 272
i: 252
end-i: 272
i: 256
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
at header: 272
(comment . ";;236: r9 <- 0x8")
(comment . ";;240: r15 <- r1, 0x8\n")
(comment . ";;244: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;252: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;268: b r6")
chunklet-i: 272; chunklet-start-i: 288; chunklet-end-i: 304
i: 272
end-i: 304
at header: 272
i: 288
end-i: 304
i: 292
end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;288: r1 <- r1, r0")
(comment . ";;292: r9 <- 0x4")
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300 b -228")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 336
i: 304
end-i: 336
i: 304
end-i: 336
i: 308
end-i: 336
i: 312
end-i: 336
i: 316
end-i: 336
i: 320
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
at header: 336
(comment . ";;304: r15 <- r1, 0x8\n")
(comment . ";;308: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;316: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;332: b r6")
chunklet-i: 336; chunklet-start-i: 352; chunklet-end-i: 372
i: 336
end-i: 372
at header: 336
i: 352
end-i: 372
i: 356
end-i: 372
i: 360
end-i: 372
i: 364
end-i: 372
i: 368
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";;352: r1 <- r1, r0")
(comment . ";;356: r10 <- 0x4")
(comment . ";;360: r15 <- r1, 0x8\n")
(comment . ";;368 b -312")
chunklet-i: 372; chunklet-start-i: 372; chunklet-end-i: 400
i: 372
end-i: 400
i: 372
end-i: 400
i: 376
end-i: 400
i: 380
end-i: 400
i: 384
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
at header: 400
(comment . ";;372: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;396: b r6")
chunklet-i: 400; chunklet-start-i: 416; chunklet-end-i: 424
i: 400
end-i: 424
at header: 400
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;416: r1 <- r1, r8")
(comment . ";;420 b -400")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 436
i: 424
end-i: 436
i: 424
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 436; chunklet-start-i: 440; chunklet-end-i: 444
i: 436
end-i: 444
i: 440
end-i: 444
i: 444
end-i: 444
i:444 HIT CHUNK END
(comment . ";; instruction 436 not included")
(comment . ";;440 b -428")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 60
instruction range for chunk: 60 68
instruction range for chunk: 68 76
instruction range for chunk: 76 120
instruction range for chunk: 136 164
instruction range for chunk: 164 176
instruction range for chunk: 176 188
instruction range for chunk: 188 212
instruction range for chunk: 212 224
instruction range for chunk: 228 236
instruction range for chunk: 236 272
instruction range for chunk: 288 304
instruction range for chunk: 304 336
instruction range for chunk: 352 372
instruction range for chunk: 372 400
instruction range for chunk: 416 424
instruction range for chunk: 424 436
instruction range for chunk: 440 444
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 408")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 348")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 60
i: 24
end-i: 60
i: 24
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;48: r10 <- r9, 0x5\n")
(comment . ";;52: r10 <- 0x1E")
(comment . ";;56 b 244")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 68
i: 60
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";;60: r10 <- 0x7")
(comment . ";;64 b 168")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;68: r9 <- r10, 0x8\n")
(comment . ";;72 b 160")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 120
i: 76
end-i: 120
i: 76
end-i: 120
i: 80
end-i: 120
i: 84
end-i: 120
i: 88
end-i: 120
i: 100
end-i: 120
i: 104
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
at header: 120
(comment . ";;76: r10 <- 0x0")
(comment . ";;80: r15 <- r1, 0x8\n")
(comment . ";;84: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;100: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;108: r15 <- r1, 0x0\n")
(comment . ";;112: r4 <- 0x2")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 136; chunklet-end-i: 164
i: 120
end-i: 164
at header: 120
i: 136
end-i: 164
i: 140
end-i: 164
i: 144
end-i: 164
i: 148
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;136: r1 <- r1, r0")
(comment . ";;140: r15 <- r1, 0x8\n")
(comment . ";;144: r14 <- r15, r5")
(comment . ";;148: r4 <- r14, 0x0\n")
(comment . ";;152: r4 <- 0x7")
(comment . ";;160 b 24")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 176
i: 164
end-i: 176
i: 168
end-i: 176
i: 172
end-i: 176
i: 176
end-i: 176
i:176 HIT CHUNK END
(comment . ";;164: r7 <- r0, 0x68\n")
(comment . ";;168: r2 <- r7")
(comment . ";;172 b 36")
chunklet-i: 176; chunklet-start-i: 176; chunklet-end-i: 188
i: 176
end-i: 188
i: 176
end-i: 188
i: 180
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";;176: r7 <- r7, r8")
(comment . ";;180: r7 <- r0, 0x68\n")
(comment . ";;184: r14 <- r7, 0x0\n")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 212
i: 188
end-i: 212
i: 188
end-i: 212
i: 200
end-i: 212
i: 204
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;200: r14 <- r15, 0xD\n")
(comment . ";;204: r4 <- 0x2E")
(comment . ";;208: b r1, 0")
chunklet-i: 212; chunklet-start-i: 212; chunklet-end-i: 224
i: 212
end-i: 224
i: 212
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 224; chunklet-start-i: 228; chunklet-end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";; instruction 224 not included")
(comment . ";;228: r7 <- r0, 0x68\n")
(comment . ";;232 b -60")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 272
i: 236
end-i: 272
i: 236
end-i: 272
i: 240
end-i: 272
i: 244
end-i: 272
i: 248
end-i: 272
i: 252
end-i: 272
i: 256
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
at header: 272
(comment . ";;236: r9 <- 0x8")
(comment . ";;240: r15 <- r1, 0x8\n")
(comment . ";;244: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;252: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;268: b r6")
chunklet-i: 272; chunklet-start-i: 288; chunklet-end-i: 304
i: 272
end-i: 304
at header: 272
i: 288
end-i: 304
i: 292
end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;288: r1 <- r1, r0")
(comment . ";;292: r9 <- 0x4")
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300 b -228")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 336
i: 304
end-i: 336
i: 304
end-i: 336
i: 308
end-i: 336
i: 312
end-i: 336
i: 316
end-i: 336
i: 320
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
at header: 336
(comment . ";;304: r15 <- r1, 0x8\n")
(comment . ";;308: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;316: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;332: b r6")
chunklet-i: 336; chunklet-start-i: 352; chunklet-end-i: 372
i: 336
end-i: 372
at header: 336
i: 352
end-i: 372
i: 356
end-i: 372
i: 360
end-i: 372
i: 364
end-i: 372
i: 368
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";;352: r1 <- r1, r0")
(comment . ";;356: r10 <- 0x4")
(comment . ";;360: r15 <- r1, 0x8\n")
(comment . ";;368 b -312")
chunklet-i: 372; chunklet-start-i: 372; chunklet-end-i: 400
i: 372
end-i: 400
i: 372
end-i: 400
i: 376
end-i: 400
i: 380
end-i: 400
i: 384
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
at header: 400
(comment . ";;372: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;396: b r6")
chunklet-i: 400; chunklet-start-i: 416; chunklet-end-i: 424
i: 400
end-i: 424
at header: 400
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;416: r1 <- r1, r8")
(comment . ";;420 b -400")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 436
i: 424
end-i: 436
i: 424
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 436; chunklet-start-i: 440; chunklet-end-i: 444
i: 436
end-i: 444
i: 440
end-i: 444
i: 444
end-i: 444
i:444 HIT CHUNK END
(comment . ";; instruction 436 not included")
(comment . ";;440 b -428")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 156
instruction range for chunk: 156 168
instruction range for chunk: 168 180
instruction range for chunk: 180 204
instruction range for chunk: 204 216
instruction range for chunk: 220 228
instruction range for chunk: 228 264
instruction range for chunk: 280 296
instruction range for chunk: 296 328
instruction range for chunk: 344 364
instruction range for chunk: 364 392
instruction range for chunk: 408 416
instruction range for chunk: 416 428
instruction range for chunk: 432 436
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;0: r15 <- r0, 0x58\n")
(comment . ";;4: r1 <- r15")
(comment . ";;8 b 404")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r3 <- r3, 0x1\n")
(comment . ";;16 b 344")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 56
i: 20
end-i: 56
i: 20
end-i: 56
i: 32
end-i: 56
i: 44
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;44: r10 <- r9, 0x5\n")
(comment . ";;48: r10 <- 0x1E")
(comment . ";;52 b 240")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r10 <- 0x7")
(comment . ";;60 b 164")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r10, 0x8\n")
(comment . ";;68 b 156")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r15 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 156
i: 112
end-i: 156
at header: 112
i: 128
end-i: 156
i: 132
end-i: 156
i: 136
end-i: 156
i: 140
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r15 <- r1, 0x8\n")
(comment . ";;136: r14 <- r15, r5")
(comment . ";;140: r4 <- r14, 0x0\n")
(comment . ";;144: r4 <- 0x7")
(comment . ";;152 b 24")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 168
i: 156
end-i: 168
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;156: r7 <- r0, 0x68\n")
(comment . ";;160: r2 <- r7")
(comment . ";;164 b 36")
chunklet-i: 168; chunklet-start-i: 168; chunklet-end-i: 180
i: 168
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";;168: r7 <- r7, r8")
(comment . ";;172: r7 <- r0, 0x68\n")
(comment . ";;176: r14 <- r7, 0x0\n")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 204
i: 180
end-i: 204
i: 180
end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;192: r14 <- r15, 0xD\n")
(comment . ";;196: r4 <- 0x2E")
(comment . ";;200: b r1, 0")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 216
i: 204
end-i: 216
i: 204
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 216; chunklet-start-i: 220; chunklet-end-i: 228
i: 216
end-i: 228
i: 220
end-i: 228
i: 224
end-i: 228
i: 228
end-i: 228
i:228 HIT CHUNK END
(comment . ";; instruction 216 not included")
(comment . ";;220: r7 <- r0, 0x68\n")
(comment . ";;224 b -60")
chunklet-i: 228; chunklet-start-i: 228; chunklet-end-i: 264
i: 228
end-i: 264
i: 228
end-i: 264
i: 232
end-i: 264
i: 236
end-i: 264
i: 240
end-i: 264
i: 244
end-i: 264
i: 248
end-i: 264
i: 260
end-i: 264
i: 264
end-i: 264
at header: 264
(comment . ";;228: r9 <- 0x8")
(comment . ";;232: r15 <- r1, 0x8\n")
(comment . ";;236: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;244: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;260: b r6")
chunklet-i: 264; chunklet-start-i: 280; chunklet-end-i: 296
i: 264
end-i: 296
at header: 264
i: 280
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";;280: r1 <- r1, r0")
(comment . ";;284: r9 <- 0x4")
(comment . ";;288: r15 <- r1, 0x8\n")
(comment . ";;292 b -224")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 328
i: 296
end-i: 328
i: 296
end-i: 328
i: 300
end-i: 328
i: 304
end-i: 328
i: 308
end-i: 328
i: 312
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
at header: 328
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;308: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;324: b r6")
chunklet-i: 328; chunklet-start-i: 344; chunklet-end-i: 364
i: 328
end-i: 364
at header: 328
i: 344
end-i: 364
i: 348
end-i: 364
i: 352
end-i: 364
i: 356
end-i: 364
i: 360
end-i: 364
i: 364
end-i: 364
i:364 HIT CHUNK END
(comment . ";;344: r1 <- r1, r0")
(comment . ";;348: r10 <- 0x4")
(comment . ";;352: r15 <- r1, 0x8\n")
(comment . ";;360 b -308")
chunklet-i: 364; chunklet-start-i: 364; chunklet-end-i: 392
i: 364
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;364: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 416
i: 392
end-i: 416
at header: 392
i: 408
end-i: 416
i: 412
end-i: 416
i: 416
end-i: 416
i:416 HIT CHUNK END
(comment . ";;408: r1 <- r1, r8")
(comment . ";;412 b -396")
chunklet-i: 416; chunklet-start-i: 416; chunklet-end-i: 428
i: 416
end-i: 428
i: 416
end-i: 428
i: 428
end-i: 428
i:428 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 428; chunklet-start-i: 432; chunklet-end-i: 436
i: 428
end-i: 436
i: 432
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; instruction 428 not included")
(comment . ";;432 b -424")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 56
instruction range for chunk: 56 64
instruction range for chunk: 64 72
instruction range for chunk: 72 112
instruction range for chunk: 128 156
instruction range for chunk: 156 168
instruction range for chunk: 168 180
instruction range for chunk: 180 204
instruction range for chunk: 204 216
instruction range for chunk: 220 228
instruction range for chunk: 228 264
instruction range for chunk: 280 296
instruction range for chunk: 296 328
instruction range for chunk: 344 364
instruction range for chunk: 364 392
instruction range for chunk: 408 416
instruction range for chunk: 416 428
instruction range for chunk: 432 436
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;0: r15 <- r0, 0x58\n")
(comment . ";;4: r1 <- r15")
(comment . ";;8 b 404")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r3 <- r3, 0x1\n")
(comment . ";;16 b 344")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 56
i: 20
end-i: 56
i: 20
end-i: 56
i: 32
end-i: 56
i: 44
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;44: r10 <- r9, 0x5\n")
(comment . ";;48: r10 <- 0x1E")
(comment . ";;52 b 240")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 64
i: 56
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;56: r10 <- 0x7")
(comment . ";;60 b 164")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r9 <- r10, 0x8\n")
(comment . ";;68 b 156")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 112
i: 72
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;72: r15 <- r1, 0x8\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x1")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 156
i: 112
end-i: 156
at header: 112
i: 128
end-i: 156
i: 132
end-i: 156
i: 136
end-i: 156
i: 140
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r15 <- r1, 0x8\n")
(comment . ";;136: r14 <- r15, r5")
(comment . ";;140: r4 <- r14, 0x0\n")
(comment . ";;144: r4 <- 0x7")
(comment . ";;152 b 24")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 168
i: 156
end-i: 168
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;156: r7 <- r0, 0x68\n")
(comment . ";;160: r2 <- r7")
(comment . ";;164 b 36")
chunklet-i: 168; chunklet-start-i: 168; chunklet-end-i: 180
i: 168
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";;168: r7 <- r7, r8")
(comment . ";;172: r7 <- r0, 0x68\n")
(comment . ";;176: r14 <- r7, 0x0\n")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 204
i: 180
end-i: 204
i: 180
end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;192: r14 <- r15, 0xD\n")
(comment . ";;196: r4 <- 0x2E")
(comment . ";;200: b r1, 0")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 216
i: 204
end-i: 216
i: 204
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 216; chunklet-start-i: 220; chunklet-end-i: 228
i: 216
end-i: 228
i: 220
end-i: 228
i: 224
end-i: 228
i: 228
end-i: 228
i:228 HIT CHUNK END
(comment . ";; instruction 216 not included")
(comment . ";;220: r7 <- r0, 0x68\n")
(comment . ";;224 b -60")
chunklet-i: 228; chunklet-start-i: 228; chunklet-end-i: 264
i: 228
end-i: 264
i: 228
end-i: 264
i: 232
end-i: 264
i: 236
end-i: 264
i: 240
end-i: 264
i: 244
end-i: 264
i: 248
end-i: 264
i: 260
end-i: 264
i: 264
end-i: 264
at header: 264
(comment . ";;228: r9 <- 0x8")
(comment . ";;232: r15 <- r1, 0x8\n")
(comment . ";;236: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;244: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;260: b r6")
chunklet-i: 264; chunklet-start-i: 280; chunklet-end-i: 296
i: 264
end-i: 296
at header: 264
i: 280
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";;280: r1 <- r1, r0")
(comment . ";;284: r9 <- 0x4")
(comment . ";;288: r15 <- r1, 0x8\n")
(comment . ";;292 b -224")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 328
i: 296
end-i: 328
i: 296
end-i: 328
i: 300
end-i: 328
i: 304
end-i: 328
i: 308
end-i: 328
i: 312
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
at header: 328
(comment . ";;296: r15 <- r1, 0x8\n")
(comment . ";;300: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;308: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;324: b r6")
chunklet-i: 328; chunklet-start-i: 344; chunklet-end-i: 364
i: 328
end-i: 364
at header: 328
i: 344
end-i: 364
i: 348
end-i: 364
i: 352
end-i: 364
i: 356
end-i: 364
i: 360
end-i: 364
i: 364
end-i: 364
i:364 HIT CHUNK END
(comment . ";;344: r1 <- r1, r0")
(comment . ";;348: r10 <- 0x4")
(comment . ";;352: r15 <- r1, 0x8\n")
(comment . ";;360 b -308")
chunklet-i: 364; chunklet-start-i: 364; chunklet-end-i: 392
i: 364
end-i: 392
i: 364
end-i: 392
i: 368
end-i: 392
i: 372
end-i: 392
i: 376
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
at header: 392
(comment . ";;364: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;388: b r6")
chunklet-i: 392; chunklet-start-i: 408; chunklet-end-i: 416
i: 392
end-i: 416
at header: 392
i: 408
end-i: 416
i: 412
end-i: 416
i: 416
end-i: 416
i:416 HIT CHUNK END
(comment . ";;408: r1 <- r1, r8")
(comment . ";;412 b -396")
chunklet-i: 416; chunklet-start-i: 416; chunklet-end-i: 428
i: 416
end-i: 428
i: 416
end-i: 428
i: 428
end-i: 428
i:428 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 428; chunklet-start-i: 432; chunklet-end-i: 436
i: 428
end-i: 436
i: 432
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";; instruction 428 not included")
(comment . ";;432 b -424")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: fit
instruction range for chunk: 0 12
instruction range for chunk: 12 44
instruction range for chunk: 44 48
instruction range for chunk: 48 60
instruction range for chunk: 60 80
instruction range for chunk: 80 92
instruction range for chunk: 92 104
instruction range for chunk: 104 116
instruction range for chunk: 116 124
instruction range for chunk: 124 148
instruction range for chunk: 148 152
instruction range for chunk: 152 164
instruction range for chunk: 164 184
instruction range for chunk: 184 196
instruction range for chunk: 196 216
instruction range for chunk: 216 236
instruction range for chunk: 236 248
instruction range for chunk: 248 264
instruction range for chunk: 264 288
instruction range for chunk: 288 300
instruction range for chunk: 300 308
instruction range for chunk: 308 320
instruction range for chunk: 320 340
instruction range for chunk: 340 352
instruction range for chunk: 352 368
instruction range for chunk: 368 376
instruction range for chunk: 376 384
instruction range for chunk: 384 392
instruction range for chunk: 392 400
instruction range for chunk: 400 448
instruction range for chunk: 464 484
instruction range for chunk: 484 528
instruction range for chunk: 544 568
instruction range for chunk: 568 580
instruction range for chunk: 580 588
instruction range for chunk: 588 596
instruction range for chunk: 596 604
instruction range for chunk: 604 612
instruction range for chunk: 612 648
instruction range for chunk: 664 676
instruction range for chunk: 676 700
instruction range for chunk: 700 720
instruction range for chunk: 720 728
instruction range for chunk: 728 776
instruction range for chunk: 792 816
instruction range for chunk: 816 872
instruction range for chunk: 888 920
instruction range for chunk: 920 928
instruction range for chunk: 928 976
instruction range for chunk: 992 1020
instruction range for chunk: 1020 1064
instruction range for chunk: 1080 1112
instruction range for chunk: 1112 1132
instruction range for chunk: 1132 1152
instruction range for chunk: 1152 1160
instruction range for chunk: 1160 1208
instruction range for chunk: 1224 1252
instruction range for chunk: 1252 1296
instruction range for chunk: 1312 1340
instruction range for chunk: 1340 1348
instruction range for chunk: 1348 1392
instruction range for chunk: 1408 1428
instruction range for chunk: 1428 1480
instruction range for chunk: 1496 1528
instruction range for chunk: 1528 1532
instruction range for chunk: 1532 1552
instruction range for chunk: 1552 1560
instruction range for chunk: 1560 1600
instruction range for chunk: 1616 1636
instruction range for chunk: 1636 1672
instruction range for chunk: 1688 1708
instruction range for chunk: 1708 1724
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x2")
(comment . ";;8 b 1696")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;12: r15 <- 0x9")
(comment . ";;16: r13 <- 0xA")
(comment . ";; literal r9")
(comment . ";;32: r14 <- r9, 0x5\n")
(comment . ";;36: r14 <- 0x1E")
(comment . ";;40 b 1508")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;44: r9 <- 0xE")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 60
i: 48
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;48: r14 <- r9, r7")
(comment . ";;52: r14 <- 0x7")
(comment . ";;56 b 1472")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 80
i: 60
end-i: 80
i: 64
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;60: r12 <- r9, 0x1\n")
(comment . ";;64: r14 <- r12, r1")
(comment . ";;68: r14 <- r14, r8")
(comment . ";;72: r15 <- r14")
(comment . ";;76 b 1452")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;80: r14 <- r15, r12")
(comment . ";;84: r14 <- 0x7")
(comment . ";;88 b 1440")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;92: r14 <- r15, r9")
(comment . ";;96: r12 <- r9, r14")
(comment . ";;100: r4 <- 0x0")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 116
i: 104
end-i: 116
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r14 <- r4, r12")
(comment . ";;108: r14 <- 0x7")
(comment . ";;112 b 1224")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;116: r4 <- r12")
(comment . ";;120 b 444")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 148
i: 124
end-i: 148
i: 124
end-i: 148
i: 136
end-i: 148
i: 140
end-i: 148
i: 144
end-i: 148
i: 148
end-i: 148
i:148 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;136: r14 <- r9, 0x5\n")
(comment . ";;140: r14 <- 0x1E")
(comment . ";;144 b 1004")
chunklet-i: 148; chunklet-start-i: 148; chunklet-end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;148: r9 <- 0xE")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 164
i: 152
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;152: r14 <- r9, r7")
(comment . ";;156: r14 <- 0x7")
(comment . ";;160 b 968")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 184
i: 164
end-i: 184
i: 168
end-i: 184
i: 172
end-i: 184
i: 176
end-i: 184
i: 180
end-i: 184
i: 184
end-i: 184
i:184 HIT CHUNK END
(comment . ";;164: r11 <- r9, 0x1\n")
(comment . ";;168: r14 <- r11, r1")
(comment . ";;172: r14 <- r14, r8")
(comment . ";;176: r15 <- r14")
(comment . ";;180 b 948")
chunklet-i: 184; chunklet-start-i: 184; chunklet-end-i: 196
i: 184
end-i: 196
i: 188
end-i: 196
i: 192
end-i: 196
i: 196
end-i: 196
i:196 HIT CHUNK END
(comment . ";;184: r14 <- r15, r11")
(comment . ";;188: r14 <- 0x7")
(comment . ";;192 b 936")
chunklet-i: 196; chunklet-start-i: 196; chunklet-end-i: 216
i: 196
end-i: 216
i: 200
end-i: 216
i: 204
end-i: 216
i: 208
end-i: 216
i: 212
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";;196: r14 <- r15, r9")
(comment . ";;200: r9 <- r9, r14")
(comment . ";;204: r14 <- r9, r7")
(comment . ";;208: r14 <- 0x7")
(comment . ";;212 b 896")
chunklet-i: 216; chunklet-start-i: 216; chunklet-end-i: 236
i: 216
end-i: 236
i: 220
end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";;216: r11 <- r9, 0x1\n")
(comment . ";;220: r14 <- r11, r1")
(comment . ";;224: r14 <- r14, r8")
(comment . ";;228: r4 <- r14")
(comment . ";;232 b 876")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 248
i: 236
end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;236: r14 <- r4, r11")
(comment . ";;240: r14 <- 0x7")
(comment . ";;244 b 864")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 264
i: 248
end-i: 264
i: 252
end-i: 264
i: 256
end-i: 264
i: 260
end-i: 264
i: 264
end-i: 264
i:264 HIT CHUNK END
(comment . ";;248: r14 <- r4, r9")
(comment . ";;252: r14 <- r9, r14")
(comment . ";;256: r14 <- 0x6")
(comment . ";;260 b 104")
chunklet-i: 264; chunklet-start-i: 264; chunklet-end-i: 288
i: 264
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
i:288 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;276: r14 <- r9, 0x5\n")
(comment . ";;280: r14 <- 0x1E")
(comment . ";;284 b 632")
chunklet-i: 288; chunklet-start-i: 288; chunklet-end-i: 300
i: 288
end-i: 300
i: 288
end-i: 300
i: 292
end-i: 300
i: 296
end-i: 300
i: 300
end-i: 300
i:300 HIT CHUNK END
(comment . ";;288: r11 <- r13, r4")
(comment . ";;292: r11 <- 0x7")
(comment . ";;296 b 420")
chunklet-i: 300; chunklet-start-i: 300; chunklet-end-i: 308
i: 300
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;300: r10 <- r13, r4")
(comment . ";;304 b 412")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 320
i: 308
end-i: 320
i: 308
end-i: 320
i: 312
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
i:320 HIT CHUNK END
(comment . ";;308: r11 <- r14, r7")
(comment . ";;312: r11 <- 0x7")
(comment . ";;316 b 380")
chunklet-i: 320; chunklet-start-i: 320; chunklet-end-i: 340
i: 320
end-i: 340
i: 324
end-i: 340
i: 328
end-i: 340
i: 332
end-i: 340
i: 336
end-i: 340
i: 340
end-i: 340
i:340 HIT CHUNK END
(comment . ";;320: r9 <- r14, 0x1\n")
(comment . ";;324: r11 <- r9, r1")
(comment . ";;328: r11 <- r11, r8")
(comment . ";;332: r10 <- r11")
(comment . ";;336 b 360")
chunklet-i: 340; chunklet-start-i: 340; chunklet-end-i: 352
i: 340
end-i: 352
i: 344
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";;340: r11 <- r10, r9")
(comment . ";;344: r11 <- 0x7")
(comment . ";;348 b 348")
chunklet-i: 352; chunklet-start-i: 352; chunklet-end-i: 368
i: 352
end-i: 368
i: 356
end-i: 368
i: 360
end-i: 368
i: 364
end-i: 368
i: 368
end-i: 368
i:368 HIT CHUNK END
(comment . ";;352: r11 <- r10, r9")
(comment . ";;356: r14 <- r14, r11")
(comment . ";;360: r14 <- 0x6")
(comment . ";;364 b 200")
chunklet-i: 368; chunklet-start-i: 368; chunklet-end-i: 376
i: 368
end-i: 376
i: 368
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
i:376 HIT CHUNK END
(comment . ";;368: r3 <- r3, 0x1\n")
(comment . ";;372 b 108")
chunklet-i: 376; chunklet-start-i: 376; chunklet-end-i: 384
i: 376
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
i:384 HIT CHUNK END
(comment . ";;376: r4 <- 0x7")
(comment . ";;380 b 16")
chunklet-i: 384; chunklet-start-i: 384; chunklet-end-i: 392
i: 384
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
i:392 HIT CHUNK END
(comment . ";;384: r14 <- r4, 0x8\n")
(comment . ";;388 b 8")
chunklet-i: 392; chunklet-start-i: 392; chunklet-end-i: 400
i: 392
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
i:400 HIT CHUNK END
(comment . ";;392: r4 <- 0xE")
(comment . ";;396 b -296")
chunklet-i: 400; chunklet-start-i: 400; chunklet-end-i: 448
i: 400
end-i: 448
i: 400
end-i: 448
i: 404
end-i: 448
i: 408
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 420
end-i: 448
i: 424
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;400: r9 <- 0x8")
(comment . ";;404: r10 <- 0x4")
(comment . ";;408: r15 <- r1, 0x8\n")
(comment . ";;412: r13 <- r1, 0x10\n")
(comment . ";;416: r12 <- r1, 0x18\n")
(comment . ";;420: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;444: b r6")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 484
i: 448
end-i: 484
at header: 448
i: 464
end-i: 484
i: 468
end-i: 484
i: 472
end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;464: r1 <- r1, r0")
(comment . ";;468: r15 <- r1, 0x8\n")
(comment . ";;472: r13 <- r1, 0x10\n")
(comment . ";;476: r12 <- r1, 0x18\n")
(comment . ";;480 b -380")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 528
i: 484
end-i: 528
i: 484
end-i: 528
i: 488
end-i: 528
i: 492
end-i: 528
i: 496
end-i: 528
i: 500
end-i: 528
i: 504
end-i: 528
i: 508
end-i: 528
i: 512
end-i: 528
i: 524
end-i: 528
i: 528
end-i: 528
at header: 528
(comment . ";;484: r15 <- r1, 0x8\n")
(comment . ";;488: r13 <- r1, 0x10\n")
(comment . ";;492: r12 <- r1, 0x18\n")
(comment . ";;496: r4 <- r1, 0x20\n")
(comment . ";;500: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;508: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;524: b r6")
chunklet-i: 528; chunklet-start-i: 544; chunklet-end-i: 568
i: 528
end-i: 568
at header: 528
i: 544
end-i: 568
i: 548
end-i: 568
i: 552
end-i: 568
i: 556
end-i: 568
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;544: r1 <- r1, r8")
(comment . ";;548: r15 <- r1, 0x8\n")
(comment . ";;552: r13 <- r1, 0x10\n")
(comment . ";;556: r12 <- r1, 0x18\n")
(comment . ";;560: r4 <- r1, 0x20\n")
(comment . ";;564 b -192")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 580
i: 568
end-i: 580
i: 568
end-i: 580
i: 572
end-i: 580
i: 576
end-i: 580
i: 580
end-i: 580
i:580 HIT CHUNK END
(comment . ";;568: r15 <- r4, r12")
(comment . ";;572: r15 <- 0x7")
(comment . ";;576 b 24")
chunklet-i: 580; chunklet-start-i: 580; chunklet-end-i: 588
i: 580
end-i: 588
i: 584
end-i: 588
i: 588
end-i: 588
i:588 HIT CHUNK END
(comment . ";;580: r4 <- r12")
(comment . ";;584 b 8")
chunklet-i: 588; chunklet-start-i: 588; chunklet-end-i: 596
i: 588
end-i: 596
i: 592
end-i: 596
i: 596
end-i: 596
i:596 HIT CHUNK END
(comment . ";;588: r4 <- 0xE")
(comment . ";;592: b r1, 0")
chunklet-i: 596; chunklet-start-i: 596; chunklet-end-i: 604
i: 596
end-i: 604
i: 596
end-i: 604
i: 600
end-i: 604
i: 604
end-i: 604
i:604 HIT CHUNK END
(comment . ";;596: r4 <- 0x6")
(comment . ";;600: b r1, 0")
chunklet-i: 604; chunklet-start-i: 604; chunklet-end-i: 612
i: 604
end-i: 612
i: 604
end-i: 612
i: 608
end-i: 612
i: 612
end-i: 612
i:612 HIT CHUNK END
(comment . ";;604: r3 <- r3, 0x1\n")
(comment . ";;608 b 64")
chunklet-i: 612; chunklet-start-i: 612; chunklet-end-i: 648
i: 612
end-i: 648
i: 616
end-i: 648
i: 620
end-i: 648
i: 624
end-i: 648
i: 628
end-i: 648
i: 632
end-i: 648
i: 644
end-i: 648
i: 648
end-i: 648
at header: 648
(comment . ";;612: r12 <- r1, 0x18\n")
(comment . ";;616: r4 <- r1, 0x20\n")
(comment . ";;620: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;628: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;644: b r6")
chunklet-i: 648; chunklet-start-i: 664; chunklet-end-i: 676
i: 648
end-i: 676
at header: 648
i: 664
end-i: 676
i: 668
end-i: 676
i: 672
end-i: 676
i: 676
end-i: 676
i:676 HIT CHUNK END
(comment . ";;664: r1 <- r1, r8")
(comment . ";;668: r12 <- r1, 0x18\n")
(comment . ";;672: r4 <- r1, 0x20\n")
chunklet-i: 676; chunklet-start-i: 676; chunklet-end-i: 700
i: 676
end-i: 700
i: 676
end-i: 700
i: 680
end-i: 700
i: 684
end-i: 700
i: 696
end-i: 700
i: 700
end-i: 700
i:700 HIT CHUNK END
(comment . ";;676: r9 <- 0x4")
(comment . ";;680: r10 <- 0xC")
(comment . ";; literal r6")
(comment . ";;696: b r6")
chunklet-i: 700; chunklet-start-i: 700; chunklet-end-i: 720
i: 700
end-i: 720
i: 700
end-i: 720
i: 704
end-i: 720
i: 716
end-i: 720
i: 720
end-i: 720
i:720 HIT CHUNK END
(comment . ";;700: r9 <- 0xE")
(comment . ";; literal r6")
(comment . ";;716: b r6")
chunklet-i: 720; chunklet-start-i: 720; chunklet-end-i: 728
i: 720
end-i: 728
i: 720
end-i: 728
i: 724
end-i: 728
i: 728
end-i: 728
i:728 HIT CHUNK END
(comment . ";;720: r3 <- r3, 0x1\n")
(comment . ";;724 b 88")
chunklet-i: 728; chunklet-start-i: 728; chunklet-end-i: 776
i: 728
end-i: 776
i: 732
end-i: 776
i: 736
end-i: 776
i: 740
end-i: 776
i: 744
end-i: 776
i: 748
end-i: 776
i: 752
end-i: 776
i: 756
end-i: 776
i: 760
end-i: 776
i: 772
end-i: 776
i: 776
end-i: 776
at header: 776
(comment . ";;728: r15 <- r1, 0x8\n")
(comment . ";;732: r13 <- r1, 0x10\n")
(comment . ";;736: r12 <- r1, 0x18\n")
(comment . ";;740: r4 <- r1, 0x20\n")
(comment . ";;744: r14 <- r1, 0x28\n")
(comment . ";;748: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;756: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;772: b r6")
chunklet-i: 776; chunklet-start-i: 792; chunklet-end-i: 816
i: 776
end-i: 816
at header: 776
i: 792
end-i: 816
i: 796
end-i: 816
i: 800
end-i: 816
i: 804
end-i: 816
i: 808
end-i: 816
i: 812
end-i: 816
i: 816
end-i: 816
i:816 HIT CHUNK END
(comment . ";;792: r1 <- r1, r0")
(comment . ";;796: r15 <- r1, 0x8\n")
(comment . ";;800: r13 <- r1, 0x10\n")
(comment . ";;804: r12 <- r1, 0x18\n")
(comment . ";;808: r4 <- r1, 0x20\n")
(comment . ";;812: r14 <- r1, 0x28\n")
chunklet-i: 816; chunklet-start-i: 816; chunklet-end-i: 872
i: 816
end-i: 872
i: 816
end-i: 872
i: 820
end-i: 872
i: 824
end-i: 872
i: 828
end-i: 872
i: 832
end-i: 872
i: 836
end-i: 872
i: 840
end-i: 872
i: 844
end-i: 872
i: 848
end-i: 872
i: 852
end-i: 872
i: 856
end-i: 872
i: 868
end-i: 872
i: 872
end-i: 872
at header: 872
(comment . ";;816: r9 <- 0xD")
(comment . ";;820: r10 <- 0x4")
(comment . ";;824: r15 <- r1, 0x8\n")
(comment . ";;828: r13 <- r1, 0x10\n")
(comment . ";;832: r12 <- r1, 0x18\n")
(comment . ";;836: r4 <- r1, 0x20\n")
(comment . ";;840: r14 <- r1, 0x28\n")
(comment . ";;844: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;852: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;868: b r6")
chunklet-i: 872; chunklet-start-i: 888; chunklet-end-i: 920
i: 872
end-i: 920
at header: 872
i: 888
end-i: 920
i: 892
end-i: 920
i: 896
end-i: 920
i: 900
end-i: 920
i: 904
end-i: 920
i: 908
end-i: 920
i: 912
end-i: 920
i: 916
end-i: 920
i: 920
end-i: 920
i:920 HIT CHUNK END
(comment . ";;888: r1 <- r1, r0")
(comment . ";;892: r10 <- 0x4")
(comment . ";;896: r15 <- r1, 0x8\n")
(comment . ";;900: r13 <- r1, 0x10\n")
(comment . ";;904: r12 <- r1, 0x18\n")
(comment . ";;908: r4 <- r1, 0x20\n")
(comment . ";;912: r14 <- r1, 0x28\n")
(comment . ";;916 b -612")
chunklet-i: 920; chunklet-start-i: 920; chunklet-end-i: 928
i: 920
end-i: 928
i: 920
end-i: 928
i: 924
end-i: 928
i: 928
end-i: 928
i:928 HIT CHUNK END
(comment . ";;920: r3 <- r3, 0x1\n")
(comment . ";;924 b 92")
chunklet-i: 928; chunklet-start-i: 928; chunklet-end-i: 976
i: 928
end-i: 976
i: 932
end-i: 976
i: 936
end-i: 976
i: 940
end-i: 976
i: 944
end-i: 976
i: 948
end-i: 976
i: 952
end-i: 976
i: 956
end-i: 976
i: 960
end-i: 976
i: 972
end-i: 976
i: 976
end-i: 976
at header: 976
(comment . ";;928: r15 <- r1, 0x8\n")
(comment . ";;932: r13 <- r1, 0x10\n")
(comment . ";;936: r12 <- r1, 0x18\n")
(comment . ";;940: r4 <- r1, 0x20\n")
(comment . ";;944: r9 <- r1, 0x28\n")
(comment . ";;948: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;956: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;972: b r6")
chunklet-i: 976; chunklet-start-i: 992; chunklet-end-i: 1020
i: 976
end-i: 1020
at header: 976
i: 992
end-i: 1020
i: 996
end-i: 1020
i: 1000
end-i: 1020
i: 1004
end-i: 1020
i: 1008
end-i: 1020
i: 1012
end-i: 1020
i: 1016
end-i: 1020
i: 1020
end-i: 1020
i:1020 HIT CHUNK END
(comment . ";;996: r1 <- r1, r0")
(comment . ";;1000: r15 <- r1, 0x8\n")
(comment . ";;1004: r13 <- r1, 0x10\n")
(comment . ";;1008: r12 <- r1, 0x18\n")
(comment . ";;1012: r4 <- r1, 0x20\n")
(comment . ";;1016: r9 <- r1, 0x28\n")
chunklet-i: 1020; chunklet-start-i: 1020; chunklet-end-i: 1064
i: 1020
end-i: 1064
i: 1020
end-i: 1064
i: 1024
end-i: 1064
i: 1028
end-i: 1064
i: 1032
end-i: 1064
i: 1036
end-i: 1064
i: 1040
end-i: 1064
i: 1044
end-i: 1064
i: 1048
end-i: 1064
i: 1060
end-i: 1064
i: 1064
end-i: 1064
at header: 1064
(comment . ";;1020: r15 <- r1, 0x8\n")
(comment . ";;1024: r13 <- r1, 0x10\n")
(comment . ";;1028: r12 <- r1, 0x18\n")
(comment . ";;1032: r4 <- r1, 0x20\n")
(comment . ";;1036: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1044: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1060: b r6")
chunklet-i: 1064; chunklet-start-i: 1080; chunklet-end-i: 1112
i: 1064
end-i: 1112
at header: 1064
i: 1080
end-i: 1112
i: 1084
end-i: 1112
i: 1088
end-i: 1112
i: 1092
end-i: 1112
i: 1096
end-i: 1112
i: 1100
end-i: 1112
i: 1104
end-i: 1112
i: 1108
end-i: 1112
i: 1112
end-i: 1112
i:1112 HIT CHUNK END
(comment . ";;1080: r1 <- r1, r8")
(comment . ";;1084: r14 <- 0x4")
(comment . ";;1088: r15 <- r1, 0x8\n")
(comment . ";;1092: r13 <- r1, 0x10\n")
(comment . ";;1096: r12 <- r1, 0x18\n")
(comment . ";;1100: r4 <- r1, 0x20\n")
(comment . ";;1108 b -824")
chunklet-i: 1112; chunklet-start-i: 1112; chunklet-end-i: 1132
i: 1112
end-i: 1132
i: 1112
end-i: 1132
i: 1116
end-i: 1132
i: 1128
end-i: 1132
i: 1132
end-i: 1132
i:1132 HIT CHUNK END
(comment . ";;1112: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1128: b r6")
chunklet-i: 1132; chunklet-start-i: 1132; chunklet-end-i: 1152
i: 1132
end-i: 1152
i: 1132
end-i: 1152
i: 1136
end-i: 1152
i: 1148
end-i: 1152
i: 1152
end-i: 1152
i:1152 HIT CHUNK END
(comment . ";;1132: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1148: b r6")
chunklet-i: 1152; chunklet-start-i: 1152; chunklet-end-i: 1160
i: 1152
end-i: 1160
i: 1152
end-i: 1160
i: 1156
end-i: 1160
i: 1160
end-i: 1160
i:1160 HIT CHUNK END
(comment . ";;1152: r3 <- r3, 0x1\n")
(comment . ";;1156 b 92")
chunklet-i: 1160; chunklet-start-i: 1160; chunklet-end-i: 1208
i: 1160
end-i: 1208
i: 1164
end-i: 1208
i: 1168
end-i: 1208
i: 1172
end-i: 1208
i: 1176
end-i: 1208
i: 1180
end-i: 1208
i: 1184
end-i: 1208
i: 1188
end-i: 1208
i: 1192
end-i: 1208
i: 1204
end-i: 1208
i: 1208
end-i: 1208
at header: 1208
(comment . ";;1160: r15 <- r1, 0x8\n")
(comment . ";;1164: r13 <- r1, 0x10\n")
(comment . ";;1168: r12 <- r1, 0x18\n")
(comment . ";;1172: r4 <- r1, 0x20\n")
(comment . ";;1176: r9 <- r1, 0x28\n")
(comment . ";;1180: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1188: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1204: b r6")
chunklet-i: 1208; chunklet-start-i: 1224; chunklet-end-i: 1252
i: 1208
end-i: 1252
at header: 1208
i: 1224
end-i: 1252
i: 1228
end-i: 1252
i: 1232
end-i: 1252
i: 1236
end-i: 1252
i: 1240
end-i: 1252
i: 1244
end-i: 1252
i: 1248
end-i: 1252
i: 1252
end-i: 1252
i:1252 HIT CHUNK END
(comment . ";;1228: r1 <- r1, r0")
(comment . ";;1232: r15 <- r1, 0x8\n")
(comment . ";;1236: r13 <- r1, 0x10\n")
(comment . ";;1240: r12 <- r1, 0x18\n")
(comment . ";;1244: r4 <- r1, 0x20\n")
(comment . ";;1248: r9 <- r1, 0x28\n")
chunklet-i: 1252; chunklet-start-i: 1252; chunklet-end-i: 1296
i: 1252
end-i: 1296
i: 1252
end-i: 1296
i: 1256
end-i: 1296
i: 1260
end-i: 1296
i: 1264
end-i: 1296
i: 1268
end-i: 1296
i: 1272
end-i: 1296
i: 1276
end-i: 1296
i: 1280
end-i: 1296
i: 1292
end-i: 1296
i: 1296
end-i: 1296
at header: 1296
(comment . ";;1252: r15 <- r1, 0x8\n")
(comment . ";;1256: r13 <- r1, 0x10\n")
(comment . ";;1260: r12 <- r1, 0x18\n")
(comment . ";;1264: r4 <- r1, 0x20\n")
(comment . ";;1268: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1276: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1292: b r6")
chunklet-i: 1296; chunklet-start-i: 1312; chunklet-end-i: 1340
i: 1296
end-i: 1340
at header: 1296
i: 1312
end-i: 1340
i: 1316
end-i: 1340
i: 1320
end-i: 1340
i: 1324
end-i: 1340
i: 1328
end-i: 1340
i: 1332
end-i: 1340
i: 1336
end-i: 1340
i: 1340
end-i: 1340
i:1340 HIT CHUNK END
(comment . ";;1312: r1 <- r1, r8")
(comment . ";;1316: r9 <- 0x4")
(comment . ";;1320: r15 <- r1, 0x8\n")
(comment . ";;1324: r13 <- r1, 0x10\n")
(comment . ";;1328: r12 <- r1, 0x18\n")
(comment . ";;1332: r4 <- r1, 0x20\n")
(comment . ";;1336 b -1188")
chunklet-i: 1340; chunklet-start-i: 1340; chunklet-end-i: 1348
i: 1340
end-i: 1348
i: 1340
end-i: 1348
i: 1344
end-i: 1348
i: 1348
end-i: 1348
i:1348 HIT CHUNK END
(comment . ";;1340: r3 <- r3, 0x1\n")
(comment . ";;1344 b 80")
chunklet-i: 1348; chunklet-start-i: 1348; chunklet-end-i: 1392
i: 1348
end-i: 1392
i: 1352
end-i: 1392
i: 1356
end-i: 1392
i: 1360
end-i: 1392
i: 1364
end-i: 1392
i: 1368
end-i: 1392
i: 1372
end-i: 1392
i: 1376
end-i: 1392
i: 1388
end-i: 1392
i: 1392
end-i: 1392
at header: 1392
(comment . ";;1348: r15 <- r1, 0x8\n")
(comment . ";;1352: r13 <- r1, 0x10\n")
(comment . ";;1356: r12 <- r1, 0x18\n")
(comment . ";;1360: r4 <- r1, 0x20\n")
(comment . ";;1364: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1388: b r6")
chunklet-i: 1392; chunklet-start-i: 1408; chunklet-end-i: 1428
i: 1392
end-i: 1428
at header: 1392
i: 1408
end-i: 1428
i: 1412
end-i: 1428
i: 1416
end-i: 1428
i: 1420
end-i: 1428
i: 1424
end-i: 1428
i: 1428
end-i: 1428
i:1428 HIT CHUNK END
(comment . ";;1408: r1 <- r1, r8")
(comment . ";;1412: r15 <- r1, 0x8\n")
(comment . ";;1416: r13 <- r1, 0x10\n")
(comment . ";;1420: r12 <- r1, 0x18\n")
(comment . ";;1424: r4 <- r1, 0x20\n")
chunklet-i: 1428; chunklet-start-i: 1428; chunklet-end-i: 1480
i: 1428
end-i: 1480
i: 1428
end-i: 1480
i: 1432
end-i: 1480
i: 1436
end-i: 1480
i: 1440
end-i: 1480
i: 1444
end-i: 1480
i: 1448
end-i: 1480
i: 1452
end-i: 1480
i: 1456
end-i: 1480
i: 1460
end-i: 1480
i: 1464
end-i: 1480
i: 1476
end-i: 1480
i: 1480
end-i: 1480
at header: 1480
(comment . ";;1428: r9 <- 0x4")
(comment . ";;1432: r10 <- 0xC")
(comment . ";;1436: r15 <- r1, 0x8\n")
(comment . ";;1440: r13 <- r1, 0x10\n")
(comment . ";;1444: r12 <- r1, 0x18\n")
(comment . ";;1448: r4 <- r1, 0x20\n")
(comment . ";;1452: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1460: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1476: b r6")
chunklet-i: 1480; chunklet-start-i: 1496; chunklet-end-i: 1528
i: 1480
end-i: 1528
at header: 1480
i: 1496
end-i: 1528
i: 1500
end-i: 1528
i: 1504
end-i: 1528
i: 1508
end-i: 1528
i: 1512
end-i: 1528
i: 1516
end-i: 1528
i: 1520
end-i: 1528
i: 1524
end-i: 1528
i: 1528
end-i: 1528
i:1528 HIT CHUNK END
(comment . ";;1496: r1 <- r1, r8")
(comment . ";;1500: r14 <- 0x4")
(comment . ";;1504: r15 <- r1, 0x8\n")
(comment . ";;1508: r13 <- r1, 0x10\n")
(comment . ";;1512: r12 <- r1, 0x18\n")
(comment . ";;1516: r4 <- r1, 0x20\n")
(comment . ";;1520: r14 <- 0x6")
(comment . ";;1524 b -1404")
chunklet-i: 1528; chunklet-start-i: 1528; chunklet-end-i: 1532
i: 1528
end-i: 1532
i: 1532
end-i: 1532
i:1532 HIT CHUNK END
(comment . ";;1528 b -964")
chunklet-i: 1532; chunklet-start-i: 1532; chunklet-end-i: 1552
i: 1532
end-i: 1552
i: 1532
end-i: 1552
i: 1536
end-i: 1552
i: 1548
end-i: 1552
i: 1552
end-i: 1552
i:1552 HIT CHUNK END
(comment . ";;1532: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1548: b r6")
chunklet-i: 1552; chunklet-start-i: 1552; chunklet-end-i: 1560
i: 1552
end-i: 1560
i: 1552
end-i: 1560
i: 1556
end-i: 1560
i: 1560
end-i: 1560
i:1560 HIT CHUNK END
(comment . ";;1552: r3 <- r3, 0x1\n")
(comment . ";;1556 b 76")
chunklet-i: 1560; chunklet-start-i: 1560; chunklet-end-i: 1600
i: 1560
end-i: 1600
i: 1564
end-i: 1600
i: 1568
end-i: 1600
i: 1572
end-i: 1600
i: 1576
end-i: 1600
i: 1580
end-i: 1600
i: 1584
end-i: 1600
i: 1596
end-i: 1600
i: 1600
end-i: 1600
at header: 1600
(comment . ";;1560: r15 <- r1, 0x8\n")
(comment . ";;1564: r13 <- r1, 0x10\n")
(comment . ";;1568: r9 <- r1, 0x18\n")
(comment . ";;1572: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1580: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1596: b r6")
chunklet-i: 1600; chunklet-start-i: 1616; chunklet-end-i: 1636
i: 1600
end-i: 1636
at header: 1600
i: 1616
end-i: 1636
i: 1620
end-i: 1636
i: 1624
end-i: 1636
i: 1628
end-i: 1636
i: 1632
end-i: 1636
i: 1636
end-i: 1636
i:1636 HIT CHUNK END
(comment . ";;1620: r1 <- r1, r0")
(comment . ";;1624: r15 <- r1, 0x8\n")
(comment . ";;1628: r13 <- r1, 0x10\n")
(comment . ";;1632: r9 <- r1, 0x18\n")
chunklet-i: 1636; chunklet-start-i: 1636; chunklet-end-i: 1672
i: 1636
end-i: 1672
i: 1636
end-i: 1672
i: 1640
end-i: 1672
i: 1644
end-i: 1672
i: 1648
end-i: 1672
i: 1652
end-i: 1672
i: 1656
end-i: 1672
i: 1668
end-i: 1672
i: 1672
end-i: 1672
at header: 1672
(comment . ";;1636: r15 <- r1, 0x8\n")
(comment . ";;1640: r13 <- r1, 0x10\n")
(comment . ";;1644: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1652: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1668: b r6")
chunklet-i: 1672; chunklet-start-i: 1688; chunklet-end-i: 1708
i: 1672
end-i: 1708
at header: 1672
i: 1688
end-i: 1708
i: 1692
end-i: 1708
i: 1696
end-i: 1708
i: 1700
end-i: 1708
i: 1704
end-i: 1708
i: 1708
end-i: 1708
i:1708 HIT CHUNK END
(comment . ";;1688: r1 <- r1, r8")
(comment . ";;1692: r9 <- 0x4")
(comment . ";;1696: r15 <- r1, 0x8\n")
(comment . ";;1700: r13 <- r1, 0x10\n")
(comment . ";;1704 b -1660")
chunklet-i: 1708; chunklet-start-i: 1708; chunklet-end-i: 1724
i: 1708
end-i: 1724
i: 1708
end-i: 1724
i: 1720
end-i: 1724
i: 1724
end-i: 1724
i:1724 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;1720: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: place
instruction range for chunk: 0 12
instruction range for chunk: 12 44
instruction range for chunk: 44 48
instruction range for chunk: 48 60
instruction range for chunk: 60 80
instruction range for chunk: 80 92
instruction range for chunk: 92 104
instruction range for chunk: 104 116
instruction range for chunk: 116 124
instruction range for chunk: 124 132
instruction range for chunk: 132 156
instruction range for chunk: 156 160
instruction range for chunk: 160 172
instruction range for chunk: 172 192
instruction range for chunk: 192 204
instruction range for chunk: 204 224
instruction range for chunk: 224 244
instruction range for chunk: 244 256
instruction range for chunk: 256 272
instruction range for chunk: 272 296
instruction range for chunk: 296 308
instruction range for chunk: 308 316
instruction range for chunk: 316 328
instruction range for chunk: 328 340
instruction range for chunk: 340 348
instruction range for chunk: 348 364
instruction range for chunk: 364 376
instruction range for chunk: 376 384
instruction range for chunk: 384 392
instruction range for chunk: 392 400
instruction range for chunk: 400 448
instruction range for chunk: 464 488
instruction range for chunk: 488 512
instruction range for chunk: 512 568
instruction range for chunk: 584 620
instruction range for chunk: 620 664
instruction range for chunk: 680 708
instruction range for chunk: 708 728
instruction range for chunk: 728 748
instruction range for chunk: 748 792
instruction range for chunk: 808 836
instruction range for chunk: 836 880
instruction range for chunk: 896 924
instruction range for chunk: 924 948
instruction range for chunk: 948 972
instruction range for chunk: 972 976
instruction range for chunk: 976 988
instruction range for chunk: 988 1008
instruction range for chunk: 1008 1020
instruction range for chunk: 1020 1052
instruction range for chunk: 1052 1076
instruction range for chunk: 1076 1080
instruction range for chunk: 1080 1092
instruction range for chunk: 1092 1112
instruction range for chunk: 1112 1124
instruction range for chunk: 1124 1144
instruction range for chunk: 1144 1164
instruction range for chunk: 1164 1176
instruction range for chunk: 1176 1192
instruction range for chunk: 1192 1200
instruction range for chunk: 1200 1212
instruction range for chunk: 1212 1224
instruction range for chunk: 1224 1232
instruction range for chunk: 1232 1248
instruction range for chunk: 1248 1268
instruction range for chunk: 1268 1296
instruction range for chunk: 1296 1308
instruction range for chunk: 1308 1316
instruction range for chunk: 1316 1340
instruction range for chunk: 1340 1344
instruction range for chunk: 1344 1356
instruction range for chunk: 1356 1376
instruction range for chunk: 1376 1388
instruction range for chunk: 1388 1404
instruction range for chunk: 1404 1412
instruction range for chunk: 1412 1420
instruction range for chunk: 1420 1428
instruction range for chunk: 1428 1464
instruction range for chunk: 1480 1496
instruction range for chunk: 1496 1528
instruction range for chunk: 1544 1556
instruction range for chunk: 1556 1580
instruction range for chunk: 1580 1592
instruction range for chunk: 1592 1600
instruction range for chunk: 1600 1608
instruction range for chunk: 1608 1612
instruction range for chunk: 1612 1620
instruction range for chunk: 1620 1656
instruction range for chunk: 1672 1684
instruction range for chunk: 1684 1720
instruction range for chunk: 1736 1760
instruction range for chunk: 1760 1764
instruction range for chunk: 1764 1772
instruction range for chunk: 1772 1808
instruction range for chunk: 1824 1840
instruction range for chunk: 1840 1872
instruction range for chunk: 1888 1904
instruction range for chunk: 1904 1924
instruction range for chunk: 1924 1932
instruction range for chunk: 1932 1968
instruction range for chunk: 1984 2000
instruction range for chunk: 2000 2032
instruction range for chunk: 2048 2068
instruction range for chunk: 2068 2076
instruction range for chunk: 2076 2112
instruction range for chunk: 2128 2140
instruction range for chunk: 2140 2176
instruction range for chunk: 2192 2216
instruction range for chunk: 2216 2220
instruction range for chunk: 2220 2228
instruction range for chunk: 2228 2264
instruction range for chunk: 2280 2296
instruction range for chunk: 2296 2328
instruction range for chunk: 2344 2360
instruction range for chunk: 2360 2372
instruction range for chunk: 2372 2388
instruction range for chunk: 2388 2400
instruction range for chunk: 2404 2412
instruction range for chunk: 2412 2436
instruction range for chunk: 2436 2444
instruction range for chunk: 2444 2488
instruction range for chunk: 2504 2524
instruction range for chunk: 2524 2568
instruction range for chunk: 2584 2612
instruction range for chunk: 2612 2632
instruction range for chunk: 2632 2652
instruction range for chunk: 2652 2660
instruction range for chunk: 2660 2712
instruction range for chunk: 2728 2760
instruction range for chunk: 2760 2808
instruction range for chunk: 2824 2856
instruction range for chunk: 2856 2864
instruction range for chunk: 2864 2912
instruction range for chunk: 2928 2956
instruction range for chunk: 2956 3000
instruction range for chunk: 3016 3048
instruction range for chunk: 3048 3068
instruction range for chunk: 3068 3076
instruction range for chunk: 3076 3120
instruction range for chunk: 3136 3160
instruction range for chunk: 3160 3200
instruction range for chunk: 3216 3240
instruction range for chunk: 3240 3248
instruction range for chunk: 3248 3288
instruction range for chunk: 3304 3324
instruction range for chunk: 3324 3360
instruction range for chunk: 3376 3396
instruction range for chunk: 3396 3404
instruction range for chunk: 3404 3448
instruction range for chunk: 3464 3484
instruction range for chunk: 3484 3536
instruction range for chunk: 3552 3584
instruction range for chunk: 3584 3588
instruction range for chunk: 3588 3608
instruction range for chunk: 3608 3616
instruction range for chunk: 3616 3656
instruction range for chunk: 3672 3692
instruction range for chunk: 3692 3728
instruction range for chunk: 3744 3764
instruction range for chunk: 3764 3780
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x2")
(comment . ";;8 b 3752")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;12: r15 <- 0x9")
(comment . ";;16: r13 <- 0xA")
(comment . ";; literal r9")
(comment . ";;32: r14 <- r9, 0x5\n")
(comment . ";;36: r14 <- 0x1E")
(comment . ";;40 b 3564")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;44: r9 <- 0xE")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 60
i: 48
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;48: r14 <- r9, r7")
(comment . ";;52: r14 <- 0x7")
(comment . ";;56 b 3528")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 80
i: 60
end-i: 80
i: 64
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;60: r12 <- r9, 0x1\n")
(comment . ";;64: r14 <- r12, r1")
(comment . ";;68: r14 <- r14, r8")
(comment . ";;72: r15 <- r14")
(comment . ";;76 b 3508")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;80: r14 <- r15, r12")
(comment . ";;84: r14 <- 0x7")
(comment . ";;88 b 3496")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;92: r14 <- r15, r9")
(comment . ";;96: r12 <- r9, r14")
(comment . ";;100: r4 <- 0x0")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 116
i: 104
end-i: 116
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r14 <- r4, r12")
(comment . ";;108: r14 <- 0x7")
(comment . ";;112 b 3280")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;116: r4 <- r12")
(comment . ";;120 b 800")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 132
i: 124
end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;124: r3 <- r3, 0x1\n")
(comment . ";;128 b 704")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 156
i: 132
end-i: 156
i: 132
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;144: r14 <- r9, 0x5\n")
(comment . ";;148: r14 <- 0x1E")
(comment . ";;152 b 592")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;156: r9 <- 0xE")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 172
i: 160
end-i: 172
i: 160
end-i: 172
i: 164
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";;160: r14 <- r9, r7")
(comment . ";;164: r14 <- 0x7")
(comment . ";;168 b 556")
chunklet-i: 172; chunklet-start-i: 172; chunklet-end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";;172: r11 <- r9, 0x1\n")
(comment . ";;176: r14 <- r11, r1")
(comment . ";;180: r14 <- r14, r8")
(comment . ";;184: r15 <- r14")
(comment . ";;188 b 536")
chunklet-i: 192; chunklet-start-i: 192; chunklet-end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";;192: r14 <- r15, r11")
(comment . ";;196: r14 <- 0x7")
(comment . ";;200 b 524")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 224
i: 204
end-i: 224
i: 208
end-i: 224
i: 212
end-i: 224
i: 216
end-i: 224
i: 220
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";;204: r14 <- r15, r9")
(comment . ";;208: r9 <- r9, r14")
(comment . ";;212: r14 <- r9, r7")
(comment . ";;216: r14 <- 0x7")
(comment . ";;220 b 484")
chunklet-i: 224; chunklet-start-i: 224; chunklet-end-i: 244
i: 224
end-i: 244
i: 228
end-i: 244
i: 232
end-i: 244
i: 236
end-i: 244
i: 240
end-i: 244
i: 244
end-i: 244
i:244 HIT CHUNK END
(comment . ";;224: r11 <- r9, 0x1\n")
(comment . ";;228: r14 <- r11, r1")
(comment . ";;232: r14 <- r14, r8")
(comment . ";;236: r4 <- r14")
(comment . ";;240 b 464")
chunklet-i: 244; chunklet-start-i: 244; chunklet-end-i: 256
i: 244
end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;244: r14 <- r4, r11")
(comment . ";;248: r14 <- 0x7")
(comment . ";;252 b 452")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 272
i: 256
end-i: 272
i: 260
end-i: 272
i: 264
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
i:272 HIT CHUNK END
(comment . ";;256: r14 <- r4, r9")
(comment . ";;260: r14 <- r9, r14")
(comment . ";;264: r14 <- 0x6")
(comment . ";;268 b 104")
chunklet-i: 272; chunklet-start-i: 272; chunklet-end-i: 296
i: 272
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;284: r14 <- r9, 0x5\n")
(comment . ";;288: r14 <- 0x1E")
(comment . ";;292 b 324")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 308
i: 296
end-i: 308
i: 296
end-i: 308
i: 300
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;296: r11 <- r13, r4")
(comment . ";;300: r11 <- 0x7")
(comment . ";;304 b 204")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 316
i: 308
end-i: 316
i: 312
end-i: 316
i: 316
end-i: 316
i:316 HIT CHUNK END
(comment . ";;308: r10 <- r13, r4")
(comment . ";;312 b 196")
chunklet-i: 316; chunklet-start-i: 316; chunklet-end-i: 328
i: 316
end-i: 328
i: 316
end-i: 328
i: 320
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
i:328 HIT CHUNK END
(comment . ";;316: r11 <- r14, r7")
(comment . ";;320: r11 <- 0x7")
(comment . ";;324 b 160")
chunklet-i: 328; chunklet-start-i: 328; chunklet-end-i: 340
i: 328
end-i: 340
i: 332
end-i: 340
i: 336
end-i: 340
i: 340
end-i: 340
i:340 HIT CHUNK END
(comment . ";;328: r11 <- r14, 0x1\n")
(comment . ";;332: r11 <- 0xF")
(comment . ";;336 b 148")
chunklet-i: 340; chunklet-start-i: 340; chunklet-end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";;340: r10 <- 0x7")
(comment . ";;344 b 140")
chunklet-i: 348; chunklet-start-i: 348; chunklet-end-i: 364
i: 348
end-i: 364
i: 352
end-i: 364
i: 356
end-i: 364
i: 360
end-i: 364
i: 364
end-i: 364
i:364 HIT CHUNK END
(comment . ";;348: r11 <- r11, r1")
(comment . ";;352: r11 <- r11, r8")
(comment . ";;356: r10 <- r11")
(comment . ";;360 b 124")
chunklet-i: 364; chunklet-start-i: 364; chunklet-end-i: 376
i: 364
end-i: 376
i: 368
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
i:376 HIT CHUNK END
(comment . ";;364: r9 <- 0xE")
(comment . ";;368: r11 <- r10, r9")
(comment . ";;372: r9 <- r14, r11")
chunklet-i: 376; chunklet-start-i: 376; chunklet-end-i: 384
i: 376
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
i:384 HIT CHUNK END
(comment . ";;376: r4 <- 0x7")
(comment . ";;380 b 16")
chunklet-i: 384; chunklet-start-i: 384; chunklet-end-i: 392
i: 384
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
i:392 HIT CHUNK END
(comment . ";;384: r14 <- r4, 0x8\n")
(comment . ";;388 b 8")
chunklet-i: 392; chunklet-start-i: 392; chunklet-end-i: 400
i: 392
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
i:400 HIT CHUNK END
(comment . ";;392: r4 <- 0xE")
(comment . ";;396 b -296")
chunklet-i: 400; chunklet-start-i: 400; chunklet-end-i: 448
i: 400
end-i: 448
i: 400
end-i: 448
i: 404
end-i: 448
i: 408
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 420
end-i: 448
i: 424
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;400: r9 <- 0x8")
(comment . ";;404: r10 <- 0x4")
(comment . ";;408: r15 <- r1, 0x8\n")
(comment . ";;412: r13 <- r1, 0x10\n")
(comment . ";;416: r12 <- r1, 0x18\n")
(comment . ";;420: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;444: b r6")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 488
i: 448
end-i: 488
at header: 448
i: 464
end-i: 488
i: 468
end-i: 488
i: 472
end-i: 488
i: 476
end-i: 488
i: 480
end-i: 488
i: 484
end-i: 488
i: 488
end-i: 488
i:488 HIT CHUNK END
(comment . ";;464: r1 <- r1, r0")
(comment . ";;468: r15 <- r1, 0x8\n")
(comment . ";;472: r13 <- r1, 0x10\n")
(comment . ";;476: r12 <- r1, 0x18\n")
(comment . ";;484 b -384")
chunklet-i: 488; chunklet-start-i: 488; chunklet-end-i: 512
i: 488
end-i: 512
i: 488
end-i: 512
i: 492
end-i: 512
i: 496
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;488: r9 <- 0xE")
(comment . ";;492: r11 <- 0xE")
(comment . ";; literal r6")
(comment . ";;508: b r6")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 568
i: 512
end-i: 568
i: 512
end-i: 568
i: 516
end-i: 568
i: 520
end-i: 568
i: 524
end-i: 568
i: 528
end-i: 568
i: 532
end-i: 568
i: 536
end-i: 568
i: 540
end-i: 568
i: 544
end-i: 568
i: 548
end-i: 568
i: 552
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
at header: 568
(comment . ";;512: r9 <- 0xD")
(comment . ";;516: r10 <- 0x4")
(comment . ";;520: r15 <- r1, 0x8\n")
(comment . ";;524: r13 <- r1, 0x10\n")
(comment . ";;528: r12 <- r1, 0x18\n")
(comment . ";;532: r4 <- r1, 0x20\n")
(comment . ";;536: r14 <- r1, 0x28\n")
(comment . ";;540: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;548: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;564: b r6")
chunklet-i: 568; chunklet-start-i: 584; chunklet-end-i: 620
i: 568
end-i: 620
at header: 568
i: 584
end-i: 620
i: 588
end-i: 620
i: 592
end-i: 620
i: 596
end-i: 620
i: 600
end-i: 620
i: 604
end-i: 620
i: 608
end-i: 620
i: 612
end-i: 620
i: 616
end-i: 620
i: 620
end-i: 620
i:620 HIT CHUNK END
(comment . ";;584: r1 <- r1, r0")
(comment . ";;588: r10 <- 0x4")
(comment . ";;592: r15 <- r1, 0x8\n")
(comment . ";;596: r13 <- r1, 0x10\n")
(comment . ";;600: r12 <- r1, 0x18\n")
(comment . ";;604: r4 <- r1, 0x20\n")
(comment . ";;608: r14 <- r1, 0x28\n")
(comment . ";;616 b -304")
chunklet-i: 620; chunklet-start-i: 620; chunklet-end-i: 664
i: 620
end-i: 664
i: 620
end-i: 664
i: 624
end-i: 664
i: 628
end-i: 664
i: 632
end-i: 664
i: 636
end-i: 664
i: 640
end-i: 664
i: 644
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
at header: 664
(comment . ";;620: r15 <- r1, 0x8\n")
(comment . ";;624: r13 <- r1, 0x10\n")
(comment . ";;628: r12 <- r1, 0x18\n")
(comment . ";;632: r4 <- r1, 0x20\n")
(comment . ";;636: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;644: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;660: b r6")
chunklet-i: 664; chunklet-start-i: 680; chunklet-end-i: 708
i: 664
end-i: 708
at header: 664
i: 680
end-i: 708
i: 684
end-i: 708
i: 688
end-i: 708
i: 692
end-i: 708
i: 696
end-i: 708
i: 700
end-i: 708
i: 704
end-i: 708
i: 708
end-i: 708
i:708 HIT CHUNK END
(comment . ";;680: r1 <- r1, r8")
(comment . ";;684: r14 <- 0x4")
(comment . ";;688: r15 <- r1, 0x8\n")
(comment . ";;692: r13 <- r1, 0x10\n")
(comment . ";;696: r12 <- r1, 0x18\n")
(comment . ";;700: r4 <- r1, 0x20\n")
(comment . ";;704 b -412")
chunklet-i: 708; chunklet-start-i: 708; chunklet-end-i: 728
i: 708
end-i: 728
i: 708
end-i: 728
i: 712
end-i: 728
i: 724
end-i: 728
i: 728
end-i: 728
i:728 HIT CHUNK END
(comment . ";;708: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;724: b r6")
chunklet-i: 728; chunklet-start-i: 728; chunklet-end-i: 748
i: 728
end-i: 748
i: 728
end-i: 748
i: 732
end-i: 748
i: 744
end-i: 748
i: 748
end-i: 748
i:748 HIT CHUNK END
(comment . ";;728: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;744: b r6")
chunklet-i: 748; chunklet-start-i: 748; chunklet-end-i: 792
i: 748
end-i: 792
i: 748
end-i: 792
i: 752
end-i: 792
i: 756
end-i: 792
i: 760
end-i: 792
i: 764
end-i: 792
i: 768
end-i: 792
i: 772
end-i: 792
i: 776
end-i: 792
i: 788
end-i: 792
i: 792
end-i: 792
at header: 792
(comment . ";;748: r15 <- r1, 0x8\n")
(comment . ";;752: r13 <- r1, 0x10\n")
(comment . ";;756: r12 <- r1, 0x18\n")
(comment . ";;760: r4 <- r1, 0x20\n")
(comment . ";;764: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;772: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;788: b r6")
chunklet-i: 792; chunklet-start-i: 808; chunklet-end-i: 836
i: 792
end-i: 836
at header: 792
i: 808
end-i: 836
i: 812
end-i: 836
i: 816
end-i: 836
i: 820
end-i: 836
i: 824
end-i: 836
i: 828
end-i: 836
i: 832
end-i: 836
i: 836
end-i: 836
i:836 HIT CHUNK END
(comment . ";;808: r1 <- r1, r8")
(comment . ";;812: r9 <- 0x4")
(comment . ";;816: r15 <- r1, 0x8\n")
(comment . ";;820: r13 <- r1, 0x10\n")
(comment . ";;824: r12 <- r1, 0x18\n")
(comment . ";;828: r4 <- r1, 0x20\n")
(comment . ";;832 b -676")
chunklet-i: 836; chunklet-start-i: 836; chunklet-end-i: 880
i: 836
end-i: 880
i: 836
end-i: 880
i: 840
end-i: 880
i: 844
end-i: 880
i: 848
end-i: 880
i: 852
end-i: 880
i: 856
end-i: 880
i: 860
end-i: 880
i: 864
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
at header: 880
(comment . ";;836: r15 <- r1, 0x8\n")
(comment . ";;840: r13 <- r1, 0x10\n")
(comment . ";;844: r12 <- r1, 0x18\n")
(comment . ";;848: r4 <- r1, 0x20\n")
(comment . ";;852: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;860: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;876: b r6")
chunklet-i: 880; chunklet-start-i: 896; chunklet-end-i: 924
i: 880
end-i: 924
at header: 880
i: 896
end-i: 924
i: 900
end-i: 924
i: 904
end-i: 924
i: 908
end-i: 924
i: 912
end-i: 924
i: 916
end-i: 924
i: 920
end-i: 924
i: 924
end-i: 924
i:924 HIT CHUNK END
(comment . ";;900: r1 <- r1, r8")
(comment . ";;904: r15 <- r1, 0x8\n")
(comment . ";;908: r13 <- r1, 0x10\n")
(comment . ";;912: r12 <- r1, 0x18\n")
(comment . ";;916: r4 <- r1, 0x20\n")
(comment . ";;920 b -792")
chunklet-i: 924; chunklet-start-i: 924; chunklet-end-i: 948
i: 924
end-i: 948
i: 924
end-i: 948
i: 936
end-i: 948
i: 940
end-i: 948
i: 944
end-i: 948
i: 948
end-i: 948
i:948 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;936: r4 <- r9, 0x5\n")
(comment . ";;940: r4 <- 0x1E")
(comment . ";;944 b 2292")
chunklet-i: 948; chunklet-start-i: 948; chunklet-end-i: 972
i: 948
end-i: 972
i: 948
end-i: 972
i: 960
end-i: 972
i: 964
end-i: 972
i: 968
end-i: 972
i: 972
end-i: 972
i:972 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;960: r14 <- r9, 0x5\n")
(comment . ";;964: r14 <- 0x1E")
(comment . ";;968 b 2096")
chunklet-i: 972; chunklet-start-i: 972; chunklet-end-i: 976
i: 972
end-i: 976
i: 976
end-i: 976
i:976 HIT CHUNK END
(comment . ";;972: r9 <- 0xE")
chunklet-i: 976; chunklet-start-i: 976; chunklet-end-i: 988
i: 976
end-i: 988
i: 976
end-i: 988
i: 980
end-i: 988
i: 984
end-i: 988
i: 988
end-i: 988
i:988 HIT CHUNK END
(comment . ";;976: r14 <- r9, r7")
(comment . ";;980: r14 <- 0x7")
(comment . ";;984 b 2060")
chunklet-i: 988; chunklet-start-i: 988; chunklet-end-i: 1008
i: 988
end-i: 1008
i: 992
end-i: 1008
i: 996
end-i: 1008
i: 1000
end-i: 1008
i: 1004
end-i: 1008
i: 1008
end-i: 1008
i:1008 HIT CHUNK END
(comment . ";;988: r12 <- r9, 0x1\n")
(comment . ";;992: r14 <- r12, r1")
(comment . ";;996: r14 <- r14, r8")
(comment . ";;1000: r15 <- r14")
(comment . ";;1004 b 2040")
chunklet-i: 1008; chunklet-start-i: 1008; chunklet-end-i: 1020
i: 1008
end-i: 1020
i: 1012
end-i: 1020
i: 1016
end-i: 1020
i: 1020
end-i: 1020
i:1020 HIT CHUNK END
(comment . ";;1008: r14 <- r15, r12")
(comment . ";;1012: r14 <- 0x7")
(comment . ";;1016 b 2028")
chunklet-i: 1020; chunklet-start-i: 1020; chunklet-end-i: 1052
i: 1020
end-i: 1052
i: 1024
end-i: 1052
i: 1028
end-i: 1052
i: 1040
end-i: 1052
i: 1044
end-i: 1052
i: 1048
end-i: 1052
i: 1052
end-i: 1052
i:1052 HIT CHUNK END
(comment . ";;1020: r14 <- r15, r9")
(comment . ";;1024: r12 <- r9, r14")
(comment . ";; literal r9")
(comment . ";;1040: r14 <- r9, 0x5\n")
(comment . ";;1044: r14 <- 0x1E")
(comment . ";;1048 b 1804")
chunklet-i: 1052; chunklet-start-i: 1052; chunklet-end-i: 1076
i: 1052
end-i: 1076
i: 1052
end-i: 1076
i: 1064
end-i: 1076
i: 1068
end-i: 1076
i: 1072
end-i: 1076
i: 1076
end-i: 1076
i:1076 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1064: r11 <- r9, 0x5\n")
(comment . ";;1068: r11 <- 0x1E")
(comment . ";;1072 b 1576")
chunklet-i: 1076; chunklet-start-i: 1076; chunklet-end-i: 1080
i: 1076
end-i: 1080
i: 1080
end-i: 1080
i:1080 HIT CHUNK END
(comment . ";;1076: r9 <- 0xB")
chunklet-i: 1080; chunklet-start-i: 1080; chunklet-end-i: 1092
i: 1080
end-i: 1092
i: 1080
end-i: 1092
i: 1084
end-i: 1092
i: 1088
end-i: 1092
i: 1092
end-i: 1092
i:1092 HIT CHUNK END
(comment . ";;1080: r11 <- r9, r7")
(comment . ";;1084: r11 <- 0x7")
(comment . ";;1088 b 1540")
chunklet-i: 1092; chunklet-start-i: 1092; chunklet-end-i: 1112
i: 1092
end-i: 1112
i: 1096
end-i: 1112
i: 1100
end-i: 1112
i: 1104
end-i: 1112
i: 1108
end-i: 1112
i: 1112
end-i: 1112
i:1112 HIT CHUNK END
(comment . ";;1092: r10 <- r9, 0x1\n")
(comment . ";;1096: r11 <- r10, r1")
(comment . ";;1100: r11 <- r11, r8")
(comment . ";;1104: r15 <- r11")
(comment . ";;1108 b 1520")
chunklet-i: 1112; chunklet-start-i: 1112; chunklet-end-i: 1124
i: 1112
end-i: 1124
i: 1116
end-i: 1124
i: 1120
end-i: 1124
i: 1124
end-i: 1124
i:1124 HIT CHUNK END
(comment . ";;1112: r11 <- r15, r10")
(comment . ";;1116: r11 <- 0x7")
(comment . ";;1120 b 1508")
chunklet-i: 1124; chunklet-start-i: 1124; chunklet-end-i: 1144
i: 1124
end-i: 1144
i: 1128
end-i: 1144
i: 1132
end-i: 1144
i: 1136
end-i: 1144
i: 1140
end-i: 1144
i: 1144
end-i: 1144
i:1144 HIT CHUNK END
(comment . ";;1124: r15 <- r15, r9")
(comment . ";;1128: r10 <- r9, r15")
(comment . ";;1132: r15 <- r14, r7")
(comment . ";;1136: r15 <- 0x7")
(comment . ";;1140 b 1468")
chunklet-i: 1144; chunklet-start-i: 1144; chunklet-end-i: 1164
i: 1144
end-i: 1164
i: 1148
end-i: 1164
i: 1152
end-i: 1164
i: 1156
end-i: 1164
i: 1160
end-i: 1164
i: 1164
end-i: 1164
i:1164 HIT CHUNK END
(comment . ";;1144: r11 <- r14, 0x1\n")
(comment . ";;1148: r15 <- r11, r1")
(comment . ";;1152: r15 <- r15, r8")
(comment . ";;1156: r10 <- r15")
(comment . ";;1160 b 1448")
chunklet-i: 1164; chunklet-start-i: 1164; chunklet-end-i: 1176
i: 1164
end-i: 1176
i: 1168
end-i: 1176
i: 1172
end-i: 1176
i: 1176
end-i: 1176
i:1176 HIT CHUNK END
(comment . ";;1164: r15 <- r10, r11")
(comment . ";;1168: r15 <- 0x7")
(comment . ";;1172 b 1436")
chunklet-i: 1176; chunklet-start-i: 1176; chunklet-end-i: 1192
i: 1176
end-i: 1192
i: 1180
end-i: 1192
i: 1184
end-i: 1192
i: 1188
end-i: 1192
i: 1192
end-i: 1192
i:1192 HIT CHUNK END
(comment . ";;1176: r15 <- r10, r9")
(comment . ";;1180: r9 <- r14, r15")
(comment . ";;1184: r9 <- 0x7")
(comment . ";;1188 b 1244")
chunklet-i: 1192; chunklet-start-i: 1192; chunklet-end-i: 1200
i: 1192
end-i: 1200
i: 1196
end-i: 1200
i: 1200
end-i: 1200
i:1200 HIT CHUNK END
(comment . ";;1192: r11 <- r9, 0x8\n")
(comment . ";;1196 b 1236")
chunklet-i: 1200; chunklet-start-i: 1200; chunklet-end-i: 1212
i: 1200
end-i: 1212
i: 1200
end-i: 1212
i: 1204
end-i: 1212
i: 1208
end-i: 1212
i: 1212
end-i: 1212
i:1212 HIT CHUNK END
(comment . ";;1200: r15 <- r4, r7")
(comment . ";;1204: r15 <- 0x7")
(comment . ";;1208 b 1200")
chunklet-i: 1212; chunklet-start-i: 1212; chunklet-end-i: 1224
i: 1212
end-i: 1224
i: 1216
end-i: 1224
i: 1220
end-i: 1224
i: 1224
end-i: 1224
i:1224 HIT CHUNK END
(comment . ";;1212: r15 <- r4, 0x1\n")
(comment . ";;1216: r15 <- 0xF")
(comment . ";;1220 b 1188")
chunklet-i: 1224; chunklet-start-i: 1224; chunklet-end-i: 1232
i: 1224
end-i: 1232
i: 1228
end-i: 1232
i: 1232
end-i: 1232
i:1232 HIT CHUNK END
(comment . ";;1224: r12 <- 0x7")
(comment . ";;1228 b 1180")
chunklet-i: 1232; chunklet-start-i: 1232; chunklet-end-i: 1248
i: 1232
end-i: 1248
i: 1236
end-i: 1248
i: 1240
end-i: 1248
i: 1244
end-i: 1248
i: 1248
end-i: 1248
i:1248 HIT CHUNK END
(comment . ";;1232: r15 <- r15, r1")
(comment . ";;1236: r15 <- r15, r8")
(comment . ";;1240: r12 <- r15")
(comment . ";;1244 b 1164")
chunklet-i: 1248; chunklet-start-i: 1248; chunklet-end-i: 1268
i: 1248
end-i: 1268
i: 1252
end-i: 1268
i: 1256
end-i: 1268
i: 1260
end-i: 1268
i: 1264
end-i: 1268
i: 1268
end-i: 1268
i:1268 HIT CHUNK END
(comment . ";;1248: r15 <- r4, r9")
(comment . ";;1252: r15 <- r12, r15")
(comment . ";;1256: r11 <- r15, 0x0\n")
(comment . ";;1260: r11 <- 0x7")
(comment . ";;1264 b 1092")
chunklet-i: 1268; chunklet-start-i: 1268; chunklet-end-i: 1296
i: 1268
end-i: 1296
i: 1268
end-i: 1296
i: 1272
end-i: 1296
i: 1284
end-i: 1296
i: 1288
end-i: 1296
i: 1292
end-i: 1296
i: 1296
end-i: 1296
i:1296 HIT CHUNK END
(comment . ";;1268: r4 <- 0xD")
(comment . ";; literal r9")
(comment . ";;1284: r10 <- r9, 0x5\n")
(comment . ";;1288: r10 <- 0x1E")
(comment . ";;1292 b 924")
chunklet-i: 1296; chunklet-start-i: 1296; chunklet-end-i: 1308
i: 1296
end-i: 1308
i: 1296
end-i: 1308
i: 1300
end-i: 1308
i: 1304
end-i: 1308
i: 1308
end-i: 1308
i:1308 HIT CHUNK END
(comment . ";;1296: r15 <- r4, r10")
(comment . ";;1300: r15 <- 0x7")
(comment . ";;1304 b 760")
chunklet-i: 1308; chunklet-start-i: 1308; chunklet-end-i: 1316
i: 1308
end-i: 1316
i: 1312
end-i: 1316
i: 1316
end-i: 1316
i:1316 HIT CHUNK END
(comment . ";;1308: r4 <- r10")
(comment . ";;1312 b 240")
chunklet-i: 1316; chunklet-start-i: 1316; chunklet-end-i: 1340
i: 1316
end-i: 1340
i: 1316
end-i: 1340
i: 1328
end-i: 1340
i: 1332
end-i: 1340
i: 1336
end-i: 1340
i: 1340
end-i: 1340
i:1340 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1328: r15 <- r9, 0x5\n")
(comment . ";;1332: r15 <- 0x1E")
(comment . ";;1336 b 584")
chunklet-i: 1340; chunklet-start-i: 1340; chunklet-end-i: 1344
i: 1340
end-i: 1344
i: 1344
end-i: 1344
i:1344 HIT CHUNK END
(comment . ";;1340: r9 <- 0xF")
chunklet-i: 1344; chunklet-start-i: 1344; chunklet-end-i: 1356
i: 1344
end-i: 1356
i: 1344
end-i: 1356
i: 1348
end-i: 1356
i: 1352
end-i: 1356
i: 1356
end-i: 1356
i:1356 HIT CHUNK END
(comment . ";;1344: r15 <- r9, r7")
(comment . ";;1348: r15 <- 0x7")
(comment . ";;1352 b 548")
chunklet-i: 1356; chunklet-start-i: 1356; chunklet-end-i: 1376
i: 1356
end-i: 1376
i: 1360
end-i: 1376
i: 1364
end-i: 1376
i: 1368
end-i: 1376
i: 1372
end-i: 1376
i: 1376
end-i: 1376
i:1376 HIT CHUNK END
(comment . ";;1356: r14 <- r9, 0x1\n")
(comment . ";;1360: r15 <- r14, r1")
(comment . ";;1364: r15 <- r15, r8")
(comment . ";;1368: r4 <- r15")
(comment . ";;1372 b 528")
chunklet-i: 1376; chunklet-start-i: 1376; chunklet-end-i: 1388
i: 1376
end-i: 1388
i: 1380
end-i: 1388
i: 1384
end-i: 1388
i: 1388
end-i: 1388
i:1388 HIT CHUNK END
(comment . ";;1376: r15 <- r4, r14")
(comment . ";;1380: r15 <- 0x7")
(comment . ";;1384 b 516")
chunklet-i: 1388; chunklet-start-i: 1388; chunklet-end-i: 1404
i: 1388
end-i: 1404
i: 1392
end-i: 1404
i: 1396
end-i: 1404
i: 1400
end-i: 1404
i: 1404
end-i: 1404
i:1404 HIT CHUNK END
(comment . ";;1388: r15 <- r4, r9")
(comment . ";;1392: r15 <- r9, r15")
(comment . ";;1396: r15 <- 0x6")
(comment . ";;1400 b 152")
chunklet-i: 1404; chunklet-start-i: 1404; chunklet-end-i: 1412
i: 1404
end-i: 1412
i: 1408
end-i: 1412
i: 1412
end-i: 1412
i:1412 HIT CHUNK END
(comment . ";;1404: r3 <- r3, 0x1\n")
(comment . ";;1408 b 84")
chunklet-i: 1412; chunklet-start-i: 1412; chunklet-end-i: 1420
i: 1412
end-i: 1420
i: 1412
end-i: 1420
i: 1416
end-i: 1420
i: 1420
end-i: 1420
i:1420 HIT CHUNK END
(comment . ";;1412: r4 <- 0x7")
(comment . ";;1416 b 8")
chunklet-i: 1420; chunklet-start-i: 1420; chunklet-end-i: 1428
i: 1420
end-i: 1428
i: 1424
end-i: 1428
i: 1428
end-i: 1428
i:1428 HIT CHUNK END
(comment . ";;1420: r13 <- r4, 0x8\n")
(comment . ";;1424 b -160")
chunklet-i: 1428; chunklet-start-i: 1428; chunklet-end-i: 1464
i: 1428
end-i: 1464
i: 1428
end-i: 1464
i: 1432
end-i: 1464
i: 1436
end-i: 1464
i: 1440
end-i: 1464
i: 1444
end-i: 1464
i: 1448
end-i: 1464
i: 1460
end-i: 1464
i: 1464
end-i: 1464
at header: 1464
(comment . ";;1428: r9 <- 0x8")
(comment . ";;1432: r10 <- 0x4")
(comment . ";;1436: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1444: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1460: b r6")
chunklet-i: 1464; chunklet-start-i: 1480; chunklet-end-i: 1496
i: 1464
end-i: 1496
at header: 1464
i: 1480
end-i: 1496
i: 1484
end-i: 1496
i: 1488
end-i: 1496
i: 1492
end-i: 1496
i: 1496
end-i: 1496
i:1496 HIT CHUNK END
(comment . ";;1480: r1 <- r1, r8")
(comment . ";;1484: r13 <- 0x4")
(comment . ";;1492 b -228")
chunklet-i: 1496; chunklet-start-i: 1496; chunklet-end-i: 1528
i: 1496
end-i: 1528
i: 1496
end-i: 1528
i: 1500
end-i: 1528
i: 1504
end-i: 1528
i: 1508
end-i: 1528
i: 1512
end-i: 1528
i: 1524
end-i: 1528
i: 1528
end-i: 1528
at header: 1528
(comment . ";;1496: r4 <- r1, 0x10\n")
(comment . ";;1500: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1508: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1524: b r6")
chunklet-i: 1528; chunklet-start-i: 1544; chunklet-end-i: 1556
i: 1528
end-i: 1556
at header: 1528
i: 1544
end-i: 1556
i: 1548
end-i: 1556
i: 1552
end-i: 1556
i: 1556
end-i: 1556
i:1556 HIT CHUNK END
(comment . ";;1544: r1 <- r1, r8")
(comment . ";;1548: r4 <- r1, 0x10\n")
(comment . ";;1552 b -144")
chunklet-i: 1556; chunklet-start-i: 1556; chunklet-end-i: 1580
i: 1556
end-i: 1580
i: 1556
end-i: 1580
i: 1568
end-i: 1580
i: 1572
end-i: 1580
i: 1576
end-i: 1580
i: 1580
end-i: 1580
i:1580 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1568: r10 <- r9, 0x5\n")
(comment . ";;1572: r10 <- 0x1E")
(comment . ";;1576 b 184")
chunklet-i: 1580; chunklet-start-i: 1580; chunklet-end-i: 1592
i: 1580
end-i: 1592
i: 1580
end-i: 1592
i: 1584
end-i: 1592
i: 1588
end-i: 1592
i: 1592
end-i: 1592
i:1592 HIT CHUNK END
(comment . ";;1580: r15 <- r4, r10")
(comment . ";;1584: r15 <- 0x7")
(comment . ";;1588 b 20")
chunklet-i: 1592; chunklet-start-i: 1592; chunklet-end-i: 1600
i: 1592
end-i: 1600
i: 1596
end-i: 1600
i: 1600
end-i: 1600
i:1600 HIT CHUNK END
(comment . ";;1592: r4 <- r10")
(comment . ";;1596 b 8")
chunklet-i: 1600; chunklet-start-i: 1600; chunklet-end-i: 1608
i: 1600
end-i: 1608
i: 1600
end-i: 1608
i: 1604
end-i: 1608
i: 1608
end-i: 1608
i:1608 HIT CHUNK END
(comment . ";;1600: r4 <- 0x0")
(comment . ";;1604: b r1, 0")
chunklet-i: 1608; chunklet-start-i: 1608; chunklet-end-i: 1612
i: 1608
end-i: 1612
i: 1608
end-i: 1612
i: 1612
end-i: 1612
i:1612 HIT CHUNK END
(comment . ";;1608: b r1, 0")
chunklet-i: 1612; chunklet-start-i: 1612; chunklet-end-i: 1620
i: 1612
end-i: 1620
i: 1612
end-i: 1620
i: 1616
end-i: 1620
i: 1620
end-i: 1620
i:1620 HIT CHUNK END
(comment . ";;1612: r3 <- r3, 0x1\n")
(comment . ";;1616 b 64")
chunklet-i: 1620; chunklet-start-i: 1620; chunklet-end-i: 1656
i: 1620
end-i: 1656
i: 1624
end-i: 1656
i: 1628
end-i: 1656
i: 1632
end-i: 1656
i: 1636
end-i: 1656
i: 1640
end-i: 1656
i: 1652
end-i: 1656
i: 1656
end-i: 1656
at header: 1656
(comment . ";;1620: r4 <- r1, 0x10\n")
(comment . ";;1624: r10 <- r1, 0x8\n")
(comment . ";;1628: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1636: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1652: b r6")
chunklet-i: 1656; chunklet-start-i: 1672; chunklet-end-i: 1684
i: 1656
end-i: 1684
at header: 1656
i: 1672
end-i: 1684
i: 1676
end-i: 1684
i: 1680
end-i: 1684
i: 1684
end-i: 1684
i:1684 HIT CHUNK END
(comment . ";;1672: r1 <- r1, r8")
(comment . ";;1676: r4 <- r1, 0x10\n")
(comment . ";;1680: r10 <- r1, 0x8\n")
chunklet-i: 1684; chunklet-start-i: 1684; chunklet-end-i: 1720
i: 1684
end-i: 1720
i: 1684
end-i: 1720
i: 1688
end-i: 1720
i: 1692
end-i: 1720
i: 1696
end-i: 1720
i: 1700
end-i: 1720
i: 1704
end-i: 1720
i: 1716
end-i: 1720
i: 1720
end-i: 1720
at header: 1720
(comment . ";;1684: r9 <- 0x4")
(comment . ";;1688: r4 <- r1, 0x10\n")
(comment . ";;1692: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1700: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1716: b r6")
chunklet-i: 1720; chunklet-start-i: 1736; chunklet-end-i: 1760
i: 1720
end-i: 1760
at header: 1720
i: 1736
end-i: 1760
i: 1740
end-i: 1760
i: 1744
end-i: 1760
i: 1748
end-i: 1760
i: 1752
end-i: 1760
i: 1756
end-i: 1760
i: 1760
end-i: 1760
i:1760 HIT CHUNK END
(comment . ";;1736: r1 <- r1, r8")
(comment . ";;1740: r15 <- 0x4")
(comment . ";;1744: r4 <- r1, 0x10\n")
(comment . ";;1748: r15 <- 0x6")
(comment . ";;1756 b -152")
chunklet-i: 1760; chunklet-start-i: 1760; chunklet-end-i: 1764
i: 1760
end-i: 1764
i: 1764
end-i: 1764
i:1764 HIT CHUNK END
(comment . ";;1760 b -164")
chunklet-i: 1764; chunklet-start-i: 1764; chunklet-end-i: 1772
i: 1764
end-i: 1772
i: 1764
end-i: 1772
i: 1768
end-i: 1772
i: 1772
end-i: 1772
i:1772 HIT CHUNK END
(comment . ";;1764: r3 <- r3, 0x1\n")
(comment . ";;1768 b 68")
chunklet-i: 1772; chunklet-start-i: 1772; chunklet-end-i: 1808
i: 1772
end-i: 1808
i: 1776
end-i: 1808
i: 1780
end-i: 1808
i: 1784
end-i: 1808
i: 1788
end-i: 1808
i: 1792
end-i: 1808
i: 1804
end-i: 1808
i: 1808
end-i: 1808
at header: 1808
(comment . ";;1772: r4 <- r1, 0x10\n")
(comment . ";;1776: r9 <- r1, 0x8\n")
(comment . ";;1780: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1788: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1804: b r6")
chunklet-i: 1808; chunklet-start-i: 1824; chunklet-end-i: 1840
i: 1808
end-i: 1840
at header: 1808
i: 1824
end-i: 1840
i: 1828
end-i: 1840
i: 1832
end-i: 1840
i: 1836
end-i: 1840
i: 1840
end-i: 1840
i:1840 HIT CHUNK END
(comment . ";;1828: r1 <- r1, r8")
(comment . ";;1832: r4 <- r1, 0x10\n")
(comment . ";;1836: r9 <- r1, 0x8\n")
chunklet-i: 1840; chunklet-start-i: 1840; chunklet-end-i: 1872
i: 1840
end-i: 1872
i: 1840
end-i: 1872
i: 1844
end-i: 1872
i: 1848
end-i: 1872
i: 1852
end-i: 1872
i: 1856
end-i: 1872
i: 1868
end-i: 1872
i: 1872
end-i: 1872
at header: 1872
(comment . ";;1840: r4 <- r1, 0x10\n")
(comment . ";;1844: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1852: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1868: b r6")
chunklet-i: 1872; chunklet-start-i: 1888; chunklet-end-i: 1904
i: 1872
end-i: 1904
at header: 1872
i: 1888
end-i: 1904
i: 1892
end-i: 1904
i: 1896
end-i: 1904
i: 1900
end-i: 1904
i: 1904
end-i: 1904
i:1904 HIT CHUNK END
(comment . ";;1888: r1 <- r1, r8")
(comment . ";;1892: r10 <- 0x4")
(comment . ";;1896: r4 <- r1, 0x10\n")
(comment . ";;1900 b -324")
chunklet-i: 1904; chunklet-start-i: 1904; chunklet-end-i: 1924
i: 1904
end-i: 1924
i: 1904
end-i: 1924
i: 1908
end-i: 1924
i: 1920
end-i: 1924
i: 1924
end-i: 1924
i:1924 HIT CHUNK END
(comment . ";;1904: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1920: b r6")
chunklet-i: 1924; chunklet-start-i: 1924; chunklet-end-i: 1932
i: 1924
end-i: 1932
i: 1924
end-i: 1932
i: 1928
end-i: 1932
i: 1932
end-i: 1932
i:1932 HIT CHUNK END
(comment . ";;1924: r3 <- r3, 0x1\n")
(comment . ";;1928 b 68")
chunklet-i: 1932; chunklet-start-i: 1932; chunklet-end-i: 1968
i: 1932
end-i: 1968
i: 1936
end-i: 1968
i: 1940
end-i: 1968
i: 1944
end-i: 1968
i: 1948
end-i: 1968
i: 1952
end-i: 1968
i: 1964
end-i: 1968
i: 1968
end-i: 1968
at header: 1968
(comment . ";;1932: r4 <- r1, 0x10\n")
(comment . ";;1936: r9 <- r1, 0x8\n")
(comment . ";;1940: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1948: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1964: b r6")
chunklet-i: 1968; chunklet-start-i: 1984; chunklet-end-i: 2000
i: 1968
end-i: 2000
at header: 1968
i: 1984
end-i: 2000
i: 1988
end-i: 2000
i: 1992
end-i: 2000
i: 1996
end-i: 2000
i: 2000
end-i: 2000
i:2000 HIT CHUNK END
(comment . ";;1988: r1 <- r1, r8")
(comment . ";;1992: r4 <- r1, 0x10\n")
(comment . ";;1996: r9 <- r1, 0x8\n")
chunklet-i: 2000; chunklet-start-i: 2000; chunklet-end-i: 2032
i: 2000
end-i: 2032
i: 2000
end-i: 2032
i: 2004
end-i: 2032
i: 2008
end-i: 2032
i: 2012
end-i: 2032
i: 2016
end-i: 2032
i: 2028
end-i: 2032
i: 2032
end-i: 2032
at header: 2032
(comment . ";;2000: r4 <- r1, 0x10\n")
(comment . ";;2004: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2012: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2028: b r6")
chunklet-i: 2032; chunklet-start-i: 2048; chunklet-end-i: 2068
i: 2032
end-i: 2068
at header: 2032
i: 2048
end-i: 2068
i: 2052
end-i: 2068
i: 2056
end-i: 2068
i: 2060
end-i: 2068
i: 2064
end-i: 2068
i: 2068
end-i: 2068
i:2068 HIT CHUNK END
(comment . ";;2048: r1 <- r1, r8")
(comment . ";;2052: r9 <- 0x4")
(comment . ";;2056: r4 <- r1, 0x10\n")
(comment . ";;2064 b -724")
chunklet-i: 2068; chunklet-start-i: 2068; chunklet-end-i: 2076
i: 2068
end-i: 2076
i: 2068
end-i: 2076
i: 2072
end-i: 2076
i: 2076
end-i: 2076
i:2076 HIT CHUNK END
(comment . ";;2068: r3 <- r3, 0x1\n")
(comment . ";;2072 b 64")
chunklet-i: 2076; chunklet-start-i: 2076; chunklet-end-i: 2112
i: 2076
end-i: 2112
i: 2080
end-i: 2112
i: 2084
end-i: 2112
i: 2088
end-i: 2112
i: 2092
end-i: 2112
i: 2096
end-i: 2112
i: 2108
end-i: 2112
i: 2112
end-i: 2112
at header: 2112
(comment . ";;2076: r4 <- r1, 0x10\n")
(comment . ";;2080: r10 <- r1, 0x8\n")
(comment . ";;2084: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2092: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2108: b r6")
chunklet-i: 2112; chunklet-start-i: 2128; chunklet-end-i: 2140
i: 2112
end-i: 2140
at header: 2112
i: 2128
end-i: 2140
i: 2132
end-i: 2140
i: 2136
end-i: 2140
i: 2140
end-i: 2140
i:2140 HIT CHUNK END
(comment . ";;2128: r1 <- r1, r8")
(comment . ";;2132: r4 <- r1, 0x10\n")
(comment . ";;2136: r10 <- r1, 0x8\n")
chunklet-i: 2140; chunklet-start-i: 2140; chunklet-end-i: 2176
i: 2140
end-i: 2176
i: 2140
end-i: 2176
i: 2144
end-i: 2176
i: 2148
end-i: 2176
i: 2152
end-i: 2176
i: 2156
end-i: 2176
i: 2160
end-i: 2176
i: 2172
end-i: 2176
i: 2176
end-i: 2176
at header: 2176
(comment . ";;2140: r9 <- 0x4")
(comment . ";;2144: r4 <- r1, 0x10\n")
(comment . ";;2148: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2156: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2172: b r6")
chunklet-i: 2176; chunklet-start-i: 2192; chunklet-end-i: 2216
i: 2176
end-i: 2216
at header: 2176
i: 2192
end-i: 2216
i: 2196
end-i: 2216
i: 2200
end-i: 2216
i: 2204
end-i: 2216
i: 2208
end-i: 2216
i: 2212
end-i: 2216
i: 2216
end-i: 2216
i:2216 HIT CHUNK END
(comment . ";;2192: r1 <- r1, r8")
(comment . ";;2196: r15 <- 0x4")
(comment . ";;2200: r4 <- r1, 0x10\n")
(comment . ";;2204: r15 <- 0x6")
(comment . ";;2212 b -900")
chunklet-i: 2216; chunklet-start-i: 2216; chunklet-end-i: 2220
i: 2216
end-i: 2220
i: 2220
end-i: 2220
i:2220 HIT CHUNK END
(comment . ";;2216 b -664")
chunklet-i: 2220; chunklet-start-i: 2220; chunklet-end-i: 2228
i: 2220
end-i: 2228
i: 2220
end-i: 2228
i: 2224
end-i: 2228
i: 2228
end-i: 2228
i:2228 HIT CHUNK END
(comment . ";;2220: r3 <- r3, 0x1\n")
(comment . ";;2224 b 68")
chunklet-i: 2228; chunklet-start-i: 2228; chunklet-end-i: 2264
i: 2228
end-i: 2264
i: 2232
end-i: 2264
i: 2236
end-i: 2264
i: 2240
end-i: 2264
i: 2244
end-i: 2264
i: 2248
end-i: 2264
i: 2260
end-i: 2264
i: 2264
end-i: 2264
at header: 2264
(comment . ";;2228: r4 <- r1, 0x10\n")
(comment . ";;2232: r9 <- r1, 0x8\n")
(comment . ";;2236: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2244: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2260: b r6")
chunklet-i: 2264; chunklet-start-i: 2280; chunklet-end-i: 2296
i: 2264
end-i: 2296
at header: 2264
i: 2280
end-i: 2296
i: 2284
end-i: 2296
i: 2288
end-i: 2296
i: 2292
end-i: 2296
i: 2296
end-i: 2296
i:2296 HIT CHUNK END
(comment . ";;2284: r1 <- r1, r8")
(comment . ";;2288: r4 <- r1, 0x10\n")
(comment . ";;2292: r9 <- r1, 0x8\n")
chunklet-i: 2296; chunklet-start-i: 2296; chunklet-end-i: 2328
i: 2296
end-i: 2328
i: 2296
end-i: 2328
i: 2300
end-i: 2328
i: 2304
end-i: 2328
i: 2308
end-i: 2328
i: 2312
end-i: 2328
i: 2324
end-i: 2328
i: 2328
end-i: 2328
at header: 2328
(comment . ";;2296: r4 <- r1, 0x10\n")
(comment . ";;2300: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2308: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2324: b r6")
chunklet-i: 2328; chunklet-start-i: 2344; chunklet-end-i: 2360
i: 2328
end-i: 2360
at header: 2328
i: 2344
end-i: 2360
i: 2348
end-i: 2360
i: 2352
end-i: 2360
i: 2356
end-i: 2360
i: 2360
end-i: 2360
i:2360 HIT CHUNK END
(comment . ";;2344: r1 <- r1, r8")
(comment . ";;2348: r10 <- 0x4")
(comment . ";;2352: r4 <- r1, 0x10\n")
(comment . ";;2356 b -1064")
chunklet-i: 2360; chunklet-start-i: 2360; chunklet-end-i: 2372
i: 2360
end-i: 2372
i: 2360
end-i: 2372
i: 2364
end-i: 2372
i: 2368
end-i: 2372
i: 2372
end-i: 2372
i:2372 HIT CHUNK END
(comment . ";;2360: r7 <- r0, 0x68\n")
(comment . ";;2364: r2 <- r7")
(comment . ";;2368 b 16")
chunklet-i: 2372; chunklet-start-i: 2372; chunklet-end-i: 2388
i: 2372
end-i: 2388
i: 2372
end-i: 2388
i: 2376
end-i: 2388
i: 2380
end-i: 2388
i: 2384
end-i: 2388
i: 2388
end-i: 2388
i:2388 HIT CHUNK END
(comment . ";;2372: r7 <- r7, r8")
(comment . ";;2376: r7 <- r0, 0x68\n")
(comment . ";;2380: r15 <- r7, 0x0\n")
(comment . ";;2384 b -1120")
chunklet-i: 2388; chunklet-start-i: 2388; chunklet-end-i: 2400
i: 2388
end-i: 2400
i: 2388
end-i: 2400
i: 2400
end-i: 2400
i:2400 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 2400; chunklet-start-i: 2404; chunklet-end-i: 2412
i: 2400
end-i: 2412
i: 2404
end-i: 2412
i: 2408
end-i: 2412
i: 2412
end-i: 2412
i:2412 HIT CHUNK END
(comment . ";; instruction 2400 not included")
(comment . ";;2404: r7 <- r0, 0x68\n")
(comment . ";;2408 b -40")
chunklet-i: 2412; chunklet-start-i: 2412; chunklet-end-i: 2436
i: 2412
end-i: 2436
i: 2412
end-i: 2436
i: 2416
end-i: 2436
i: 2420
end-i: 2436
i: 2432
end-i: 2436
i: 2436
end-i: 2436
i:2436 HIT CHUNK END
(comment . ";;2412: r9 <- 0x4")
(comment . ";;2416: r10 <- 0xC")
(comment . ";; literal r6")
(comment . ";;2432: b r6")
chunklet-i: 2436; chunklet-start-i: 2436; chunklet-end-i: 2444
i: 2436
end-i: 2444
i: 2436
end-i: 2444
i: 2440
end-i: 2444
i: 2444
end-i: 2444
i:2444 HIT CHUNK END
(comment . ";;2436: r3 <- r3, 0x1\n")
(comment . ";;2440 b 80")
chunklet-i: 2444; chunklet-start-i: 2444; chunklet-end-i: 2488
i: 2444
end-i: 2488
i: 2448
end-i: 2488
i: 2452
end-i: 2488
i: 2456
end-i: 2488
i: 2460
end-i: 2488
i: 2464
end-i: 2488
i: 2468
end-i: 2488
i: 2472
end-i: 2488
i: 2484
end-i: 2488
i: 2488
end-i: 2488
at header: 2488
(comment . ";;2444: r13 <- r1, 0x10\n")
(comment . ";;2448: r4 <- r1, 0x18\n")
(comment . ";;2452: r12 <- r1, 0x20\n")
(comment . ";;2456: r9 <- r1, 0x8\n")
(comment . ";;2460: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2468: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2484: b r6")
chunklet-i: 2488; chunklet-start-i: 2504; chunklet-end-i: 2524
i: 2488
end-i: 2524
at header: 2488
i: 2504
end-i: 2524
i: 2508
end-i: 2524
i: 2512
end-i: 2524
i: 2516
end-i: 2524
i: 2520
end-i: 2524
i: 2524
end-i: 2524
i:2524 HIT CHUNK END
(comment . ";;2504: r1 <- r1, r8")
(comment . ";;2508: r13 <- r1, 0x10\n")
(comment . ";;2512: r4 <- r1, 0x18\n")
(comment . ";;2516: r12 <- r1, 0x20\n")
(comment . ";;2520: r9 <- r1, 0x8\n")
chunklet-i: 2524; chunklet-start-i: 2524; chunklet-end-i: 2568
i: 2524
end-i: 2568
i: 2524
end-i: 2568
i: 2528
end-i: 2568
i: 2532
end-i: 2568
i: 2536
end-i: 2568
i: 2540
end-i: 2568
i: 2544
end-i: 2568
i: 2548
end-i: 2568
i: 2552
end-i: 2568
i: 2564
end-i: 2568
i: 2568
end-i: 2568
at header: 2568
(comment . ";;2524: r10 <- 0x8")
(comment . ";;2528: r13 <- r1, 0x10\n")
(comment . ";;2532: r4 <- r1, 0x18\n")
(comment . ";;2536: r12 <- r1, 0x20\n")
(comment . ";;2540: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2548: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2564: b r6")
chunklet-i: 2568; chunklet-start-i: 2584; chunklet-end-i: 2612
i: 2568
end-i: 2612
at header: 2568
i: 2584
end-i: 2612
i: 2588
end-i: 2612
i: 2592
end-i: 2612
i: 2596
end-i: 2612
i: 2600
end-i: 2612
i: 2604
end-i: 2612
i: 2608
end-i: 2612
i: 2612
end-i: 2612
i:2612 HIT CHUNK END
(comment . ";;2584: r1 <- r1, r8")
(comment . ";;2588: r11 <- 0x4")
(comment . ";;2592: r13 <- r1, 0x10\n")
(comment . ";;2596: r4 <- r1, 0x18\n")
(comment . ";;2600: r12 <- r1, 0x20\n")
(comment . ";;2608 b -1412")
chunklet-i: 2612; chunklet-start-i: 2612; chunklet-end-i: 2632
i: 2612
end-i: 2632
i: 2612
end-i: 2632
i: 2616
end-i: 2632
i: 2628
end-i: 2632
i: 2632
end-i: 2632
i:2632 HIT CHUNK END
(comment . ";;2612: r9 <- 0xE")
(comment . ";; literal r6")
(comment . ";;2628: b r6")
chunklet-i: 2632; chunklet-start-i: 2632; chunklet-end-i: 2652
i: 2632
end-i: 2652
i: 2632
end-i: 2652
i: 2636
end-i: 2652
i: 2648
end-i: 2652
i: 2652
end-i: 2652
i:2652 HIT CHUNK END
(comment . ";;2632: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;2648: b r6")
chunklet-i: 2652; chunklet-start-i: 2652; chunklet-end-i: 2660
i: 2652
end-i: 2660
i: 2652
end-i: 2660
i: 2656
end-i: 2660
i: 2660
end-i: 2660
i:2660 HIT CHUNK END
(comment . ";;2652: r3 <- r3, 0x1\n")
(comment . ";;2656 b 100")
chunklet-i: 2660; chunklet-start-i: 2660; chunklet-end-i: 2712
i: 2660
end-i: 2712
i: 2664
end-i: 2712
i: 2668
end-i: 2712
i: 2672
end-i: 2712
i: 2676
end-i: 2712
i: 2680
end-i: 2712
i: 2684
end-i: 2712
i: 2688
end-i: 2712
i: 2692
end-i: 2712
i: 2696
end-i: 2712
i: 2708
end-i: 2712
i: 2712
end-i: 2712
at header: 2712
(comment . ";;2660: r15 <- r1, 0x8\n")
(comment . ";;2664: r13 <- r1, 0x10\n")
(comment . ";;2668: r4 <- r1, 0x18\n")
(comment . ";;2672: r12 <- r1, 0x20\n")
(comment . ";;2676: r14 <- r1, 0x28\n")
(comment . ";;2680: r9 <- r1, 0x30\n")
(comment . ";;2684: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2692: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2708: b r6")
chunklet-i: 2712; chunklet-start-i: 2728; chunklet-end-i: 2760
i: 2712
end-i: 2760
at header: 2712
i: 2728
end-i: 2760
i: 2732
end-i: 2760
i: 2736
end-i: 2760
i: 2740
end-i: 2760
i: 2744
end-i: 2760
i: 2748
end-i: 2760
i: 2752
end-i: 2760
i: 2756
end-i: 2760
i: 2760
end-i: 2760
i:2760 HIT CHUNK END
(comment . ";;2732: r1 <- r1, r8")
(comment . ";;2736: r15 <- r1, 0x8\n")
(comment . ";;2740: r13 <- r1, 0x10\n")
(comment . ";;2744: r4 <- r1, 0x18\n")
(comment . ";;2748: r12 <- r1, 0x20\n")
(comment . ";;2752: r14 <- r1, 0x28\n")
(comment . ";;2756: r9 <- r1, 0x30\n")
chunklet-i: 2760; chunklet-start-i: 2760; chunklet-end-i: 2808
i: 2760
end-i: 2808
i: 2760
end-i: 2808
i: 2764
end-i: 2808
i: 2768
end-i: 2808
i: 2772
end-i: 2808
i: 2776
end-i: 2808
i: 2780
end-i: 2808
i: 2784
end-i: 2808
i: 2788
end-i: 2808
i: 2792
end-i: 2808
i: 2804
end-i: 2808
i: 2808
end-i: 2808
at header: 2808
(comment . ";;2760: r15 <- r1, 0x8\n")
(comment . ";;2764: r13 <- r1, 0x10\n")
(comment . ";;2768: r4 <- r1, 0x18\n")
(comment . ";;2772: r12 <- r1, 0x20\n")
(comment . ";;2776: r14 <- r1, 0x28\n")
(comment . ";;2780: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2788: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2804: b r6")
chunklet-i: 2808; chunklet-start-i: 2824; chunklet-end-i: 2856
i: 2808
end-i: 2856
at header: 2808
i: 2824
end-i: 2856
i: 2828
end-i: 2856
i: 2832
end-i: 2856
i: 2836
end-i: 2856
i: 2840
end-i: 2856
i: 2844
end-i: 2856
i: 2848
end-i: 2856
i: 2852
end-i: 2856
i: 2856
end-i: 2856
i:2856 HIT CHUNK END
(comment . ";;2824: r1 <- r1, r0")
(comment . ";;2828: r9 <- 0x4")
(comment . ";;2832: r15 <- r1, 0x8\n")
(comment . ";;2836: r13 <- r1, 0x10\n")
(comment . ";;2840: r4 <- r1, 0x18\n")
(comment . ";;2844: r12 <- r1, 0x20\n")
(comment . ";;2848: r14 <- r1, 0x28\n")
(comment . ";;2852 b -1776")
chunklet-i: 2856; chunklet-start-i: 2856; chunklet-end-i: 2864
i: 2856
end-i: 2864
i: 2856
end-i: 2864
i: 2860
end-i: 2864
i: 2864
end-i: 2864
i:2864 HIT CHUNK END
(comment . ";;2856: r3 <- r3, 0x1\n")
(comment . ";;2860 b 92")
chunklet-i: 2864; chunklet-start-i: 2864; chunklet-end-i: 2912
i: 2864
end-i: 2912
i: 2868
end-i: 2912
i: 2872
end-i: 2912
i: 2876
end-i: 2912
i: 2880
end-i: 2912
i: 2884
end-i: 2912
i: 2888
end-i: 2912
i: 2892
end-i: 2912
i: 2896
end-i: 2912
i: 2908
end-i: 2912
i: 2912
end-i: 2912
at header: 2912
(comment . ";;2864: r15 <- r1, 0x8\n")
(comment . ";;2868: r13 <- r1, 0x10\n")
(comment . ";;2872: r4 <- r1, 0x18\n")
(comment . ";;2876: r12 <- r1, 0x20\n")
(comment . ";;2880: r9 <- r1, 0x28\n")
(comment . ";;2884: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2892: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2908: b r6")
chunklet-i: 2912; chunklet-start-i: 2928; chunklet-end-i: 2956
i: 2912
end-i: 2956
at header: 2912
i: 2928
end-i: 2956
i: 2932
end-i: 2956
i: 2936
end-i: 2956
i: 2940
end-i: 2956
i: 2944
end-i: 2956
i: 2948
end-i: 2956
i: 2952
end-i: 2956
i: 2956
end-i: 2956
i:2956 HIT CHUNK END
(comment . ";;2932: r1 <- r1, r0")
(comment . ";;2936: r15 <- r1, 0x8\n")
(comment . ";;2940: r13 <- r1, 0x10\n")
(comment . ";;2944: r4 <- r1, 0x18\n")
(comment . ";;2948: r12 <- r1, 0x20\n")
(comment . ";;2952: r9 <- r1, 0x28\n")
chunklet-i: 2956; chunklet-start-i: 2956; chunklet-end-i: 3000
i: 2956
end-i: 3000
i: 2956
end-i: 3000
i: 2960
end-i: 3000
i: 2964
end-i: 3000
i: 2968
end-i: 3000
i: 2972
end-i: 3000
i: 2976
end-i: 3000
i: 2980
end-i: 3000
i: 2984
end-i: 3000
i: 2996
end-i: 3000
i: 3000
end-i: 3000
at header: 3000
(comment . ";;2956: r15 <- r1, 0x8\n")
(comment . ";;2960: r13 <- r1, 0x10\n")
(comment . ";;2964: r4 <- r1, 0x18\n")
(comment . ";;2968: r12 <- r1, 0x20\n")
(comment . ";;2972: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2980: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2996: b r6")
chunklet-i: 3000; chunklet-start-i: 3016; chunklet-end-i: 3048
i: 3000
end-i: 3048
at header: 3000
i: 3016
end-i: 3048
i: 3020
end-i: 3048
i: 3024
end-i: 3048
i: 3028
end-i: 3048
i: 3032
end-i: 3048
i: 3036
end-i: 3048
i: 3040
end-i: 3048
i: 3044
end-i: 3048
i: 3048
end-i: 3048
i:3048 HIT CHUNK END
(comment . ";;3016: r1 <- r1, r8")
(comment . ";;3020: r14 <- 0x4")
(comment . ";;3024: r15 <- r1, 0x8\n")
(comment . ";;3028: r13 <- r1, 0x10\n")
(comment . ";;3032: r4 <- r1, 0x18\n")
(comment . ";;3036: r12 <- r1, 0x20\n")
(comment . ";;3044 b -1996")
chunklet-i: 3048; chunklet-start-i: 3048; chunklet-end-i: 3068
i: 3048
end-i: 3068
i: 3048
end-i: 3068
i: 3052
end-i: 3068
i: 3064
end-i: 3068
i: 3068
end-i: 3068
i:3068 HIT CHUNK END
(comment . ";;3048: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;3064: b r6")
chunklet-i: 3068; chunklet-start-i: 3068; chunklet-end-i: 3076
i: 3068
end-i: 3076
i: 3068
end-i: 3076
i: 3072
end-i: 3076
i: 3076
end-i: 3076
i:3076 HIT CHUNK END
(comment . ";;3068: r3 <- r3, 0x1\n")
(comment . ";;3072 b 84")
chunklet-i: 3076; chunklet-start-i: 3076; chunklet-end-i: 3120
i: 3076
end-i: 3120
i: 3080
end-i: 3120
i: 3084
end-i: 3120
i: 3088
end-i: 3120
i: 3092
end-i: 3120
i: 3096
end-i: 3120
i: 3100
end-i: 3120
i: 3104
end-i: 3120
i: 3116
end-i: 3120
i: 3120
end-i: 3120
at header: 3120
(comment . ";;3076: r15 <- r1, 0x8\n")
(comment . ";;3080: r13 <- r1, 0x10\n")
(comment . ";;3084: r4 <- r1, 0x18\n")
(comment . ";;3088: r9 <- r1, 0x20\n")
(comment . ";;3092: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3100: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3116: b r6")
chunklet-i: 3120; chunklet-start-i: 3136; chunklet-end-i: 3160
i: 3120
end-i: 3160
at header: 3120
i: 3136
end-i: 3160
i: 3140
end-i: 3160
i: 3144
end-i: 3160
i: 3148
end-i: 3160
i: 3152
end-i: 3160
i: 3156
end-i: 3160
i: 3160
end-i: 3160
i:3160 HIT CHUNK END
(comment . ";;3140: r1 <- r1, r8")
(comment . ";;3144: r15 <- r1, 0x8\n")
(comment . ";;3148: r13 <- r1, 0x10\n")
(comment . ";;3152: r4 <- r1, 0x18\n")
(comment . ";;3156: r9 <- r1, 0x20\n")
chunklet-i: 3160; chunklet-start-i: 3160; chunklet-end-i: 3200
i: 3160
end-i: 3200
i: 3160
end-i: 3200
i: 3164
end-i: 3200
i: 3168
end-i: 3200
i: 3172
end-i: 3200
i: 3176
end-i: 3200
i: 3180
end-i: 3200
i: 3184
end-i: 3200
i: 3196
end-i: 3200
i: 3200
end-i: 3200
at header: 3200
(comment . ";;3160: r15 <- r1, 0x8\n")
(comment . ";;3164: r13 <- r1, 0x10\n")
(comment . ";;3168: r4 <- r1, 0x18\n")
(comment . ";;3172: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3196: b r6")
chunklet-i: 3200; chunklet-start-i: 3216; chunklet-end-i: 3240
i: 3200
end-i: 3240
at header: 3200
i: 3216
end-i: 3240
i: 3220
end-i: 3240
i: 3224
end-i: 3240
i: 3228
end-i: 3240
i: 3232
end-i: 3240
i: 3236
end-i: 3240
i: 3240
end-i: 3240
i:3240 HIT CHUNK END
(comment . ";;3216: r1 <- r1, r0")
(comment . ";;3220: r9 <- 0x4")
(comment . ";;3224: r15 <- r1, 0x8\n")
(comment . ";;3228: r13 <- r1, 0x10\n")
(comment . ";;3232: r4 <- r1, 0x18\n")
(comment . ";;3236 b -2264")
chunklet-i: 3240; chunklet-start-i: 3240; chunklet-end-i: 3248
i: 3240
end-i: 3248
i: 3240
end-i: 3248
i: 3244
end-i: 3248
i: 3248
end-i: 3248
i:3248 HIT CHUNK END
(comment . ";;3240: r3 <- r3, 0x1\n")
(comment . ";;3244 b 76")
chunklet-i: 3248; chunklet-start-i: 3248; chunklet-end-i: 3288
i: 3248
end-i: 3288
i: 3252
end-i: 3288
i: 3256
end-i: 3288
i: 3260
end-i: 3288
i: 3264
end-i: 3288
i: 3268
end-i: 3288
i: 3272
end-i: 3288
i: 3284
end-i: 3288
i: 3288
end-i: 3288
at header: 3288
(comment . ";;3248: r15 <- r1, 0x8\n")
(comment . ";;3252: r13 <- r1, 0x10\n")
(comment . ";;3256: r9 <- r1, 0x18\n")
(comment . ";;3260: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3268: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3284: b r6")
chunklet-i: 3288; chunklet-start-i: 3304; chunklet-end-i: 3324
i: 3288
end-i: 3324
at header: 3288
i: 3304
end-i: 3324
i: 3308
end-i: 3324
i: 3312
end-i: 3324
i: 3316
end-i: 3324
i: 3320
end-i: 3324
i: 3324
end-i: 3324
i:3324 HIT CHUNK END
(comment . ";;3308: r1 <- r1, r0")
(comment . ";;3312: r15 <- r1, 0x8\n")
(comment . ";;3316: r13 <- r1, 0x10\n")
(comment . ";;3320: r9 <- r1, 0x18\n")
chunklet-i: 3324; chunklet-start-i: 3324; chunklet-end-i: 3360
i: 3324
end-i: 3360
i: 3324
end-i: 3360
i: 3328
end-i: 3360
i: 3332
end-i: 3360
i: 3336
end-i: 3360
i: 3340
end-i: 3360
i: 3344
end-i: 3360
i: 3356
end-i: 3360
i: 3360
end-i: 3360
at header: 3360
(comment . ";;3324: r15 <- r1, 0x8\n")
(comment . ";;3328: r13 <- r1, 0x10\n")
(comment . ";;3332: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3340: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3356: b r6")
chunklet-i: 3360; chunklet-start-i: 3376; chunklet-end-i: 3396
i: 3360
end-i: 3396
at header: 3360
i: 3376
end-i: 3396
i: 3380
end-i: 3396
i: 3384
end-i: 3396
i: 3388
end-i: 3396
i: 3392
end-i: 3396
i: 3396
end-i: 3396
i:3396 HIT CHUNK END
(comment . ";;3376: r1 <- r1, r8")
(comment . ";;3380: r15 <- r1, 0x8\n")
(comment . ";;3384: r13 <- r1, 0x10\n")
(comment . ";;3392 b -2448")
chunklet-i: 3396; chunklet-start-i: 3396; chunklet-end-i: 3404
i: 3396
end-i: 3404
i: 3396
end-i: 3404
i: 3400
end-i: 3404
i: 3404
end-i: 3404
i:3404 HIT CHUNK END
(comment . ";;3396: r3 <- r3, 0x1\n")
(comment . ";;3400 b 80")
chunklet-i: 3404; chunklet-start-i: 3404; chunklet-end-i: 3448
i: 3404
end-i: 3448
i: 3408
end-i: 3448
i: 3412
end-i: 3448
i: 3416
end-i: 3448
i: 3420
end-i: 3448
i: 3424
end-i: 3448
i: 3428
end-i: 3448
i: 3432
end-i: 3448
i: 3444
end-i: 3448
i: 3448
end-i: 3448
at header: 3448
(comment . ";;3404: r15 <- r1, 0x8\n")
(comment . ";;3408: r13 <- r1, 0x10\n")
(comment . ";;3412: r12 <- r1, 0x18\n")
(comment . ";;3416: r4 <- r1, 0x20\n")
(comment . ";;3420: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3444: b r6")
chunklet-i: 3448; chunklet-start-i: 3464; chunklet-end-i: 3484
i: 3448
end-i: 3484
at header: 3448
i: 3464
end-i: 3484
i: 3468
end-i: 3484
i: 3472
end-i: 3484
i: 3476
end-i: 3484
i: 3480
end-i: 3484
i: 3484
end-i: 3484
i:3484 HIT CHUNK END
(comment . ";;3464: r1 <- r1, r8")
(comment . ";;3468: r15 <- r1, 0x8\n")
(comment . ";;3472: r13 <- r1, 0x10\n")
(comment . ";;3476: r12 <- r1, 0x18\n")
(comment . ";;3480: r4 <- r1, 0x20\n")
chunklet-i: 3484; chunklet-start-i: 3484; chunklet-end-i: 3536
i: 3484
end-i: 3536
i: 3484
end-i: 3536
i: 3488
end-i: 3536
i: 3492
end-i: 3536
i: 3496
end-i: 3536
i: 3500
end-i: 3536
i: 3504
end-i: 3536
i: 3508
end-i: 3536
i: 3512
end-i: 3536
i: 3516
end-i: 3536
i: 3520
end-i: 3536
i: 3532
end-i: 3536
i: 3536
end-i: 3536
at header: 3536
(comment . ";;3484: r9 <- 0x4")
(comment . ";;3488: r10 <- 0xC")
(comment . ";;3492: r15 <- r1, 0x8\n")
(comment . ";;3496: r13 <- r1, 0x10\n")
(comment . ";;3500: r12 <- r1, 0x18\n")
(comment . ";;3504: r4 <- r1, 0x20\n")
(comment . ";;3508: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3516: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3532: b r6")
chunklet-i: 3536; chunklet-start-i: 3552; chunklet-end-i: 3584
i: 3536
end-i: 3584
at header: 3536
i: 3552
end-i: 3584
i: 3556
end-i: 3584
i: 3560
end-i: 3584
i: 3564
end-i: 3584
i: 3568
end-i: 3584
i: 3572
end-i: 3584
i: 3576
end-i: 3584
i: 3580
end-i: 3584
i: 3584
end-i: 3584
i:3584 HIT CHUNK END
(comment . ";;3552: r1 <- r1, r8")
(comment . ";;3556: r14 <- 0x4")
(comment . ";;3560: r15 <- r1, 0x8\n")
(comment . ";;3564: r13 <- r1, 0x10\n")
(comment . ";;3568: r12 <- r1, 0x18\n")
(comment . ";;3572: r4 <- r1, 0x20\n")
(comment . ";;3576: r14 <- 0x6")
(comment . ";;3580 b -3460")
chunklet-i: 3584; chunklet-start-i: 3584; chunklet-end-i: 3588
i: 3584
end-i: 3588
i: 3588
end-i: 3588
i:3588 HIT CHUNK END
(comment . ";;3584 b -2664")
chunklet-i: 3588; chunklet-start-i: 3588; chunklet-end-i: 3608
i: 3588
end-i: 3608
i: 3588
end-i: 3608
i: 3592
end-i: 3608
i: 3604
end-i: 3608
i: 3608
end-i: 3608
i:3608 HIT CHUNK END
(comment . ";;3588: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;3604: b r6")
chunklet-i: 3608; chunklet-start-i: 3608; chunklet-end-i: 3616
i: 3608
end-i: 3616
i: 3608
end-i: 3616
i: 3612
end-i: 3616
i: 3616
end-i: 3616
i:3616 HIT CHUNK END
(comment . ";;3608: r3 <- r3, 0x1\n")
(comment . ";;3612 b 76")
chunklet-i: 3616; chunklet-start-i: 3616; chunklet-end-i: 3656
i: 3616
end-i: 3656
i: 3620
end-i: 3656
i: 3624
end-i: 3656
i: 3628
end-i: 3656
i: 3632
end-i: 3656
i: 3636
end-i: 3656
i: 3640
end-i: 3656
i: 3652
end-i: 3656
i: 3656
end-i: 3656
at header: 3656
(comment . ";;3616: r15 <- r1, 0x8\n")
(comment . ";;3620: r13 <- r1, 0x10\n")
(comment . ";;3624: r9 <- r1, 0x18\n")
(comment . ";;3628: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3636: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3652: b r6")
chunklet-i: 3656; chunklet-start-i: 3672; chunklet-end-i: 3692
i: 3656
end-i: 3692
at header: 3656
i: 3672
end-i: 3692
i: 3676
end-i: 3692
i: 3680
end-i: 3692
i: 3684
end-i: 3692
i: 3688
end-i: 3692
i: 3692
end-i: 3692
i:3692 HIT CHUNK END
(comment . ";;3676: r1 <- r1, r0")
(comment . ";;3680: r15 <- r1, 0x8\n")
(comment . ";;3684: r13 <- r1, 0x10\n")
(comment . ";;3688: r9 <- r1, 0x18\n")
chunklet-i: 3692; chunklet-start-i: 3692; chunklet-end-i: 3728
i: 3692
end-i: 3728
i: 3692
end-i: 3728
i: 3696
end-i: 3728
i: 3700
end-i: 3728
i: 3704
end-i: 3728
i: 3708
end-i: 3728
i: 3712
end-i: 3728
i: 3724
end-i: 3728
i: 3728
end-i: 3728
at header: 3728
(comment . ";;3692: r15 <- r1, 0x8\n")
(comment . ";;3696: r13 <- r1, 0x10\n")
(comment . ";;3700: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3708: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3724: b r6")
chunklet-i: 3728; chunklet-start-i: 3744; chunklet-end-i: 3764
i: 3728
end-i: 3764
at header: 3728
i: 3744
end-i: 3764
i: 3748
end-i: 3764
i: 3752
end-i: 3764
i: 3756
end-i: 3764
i: 3760
end-i: 3764
i: 3764
end-i: 3764
i:3764 HIT CHUNK END
(comment . ";;3744: r1 <- r1, r8")
(comment . ";;3748: r9 <- 0x4")
(comment . ";;3752: r15 <- r1, 0x8\n")
(comment . ";;3756: r13 <- r1, 0x10\n")
(comment . ";;3760 b -3716")
chunklet-i: 3764; chunklet-start-i: 3764; chunklet-end-i: 3780
i: 3764
end-i: 3780
i: 3764
end-i: 3780
i: 3776
end-i: 3780
i: 3780
end-i: 3780
i:3780 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;3776: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: puzzle-remove
instruction range for chunk: 0 12
instruction range for chunk: 12 44
instruction range for chunk: 44 48
instruction range for chunk: 48 60
instruction range for chunk: 60 80
instruction range for chunk: 80 92
instruction range for chunk: 92 104
instruction range for chunk: 104 116
instruction range for chunk: 116 124
instruction range for chunk: 124 132
instruction range for chunk: 132 156
instruction range for chunk: 156 160
instruction range for chunk: 160 172
instruction range for chunk: 172 192
instruction range for chunk: 192 204
instruction range for chunk: 204 224
instruction range for chunk: 224 244
instruction range for chunk: 244 256
instruction range for chunk: 256 272
instruction range for chunk: 272 296
instruction range for chunk: 296 308
instruction range for chunk: 308 316
instruction range for chunk: 316 328
instruction range for chunk: 328 340
instruction range for chunk: 340 348
instruction range for chunk: 348 364
instruction range for chunk: 364 376
instruction range for chunk: 376 384
instruction range for chunk: 384 392
instruction range for chunk: 392 400
instruction range for chunk: 400 448
instruction range for chunk: 464 488
instruction range for chunk: 488 512
instruction range for chunk: 512 568
instruction range for chunk: 584 620
instruction range for chunk: 620 664
instruction range for chunk: 680 708
instruction range for chunk: 708 728
instruction range for chunk: 728 748
instruction range for chunk: 748 792
instruction range for chunk: 808 836
instruction range for chunk: 836 880
instruction range for chunk: 896 920
instruction range for chunk: 920 944
instruction range for chunk: 944 968
instruction range for chunk: 968 972
instruction range for chunk: 972 984
instruction range for chunk: 984 1004
instruction range for chunk: 1004 1016
instruction range for chunk: 1016 1048
instruction range for chunk: 1048 1072
instruction range for chunk: 1072 1076
instruction range for chunk: 1076 1088
instruction range for chunk: 1088 1108
instruction range for chunk: 1108 1120
instruction range for chunk: 1120 1140
instruction range for chunk: 1140 1160
instruction range for chunk: 1160 1172
instruction range for chunk: 1172 1188
instruction range for chunk: 1188 1196
instruction range for chunk: 1196 1208
instruction range for chunk: 1208 1220
instruction range for chunk: 1220 1228
instruction range for chunk: 1228 1244
instruction range for chunk: 1244 1264
instruction range for chunk: 1264 1272
instruction range for chunk: 1272 1284
instruction range for chunk: 1284 1304
instruction range for chunk: 1304 1316
instruction range for chunk: 1320 1328
instruction range for chunk: 1328 1352
instruction range for chunk: 1352 1360
instruction range for chunk: 1360 1400
instruction range for chunk: 1416 1432
instruction range for chunk: 1432 1472
instruction range for chunk: 1488 1512
instruction range for chunk: 1512 1532
instruction range for chunk: 1532 1552
instruction range for chunk: 1552 1560
instruction range for chunk: 1560 1608
instruction range for chunk: 1624 1652
instruction range for chunk: 1652 1696
instruction range for chunk: 1712 1740
instruction range for chunk: 1740 1748
instruction range for chunk: 1748 1792
instruction range for chunk: 1808 1832
instruction range for chunk: 1832 1872
instruction range for chunk: 1888 1916
instruction range for chunk: 1916 1936
instruction range for chunk: 1936 1944
instruction range for chunk: 1944 1984
instruction range for chunk: 2000 2020
instruction range for chunk: 2020 2056
instruction range for chunk: 2072 2092
instruction range for chunk: 2092 2100
instruction range for chunk: 2100 2136
instruction range for chunk: 2152 2168
instruction range for chunk: 2168 2200
instruction range for chunk: 2216 2228
instruction range for chunk: 2228 2236
instruction range for chunk: 2236 2280
instruction range for chunk: 2296 2316
instruction range for chunk: 2316 2368
instruction range for chunk: 2384 2416
instruction range for chunk: 2416 2420
instruction range for chunk: 2420 2440
instruction range for chunk: 2440 2448
instruction range for chunk: 2448 2488
instruction range for chunk: 2504 2524
instruction range for chunk: 2524 2560
instruction range for chunk: 2576 2596
instruction range for chunk: 2596 2612
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x2")
(comment . ";;8 b 2584")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;12: r15 <- 0x9")
(comment . ";;16: r13 <- 0xA")
(comment . ";; literal r9")
(comment . ";;32: r14 <- r9, 0x5\n")
(comment . ";;36: r14 <- 0x1E")
(comment . ";;40 b 2396")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;44: r9 <- 0xE")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 60
i: 48
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;48: r14 <- r9, r7")
(comment . ";;52: r14 <- 0x7")
(comment . ";;56 b 2360")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 80
i: 60
end-i: 80
i: 64
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;60: r12 <- r9, 0x1\n")
(comment . ";;64: r14 <- r12, r1")
(comment . ";;68: r14 <- r14, r8")
(comment . ";;72: r15 <- r14")
(comment . ";;76 b 2340")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;80: r14 <- r15, r12")
(comment . ";;84: r14 <- 0x7")
(comment . ";;88 b 2328")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;92: r14 <- r15, r9")
(comment . ";;96: r12 <- r9, r14")
(comment . ";;100: r4 <- 0x0")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 116
i: 104
end-i: 116
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r14 <- r4, r12")
(comment . ";;108: r14 <- 0x7")
(comment . ";;112 b 2112")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;116: r4 <- r12")
(comment . ";;120 b 796")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 132
i: 124
end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;124: r3 <- r3, 0x1\n")
(comment . ";;128 b 704")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 156
i: 132
end-i: 156
i: 132
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;144: r14 <- r9, 0x5\n")
(comment . ";;148: r14 <- 0x1E")
(comment . ";;152 b 592")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;156: r9 <- 0xE")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 172
i: 160
end-i: 172
i: 160
end-i: 172
i: 164
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";;160: r14 <- r9, r7")
(comment . ";;164: r14 <- 0x7")
(comment . ";;168 b 556")
chunklet-i: 172; chunklet-start-i: 172; chunklet-end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";;172: r11 <- r9, 0x1\n")
(comment . ";;176: r14 <- r11, r1")
(comment . ";;180: r14 <- r14, r8")
(comment . ";;184: r15 <- r14")
(comment . ";;188 b 536")
chunklet-i: 192; chunklet-start-i: 192; chunklet-end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";;192: r14 <- r15, r11")
(comment . ";;196: r14 <- 0x7")
(comment . ";;200 b 524")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 224
i: 204
end-i: 224
i: 208
end-i: 224
i: 212
end-i: 224
i: 216
end-i: 224
i: 220
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";;204: r14 <- r15, r9")
(comment . ";;208: r9 <- r9, r14")
(comment . ";;212: r14 <- r9, r7")
(comment . ";;216: r14 <- 0x7")
(comment . ";;220 b 484")
chunklet-i: 224; chunklet-start-i: 224; chunklet-end-i: 244
i: 224
end-i: 244
i: 228
end-i: 244
i: 232
end-i: 244
i: 236
end-i: 244
i: 240
end-i: 244
i: 244
end-i: 244
i:244 HIT CHUNK END
(comment . ";;224: r11 <- r9, 0x1\n")
(comment . ";;228: r14 <- r11, r1")
(comment . ";;232: r14 <- r14, r8")
(comment . ";;236: r4 <- r14")
(comment . ";;240 b 464")
chunklet-i: 244; chunklet-start-i: 244; chunklet-end-i: 256
i: 244
end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;244: r14 <- r4, r11")
(comment . ";;248: r14 <- 0x7")
(comment . ";;252 b 452")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 272
i: 256
end-i: 272
i: 260
end-i: 272
i: 264
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
i:272 HIT CHUNK END
(comment . ";;256: r14 <- r4, r9")
(comment . ";;260: r14 <- r9, r14")
(comment . ";;264: r14 <- 0x6")
(comment . ";;268 b 104")
chunklet-i: 272; chunklet-start-i: 272; chunklet-end-i: 296
i: 272
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;284: r14 <- r9, 0x5\n")
(comment . ";;288: r14 <- 0x1E")
(comment . ";;292 b 324")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 308
i: 296
end-i: 308
i: 296
end-i: 308
i: 300
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;296: r11 <- r13, r4")
(comment . ";;300: r11 <- 0x7")
(comment . ";;304 b 204")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 316
i: 308
end-i: 316
i: 312
end-i: 316
i: 316
end-i: 316
i:316 HIT CHUNK END
(comment . ";;308: r10 <- r13, r4")
(comment . ";;312 b 196")
chunklet-i: 316; chunklet-start-i: 316; chunklet-end-i: 328
i: 316
end-i: 328
i: 316
end-i: 328
i: 320
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
i:328 HIT CHUNK END
(comment . ";;316: r11 <- r14, r7")
(comment . ";;320: r11 <- 0x7")
(comment . ";;324 b 160")
chunklet-i: 328; chunklet-start-i: 328; chunklet-end-i: 340
i: 328
end-i: 340
i: 332
end-i: 340
i: 336
end-i: 340
i: 340
end-i: 340
i:340 HIT CHUNK END
(comment . ";;328: r11 <- r14, 0x1\n")
(comment . ";;332: r11 <- 0xF")
(comment . ";;336 b 148")
chunklet-i: 340; chunklet-start-i: 340; chunklet-end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";;340: r10 <- 0x7")
(comment . ";;344 b 140")
chunklet-i: 348; chunklet-start-i: 348; chunklet-end-i: 364
i: 348
end-i: 364
i: 352
end-i: 364
i: 356
end-i: 364
i: 360
end-i: 364
i: 364
end-i: 364
i:364 HIT CHUNK END
(comment . ";;348: r11 <- r11, r1")
(comment . ";;352: r11 <- r11, r8")
(comment . ";;356: r10 <- r11")
(comment . ";;360 b 124")
chunklet-i: 364; chunklet-start-i: 364; chunklet-end-i: 376
i: 364
end-i: 376
i: 368
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
i:376 HIT CHUNK END
(comment . ";;364: r9 <- 0x6")
(comment . ";;368: r11 <- r10, r9")
(comment . ";;372: r9 <- r14, r11")
chunklet-i: 376; chunklet-start-i: 376; chunklet-end-i: 384
i: 376
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
i:384 HIT CHUNK END
(comment . ";;376: r4 <- 0x7")
(comment . ";;380 b 16")
chunklet-i: 384; chunklet-start-i: 384; chunklet-end-i: 392
i: 384
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
i:392 HIT CHUNK END
(comment . ";;384: r14 <- r4, 0x8\n")
(comment . ";;388 b 8")
chunklet-i: 392; chunklet-start-i: 392; chunklet-end-i: 400
i: 392
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
i:400 HIT CHUNK END
(comment . ";;392: r4 <- 0xE")
(comment . ";;396 b -296")
chunklet-i: 400; chunklet-start-i: 400; chunklet-end-i: 448
i: 400
end-i: 448
i: 400
end-i: 448
i: 404
end-i: 448
i: 408
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 420
end-i: 448
i: 424
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;400: r9 <- 0x8")
(comment . ";;404: r10 <- 0x4")
(comment . ";;408: r15 <- r1, 0x8\n")
(comment . ";;412: r13 <- r1, 0x10\n")
(comment . ";;416: r12 <- r1, 0x18\n")
(comment . ";;420: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;444: b r6")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 488
i: 448
end-i: 488
at header: 448
i: 464
end-i: 488
i: 468
end-i: 488
i: 472
end-i: 488
i: 476
end-i: 488
i: 480
end-i: 488
i: 484
end-i: 488
i: 488
end-i: 488
i:488 HIT CHUNK END
(comment . ";;464: r1 <- r1, r0")
(comment . ";;468: r15 <- r1, 0x8\n")
(comment . ";;472: r13 <- r1, 0x10\n")
(comment . ";;476: r12 <- r1, 0x18\n")
(comment . ";;484 b -384")
chunklet-i: 488; chunklet-start-i: 488; chunklet-end-i: 512
i: 488
end-i: 512
i: 488
end-i: 512
i: 492
end-i: 512
i: 496
end-i: 512
i: 508
end-i: 512
i: 512
end-i: 512
i:512 HIT CHUNK END
(comment . ";;488: r9 <- 0xE")
(comment . ";;492: r11 <- 0x6")
(comment . ";; literal r6")
(comment . ";;508: b r6")
chunklet-i: 512; chunklet-start-i: 512; chunklet-end-i: 568
i: 512
end-i: 568
i: 512
end-i: 568
i: 516
end-i: 568
i: 520
end-i: 568
i: 524
end-i: 568
i: 528
end-i: 568
i: 532
end-i: 568
i: 536
end-i: 568
i: 540
end-i: 568
i: 544
end-i: 568
i: 548
end-i: 568
i: 552
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
at header: 568
(comment . ";;512: r9 <- 0xD")
(comment . ";;516: r10 <- 0x4")
(comment . ";;520: r15 <- r1, 0x8\n")
(comment . ";;524: r13 <- r1, 0x10\n")
(comment . ";;528: r12 <- r1, 0x18\n")
(comment . ";;532: r4 <- r1, 0x20\n")
(comment . ";;536: r14 <- r1, 0x28\n")
(comment . ";;540: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;548: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;564: b r6")
chunklet-i: 568; chunklet-start-i: 584; chunklet-end-i: 620
i: 568
end-i: 620
at header: 568
i: 584
end-i: 620
i: 588
end-i: 620
i: 592
end-i: 620
i: 596
end-i: 620
i: 600
end-i: 620
i: 604
end-i: 620
i: 608
end-i: 620
i: 612
end-i: 620
i: 616
end-i: 620
i: 620
end-i: 620
i:620 HIT CHUNK END
(comment . ";;584: r1 <- r1, r0")
(comment . ";;588: r10 <- 0x4")
(comment . ";;592: r15 <- r1, 0x8\n")
(comment . ";;596: r13 <- r1, 0x10\n")
(comment . ";;600: r12 <- r1, 0x18\n")
(comment . ";;604: r4 <- r1, 0x20\n")
(comment . ";;608: r14 <- r1, 0x28\n")
(comment . ";;616 b -304")
chunklet-i: 620; chunklet-start-i: 620; chunklet-end-i: 664
i: 620
end-i: 664
i: 620
end-i: 664
i: 624
end-i: 664
i: 628
end-i: 664
i: 632
end-i: 664
i: 636
end-i: 664
i: 640
end-i: 664
i: 644
end-i: 664
i: 648
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
at header: 664
(comment . ";;620: r15 <- r1, 0x8\n")
(comment . ";;624: r13 <- r1, 0x10\n")
(comment . ";;628: r12 <- r1, 0x18\n")
(comment . ";;632: r4 <- r1, 0x20\n")
(comment . ";;636: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;644: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;660: b r6")
chunklet-i: 664; chunklet-start-i: 680; chunklet-end-i: 708
i: 664
end-i: 708
at header: 664
i: 680
end-i: 708
i: 684
end-i: 708
i: 688
end-i: 708
i: 692
end-i: 708
i: 696
end-i: 708
i: 700
end-i: 708
i: 704
end-i: 708
i: 708
end-i: 708
i:708 HIT CHUNK END
(comment . ";;680: r1 <- r1, r8")
(comment . ";;684: r14 <- 0x4")
(comment . ";;688: r15 <- r1, 0x8\n")
(comment . ";;692: r13 <- r1, 0x10\n")
(comment . ";;696: r12 <- r1, 0x18\n")
(comment . ";;700: r4 <- r1, 0x20\n")
(comment . ";;704 b -412")
chunklet-i: 708; chunklet-start-i: 708; chunklet-end-i: 728
i: 708
end-i: 728
i: 708
end-i: 728
i: 712
end-i: 728
i: 724
end-i: 728
i: 728
end-i: 728
i:728 HIT CHUNK END
(comment . ";;708: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;724: b r6")
chunklet-i: 728; chunklet-start-i: 728; chunklet-end-i: 748
i: 728
end-i: 748
i: 728
end-i: 748
i: 732
end-i: 748
i: 744
end-i: 748
i: 748
end-i: 748
i:748 HIT CHUNK END
(comment . ";;728: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;744: b r6")
chunklet-i: 748; chunklet-start-i: 748; chunklet-end-i: 792
i: 748
end-i: 792
i: 748
end-i: 792
i: 752
end-i: 792
i: 756
end-i: 792
i: 760
end-i: 792
i: 764
end-i: 792
i: 768
end-i: 792
i: 772
end-i: 792
i: 776
end-i: 792
i: 788
end-i: 792
i: 792
end-i: 792
at header: 792
(comment . ";;748: r15 <- r1, 0x8\n")
(comment . ";;752: r13 <- r1, 0x10\n")
(comment . ";;756: r12 <- r1, 0x18\n")
(comment . ";;760: r4 <- r1, 0x20\n")
(comment . ";;764: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;772: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;788: b r6")
chunklet-i: 792; chunklet-start-i: 808; chunklet-end-i: 836
i: 792
end-i: 836
at header: 792
i: 808
end-i: 836
i: 812
end-i: 836
i: 816
end-i: 836
i: 820
end-i: 836
i: 824
end-i: 836
i: 828
end-i: 836
i: 832
end-i: 836
i: 836
end-i: 836
i:836 HIT CHUNK END
(comment . ";;808: r1 <- r1, r8")
(comment . ";;812: r9 <- 0x4")
(comment . ";;816: r15 <- r1, 0x8\n")
(comment . ";;820: r13 <- r1, 0x10\n")
(comment . ";;824: r12 <- r1, 0x18\n")
(comment . ";;828: r4 <- r1, 0x20\n")
(comment . ";;832 b -676")
chunklet-i: 836; chunklet-start-i: 836; chunklet-end-i: 880
i: 836
end-i: 880
i: 836
end-i: 880
i: 840
end-i: 880
i: 844
end-i: 880
i: 848
end-i: 880
i: 852
end-i: 880
i: 856
end-i: 880
i: 860
end-i: 880
i: 864
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
at header: 880
(comment . ";;836: r15 <- r1, 0x8\n")
(comment . ";;840: r13 <- r1, 0x10\n")
(comment . ";;844: r12 <- r1, 0x18\n")
(comment . ";;848: r4 <- r1, 0x20\n")
(comment . ";;852: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;860: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;876: b r6")
chunklet-i: 880; chunklet-start-i: 896; chunklet-end-i: 920
i: 880
end-i: 920
at header: 880
i: 896
end-i: 920
i: 900
end-i: 920
i: 904
end-i: 920
i: 908
end-i: 920
i: 912
end-i: 920
i: 916
end-i: 920
i: 920
end-i: 920
i:920 HIT CHUNK END
(comment . ";;896: r1 <- r1, r8")
(comment . ";;900: r15 <- r1, 0x8\n")
(comment . ";;904: r13 <- r1, 0x10\n")
(comment . ";;908: r12 <- r1, 0x18\n")
(comment . ";;912: r4 <- r1, 0x20\n")
(comment . ";;916 b -788")
chunklet-i: 920; chunklet-start-i: 920; chunklet-end-i: 944
i: 920
end-i: 944
i: 920
end-i: 944
i: 932
end-i: 944
i: 936
end-i: 944
i: 940
end-i: 944
i: 944
end-i: 944
i:944 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;932: r4 <- r9, 0x5\n")
(comment . ";;936: r4 <- 0x1E")
(comment . ";;940 b 1148")
chunklet-i: 944; chunklet-start-i: 944; chunklet-end-i: 968
i: 944
end-i: 968
i: 944
end-i: 968
i: 956
end-i: 968
i: 960
end-i: 968
i: 964
end-i: 968
i: 968
end-i: 968
i:968 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;956: r14 <- r9, 0x5\n")
(comment . ";;960: r14 <- 0x1E")
(comment . ";;964 b 968")
chunklet-i: 968; chunklet-start-i: 968; chunklet-end-i: 972
i: 968
end-i: 972
i: 972
end-i: 972
i:972 HIT CHUNK END
(comment . ";;968: r9 <- 0xE")
chunklet-i: 972; chunklet-start-i: 972; chunklet-end-i: 984
i: 972
end-i: 984
i: 972
end-i: 984
i: 976
end-i: 984
i: 980
end-i: 984
i: 984
end-i: 984
i:984 HIT CHUNK END
(comment . ";;972: r14 <- r9, r7")
(comment . ";;976: r14 <- 0x7")
(comment . ";;980 b 932")
chunklet-i: 984; chunklet-start-i: 984; chunklet-end-i: 1004
i: 984
end-i: 1004
i: 988
end-i: 1004
i: 992
end-i: 1004
i: 996
end-i: 1004
i: 1000
end-i: 1004
i: 1004
end-i: 1004
i:1004 HIT CHUNK END
(comment . ";;984: r13 <- r9, 0x1\n")
(comment . ";;988: r14 <- r13, r1")
(comment . ";;992: r14 <- r14, r8")
(comment . ";;996: r15 <- r14")
(comment . ";;1000 b 912")
chunklet-i: 1004; chunklet-start-i: 1004; chunklet-end-i: 1016
i: 1004
end-i: 1016
i: 1008
end-i: 1016
i: 1012
end-i: 1016
i: 1016
end-i: 1016
i:1016 HIT CHUNK END
(comment . ";;1004: r14 <- r15, r13")
(comment . ";;1008: r14 <- 0x7")
(comment . ";;1012 b 900")
chunklet-i: 1016; chunklet-start-i: 1016; chunklet-end-i: 1048
i: 1016
end-i: 1048
i: 1020
end-i: 1048
i: 1024
end-i: 1048
i: 1036
end-i: 1048
i: 1040
end-i: 1048
i: 1044
end-i: 1048
i: 1048
end-i: 1048
i:1048 HIT CHUNK END
(comment . ";;1016: r14 <- r15, r9")
(comment . ";;1020: r13 <- r9, r14")
(comment . ";; literal r9")
(comment . ";;1036: r14 <- r9, 0x5\n")
(comment . ";;1040: r14 <- 0x1E")
(comment . ";;1044 b 692")
chunklet-i: 1048; chunklet-start-i: 1048; chunklet-end-i: 1072
i: 1048
end-i: 1072
i: 1048
end-i: 1072
i: 1060
end-i: 1072
i: 1064
end-i: 1072
i: 1068
end-i: 1072
i: 1072
end-i: 1072
i:1072 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1060: r12 <- r9, 0x5\n")
(comment . ";;1064: r12 <- 0x1E")
(comment . ";;1068 b 480")
chunklet-i: 1072; chunklet-start-i: 1072; chunklet-end-i: 1076
i: 1072
end-i: 1076
i: 1076
end-i: 1076
i:1076 HIT CHUNK END
(comment . ";;1072: r9 <- 0xC")
chunklet-i: 1076; chunklet-start-i: 1076; chunklet-end-i: 1088
i: 1076
end-i: 1088
i: 1076
end-i: 1088
i: 1080
end-i: 1088
i: 1084
end-i: 1088
i: 1088
end-i: 1088
i:1088 HIT CHUNK END
(comment . ";;1076: r12 <- r9, r7")
(comment . ";;1080: r12 <- 0x7")
(comment . ";;1084 b 444")
chunklet-i: 1088; chunklet-start-i: 1088; chunklet-end-i: 1108
i: 1088
end-i: 1108
i: 1092
end-i: 1108
i: 1096
end-i: 1108
i: 1100
end-i: 1108
i: 1104
end-i: 1108
i: 1108
end-i: 1108
i:1108 HIT CHUNK END
(comment . ";;1088: r11 <- r9, 0x1\n")
(comment . ";;1092: r12 <- r11, r1")
(comment . ";;1096: r12 <- r12, r8")
(comment . ";;1100: r15 <- r12")
(comment . ";;1104 b 424")
chunklet-i: 1108; chunklet-start-i: 1108; chunklet-end-i: 1120
i: 1108
end-i: 1120
i: 1112
end-i: 1120
i: 1116
end-i: 1120
i: 1120
end-i: 1120
i:1120 HIT CHUNK END
(comment . ";;1108: r12 <- r15, r11")
(comment . ";;1112: r12 <- 0x7")
(comment . ";;1116 b 412")
chunklet-i: 1120; chunklet-start-i: 1120; chunklet-end-i: 1140
i: 1120
end-i: 1140
i: 1124
end-i: 1140
i: 1128
end-i: 1140
i: 1132
end-i: 1140
i: 1136
end-i: 1140
i: 1140
end-i: 1140
i:1140 HIT CHUNK END
(comment . ";;1120: r15 <- r15, r9")
(comment . ";;1124: r10 <- r9, r15")
(comment . ";;1128: r15 <- r14, r7")
(comment . ";;1132: r15 <- 0x7")
(comment . ";;1136 b 372")
chunklet-i: 1140; chunklet-start-i: 1140; chunklet-end-i: 1160
i: 1140
end-i: 1160
i: 1144
end-i: 1160
i: 1148
end-i: 1160
i: 1152
end-i: 1160
i: 1156
end-i: 1160
i: 1160
end-i: 1160
i:1160 HIT CHUNK END
(comment . ";;1140: r12 <- r14, 0x1\n")
(comment . ";;1144: r15 <- r12, r1")
(comment . ";;1148: r15 <- r15, r8")
(comment . ";;1152: r10 <- r15")
(comment . ";;1156 b 352")
chunklet-i: 1160; chunklet-start-i: 1160; chunklet-end-i: 1172
i: 1160
end-i: 1172
i: 1164
end-i: 1172
i: 1168
end-i: 1172
i: 1172
end-i: 1172
i:1172 HIT CHUNK END
(comment . ";;1160: r15 <- r10, r12")
(comment . ";;1164: r15 <- 0x7")
(comment . ";;1168 b 340")
chunklet-i: 1172; chunklet-start-i: 1172; chunklet-end-i: 1188
i: 1172
end-i: 1188
i: 1176
end-i: 1188
i: 1180
end-i: 1188
i: 1184
end-i: 1188
i: 1188
end-i: 1188
i:1188 HIT CHUNK END
(comment . ";;1172: r15 <- r10, r9")
(comment . ";;1176: r10 <- r14, r15")
(comment . ";;1180: r10 <- 0x7")
(comment . ";;1184 b 164")
chunklet-i: 1188; chunklet-start-i: 1188; chunklet-end-i: 1196
i: 1188
end-i: 1196
i: 1192
end-i: 1196
i: 1196
end-i: 1196
i:1196 HIT CHUNK END
(comment . ";;1188: r11 <- r10, 0x8\n")
(comment . ";;1192 b 156")
chunklet-i: 1196; chunklet-start-i: 1196; chunklet-end-i: 1208
i: 1196
end-i: 1208
i: 1196
end-i: 1208
i: 1200
end-i: 1208
i: 1204
end-i: 1208
i: 1208
end-i: 1208
i:1208 HIT CHUNK END
(comment . ";;1196: r15 <- r4, r7")
(comment . ";;1200: r15 <- 0x7")
(comment . ";;1204 b 120")
chunklet-i: 1208; chunklet-start-i: 1208; chunklet-end-i: 1220
i: 1208
end-i: 1220
i: 1212
end-i: 1220
i: 1216
end-i: 1220
i: 1220
end-i: 1220
i:1220 HIT CHUNK END
(comment . ";;1208: r15 <- r4, 0x1\n")
(comment . ";;1212: r15 <- 0xF")
(comment . ";;1216 b 108")
chunklet-i: 1220; chunklet-start-i: 1220; chunklet-end-i: 1228
i: 1220
end-i: 1228
i: 1224
end-i: 1228
i: 1228
end-i: 1228
i:1228 HIT CHUNK END
(comment . ";;1220: r13 <- 0x7")
(comment . ";;1224 b 100")
chunklet-i: 1228; chunklet-start-i: 1228; chunklet-end-i: 1244
i: 1228
end-i: 1244
i: 1232
end-i: 1244
i: 1236
end-i: 1244
i: 1240
end-i: 1244
i: 1244
end-i: 1244
i:1244 HIT CHUNK END
(comment . ";;1228: r15 <- r15, r1")
(comment . ";;1232: r15 <- r15, r8")
(comment . ";;1236: r13 <- r15")
(comment . ";;1240 b 84")
chunklet-i: 1244; chunklet-start-i: 1244; chunklet-end-i: 1264
i: 1244
end-i: 1264
i: 1248
end-i: 1264
i: 1252
end-i: 1264
i: 1256
end-i: 1264
i: 1260
end-i: 1264
i: 1264
end-i: 1264
i:1264 HIT CHUNK END
(comment . ";;1244: r15 <- r4, r9")
(comment . ";;1248: r15 <- r13, r15")
(comment . ";;1252: r11 <- r15, 0x0\n")
(comment . ";;1256: r11 <- 0x7")
(comment . ";;1260 b 8")
chunklet-i: 1264; chunklet-start-i: 1264; chunklet-end-i: 1272
i: 1264
end-i: 1272
i: 1268
end-i: 1272
i: 1272
end-i: 1272
i:1272 HIT CHUNK END
(comment . ";;1264: r4 <- 0x2E")
(comment . ";;1268: b r1, 0")
chunklet-i: 1272; chunklet-start-i: 1272; chunklet-end-i: 1284
i: 1272
end-i: 1284
i: 1272
end-i: 1284
i: 1276
end-i: 1284
i: 1280
end-i: 1284
i: 1284
end-i: 1284
i:1284 HIT CHUNK END
(comment . ";;1272: r7 <- r0, 0x68\n")
(comment . ";;1276: r2 <- r7")
(comment . ";;1280 b 20")
chunklet-i: 1284; chunklet-start-i: 1284; chunklet-end-i: 1304
i: 1284
end-i: 1304
i: 1284
end-i: 1304
i: 1288
end-i: 1304
i: 1292
end-i: 1304
i: 1296
end-i: 1304
i: 1300
end-i: 1304
i: 1304
end-i: 1304
i:1304 HIT CHUNK END
(comment . ";;1284: r7 <- r7, r8")
(comment . ";;1288: r7 <- r0, 0x68\n")
(comment . ";;1292: r15 <- r7, 0x0\n")
(comment . ";;1296: r4 <- 0x2E")
(comment . ";;1300: b r1, 0")
chunklet-i: 1304; chunklet-start-i: 1304; chunklet-end-i: 1316
i: 1304
end-i: 1316
i: 1304
end-i: 1316
i: 1316
end-i: 1316
i:1316 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 1316; chunklet-start-i: 1320; chunklet-end-i: 1328
i: 1316
end-i: 1328
i: 1320
end-i: 1328
i: 1324
end-i: 1328
i: 1328
end-i: 1328
i:1328 HIT CHUNK END
(comment . ";; instruction 1316 not included")
(comment . ";;1320: r7 <- r0, 0x68\n")
(comment . ";;1324 b -44")
chunklet-i: 1328; chunklet-start-i: 1328; chunklet-end-i: 1352
i: 1328
end-i: 1352
i: 1328
end-i: 1352
i: 1332
end-i: 1352
i: 1336
end-i: 1352
i: 1348
end-i: 1352
i: 1352
end-i: 1352
i:1352 HIT CHUNK END
(comment . ";;1328: r9 <- 0x4")
(comment . ";;1332: r10 <- 0xD")
(comment . ";; literal r6")
(comment . ";;1348: b r6")
chunklet-i: 1352; chunklet-start-i: 1352; chunklet-end-i: 1360
i: 1352
end-i: 1360
i: 1352
end-i: 1360
i: 1356
end-i: 1360
i: 1360
end-i: 1360
i:1360 HIT CHUNK END
(comment . ";;1352: r3 <- r3, 0x1\n")
(comment . ";;1356 b 72")
chunklet-i: 1360; chunklet-start-i: 1360; chunklet-end-i: 1400
i: 1360
end-i: 1400
i: 1364
end-i: 1400
i: 1368
end-i: 1400
i: 1372
end-i: 1400
i: 1376
end-i: 1400
i: 1380
end-i: 1400
i: 1384
end-i: 1400
i: 1396
end-i: 1400
i: 1400
end-i: 1400
at header: 1400
(comment . ";;1360: r4 <- r1, 0x10\n")
(comment . ";;1364: r13 <- r1, 0x18\n")
(comment . ";;1368: r10 <- r1, 0x8\n")
(comment . ";;1372: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1396: b r6")
chunklet-i: 1400; chunklet-start-i: 1416; chunklet-end-i: 1432
i: 1400
end-i: 1432
at header: 1400
i: 1416
end-i: 1432
i: 1420
end-i: 1432
i: 1424
end-i: 1432
i: 1428
end-i: 1432
i: 1432
end-i: 1432
i:1432 HIT CHUNK END
(comment . ";;1416: r1 <- r1, r0")
(comment . ";;1420: r4 <- r1, 0x10\n")
(comment . ";;1424: r13 <- r1, 0x18\n")
(comment . ";;1428: r10 <- r1, 0x8\n")
chunklet-i: 1432; chunklet-start-i: 1432; chunklet-end-i: 1472
i: 1432
end-i: 1472
i: 1432
end-i: 1472
i: 1436
end-i: 1472
i: 1440
end-i: 1472
i: 1444
end-i: 1472
i: 1448
end-i: 1472
i: 1452
end-i: 1472
i: 1456
end-i: 1472
i: 1468
end-i: 1472
i: 1472
end-i: 1472
at header: 1472
(comment . ";;1432: r9 <- 0x8")
(comment . ";;1436: r4 <- r1, 0x10\n")
(comment . ";;1440: r13 <- r1, 0x18\n")
(comment . ";;1444: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1452: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1468: b r6")
chunklet-i: 1472; chunklet-start-i: 1488; chunklet-end-i: 1512
i: 1472
end-i: 1512
at header: 1472
i: 1488
end-i: 1512
i: 1492
end-i: 1512
i: 1496
end-i: 1512
i: 1500
end-i: 1512
i: 1504
end-i: 1512
i: 1508
end-i: 1512
i: 1512
end-i: 1512
i:1512 HIT CHUNK END
(comment . ";;1488: r1 <- r1, r0")
(comment . ";;1492: r11 <- 0x4")
(comment . ";;1496: r4 <- r1, 0x10\n")
(comment . ";;1500: r13 <- r1, 0x18\n")
(comment . ";;1508 b -316")
chunklet-i: 1512; chunklet-start-i: 1512; chunklet-end-i: 1532
i: 1512
end-i: 1532
i: 1512
end-i: 1532
i: 1516
end-i: 1532
i: 1528
end-i: 1532
i: 1532
end-i: 1532
i:1532 HIT CHUNK END
(comment . ";;1512: r9 <- 0xE")
(comment . ";; literal r6")
(comment . ";;1528: b r6")
chunklet-i: 1532; chunklet-start-i: 1532; chunklet-end-i: 1552
i: 1532
end-i: 1552
i: 1532
end-i: 1552
i: 1536
end-i: 1552
i: 1548
end-i: 1552
i: 1552
end-i: 1552
i:1552 HIT CHUNK END
(comment . ";;1532: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1548: b r6")
chunklet-i: 1552; chunklet-start-i: 1552; chunklet-end-i: 1560
i: 1552
end-i: 1560
i: 1552
end-i: 1560
i: 1556
end-i: 1560
i: 1560
end-i: 1560
i:1560 HIT CHUNK END
(comment . ";;1552: r3 <- r3, 0x1\n")
(comment . ";;1556 b 92")
chunklet-i: 1560; chunklet-start-i: 1560; chunklet-end-i: 1608
i: 1560
end-i: 1608
i: 1564
end-i: 1608
i: 1568
end-i: 1608
i: 1572
end-i: 1608
i: 1576
end-i: 1608
i: 1580
end-i: 1608
i: 1584
end-i: 1608
i: 1588
end-i: 1608
i: 1592
end-i: 1608
i: 1604
end-i: 1608
i: 1608
end-i: 1608
at header: 1608
(comment . ";;1560: r15 <- r1, 0x8\n")
(comment . ";;1564: r4 <- r1, 0x10\n")
(comment . ";;1568: r13 <- r1, 0x18\n")
(comment . ";;1572: r14 <- r1, 0x20\n")
(comment . ";;1576: r9 <- r1, 0x28\n")
(comment . ";;1580: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1604: b r6")
chunklet-i: 1608; chunklet-start-i: 1624; chunklet-end-i: 1652
i: 1608
end-i: 1652
at header: 1608
i: 1624
end-i: 1652
i: 1628
end-i: 1652
i: 1632
end-i: 1652
i: 1636
end-i: 1652
i: 1640
end-i: 1652
i: 1644
end-i: 1652
i: 1648
end-i: 1652
i: 1652
end-i: 1652
i:1652 HIT CHUNK END
(comment . ";;1628: r1 <- r1, r0")
(comment . ";;1632: r15 <- r1, 0x8\n")
(comment . ";;1636: r4 <- r1, 0x10\n")
(comment . ";;1640: r13 <- r1, 0x18\n")
(comment . ";;1644: r14 <- r1, 0x20\n")
(comment . ";;1648: r9 <- r1, 0x28\n")
chunklet-i: 1652; chunklet-start-i: 1652; chunklet-end-i: 1696
i: 1652
end-i: 1696
i: 1652
end-i: 1696
i: 1656
end-i: 1696
i: 1660
end-i: 1696
i: 1664
end-i: 1696
i: 1668
end-i: 1696
i: 1672
end-i: 1696
i: 1676
end-i: 1696
i: 1680
end-i: 1696
i: 1692
end-i: 1696
i: 1696
end-i: 1696
at header: 1696
(comment . ";;1652: r15 <- r1, 0x8\n")
(comment . ";;1656: r4 <- r1, 0x10\n")
(comment . ";;1660: r13 <- r1, 0x18\n")
(comment . ";;1664: r14 <- r1, 0x20\n")
(comment . ";;1668: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1676: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1692: b r6")
chunklet-i: 1696; chunklet-start-i: 1712; chunklet-end-i: 1740
i: 1696
end-i: 1740
at header: 1696
i: 1712
end-i: 1740
i: 1716
end-i: 1740
i: 1720
end-i: 1740
i: 1724
end-i: 1740
i: 1728
end-i: 1740
i: 1732
end-i: 1740
i: 1736
end-i: 1740
i: 1740
end-i: 1740
i:1740 HIT CHUNK END
(comment . ";;1712: r1 <- r1, r8")
(comment . ";;1716: r9 <- 0x4")
(comment . ";;1720: r15 <- r1, 0x8\n")
(comment . ";;1724: r4 <- r1, 0x10\n")
(comment . ";;1728: r13 <- r1, 0x18\n")
(comment . ";;1732: r14 <- r1, 0x20\n")
(comment . ";;1736 b -664")
chunklet-i: 1740; chunklet-start-i: 1740; chunklet-end-i: 1748
i: 1740
end-i: 1748
i: 1740
end-i: 1748
i: 1744
end-i: 1748
i: 1748
end-i: 1748
i:1748 HIT CHUNK END
(comment . ";;1740: r3 <- r3, 0x1\n")
(comment . ";;1744 b 84")
chunklet-i: 1748; chunklet-start-i: 1748; chunklet-end-i: 1792
i: 1748
end-i: 1792
i: 1752
end-i: 1792
i: 1756
end-i: 1792
i: 1760
end-i: 1792
i: 1764
end-i: 1792
i: 1768
end-i: 1792
i: 1772
end-i: 1792
i: 1776
end-i: 1792
i: 1788
end-i: 1792
i: 1792
end-i: 1792
at header: 1792
(comment . ";;1748: r15 <- r1, 0x8\n")
(comment . ";;1752: r4 <- r1, 0x10\n")
(comment . ";;1756: r13 <- r1, 0x18\n")
(comment . ";;1760: r9 <- r1, 0x20\n")
(comment . ";;1764: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1772: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1788: b r6")
chunklet-i: 1792; chunklet-start-i: 1808; chunklet-end-i: 1832
i: 1792
end-i: 1832
at header: 1792
i: 1808
end-i: 1832
i: 1812
end-i: 1832
i: 1816
end-i: 1832
i: 1820
end-i: 1832
i: 1824
end-i: 1832
i: 1828
end-i: 1832
i: 1832
end-i: 1832
i:1832 HIT CHUNK END
(comment . ";;1812: r1 <- r1, r8")
(comment . ";;1816: r15 <- r1, 0x8\n")
(comment . ";;1820: r4 <- r1, 0x10\n")
(comment . ";;1824: r13 <- r1, 0x18\n")
(comment . ";;1828: r9 <- r1, 0x20\n")
chunklet-i: 1832; chunklet-start-i: 1832; chunklet-end-i: 1872
i: 1832
end-i: 1872
i: 1832
end-i: 1872
i: 1836
end-i: 1872
i: 1840
end-i: 1872
i: 1844
end-i: 1872
i: 1848
end-i: 1872
i: 1852
end-i: 1872
i: 1856
end-i: 1872
i: 1868
end-i: 1872
i: 1872
end-i: 1872
at header: 1872
(comment . ";;1832: r15 <- r1, 0x8\n")
(comment . ";;1836: r4 <- r1, 0x10\n")
(comment . ";;1840: r13 <- r1, 0x18\n")
(comment . ";;1844: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1852: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1868: b r6")
chunklet-i: 1872; chunklet-start-i: 1888; chunklet-end-i: 1916
i: 1872
end-i: 1916
at header: 1872
i: 1888
end-i: 1916
i: 1892
end-i: 1916
i: 1896
end-i: 1916
i: 1900
end-i: 1916
i: 1904
end-i: 1916
i: 1908
end-i: 1916
i: 1912
end-i: 1916
i: 1916
end-i: 1916
i:1916 HIT CHUNK END
(comment . ";;1888: r1 <- r1, r0")
(comment . ";;1892: r14 <- 0x4")
(comment . ";;1896: r15 <- r1, 0x8\n")
(comment . ";;1900: r4 <- r1, 0x10\n")
(comment . ";;1904: r13 <- r1, 0x18\n")
(comment . ";;1912 b -868")
chunklet-i: 1916; chunklet-start-i: 1916; chunklet-end-i: 1936
i: 1916
end-i: 1936
i: 1916
end-i: 1936
i: 1920
end-i: 1936
i: 1932
end-i: 1936
i: 1936
end-i: 1936
i:1936 HIT CHUNK END
(comment . ";;1916: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1932: b r6")
chunklet-i: 1936; chunklet-start-i: 1936; chunklet-end-i: 1944
i: 1936
end-i: 1944
i: 1936
end-i: 1944
i: 1940
end-i: 1944
i: 1944
end-i: 1944
i:1944 HIT CHUNK END
(comment . ";;1936: r3 <- r3, 0x1\n")
(comment . ";;1940 b 76")
chunklet-i: 1944; chunklet-start-i: 1944; chunklet-end-i: 1984
i: 1944
end-i: 1984
i: 1948
end-i: 1984
i: 1952
end-i: 1984
i: 1956
end-i: 1984
i: 1960
end-i: 1984
i: 1964
end-i: 1984
i: 1968
end-i: 1984
i: 1980
end-i: 1984
i: 1984
end-i: 1984
at header: 1984
(comment . ";;1944: r15 <- r1, 0x8\n")
(comment . ";;1948: r4 <- r1, 0x10\n")
(comment . ";;1952: r9 <- r1, 0x18\n")
(comment . ";;1956: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1964: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1980: b r6")
chunklet-i: 1984; chunklet-start-i: 2000; chunklet-end-i: 2020
i: 1984
end-i: 2020
at header: 1984
i: 2000
end-i: 2020
i: 2004
end-i: 2020
i: 2008
end-i: 2020
i: 2012
end-i: 2020
i: 2016
end-i: 2020
i: 2020
end-i: 2020
i:2020 HIT CHUNK END
(comment . ";;2004: r1 <- r1, r0")
(comment . ";;2008: r15 <- r1, 0x8\n")
(comment . ";;2012: r4 <- r1, 0x10\n")
(comment . ";;2016: r9 <- r1, 0x18\n")
chunklet-i: 2020; chunklet-start-i: 2020; chunklet-end-i: 2056
i: 2020
end-i: 2056
i: 2020
end-i: 2056
i: 2024
end-i: 2056
i: 2028
end-i: 2056
i: 2032
end-i: 2056
i: 2036
end-i: 2056
i: 2040
end-i: 2056
i: 2052
end-i: 2056
i: 2056
end-i: 2056
at header: 2056
(comment . ";;2020: r15 <- r1, 0x8\n")
(comment . ";;2024: r4 <- r1, 0x10\n")
(comment . ";;2028: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2036: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2052: b r6")
chunklet-i: 2056; chunklet-start-i: 2072; chunklet-end-i: 2092
i: 2056
end-i: 2092
at header: 2056
i: 2072
end-i: 2092
i: 2076
end-i: 2092
i: 2080
end-i: 2092
i: 2084
end-i: 2092
i: 2088
end-i: 2092
i: 2092
end-i: 2092
i:2092 HIT CHUNK END
(comment . ";;2072: r1 <- r1, r8")
(comment . ";;2076: r9 <- 0x4")
(comment . ";;2080: r15 <- r1, 0x8\n")
(comment . ";;2084: r4 <- r1, 0x10\n")
(comment . ";;2088 b -1120")
chunklet-i: 2092; chunklet-start-i: 2092; chunklet-end-i: 2100
i: 2092
end-i: 2100
i: 2092
end-i: 2100
i: 2096
end-i: 2100
i: 2100
end-i: 2100
i:2100 HIT CHUNK END
(comment . ";;2092: r3 <- r3, 0x1\n")
(comment . ";;2096 b 68")
chunklet-i: 2100; chunklet-start-i: 2100; chunklet-end-i: 2136
i: 2100
end-i: 2136
i: 2104
end-i: 2136
i: 2108
end-i: 2136
i: 2112
end-i: 2136
i: 2116
end-i: 2136
i: 2120
end-i: 2136
i: 2132
end-i: 2136
i: 2136
end-i: 2136
at header: 2136
(comment . ";;2100: r15 <- r1, 0x8\n")
(comment . ";;2104: r9 <- r1, 0x10\n")
(comment . ";;2108: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2116: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2132: b r6")
chunklet-i: 2136; chunklet-start-i: 2152; chunklet-end-i: 2168
i: 2136
end-i: 2168
at header: 2136
i: 2152
end-i: 2168
i: 2156
end-i: 2168
i: 2160
end-i: 2168
i: 2164
end-i: 2168
i: 2168
end-i: 2168
i:2168 HIT CHUNK END
(comment . ";;2156: r1 <- r1, r8")
(comment . ";;2160: r15 <- r1, 0x8\n")
(comment . ";;2164: r9 <- r1, 0x10\n")
chunklet-i: 2168; chunklet-start-i: 2168; chunklet-end-i: 2200
i: 2168
end-i: 2200
i: 2168
end-i: 2200
i: 2172
end-i: 2200
i: 2176
end-i: 2200
i: 2180
end-i: 2200
i: 2184
end-i: 2200
i: 2196
end-i: 2200
i: 2200
end-i: 2200
at header: 2200
(comment . ";;2168: r15 <- r1, 0x8\n")
(comment . ";;2172: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2196: b r6")
chunklet-i: 2200; chunklet-start-i: 2216; chunklet-end-i: 2228
i: 2200
end-i: 2228
at header: 2200
i: 2216
end-i: 2228
i: 2220
end-i: 2228
i: 2224
end-i: 2228
i: 2228
end-i: 2228
i:2228 HIT CHUNK END
(comment . ";;2216: r1 <- r1, r0")
(comment . ";;2220: r15 <- r1, 0x8\n")
(comment . ";;2224 b -1284")
chunklet-i: 2228; chunklet-start-i: 2228; chunklet-end-i: 2236
i: 2228
end-i: 2236
i: 2228
end-i: 2236
i: 2232
end-i: 2236
i: 2236
end-i: 2236
i:2236 HIT CHUNK END
(comment . ";;2228: r3 <- r3, 0x1\n")
(comment . ";;2232 b 80")
chunklet-i: 2236; chunklet-start-i: 2236; chunklet-end-i: 2280
i: 2236
end-i: 2280
i: 2240
end-i: 2280
i: 2244
end-i: 2280
i: 2248
end-i: 2280
i: 2252
end-i: 2280
i: 2256
end-i: 2280
i: 2260
end-i: 2280
i: 2264
end-i: 2280
i: 2276
end-i: 2280
i: 2280
end-i: 2280
at header: 2280
(comment . ";;2236: r15 <- r1, 0x8\n")
(comment . ";;2240: r13 <- r1, 0x10\n")
(comment . ";;2244: r12 <- r1, 0x18\n")
(comment . ";;2248: r4 <- r1, 0x20\n")
(comment . ";;2252: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2260: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2276: b r6")
chunklet-i: 2280; chunklet-start-i: 2296; chunklet-end-i: 2316
i: 2280
end-i: 2316
at header: 2280
i: 2296
end-i: 2316
i: 2300
end-i: 2316
i: 2304
end-i: 2316
i: 2308
end-i: 2316
i: 2312
end-i: 2316
i: 2316
end-i: 2316
i:2316 HIT CHUNK END
(comment . ";;2296: r1 <- r1, r8")
(comment . ";;2300: r15 <- r1, 0x8\n")
(comment . ";;2304: r13 <- r1, 0x10\n")
(comment . ";;2308: r12 <- r1, 0x18\n")
(comment . ";;2312: r4 <- r1, 0x20\n")
chunklet-i: 2316; chunklet-start-i: 2316; chunklet-end-i: 2368
i: 2316
end-i: 2368
i: 2316
end-i: 2368
i: 2320
end-i: 2368
i: 2324
end-i: 2368
i: 2328
end-i: 2368
i: 2332
end-i: 2368
i: 2336
end-i: 2368
i: 2340
end-i: 2368
i: 2344
end-i: 2368
i: 2348
end-i: 2368
i: 2352
end-i: 2368
i: 2364
end-i: 2368
i: 2368
end-i: 2368
at header: 2368
(comment . ";;2316: r9 <- 0x4")
(comment . ";;2320: r10 <- 0xC")
(comment . ";;2324: r15 <- r1, 0x8\n")
(comment . ";;2328: r13 <- r1, 0x10\n")
(comment . ";;2332: r12 <- r1, 0x18\n")
(comment . ";;2336: r4 <- r1, 0x20\n")
(comment . ";;2340: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2348: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2364: b r6")
chunklet-i: 2368; chunklet-start-i: 2384; chunklet-end-i: 2416
i: 2368
end-i: 2416
at header: 2368
i: 2384
end-i: 2416
i: 2388
end-i: 2416
i: 2392
end-i: 2416
i: 2396
end-i: 2416
i: 2400
end-i: 2416
i: 2404
end-i: 2416
i: 2408
end-i: 2416
i: 2412
end-i: 2416
i: 2416
end-i: 2416
i:2416 HIT CHUNK END
(comment . ";;2384: r1 <- r1, r8")
(comment . ";;2388: r14 <- 0x4")
(comment . ";;2392: r15 <- r1, 0x8\n")
(comment . ";;2396: r13 <- r1, 0x10\n")
(comment . ";;2400: r12 <- r1, 0x18\n")
(comment . ";;2404: r4 <- r1, 0x20\n")
(comment . ";;2408: r14 <- 0x6")
(comment . ";;2412 b -2292")
chunklet-i: 2416; chunklet-start-i: 2416; chunklet-end-i: 2420
i: 2416
end-i: 2420
i: 2420
end-i: 2420
i:2420 HIT CHUNK END
(comment . ";;2416 b -1500")
chunklet-i: 2420; chunklet-start-i: 2420; chunklet-end-i: 2440
i: 2420
end-i: 2440
i: 2420
end-i: 2440
i: 2424
end-i: 2440
i: 2436
end-i: 2440
i: 2440
end-i: 2440
i:2440 HIT CHUNK END
(comment . ";;2420: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;2436: b r6")
chunklet-i: 2440; chunklet-start-i: 2440; chunklet-end-i: 2448
i: 2440
end-i: 2448
i: 2440
end-i: 2448
i: 2444
end-i: 2448
i: 2448
end-i: 2448
i:2448 HIT CHUNK END
(comment . ";;2440: r3 <- r3, 0x1\n")
(comment . ";;2444 b 76")
chunklet-i: 2448; chunklet-start-i: 2448; chunklet-end-i: 2488
i: 2448
end-i: 2488
i: 2452
end-i: 2488
i: 2456
end-i: 2488
i: 2460
end-i: 2488
i: 2464
end-i: 2488
i: 2468
end-i: 2488
i: 2472
end-i: 2488
i: 2484
end-i: 2488
i: 2488
end-i: 2488
at header: 2488
(comment . ";;2448: r15 <- r1, 0x8\n")
(comment . ";;2452: r13 <- r1, 0x10\n")
(comment . ";;2456: r9 <- r1, 0x18\n")
(comment . ";;2460: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2468: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2484: b r6")
chunklet-i: 2488; chunklet-start-i: 2504; chunklet-end-i: 2524
i: 2488
end-i: 2524
at header: 2488
i: 2504
end-i: 2524
i: 2508
end-i: 2524
i: 2512
end-i: 2524
i: 2516
end-i: 2524
i: 2520
end-i: 2524
i: 2524
end-i: 2524
i:2524 HIT CHUNK END
(comment . ";;2508: r1 <- r1, r0")
(comment . ";;2512: r15 <- r1, 0x8\n")
(comment . ";;2516: r13 <- r1, 0x10\n")
(comment . ";;2520: r9 <- r1, 0x18\n")
chunklet-i: 2524; chunklet-start-i: 2524; chunklet-end-i: 2560
i: 2524
end-i: 2560
i: 2524
end-i: 2560
i: 2528
end-i: 2560
i: 2532
end-i: 2560
i: 2536
end-i: 2560
i: 2540
end-i: 2560
i: 2544
end-i: 2560
i: 2556
end-i: 2560
i: 2560
end-i: 2560
at header: 2560
(comment . ";;2524: r15 <- r1, 0x8\n")
(comment . ";;2528: r13 <- r1, 0x10\n")
(comment . ";;2532: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2540: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2556: b r6")
chunklet-i: 2560; chunklet-start-i: 2576; chunklet-end-i: 2596
i: 2560
end-i: 2596
at header: 2560
i: 2576
end-i: 2596
i: 2580
end-i: 2596
i: 2584
end-i: 2596
i: 2588
end-i: 2596
i: 2592
end-i: 2596
i: 2596
end-i: 2596
i:2596 HIT CHUNK END
(comment . ";;2576: r1 <- r1, r8")
(comment . ";;2580: r9 <- 0x4")
(comment . ";;2584: r15 <- r1, 0x8\n")
(comment . ";;2588: r13 <- r1, 0x10\n")
(comment . ";;2592 b -2548")
chunklet-i: 2596; chunklet-start-i: 2596; chunklet-end-i: 2612
i: 2596
end-i: 2612
i: 2596
end-i: 2612
i: 2608
end-i: 2612
i: 2612
end-i: 2612
i:2612 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;2608: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: trial
instruction range for chunk: 0 8
instruction range for chunk: 8 24
instruction range for chunk: 24 48
instruction range for chunk: 48 76
instruction range for chunk: 80 88
instruction range for chunk: 88 112
instruction range for chunk: 112 124
instruction range for chunk: 124 132
instruction range for chunk: 132 140
instruction range for chunk: 140 164
instruction range for chunk: 164 188
instruction range for chunk: 188 192
instruction range for chunk: 192 204
instruction range for chunk: 204 224
instruction range for chunk: 224 236
instruction range for chunk: 236 256
instruction range for chunk: 256 276
instruction range for chunk: 276 288
instruction range for chunk: 288 304
instruction range for chunk: 304 312
instruction range for chunk: 312 360
instruction range for chunk: 376 400
instruction range for chunk: 400 448
instruction range for chunk: 464 496
instruction range for chunk: 496 508
instruction range for chunk: 508 520
instruction range for chunk: 520 568
instruction range for chunk: 584 608
instruction range for chunk: 608 624
instruction range for chunk: 624 632
instruction range for chunk: 632 680
instruction range for chunk: 696 708
instruction range for chunk: 708 716
instruction range for chunk: 716 724
instruction range for chunk: 724 732
instruction range for chunk: 732 768
instruction range for chunk: 784 792
instruction range for chunk: 792 824
instruction range for chunk: 840 864
instruction range for chunk: 864 900
instruction range for chunk: 900 908
instruction range for chunk: 908 916
instruction range for chunk: 916 932
instruction range for chunk: 932 944
instruction range for chunk: 944 956
instruction range for chunk: 956 1008
instruction range for chunk: 1008 1016
instruction range for chunk: 1016 1032
instruction range for chunk: 1048 1064
instruction range for chunk: 1064 1076
instruction range for chunk: 1080 1088
instruction range for chunk: 1088 1128
instruction range for chunk: 1144 1164
instruction range for chunk: 1164 1200
instruction range for chunk: 1216 1240
instruction range for chunk: 1240 1252
instruction range for chunk: 1256 1264
instruction range for chunk: 1264 1296
instruction range for chunk: 1312 1336
instruction range for chunk: 1336 1340
instruction range for chunk: 1340 1360
instruction range for chunk: 1360 1380
instruction range for chunk: 1380 1416
instruction range for chunk: 1432 1456
instruction range for chunk: 1456 1488
instruction range for chunk: 1504 1520
instruction range for chunk: 1520 1552
instruction range for chunk: 1568 1584
instruction range for chunk: 1584 1620
instruction range for chunk: 1620 1628
instruction range for chunk: 1628 1636
instruction range for chunk: 1636 1652
instruction range for chunk: 1652 1664
instruction range for chunk: 1664 1676
instruction range for chunk: 1676 1700
instruction range for chunk: 1700 1712
instruction range for chunk: 1716 1724
instruction range for chunk: 1724 1732
instruction range for chunk: 1732 1768
instruction range for chunk: 1784 1796
instruction range for chunk: 1796 1832
instruction range for chunk: 1848 1860
instruction range for chunk: 1860 1868
instruction range for chunk: 1868 1904
instruction range for chunk: 1920 1936
instruction range for chunk: 1936 1968
instruction range for chunk: 1984 2004
instruction range for chunk: 2004 2012
instruction range for chunk: 2012 2048
instruction range for chunk: 2064 2076
instruction range for chunk: 2076 2112
instruction range for chunk: 2128 2152
instruction range for chunk: 2152 2156
instruction range for chunk: 2156 2164
instruction range for chunk: 2164 2200
instruction range for chunk: 2216 2232
instruction range for chunk: 2232 2264
instruction range for chunk: 2280 2296
instruction range for chunk: 2296 2308
instruction range for chunk: 2312 2316
instruction range for chunk: 2316 2328
instruction range for chunk: 2332 2336
instruction range for chunk: 2336 2352
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 2328")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 24
i: 8
end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;8: r9 <- r1, 0x8\n")
(comment . ";;12: r15 <- r0, 0x58\n")
(comment . ";;16: r1 <- r15")
(comment . ";;20 b 2292")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 48
i: 24
end-i: 48
i: 24
end-i: 48
i: 28
end-i: 48
i: 32
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;24: r15 <- 0x0")
(comment . ";;28: r5 <- r2, r9")
(comment . ";;32: r2 <- r2, r0")
(comment . ";;36: r14 <- r0, 0x68\n")
(comment . ";;40: r14 <- r2")
(comment . ";;44 b 2248")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 76
i: 48
end-i: 76
i: 48
end-i: 76
i: 52
end-i: 76
i: 56
end-i: 76
i: 60
end-i: 76
i: 64
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;48: r15 <- r5, 0x7\n")
(comment . ";;52: r15 <- 0x1E")
(comment . ";;56: r15 <- r5, 0xF\n")
(comment . ";;60: r5 <- r1, 0x10\n")
(comment . ";; literal r15")
chunklet-i: 76; chunklet-start-i: 80; chunklet-end-i: 88
i: 76
end-i: 88
i: 80
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
i:88 HIT CHUNK END
(comment . ";; instruction 76 not included")
(comment . ";;80: r7 <- r1, 0x18\n")
(comment . ";;84: r4 <- 0x0")
chunklet-i: 88; chunklet-start-i: 88; chunklet-end-i: 112
i: 88
end-i: 112
i: 88
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
i:112 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;100: r10 <- r9, 0x5\n")
(comment . ";;104: r10 <- 0x1E")
(comment . ";;108 b 2044")
chunklet-i: 112; chunklet-start-i: 112; chunklet-end-i: 124
i: 112
end-i: 124
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r15 <- r4, r10")
(comment . ";;116: r15 <- 0x7")
(comment . ";;120 b 1880")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;124: r4 <- r10")
(comment . ";;128 b 1452")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 140
i: 132
end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";;132: r3 <- r3, 0x1\n")
(comment . ";;136 b 1380")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 164
i: 140
end-i: 164
i: 140
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;152: r15 <- r9, 0x5\n")
(comment . ";;156: r15 <- 0x1E")
(comment . ";;160 b 1292")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 188
i: 164
end-i: 188
i: 164
end-i: 188
i: 176
end-i: 188
i: 180
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;176: r14 <- r9, 0x5\n")
(comment . ";;180: r14 <- 0x1E")
(comment . ";;184 b 1192")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";;188: r9 <- 0xE")
chunklet-i: 192; chunklet-start-i: 192; chunklet-end-i: 204
i: 192
end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";;192: r14 <- r9, r7")
(comment . ";;196: r14 <- 0x7")
(comment . ";;200 b 1156")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 224
i: 204
end-i: 224
i: 208
end-i: 224
i: 212
end-i: 224
i: 216
end-i: 224
i: 220
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";;204: r13 <- r9, 0x1\n")
(comment . ";;208: r14 <- r13, r1")
(comment . ";;212: r14 <- r14, r8")
(comment . ";;216: r4 <- r14")
(comment . ";;220 b 1136")
chunklet-i: 224; chunklet-start-i: 224; chunklet-end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";;224: r14 <- r4, r13")
(comment . ";;228: r14 <- 0x7")
(comment . ";;232 b 1124")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 256
i: 236
end-i: 256
i: 240
end-i: 256
i: 244
end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;236: r14 <- r4, r9")
(comment . ";;240: r10 <- r9, r14")
(comment . ";;244: r14 <- r15, r7")
(comment . ";;248: r14 <- 0x7")
(comment . ";;252 b 1084")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 276
i: 256
end-i: 276
i: 260
end-i: 276
i: 264
end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";;256: r13 <- r15, 0x1\n")
(comment . ";;260: r14 <- r13, r1")
(comment . ";;264: r14 <- r14, r8")
(comment . ";;268: r10 <- r14")
(comment . ";;272 b 1064")
chunklet-i: 276; chunklet-start-i: 276; chunklet-end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
i:288 HIT CHUNK END
(comment . ";;276: r14 <- r10, r13")
(comment . ";;280: r14 <- 0x7")
(comment . ";;284 b 1052")
chunklet-i: 288; chunklet-start-i: 288; chunklet-end-i: 304
i: 288
end-i: 304
i: 292
end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;288: r14 <- r10, r9")
(comment . ";;292: r9 <- r15, r14")
(comment . ";;296: r9 <- 0x0")
(comment . ";;300 b 404")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 312
i: 304
end-i: 312
i: 308
end-i: 312
i: 312
end-i: 312
i:312 HIT CHUNK END
(comment . ";;304: r9 <- 0x7")
(comment . ";;308 b 952")
chunklet-i: 312; chunklet-start-i: 312; chunklet-end-i: 360
i: 312
end-i: 360
i: 312
end-i: 360
i: 316
end-i: 360
i: 320
end-i: 360
i: 324
end-i: 360
i: 328
end-i: 360
i: 340
end-i: 360
i: 344
end-i: 360
i: 348
end-i: 360
i: 352
end-i: 360
i: 356
end-i: 360
i: 360
end-i: 360
at header: 360
(comment . ";;312: r9 <- 0x4")
(comment . ";;316: r10 <- r1, 0x8\n")
(comment . ";;320: r4 <- r1, 0x20\n")
(comment . ";;324: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;340: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;348: r15 <- r1, 0x0\n")
(comment . ";;352: r4 <- 0x2")
(comment . ";;356: b r5, 13")
chunklet-i: 360; chunklet-start-i: 376; chunklet-end-i: 400
i: 360
end-i: 400
at header: 360
i: 376
end-i: 400
i: 380
end-i: 400
i: 384
end-i: 400
i: 388
end-i: 400
i: 392
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
i:400 HIT CHUNK END
(comment . ";;376: r1 <- r1, r8")
(comment . ";;380: r15 <- 0x4")
(comment . ";;384: r4 <- r1, 0x20\n")
(comment . ";;388: r15 <- 0x6")
(comment . ";;396 b 308")
chunklet-i: 400; chunklet-start-i: 400; chunklet-end-i: 448
i: 400
end-i: 448
i: 404
end-i: 448
i: 408
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 436
end-i: 448
i: 440
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;400: r9 <- 0x4")
(comment . ";;404: r10 <- r1, 0x8\n")
(comment . ";;408: r4 <- r1, 0x20\n")
(comment . ";;412: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;428: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;436: r15 <- r1, 0x0\n")
(comment . ";;440: r4 <- 0x2")
(comment . ";;444: b r5, 13")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 496
i: 448
end-i: 496
at header: 448
i: 464
end-i: 496
i: 468
end-i: 496
i: 472
end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 484
end-i: 496
i: 488
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";;464: r1 <- r1, r8")
(comment . ";;468: r15 <- 0x4")
(comment . ";;472: r4 <- r1, 0x20\n")
(comment . ";;476: r14 <- r1, 0x10\n")
(comment . ";;480: r14 <- r14, r7")
(comment . ";;484: r15 <- r14, 0x0\n")
(comment . ";;488: r15 <- 0x7")
(comment . ";;492 b 24")
chunklet-i: 496; chunklet-start-i: 496; chunklet-end-i: 508
i: 496
end-i: 508
i: 500
end-i: 508
i: 504
end-i: 508
i: 508
end-i: 508
i:508 HIT CHUNK END
(comment . ";;496: r7 <- r0, 0x68\n")
(comment . ";;500: r2 <- r7")
(comment . ";;504 b 732")
chunklet-i: 508; chunklet-start-i: 508; chunklet-end-i: 520
i: 508
end-i: 520
i: 508
end-i: 520
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;508: r7 <- r7, r8")
(comment . ";;512: r7 <- r0, 0x68\n")
(comment . ";;516: r14 <- r7, 0x0\n")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 568
i: 520
end-i: 568
i: 520
end-i: 568
i: 524
end-i: 568
i: 528
end-i: 568
i: 532
end-i: 568
i: 536
end-i: 568
i: 548
end-i: 568
i: 552
end-i: 568
i: 556
end-i: 568
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
at header: 568
(comment . ";;520: r15 <- r1, 0x10\n")
(comment . ";;524: r9 <- r15, 0x7\n")
(comment . ";;528: r4 <- r1, 0x20\n")
(comment . ";;532: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;548: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;556: r15 <- r1, 0x0\n")
(comment . ";;560: r4 <- 0x1")
(comment . ";;564: b r5, 13")
chunklet-i: 568; chunklet-start-i: 584; chunklet-end-i: 608
i: 568
end-i: 608
at header: 568
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 596
end-i: 608
i: 600
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
i:608 HIT CHUNK END
(comment . ";;584: r1 <- r1, r8")
(comment . ";;588: r15 <- 0x4")
(comment . ";;592: r4 <- r1, 0x20\n")
(comment . ";;596: r15 <- 0x6")
(comment . ";;604 b 256")
chunklet-i: 608; chunklet-start-i: 608; chunklet-end-i: 624
i: 608
end-i: 624
i: 612
end-i: 624
i: 616
end-i: 624
i: 620
end-i: 624
i: 624
end-i: 624
i:624 HIT CHUNK END
(comment . ";;608: r15 <- r1, 0x10\n")
(comment . ";;612: r9 <- r15, 0x7\n")
(comment . ";;616: r9 <- 0x0")
(comment . ";;620 b 240")
chunklet-i: 624; chunklet-start-i: 624; chunklet-end-i: 632
i: 624
end-i: 632
i: 628
end-i: 632
i: 632
end-i: 632
i:632 HIT CHUNK END
(comment . ";;624: r9 <- 0x7")
(comment . ";;628 b 160")
chunklet-i: 632; chunklet-start-i: 632; chunklet-end-i: 680
i: 632
end-i: 680
i: 632
end-i: 680
i: 636
end-i: 680
i: 640
end-i: 680
i: 644
end-i: 680
i: 648
end-i: 680
i: 660
end-i: 680
i: 664
end-i: 680
i: 668
end-i: 680
i: 672
end-i: 680
i: 676
end-i: 680
i: 680
end-i: 680
at header: 680
(comment . ";;632: r9 <- 0x4")
(comment . ";;636: r10 <- r1, 0x8\n")
(comment . ";;640: r4 <- r1, 0x20\n")
(comment . ";;644: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;660: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;668: r15 <- r1, 0x0\n")
(comment . ";;672: r4 <- 0x2")
(comment . ";;676: b r5, 13")
chunklet-i: 680; chunklet-start-i: 696; chunklet-end-i: 708
i: 680
end-i: 708
at header: 680
i: 696
end-i: 708
i: 700
end-i: 708
i: 704
end-i: 708
i: 708
end-i: 708
i:708 HIT CHUNK END
(comment . ";;700: r1 <- r1, r8")
(comment . ";;704: r4 <- r1, 0x20\n")
chunklet-i: 708; chunklet-start-i: 708; chunklet-end-i: 716
i: 708
end-i: 716
i: 708
end-i: 716
i: 712
end-i: 716
i: 716
end-i: 716
i:716 HIT CHUNK END
(comment . ";;708: r4 <- 0x7")
(comment . ";;712 b 16")
chunklet-i: 716; chunklet-start-i: 716; chunklet-end-i: 724
i: 716
end-i: 724
i: 720
end-i: 724
i: 724
end-i: 724
i:724 HIT CHUNK END
(comment . ";;716: r15 <- r4, 0x8\n")
(comment . ";;720 b 8")
chunklet-i: 724; chunklet-start-i: 724; chunklet-end-i: 732
i: 724
end-i: 732
i: 728
end-i: 732
i: 732
end-i: 732
i:732 HIT CHUNK END
(comment . ";;724: r4 <- 0xF")
(comment . ";;728 b -644")
chunklet-i: 732; chunklet-start-i: 732; chunklet-end-i: 768
i: 732
end-i: 768
i: 732
end-i: 768
i: 736
end-i: 768
i: 740
end-i: 768
i: 744
end-i: 768
i: 748
end-i: 768
i: 752
end-i: 768
i: 764
end-i: 768
i: 768
end-i: 768
at header: 768
(comment . ";;732: r9 <- 0x8")
(comment . ";;736: r10 <- 0x4")
(comment . ";;740: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;748: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;764: b r6")
chunklet-i: 768; chunklet-start-i: 784; chunklet-end-i: 792
i: 768
end-i: 792
at header: 768
i: 784
end-i: 792
i: 788
end-i: 792
i: 792
end-i: 792
i:792 HIT CHUNK END
(comment . ";;784: r1 <- r1, r0")
(comment . ";;788 b -704")
chunklet-i: 792; chunklet-start-i: 792; chunklet-end-i: 824
i: 792
end-i: 824
i: 792
end-i: 824
i: 796
end-i: 824
i: 800
end-i: 824
i: 804
end-i: 824
i: 808
end-i: 824
i: 820
end-i: 824
i: 824
end-i: 824
at header: 824
(comment . ";;792: r4 <- r1, 0x20\n")
(comment . ";;796: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;804: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;820: b r6")
chunklet-i: 824; chunklet-start-i: 840; chunklet-end-i: 864
i: 824
end-i: 864
at header: 824
i: 840
end-i: 864
i: 844
end-i: 864
i: 848
end-i: 864
i: 852
end-i: 864
i: 856
end-i: 864
i: 860
end-i: 864
i: 864
end-i: 864
i:864 HIT CHUNK END
(comment . ";;840: r1 <- r1, r8")
(comment . ";;844: r15 <- 0x4")
(comment . ";;848: r4 <- r1, 0x20\n")
(comment . ";;852: r15 <- 0x6")
(comment . ";;860 b -232")
chunklet-i: 864; chunklet-start-i: 864; chunklet-end-i: 900
i: 864
end-i: 900
i: 864
end-i: 900
i: 876
end-i: 900
i: 888
end-i: 900
i: 892
end-i: 900
i: 896
end-i: 900
i: 900
end-i: 900
i:900 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;888: r10 <- r9, 0x5\n")
(comment . ";;892: r10 <- 0x1E")
(comment . ";;896 b 264")
chunklet-i: 900; chunklet-start-i: 900; chunklet-end-i: 908
i: 900
end-i: 908
i: 900
end-i: 908
i: 904
end-i: 908
i: 908
end-i: 908
i:908 HIT CHUNK END
(comment . ";;900: r10 <- 0x7")
(comment . ";;904 b 180")
chunklet-i: 908; chunklet-start-i: 908; chunklet-end-i: 916
i: 908
end-i: 916
i: 912
end-i: 916
i: 916
end-i: 916
i:916 HIT CHUNK END
(comment . ";;908: r14 <- r10, 0x8\n")
(comment . ";;912 b 172")
chunklet-i: 916; chunklet-start-i: 916; chunklet-end-i: 932
i: 916
end-i: 932
i: 916
end-i: 932
i: 920
end-i: 932
i: 924
end-i: 932
i: 928
end-i: 932
i: 932
end-i: 932
i:932 HIT CHUNK END
(comment . ";;916: r13 <- r15, r5")
(comment . ";;920: r14 <- r13, 0x0\n")
(comment . ";;924: r14 <- 0x7")
(comment . ";;928 b 24")
chunklet-i: 932; chunklet-start-i: 932; chunklet-end-i: 944
i: 932
end-i: 944
i: 936
end-i: 944
i: 940
end-i: 944
i: 944
end-i: 944
i:944 HIT CHUNK END
(comment . ";;932: r7 <- r0, 0x68\n")
(comment . ";;936: r2 <- r7")
(comment . ";;940 b 120")
chunklet-i: 944; chunklet-start-i: 944; chunklet-end-i: 956
i: 944
end-i: 956
i: 944
end-i: 956
i: 948
end-i: 956
i: 952
end-i: 956
i: 956
end-i: 956
i:956 HIT CHUNK END
(comment . ";;944: r7 <- r7, r8")
(comment . ";;948: r7 <- r0, 0x68\n")
(comment . ";;952: r13 <- r7, 0x0\n")
chunklet-i: 956; chunklet-start-i: 956; chunklet-end-i: 1008
i: 956
end-i: 1008
i: 956
end-i: 1008
i: 968
end-i: 1008
i: 972
end-i: 1008
i: 976
end-i: 1008
i: 980
end-i: 1008
i: 984
end-i: 1008
i: 988
end-i: 1008
i: 992
end-i: 1008
i: 996
end-i: 1008
i: 1000
end-i: 1008
i: 1004
end-i: 1008
i: 1008
end-i: 1008
i:1008 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;968: r14 <- r15, 0xD\n")
(comment . ";;972: r9 <- 0xE")
(comment . ";;976: r4 <- r1, 0x20\n")
(comment . ";;980: r1 <- r1, r8")
(comment . ";;984: r8 <- r1, 0x-10\n")
(comment . ";; adr r15")
(comment . ";;992: r15 <- r1, 0x0\n")
(comment . ";;996: r15 <- r8, r7")
(comment . ";;1000: r15 <- 0x5")
(comment . ";;1004 b 8")
chunklet-i: 1008; chunklet-start-i: 1008; chunklet-end-i: 1016
i: 1008
end-i: 1016
i: 1012
end-i: 1016
i: 1016
end-i: 1016
i:1016 HIT CHUNK END
(comment . ";;1008: r4 <- 0x1")
(comment . ";;1012: b r8, 3")
chunklet-i: 1016; chunklet-start-i: 1016; chunklet-end-i: 1032
i: 1016
end-i: 1032
i: 1016
end-i: 1032
i: 1028
end-i: 1032
i: 1032
end-i: 1032
at header: 1032
(comment . ";; literal r6")
(comment . ";;1028: b r6")
chunklet-i: 1032; chunklet-start-i: 1048; chunklet-end-i: 1064
i: 1032
end-i: 1064
at header: 1032
i: 1048
end-i: 1064
i: 1052
end-i: 1064
i: 1056
end-i: 1064
i: 1060
end-i: 1064
i: 1064
end-i: 1064
i:1064 HIT CHUNK END
(comment . ";;1052: r1 <- r1, r8")
(comment . ";;1056: r4 <- r1, 0x20\n")
(comment . ";;1060 b -356")
chunklet-i: 1064; chunklet-start-i: 1064; chunklet-end-i: 1076
i: 1064
end-i: 1076
i: 1064
end-i: 1076
i: 1076
end-i: 1076
i:1076 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 1076; chunklet-start-i: 1080; chunklet-end-i: 1088
i: 1076
end-i: 1088
i: 1080
end-i: 1088
i: 1084
end-i: 1088
i: 1088
end-i: 1088
i:1088 HIT CHUNK END
(comment . ";; instruction 1076 not included")
(comment . ";;1080: r7 <- r0, 0x68\n")
(comment . ";;1084 b -144")
chunklet-i: 1088; chunklet-start-i: 1088; chunklet-end-i: 1128
i: 1088
end-i: 1128
i: 1088
end-i: 1128
i: 1092
end-i: 1128
i: 1096
end-i: 1128
i: 1100
end-i: 1128
i: 1104
end-i: 1128
i: 1108
end-i: 1128
i: 1112
end-i: 1128
i: 1124
end-i: 1128
i: 1128
end-i: 1128
at header: 1128
(comment . ";;1088: r9 <- 0x8")
(comment . ";;1092: r4 <- r1, 0x20\n")
(comment . ";;1096: r15 <- r1, 0x28\n")
(comment . ";;1100: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1108: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1124: b r6")
chunklet-i: 1128; chunklet-start-i: 1144; chunklet-end-i: 1164
i: 1128
end-i: 1164
at header: 1128
i: 1144
end-i: 1164
i: 1148
end-i: 1164
i: 1152
end-i: 1164
i: 1156
end-i: 1164
i: 1160
end-i: 1164
i: 1164
end-i: 1164
i:1164 HIT CHUNK END
(comment . ";;1144: r1 <- r1, r0")
(comment . ";;1148: r14 <- 0x4")
(comment . ";;1152: r4 <- r1, 0x20\n")
(comment . ";;1156: r15 <- r1, 0x28\n")
(comment . ";;1160 b -248")
chunklet-i: 1164; chunklet-start-i: 1164; chunklet-end-i: 1200
i: 1164
end-i: 1200
i: 1164
end-i: 1200
i: 1168
end-i: 1200
i: 1172
end-i: 1200
i: 1176
end-i: 1200
i: 1180
end-i: 1200
i: 1184
end-i: 1200
i: 1196
end-i: 1200
i: 1200
end-i: 1200
at header: 1200
(comment . ";;1164: r4 <- r1, 0x20\n")
(comment . ";;1168: r15 <- r1, 0x28\n")
(comment . ";;1172: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1196: b r6")
chunklet-i: 1200; chunklet-start-i: 1216; chunklet-end-i: 1240
i: 1200
end-i: 1240
at header: 1200
i: 1216
end-i: 1240
i: 1220
end-i: 1240
i: 1224
end-i: 1240
i: 1228
end-i: 1240
i: 1232
end-i: 1240
i: 1236
end-i: 1240
i: 1240
end-i: 1240
i:1240 HIT CHUNK END
(comment . ";;1216: r1 <- r1, r0")
(comment . ";;1220: r10 <- 0x4")
(comment . ";;1224: r4 <- r1, 0x20\n")
(comment . ";;1228: r15 <- r1, 0x28\n")
(comment . ";;1236 b -340")
chunklet-i: 1240; chunklet-start-i: 1240; chunklet-end-i: 1252
i: 1240
end-i: 1252
i: 1240
end-i: 1252
i: 1252
end-i: 1252
i:1252 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 1252; chunklet-start-i: 1256; chunklet-end-i: 1264
i: 1252
end-i: 1264
i: 1256
end-i: 1264
i: 1260
end-i: 1264
i: 1264
end-i: 1264
i:1264 HIT CHUNK END
(comment . ";; instruction 1252 not included")
(comment . ";;1256: r7 <- r0, 0x68\n")
(comment . ";;1260 b -756")
chunklet-i: 1264; chunklet-start-i: 1264; chunklet-end-i: 1296
i: 1264
end-i: 1296
i: 1264
end-i: 1296
i: 1268
end-i: 1296
i: 1272
end-i: 1296
i: 1276
end-i: 1296
i: 1280
end-i: 1296
i: 1292
end-i: 1296
i: 1296
end-i: 1296
at header: 1296
(comment . ";;1264: r4 <- r1, 0x20\n")
(comment . ";;1268: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1276: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1292: b r6")
chunklet-i: 1296; chunklet-start-i: 1312; chunklet-end-i: 1336
i: 1296
end-i: 1336
at header: 1296
i: 1312
end-i: 1336
i: 1316
end-i: 1336
i: 1320
end-i: 1336
i: 1324
end-i: 1336
i: 1328
end-i: 1336
i: 1332
end-i: 1336
i: 1336
end-i: 1336
i:1336 HIT CHUNK END
(comment . ";;1312: r1 <- r1, r8")
(comment . ";;1316: r15 <- 0x4")
(comment . ";;1320: r4 <- r1, 0x20\n")
(comment . ";;1324: r15 <- 0x6")
(comment . ";;1332 b -1024")
chunklet-i: 1336; chunklet-start-i: 1336; chunklet-end-i: 1340
i: 1336
end-i: 1340
i: 1340
end-i: 1340
i:1340 HIT CHUNK END
(comment . ";;1336 b -632")
chunklet-i: 1340; chunklet-start-i: 1340; chunklet-end-i: 1360
i: 1340
end-i: 1360
i: 1340
end-i: 1360
i: 1344
end-i: 1360
i: 1356
end-i: 1360
i: 1360
end-i: 1360
i:1360 HIT CHUNK END
(comment . ";;1340: r9 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1356: b r6")
chunklet-i: 1360; chunklet-start-i: 1360; chunklet-end-i: 1380
i: 1360
end-i: 1380
i: 1360
end-i: 1380
i: 1364
end-i: 1380
i: 1376
end-i: 1380
i: 1380
end-i: 1380
i:1380 HIT CHUNK END
(comment . ";;1360: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1376: b r6")
chunklet-i: 1380; chunklet-start-i: 1380; chunklet-end-i: 1416
i: 1380
end-i: 1416
i: 1380
end-i: 1416
i: 1384
end-i: 1416
i: 1388
end-i: 1416
i: 1392
end-i: 1416
i: 1396
end-i: 1416
i: 1400
end-i: 1416
i: 1412
end-i: 1416
i: 1416
end-i: 1416
at header: 1416
(comment . ";;1380: r4 <- r1, 0x20\n")
(comment . ";;1384: r15 <- r1, 0x28\n")
(comment . ";;1388: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1396: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1412: b r6")
chunklet-i: 1416; chunklet-start-i: 1432; chunklet-end-i: 1456
i: 1416
end-i: 1456
at header: 1416
i: 1432
end-i: 1456
i: 1436
end-i: 1456
i: 1440
end-i: 1456
i: 1444
end-i: 1456
i: 1448
end-i: 1456
i: 1452
end-i: 1456
i: 1456
end-i: 1456
i:1456 HIT CHUNK END
(comment . ";;1432: r1 <- r1, r0")
(comment . ";;1436: r9 <- 0x4")
(comment . ";;1440: r4 <- r1, 0x20\n")
(comment . ";;1444: r15 <- r1, 0x28\n")
(comment . ";;1452 b -1264")
chunklet-i: 1456; chunklet-start-i: 1456; chunklet-end-i: 1488
i: 1456
end-i: 1488
i: 1456
end-i: 1488
i: 1460
end-i: 1488
i: 1464
end-i: 1488
i: 1468
end-i: 1488
i: 1472
end-i: 1488
i: 1484
end-i: 1488
i: 1488
end-i: 1488
at header: 1488
(comment . ";;1456: r4 <- r1, 0x20\n")
(comment . ";;1460: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1468: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1484: b r6")
chunklet-i: 1488; chunklet-start-i: 1504; chunklet-end-i: 1520
i: 1488
end-i: 1520
at header: 1488
i: 1504
end-i: 1520
i: 1508
end-i: 1520
i: 1512
end-i: 1520
i: 1516
end-i: 1520
i: 1520
end-i: 1520
i:1520 HIT CHUNK END
(comment . ";;1504: r1 <- r1, r8")
(comment . ";;1508: r15 <- 0x4")
(comment . ";;1512: r4 <- r1, 0x20\n")
(comment . ";;1516 b -1356")
chunklet-i: 1520; chunklet-start-i: 1520; chunklet-end-i: 1552
i: 1520
end-i: 1552
i: 1520
end-i: 1552
i: 1524
end-i: 1552
i: 1528
end-i: 1552
i: 1532
end-i: 1552
i: 1536
end-i: 1552
i: 1548
end-i: 1552
i: 1552
end-i: 1552
at header: 1552
(comment . ";;1520: r4 <- r1, 0x20\n")
(comment . ";;1524: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1532: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1548: b r6")
chunklet-i: 1552; chunklet-start-i: 1568; chunklet-end-i: 1584
i: 1552
end-i: 1584
at header: 1552
i: 1568
end-i: 1584
i: 1572
end-i: 1584
i: 1576
end-i: 1584
i: 1580
end-i: 1584
i: 1584
end-i: 1584
i:1584 HIT CHUNK END
(comment . ";;1572: r1 <- r1, r8")
(comment . ";;1576: r4 <- r1, 0x20\n")
(comment . ";;1580 b -1444")
chunklet-i: 1584; chunklet-start-i: 1584; chunklet-end-i: 1620
i: 1584
end-i: 1620
i: 1584
end-i: 1620
i: 1596
end-i: 1620
i: 1608
end-i: 1620
i: 1612
end-i: 1620
i: 1616
end-i: 1620
i: 1620
end-i: 1620
i:1620 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;1608: r10 <- r9, 0x5\n")
(comment . ";;1612: r10 <- 0x1E")
(comment . ";;1616 b 240")
chunklet-i: 1620; chunklet-start-i: 1620; chunklet-end-i: 1628
i: 1620
end-i: 1628
i: 1620
end-i: 1628
i: 1624
end-i: 1628
i: 1628
end-i: 1628
i:1628 HIT CHUNK END
(comment . ";;1620: r10 <- 0x7")
(comment . ";;1624 b 96")
chunklet-i: 1628; chunklet-start-i: 1628; chunklet-end-i: 1636
i: 1628
end-i: 1636
i: 1632
end-i: 1636
i: 1636
end-i: 1636
i:1636 HIT CHUNK END
(comment . ";;1628: r4 <- r10, 0x8\n")
(comment . ";;1632 b 88")
chunklet-i: 1636; chunklet-start-i: 1636; chunklet-end-i: 1652
i: 1636
end-i: 1652
i: 1636
end-i: 1652
i: 1640
end-i: 1652
i: 1644
end-i: 1652
i: 1648
end-i: 1652
i: 1652
end-i: 1652
i:1652 HIT CHUNK END
(comment . ";;1636: r14 <- r15, r5")
(comment . ";;1640: r4 <- r14, 0x0\n")
(comment . ";;1644: r4 <- 0x7")
(comment . ";;1648 b 24")
chunklet-i: 1652; chunklet-start-i: 1652; chunklet-end-i: 1664
i: 1652
end-i: 1664
i: 1656
end-i: 1664
i: 1660
end-i: 1664
i: 1664
end-i: 1664
i:1664 HIT CHUNK END
(comment . ";;1652: r7 <- r0, 0x68\n")
(comment . ";;1656: r2 <- r7")
(comment . ";;1660 b 36")
chunklet-i: 1664; chunklet-start-i: 1664; chunklet-end-i: 1676
i: 1664
end-i: 1676
i: 1664
end-i: 1676
i: 1668
end-i: 1676
i: 1672
end-i: 1676
i: 1676
end-i: 1676
i:1676 HIT CHUNK END
(comment . ";;1664: r7 <- r7, r8")
(comment . ";;1668: r7 <- r0, 0x68\n")
(comment . ";;1672: r14 <- r7, 0x0\n")
chunklet-i: 1676; chunklet-start-i: 1676; chunklet-end-i: 1700
i: 1676
end-i: 1700
i: 1676
end-i: 1700
i: 1688
end-i: 1700
i: 1692
end-i: 1700
i: 1696
end-i: 1700
i: 1700
end-i: 1700
i:1700 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;1688: r14 <- r15, 0xD\n")
(comment . ";;1692: r4 <- 0x6")
(comment . ";;1696: b r1, 0")
chunklet-i: 1700; chunklet-start-i: 1700; chunklet-end-i: 1712
i: 1700
end-i: 1712
i: 1700
end-i: 1712
i: 1712
end-i: 1712
i:1712 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 1712; chunklet-start-i: 1716; chunklet-end-i: 1724
i: 1712
end-i: 1724
i: 1716
end-i: 1724
i: 1720
end-i: 1724
i: 1724
end-i: 1724
i:1724 HIT CHUNK END
(comment . ";; instruction 1712 not included")
(comment . ";;1716: r7 <- r0, 0x68\n")
(comment . ";;1720 b -60")
chunklet-i: 1724; chunklet-start-i: 1724; chunklet-end-i: 1732
i: 1724
end-i: 1732
i: 1724
end-i: 1732
i: 1728
end-i: 1732
i: 1732
end-i: 1732
i:1732 HIT CHUNK END
(comment . ";;1724: r3 <- r3, 0x1\n")
(comment . ";;1728 b 64")
chunklet-i: 1732; chunklet-start-i: 1732; chunklet-end-i: 1768
i: 1732
end-i: 1768
i: 1736
end-i: 1768
i: 1740
end-i: 1768
i: 1744
end-i: 1768
i: 1748
end-i: 1768
i: 1752
end-i: 1768
i: 1764
end-i: 1768
i: 1768
end-i: 1768
at header: 1768
(comment . ";;1732: r15 <- r1, 0x8\n")
(comment . ";;1736: r10 <- r1, 0x10\n")
(comment . ";;1740: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1748: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1764: b r6")
chunklet-i: 1768; chunklet-start-i: 1784; chunklet-end-i: 1796
i: 1768
end-i: 1796
at header: 1768
i: 1784
end-i: 1796
i: 1788
end-i: 1796
i: 1792
end-i: 1796
i: 1796
end-i: 1796
i:1796 HIT CHUNK END
(comment . ";;1784: r1 <- r1, r8")
(comment . ";;1788: r15 <- r1, 0x8\n")
(comment . ";;1792: r10 <- r1, 0x10\n")
chunklet-i: 1796; chunklet-start-i: 1796; chunklet-end-i: 1832
i: 1796
end-i: 1832
i: 1796
end-i: 1832
i: 1800
end-i: 1832
i: 1804
end-i: 1832
i: 1808
end-i: 1832
i: 1812
end-i: 1832
i: 1816
end-i: 1832
i: 1828
end-i: 1832
i: 1832
end-i: 1832
at header: 1832
(comment . ";;1796: r9 <- 0x8")
(comment . ";;1800: r15 <- r1, 0x8\n")
(comment . ";;1804: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1812: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1828: b r6")
chunklet-i: 1832; chunklet-start-i: 1848; chunklet-end-i: 1860
i: 1832
end-i: 1860
at header: 1832
i: 1848
end-i: 1860
i: 1852
end-i: 1860
i: 1856
end-i: 1860
i: 1860
end-i: 1860
i:1860 HIT CHUNK END
(comment . ";;1848: r1 <- r1, r0")
(comment . ";;1852: r15 <- r1, 0x8\n")
(comment . ";;1856 b -224")
chunklet-i: 1860; chunklet-start-i: 1860; chunklet-end-i: 1868
i: 1860
end-i: 1868
i: 1860
end-i: 1868
i: 1864
end-i: 1868
i: 1868
end-i: 1868
i:1868 HIT CHUNK END
(comment . ";;1860: r3 <- r3, 0x1\n")
(comment . ";;1864 b 68")
chunklet-i: 1868; chunklet-start-i: 1868; chunklet-end-i: 1904
i: 1868
end-i: 1904
i: 1872
end-i: 1904
i: 1876
end-i: 1904
i: 1880
end-i: 1904
i: 1884
end-i: 1904
i: 1888
end-i: 1904
i: 1900
end-i: 1904
i: 1904
end-i: 1904
at header: 1904
(comment . ";;1868: r15 <- r1, 0x8\n")
(comment . ";;1872: r9 <- r1, 0x10\n")
(comment . ";;1876: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1884: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1900: b r6")
chunklet-i: 1904; chunklet-start-i: 1920; chunklet-end-i: 1936
i: 1904
end-i: 1936
at header: 1904
i: 1920
end-i: 1936
i: 1924
end-i: 1936
i: 1928
end-i: 1936
i: 1932
end-i: 1936
i: 1936
end-i: 1936
i:1936 HIT CHUNK END
(comment . ";;1924: r1 <- r1, r8")
(comment . ";;1928: r15 <- r1, 0x8\n")
(comment . ";;1932: r9 <- r1, 0x10\n")
chunklet-i: 1936; chunklet-start-i: 1936; chunklet-end-i: 1968
i: 1936
end-i: 1968
i: 1936
end-i: 1968
i: 1940
end-i: 1968
i: 1944
end-i: 1968
i: 1948
end-i: 1968
i: 1952
end-i: 1968
i: 1964
end-i: 1968
i: 1968
end-i: 1968
at header: 1968
(comment . ";;1936: r15 <- r1, 0x8\n")
(comment . ";;1940: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1948: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1964: b r6")
chunklet-i: 1968; chunklet-start-i: 1984; chunklet-end-i: 2004
i: 1968
end-i: 2004
at header: 1968
i: 1984
end-i: 2004
i: 1988
end-i: 2004
i: 1992
end-i: 2004
i: 1996
end-i: 2004
i: 2000
end-i: 2004
i: 2004
end-i: 2004
i:2004 HIT CHUNK END
(comment . ";;1984: r1 <- r1, r0")
(comment . ";;1988: r10 <- 0x4")
(comment . ";;1992: r15 <- r1, 0x8\n")
(comment . ";;2000 b -384")
chunklet-i: 2004; chunklet-start-i: 2004; chunklet-end-i: 2012
i: 2004
end-i: 2012
i: 2004
end-i: 2012
i: 2008
end-i: 2012
i: 2012
end-i: 2012
i:2012 HIT CHUNK END
(comment . ";;2004: r3 <- r3, 0x1\n")
(comment . ";;2008 b 64")
chunklet-i: 2012; chunklet-start-i: 2012; chunklet-end-i: 2048
i: 2012
end-i: 2048
i: 2016
end-i: 2048
i: 2020
end-i: 2048
i: 2024
end-i: 2048
i: 2028
end-i: 2048
i: 2032
end-i: 2048
i: 2044
end-i: 2048
i: 2048
end-i: 2048
at header: 2048
(comment . ";;2012: r4 <- r1, 0x20\n")
(comment . ";;2016: r10 <- r1, 0x28\n")
(comment . ";;2020: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2028: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2044: b r6")
chunklet-i: 2048; chunklet-start-i: 2064; chunklet-end-i: 2076
i: 2048
end-i: 2076
at header: 2048
i: 2064
end-i: 2076
i: 2068
end-i: 2076
i: 2072
end-i: 2076
i: 2076
end-i: 2076
i:2076 HIT CHUNK END
(comment . ";;2064: r1 <- r1, r0")
(comment . ";;2068: r4 <- r1, 0x20\n")
(comment . ";;2072: r10 <- r1, 0x28\n")
chunklet-i: 2076; chunklet-start-i: 2076; chunklet-end-i: 2112
i: 2076
end-i: 2112
i: 2076
end-i: 2112
i: 2080
end-i: 2112
i: 2084
end-i: 2112
i: 2088
end-i: 2112
i: 2092
end-i: 2112
i: 2096
end-i: 2112
i: 2108
end-i: 2112
i: 2112
end-i: 2112
at header: 2112
(comment . ";;2076: r9 <- 0x4")
(comment . ";;2080: r4 <- r1, 0x20\n")
(comment . ";;2084: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2092: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2108: b r6")
chunklet-i: 2112; chunklet-start-i: 2128; chunklet-end-i: 2152
i: 2112
end-i: 2152
at header: 2112
i: 2128
end-i: 2152
i: 2132
end-i: 2152
i: 2136
end-i: 2152
i: 2140
end-i: 2152
i: 2144
end-i: 2152
i: 2148
end-i: 2152
i: 2152
end-i: 2152
i:2152 HIT CHUNK END
(comment . ";;2128: r1 <- r1, r8")
(comment . ";;2132: r15 <- 0x4")
(comment . ";;2136: r4 <- r1, 0x20\n")
(comment . ";;2140: r15 <- 0x6")
(comment . ";;2148 b -2020")
chunklet-i: 2152; chunklet-start-i: 2152; chunklet-end-i: 2156
i: 2152
end-i: 2156
i: 2156
end-i: 2156
i:2156 HIT CHUNK END
(comment . ";;2152 b -572")
chunklet-i: 2156; chunklet-start-i: 2156; chunklet-end-i: 2164
i: 2156
end-i: 2164
i: 2156
end-i: 2164
i: 2160
end-i: 2164
i: 2164
end-i: 2164
i:2164 HIT CHUNK END
(comment . ";;2156: r3 <- r3, 0x1\n")
(comment . ";;2160 b 68")
chunklet-i: 2164; chunklet-start-i: 2164; chunklet-end-i: 2200
i: 2164
end-i: 2200
i: 2168
end-i: 2200
i: 2172
end-i: 2200
i: 2176
end-i: 2200
i: 2180
end-i: 2200
i: 2184
end-i: 2200
i: 2196
end-i: 2200
i: 2200
end-i: 2200
at header: 2200
(comment . ";;2164: r4 <- r1, 0x20\n")
(comment . ";;2168: r9 <- r1, 0x28\n")
(comment . ";;2172: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2196: b r6")
chunklet-i: 2200; chunklet-start-i: 2216; chunklet-end-i: 2232
i: 2200
end-i: 2232
at header: 2200
i: 2216
end-i: 2232
i: 2220
end-i: 2232
i: 2224
end-i: 2232
i: 2228
end-i: 2232
i: 2232
end-i: 2232
i:2232 HIT CHUNK END
(comment . ";;2220: r1 <- r1, r0")
(comment . ";;2224: r4 <- r1, 0x20\n")
(comment . ";;2228: r9 <- r1, 0x28\n")
chunklet-i: 2232; chunklet-start-i: 2232; chunklet-end-i: 2264
i: 2232
end-i: 2264
i: 2232
end-i: 2264
i: 2236
end-i: 2264
i: 2240
end-i: 2264
i: 2244
end-i: 2264
i: 2248
end-i: 2264
i: 2260
end-i: 2264
i: 2264
end-i: 2264
at header: 2264
(comment . ";;2232: r4 <- r1, 0x20\n")
(comment . ";;2236: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2244: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2260: b r6")
chunklet-i: 2264; chunklet-start-i: 2280; chunklet-end-i: 2296
i: 2264
end-i: 2296
at header: 2264
i: 2280
end-i: 2296
i: 2284
end-i: 2296
i: 2288
end-i: 2296
i: 2292
end-i: 2296
i: 2296
end-i: 2296
i:2296 HIT CHUNK END
(comment . ";;2280: r1 <- r1, r8")
(comment . ";;2284: r10 <- 0x4")
(comment . ";;2288: r4 <- r1, 0x20\n")
(comment . ";;2292 b -2184")
chunklet-i: 2296; chunklet-start-i: 2296; chunklet-end-i: 2308
i: 2296
end-i: 2308
i: 2296
end-i: 2308
i: 2308
end-i: 2308
i:2308 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 2308; chunklet-start-i: 2312; chunklet-end-i: 2316
i: 2308
end-i: 2316
i: 2312
end-i: 2316
i: 2316
end-i: 2316
i:2316 HIT CHUNK END
(comment . ";; instruction 2308 not included")
(comment . ";;2312 b -2268")
chunklet-i: 2316; chunklet-start-i: 2316; chunklet-end-i: 2328
i: 2316
end-i: 2328
i: 2316
end-i: 2328
i: 2328
end-i: 2328
i:2328 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 2328; chunklet-start-i: 2332; chunklet-end-i: 2336
i: 2328
end-i: 2336
i: 2332
end-i: 2336
i: 2336
end-i: 2336
i:2336 HIT CHUNK END
(comment . ";; instruction 2328 not included")
(comment . ";;2332 b -2312")
chunklet-i: 2336; chunklet-start-i: 2336; chunklet-end-i: 2352
i: 2336
end-i: 2352
i: 2336
end-i: 2352
i: 2348
end-i: 2352
i: 2352
end-i: 2352
i:2352 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;2348: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: definePiece
instruction range for chunk: 0 12
instruction range for chunk: 12 48
instruction range for chunk: 48 64
instruction range for chunk: 64 76
instruction range for chunk: 76 84
instruction range for chunk: 84 92
instruction range for chunk: 92 96
instruction range for chunk: 96 108
instruction range for chunk: 108 116
instruction range for chunk: 116 124
instruction range for chunk: 124 128
instruction range for chunk: 128 140
instruction range for chunk: 140 148
instruction range for chunk: 148 156
instruction range for chunk: 156 180
instruction range for chunk: 180 204
instruction range for chunk: 204 208
instruction range for chunk: 208 220
instruction range for chunk: 220 232
instruction range for chunk: 232 244
instruction range for chunk: 244 252
instruction range for chunk: 252 256
instruction range for chunk: 256 268
instruction range for chunk: 268 280
instruction range for chunk: 280 284
instruction range for chunk: 284 296
instruction range for chunk: 296 304
instruction range for chunk: 304 308
instruction range for chunk: 308 324
instruction range for chunk: 324 336
instruction range for chunk: 336 348
instruction range for chunk: 348 372
instruction range for chunk: 372 396
instruction range for chunk: 396 408
instruction range for chunk: 408 428
instruction range for chunk: 428 440
instruction range for chunk: 440 464
instruction range for chunk: 464 476
instruction range for chunk: 476 484
instruction range for chunk: 484 500
instruction range for chunk: 500 520
instruction range for chunk: 520 528
instruction range for chunk: 528 536
instruction range for chunk: 536 600
instruction range for chunk: 616 660
instruction range for chunk: 660 680
instruction range for chunk: 680 704
instruction range for chunk: 704 768
instruction range for chunk: 784 836
instruction range for chunk: 836 896
instruction range for chunk: 912 960
instruction range for chunk: 960 972
instruction range for chunk: 976 984
instruction range for chunk: 984 1048
instruction range for chunk: 1064 1112
instruction range for chunk: 1112 1176
instruction range for chunk: 1192 1236
instruction range for chunk: 1236 1304
instruction range for chunk: 1320 1372
instruction range for chunk: 1372 1440
instruction range for chunk: 1456 1504
instruction range for chunk: 1504 1568
instruction range for chunk: 1584 1636
instruction range for chunk: 1636 1696
instruction range for chunk: 1712 1756
instruction range for chunk: 1756 1816
instruction range for chunk: 1832 1876
instruction range for chunk: 1876 1884
instruction range for chunk: 1884 1892
instruction range for chunk: 1892 1900
instruction range for chunk: 1900 1960
instruction range for chunk: 1976 2012
instruction range for chunk: 2012 2020
instruction range for chunk: 2020 2080
instruction range for chunk: 2096 2132
instruction range for chunk: 2132 2200
instruction range for chunk: 2216 2268
instruction range for chunk: 2268 2272
instruction range for chunk: 2272 2328
instruction range for chunk: 2344 2384
instruction range for chunk: 2384 2392
instruction range for chunk: 2392 2400
instruction range for chunk: 2400 2408
instruction range for chunk: 2408 2464
instruction range for chunk: 2480 2512
instruction range for chunk: 2512 2520
instruction range for chunk: 2520 2576
instruction range for chunk: 2592 2624
instruction range for chunk: 2624 2688
instruction range for chunk: 2704 2752
instruction range for chunk: 2752 2756
instruction range for chunk: 2756 2808
instruction range for chunk: 2824 2856
instruction range for chunk: 2856 2880
instruction range for chunk: 2880 2904
instruction range for chunk: 2904 2916
instruction range for chunk: 2916 2928
instruction range for chunk: 2928 2936
instruction range for chunk: 2936 2952
instruction range for chunk: 2952 2972
instruction range for chunk: 2972 2984
instruction range for chunk: 2984 2996
instruction range for chunk: 2996 3020
instruction range for chunk: 3020 3044
instruction range for chunk: 3044 3060
instruction range for chunk: 3060 3072
instruction range for chunk: 3072 3080
instruction range for chunk: 3080 3096
instruction range for chunk: 3096 3116
instruction range for chunk: 3116 3128
instruction range for chunk: 3128 3140
instruction range for chunk: 3140 3164
instruction range for chunk: 3164 3188
instruction range for chunk: 3188 3200
instruction range for chunk: 3200 3208
instruction range for chunk: 3208 3216
instruction range for chunk: 3216 3252
instruction range for chunk: 3252 3260
instruction range for chunk: 3260 3268
instruction range for chunk: 3268 3284
instruction range for chunk: 3284 3296
instruction range for chunk: 3296 3308
instruction range for chunk: 3308 3332
instruction range for chunk: 3332 3344
instruction range for chunk: 3348 3356
instruction range for chunk: 3356 3364
instruction range for chunk: 3364 3400
instruction range for chunk: 3416 3428
instruction range for chunk: 3428 3464
instruction range for chunk: 3480 3492
instruction range for chunk: 3492 3500
instruction range for chunk: 3500 3536
instruction range for chunk: 3552 3568
instruction range for chunk: 3568 3600
instruction range for chunk: 3616 3636
instruction range for chunk: 3636 3644
instruction range for chunk: 3644 3680
instruction range for chunk: 3696 3712
instruction range for chunk: 3712 3744
instruction range for chunk: 3760 3776
instruction range for chunk: 3776 3780
instruction range for chunk: 3780 3788
instruction range for chunk: 3788 3824
instruction range for chunk: 3840 3856
instruction range for chunk: 3856 3888
instruction range for chunk: 3904 3920
instruction range for chunk: 3920 3928
instruction range for chunk: 3928 3960
instruction range for chunk: 3976 3988
instruction range for chunk: 3988 4016
instruction range for chunk: 4032 4044
instruction range for chunk: 4044 4056
instruction range for chunk: 4060 4068
instruction range for chunk: 4068 4088
instruction range for chunk: 4088 4096
instruction range for chunk: 4096 4136
instruction range for chunk: 4152 4172
instruction range for chunk: 4172 4208
instruction range for chunk: 4224 4244
instruction range for chunk: 4244 4252
instruction range for chunk: 4252 4288
instruction range for chunk: 4304 4320
instruction range for chunk: 4320 4352
instruction range for chunk: 4368 4380
instruction range for chunk: 4380 4392
instruction range for chunk: 4396 4404
instruction range for chunk: 4404 4428
instruction range for chunk: 4428 4436
instruction range for chunk: 4436 4480
instruction range for chunk: 4496 4520
instruction range for chunk: 4520 4560
instruction range for chunk: 4576 4600
instruction range for chunk: 4600 4608
instruction range for chunk: 4608 4648
instruction range for chunk: 4664 4684
instruction range for chunk: 4684 4720
instruction range for chunk: 4736 4756
instruction range for chunk: 4756 4764
instruction range for chunk: 4764 4816
instruction range for chunk: 4832 4860
instruction range for chunk: 4860 4920
instruction range for chunk: 4936 4976
instruction range for chunk: 4976 4980
instruction range for chunk: 4980 4992
instruction range for chunk: 4996 5000
instruction range for chunk: 5000 5016
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x4")
(comment . ";;8 b 4988")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 48
i: 12
end-i: 48
i: 16
end-i: 48
i: 20
end-i: 48
i: 24
end-i: 48
i: 28
end-i: 48
i: 32
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;12: r15 <- 0x9")
(comment . ";;16: r14 <- 0xA")
(comment . ";;20: r13 <- r1, 0x8\n")
(comment . ";;24: r12 <- 0x0")
(comment . ";;28: r5 <- r2, r9")
(comment . ";;32: r2 <- r2, r0")
(comment . ";;36: r10 <- r0, 0x68\n")
(comment . ";;40: r10 <- r2")
(comment . ";;44 b 4932")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 64
i: 48
end-i: 64
i: 48
end-i: 64
i: 52
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;48: r12 <- r5, 0x7\n")
(comment . ";;52: r12 <- 0x1E")
(comment . ";;56: r12 <- r5, 0xF\n")
(comment . ";;60: r4 <- 0x0")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 76
i: 64
end-i: 76
i: 64
end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;64: r12 <- r4, r14")
(comment . ";;68: r12 <- 0x7")
(comment . ";;72 b 4680")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 84
i: 76
end-i: 84
i: 80
end-i: 84
i: 84
end-i: 84
i:84 HIT CHUNK END
(comment . ";;76: r4 <- r14")
(comment . ";;80 b 2772")
chunklet-i: 84; chunklet-start-i: 84; chunklet-end-i: 92
i: 84
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;84: r3 <- r3, 0x1\n")
(comment . ";;88 b 2664")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 96
i: 92
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
i:96 HIT CHUNK END
(comment . ";;92: r12 <- 0x0")
chunklet-i: 96; chunklet-start-i: 96; chunklet-end-i: 108
i: 96
end-i: 108
i: 96
end-i: 108
i: 100
end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
(comment . ";;96: r10 <- r12, r11")
(comment . ";;100: r10 <- 0x7")
(comment . ";;104 b 2404")
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;108: r12 <- r11")
(comment . ";;112 b 2268")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 124
i: 116
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;116: r3 <- r3, 0x1\n")
(comment . ";;120 b 2148")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 128
i: 124
end-i: 128
i: 124
end-i: 128
i: 128
end-i: 128
i:128 HIT CHUNK END
(comment . ";;124: r8 <- 0x0")
chunklet-i: 128; chunklet-start-i: 128; chunklet-end-i: 140
i: 128
end-i: 140
i: 128
end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";;128: r10 <- r8, r13")
(comment . ";;132: r10 <- 0x7")
(comment . ";;136 b 1872")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 148
i: 140
end-i: 148
i: 144
end-i: 148
i: 148
end-i: 148
i:148 HIT CHUNK END
(comment . ";;140: r8 <- r13")
(comment . ";;144 b 1728")
chunklet-i: 148; chunklet-start-i: 148; chunklet-end-i: 156
i: 148
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;148: r3 <- r3, 0x1\n")
(comment . ";;152 b 1600")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 180
i: 156
end-i: 180
i: 156
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;168: r7 <- r9, 0x5\n")
(comment . ";;172: r7 <- 0x1E")
(comment . ";;176 b 1456")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 204
i: 180
end-i: 204
i: 180
end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;192: r10 <- r9, 0x5\n")
(comment . ";;196: r10 <- 0x1E")
(comment . ";;200 b 1300")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 208
i: 204
end-i: 208
i: 208
end-i: 208
i:208 HIT CHUNK END
(comment . ";;204: r9 <- 0xA")
chunklet-i: 208; chunklet-start-i: 208; chunklet-end-i: 220
i: 208
end-i: 220
i: 208
end-i: 220
i: 212
end-i: 220
i: 216
end-i: 220
i: 220
end-i: 220
i:220 HIT CHUNK END
(comment . ";;208: r10 <- r9, r8")
(comment . ";;212: r10 <- 0x7")
(comment . ";;216 b 1152")
chunklet-i: 220; chunklet-start-i: 220; chunklet-end-i: 232
i: 220
end-i: 232
i: 224
end-i: 232
i: 228
end-i: 232
i: 232
end-i: 232
i:232 HIT CHUNK END
(comment . ";;220: r10 <- r8, r3")
(comment . ";;224: r10 <- r9, r10")
(comment . ";;228 b 1140")
chunklet-i: 232; chunklet-start-i: 232; chunklet-end-i: 244
i: 232
end-i: 244
i: 232
end-i: 244
i: 236
end-i: 244
i: 240
end-i: 244
i: 244
end-i: 244
i:244 HIT CHUNK END
(comment . ";;232: r9 <- r12, r10")
(comment . ";;236: r9 <- 0x7")
(comment . ";;240 b 992")
chunklet-i: 244; chunklet-start-i: 244; chunklet-end-i: 252
i: 244
end-i: 252
i: 248
end-i: 252
i: 252
end-i: 252
i:252 HIT CHUNK END
(comment . ";;244: r9 <- r12, r10")
(comment . ";;248 b 984")
chunklet-i: 252; chunklet-start-i: 252; chunklet-end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;252: r10 <- 0x9")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 268
i: 256
end-i: 268
i: 256
end-i: 268
i: 260
end-i: 268
i: 264
end-i: 268
i: 268
end-i: 268
i:268 HIT CHUNK END
(comment . ";;256: r9 <- r7, r10")
(comment . ";;260: r9 <- 0x7")
(comment . ";;264 b 844")
chunklet-i: 268; chunklet-start-i: 268; chunklet-end-i: 280
i: 268
end-i: 280
i: 272
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";;268: r9 <- r10, r3")
(comment . ";;272: r9 <- r7, r9")
(comment . ";;276 b 832")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 284
i: 280
end-i: 284
i: 284
end-i: 284
i:284 HIT CHUNK END
(comment . ";;280: r10 <- 0x9")
chunklet-i: 284; chunklet-start-i: 284; chunklet-end-i: 296
i: 284
end-i: 296
i: 284
end-i: 296
i: 288
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";;284: r9 <- r4, r10")
(comment . ";;288: r9 <- 0x7")
(comment . ";;292 b 688")
chunklet-i: 296; chunklet-start-i: 296; chunklet-end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;296: r9 <- r4, r10")
(comment . ";;300 b 680")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;304: r10 <- 0x9")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 324
i: 308
end-i: 324
i: 308
end-i: 324
i: 312
end-i: 324
i: 316
end-i: 324
i: 320
end-i: 324
i: 324
end-i: 324
i:324 HIT CHUNK END
(comment . ";;308: r9 <- r5, r7")
(comment . ";;312: r10 <- r9, 0x0\n")
(comment . ";;316: r10 <- 0x7")
(comment . ";;320 b 24")
chunklet-i: 324; chunklet-start-i: 324; chunklet-end-i: 336
i: 324
end-i: 336
i: 328
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
i:336 HIT CHUNK END
(comment . ";;324: r7 <- r0, 0x68\n")
(comment . ";;328: r2 <- r7")
(comment . ";;332 b 624")
chunklet-i: 336; chunklet-start-i: 336; chunklet-end-i: 348
i: 336
end-i: 348
i: 336
end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";;336: r7 <- r7, r8")
(comment . ";;340: r7 <- r0, 0x68\n")
(comment . ";;344: r9 <- r7, 0x0\n")
chunklet-i: 348; chunklet-start-i: 348; chunklet-end-i: 372
i: 348
end-i: 372
i: 348
end-i: 372
i: 360
end-i: 372
i: 364
end-i: 372
i: 368
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;360: r10 <- r9, 0x5\n")
(comment . ";;364: r10 <- 0x1E")
(comment . ";;368 b 464")
chunklet-i: 372; chunklet-start-i: 372; chunklet-end-i: 396
i: 372
end-i: 396
i: 372
end-i: 396
i: 384
end-i: 396
i: 388
end-i: 396
i: 392
end-i: 396
i: 396
end-i: 396
i:396 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;384: r7 <- r9, 0x5\n")
(comment . ";;388: r7 <- 0x1E")
(comment . ";;392 b 308")
chunklet-i: 396; chunklet-start-i: 396; chunklet-end-i: 408
i: 396
end-i: 408
i: 396
end-i: 408
i: 400
end-i: 408
i: 404
end-i: 408
i: 408
end-i: 408
i:408 HIT CHUNK END
(comment . ";;396: r9 <- r10, r7")
(comment . ";;400: r9 <- 0x7")
(comment . ";;404 b 272")
chunklet-i: 408; chunklet-start-i: 408; chunklet-end-i: 428
i: 408
end-i: 428
i: 412
end-i: 428
i: 416
end-i: 428
i: 420
end-i: 428
i: 424
end-i: 428
i: 428
end-i: 428
i:428 HIT CHUNK END
(comment . ";;408: r9 <- r10, 0x1\n")
(comment . ";;412: r6 <- r9, r1")
(comment . ";;416: r6 <- r6, r8")
(comment . ";;420: r7 <- r6")
(comment . ";;424 b 252")
chunklet-i: 428; chunklet-start-i: 428; chunklet-end-i: 440
i: 428
end-i: 440
i: 432
end-i: 440
i: 436
end-i: 440
i: 440
end-i: 440
i:440 HIT CHUNK END
(comment . ";;428: r9 <- r7, r9")
(comment . ";;432: r9 <- 0x7")
(comment . ";;436 b 240")
chunklet-i: 440; chunklet-start-i: 440; chunklet-end-i: 464
i: 440
end-i: 464
i: 444
end-i: 464
i: 448
end-i: 464
i: 452
end-i: 464
i: 456
end-i: 464
i: 460
end-i: 464
i: 464
end-i: 464
i:464 HIT CHUNK END
(comment . ";;440: r9 <- r7, r9")
(comment . ";;444: r9 <- r10, r9")
(comment . ";;448: r10 <- r5, 0x7\n")
(comment . ";;452: r7 <- r9, r7")
(comment . ";;456: r7 <- 0x7")
(comment . ";;460 b 196")
chunklet-i: 464; chunklet-start-i: 464; chunklet-end-i: 476
i: 464
end-i: 476
i: 468
end-i: 476
i: 472
end-i: 476
i: 476
end-i: 476
i:476 HIT CHUNK END
(comment . ";;464: r7 <- r9, 0x1\n")
(comment . ";;468: r7 <- 0xF")
(comment . ";;472 b 184")
chunklet-i: 476; chunklet-start-i: 476; chunklet-end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";;476: r10 <- 0x7")
(comment . ";;480 b 176")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 500
i: 484
end-i: 500
i: 488
end-i: 500
i: 492
end-i: 500
i: 496
end-i: 500
i: 500
end-i: 500
i:500 HIT CHUNK END
(comment . ";;484: r7 <- r7, r1")
(comment . ";;488: r7 <- r7, r8")
(comment . ";;492: r10 <- r7")
(comment . ";;496 b 160")
chunklet-i: 500; chunklet-start-i: 500; chunklet-end-i: 520
i: 500
end-i: 520
i: 504
end-i: 520
i: 508
end-i: 520
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;500: r7 <- 0xE")
(comment . ";;504: r10 <- r10, r9")
(comment . ";;508: r7 <- r9, r10")
(comment . ";;512: r8 <- 0x7")
(comment . ";;516 b 16")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 528
i: 520
end-i: 528
i: 524
end-i: 528
i: 528
end-i: 528
i:528 HIT CHUNK END
(comment . ";;520: r10 <- r8, 0x8\n")
(comment . ";;524 b 8")
chunklet-i: 528; chunklet-start-i: 528; chunklet-end-i: 536
i: 528
end-i: 536
i: 532
end-i: 536
i: 536
end-i: 536
i:536 HIT CHUNK END
(comment . ";;528: r8 <- 0xA")
(comment . ";;532 b -408")
chunklet-i: 536; chunklet-start-i: 536; chunklet-end-i: 600
i: 536
end-i: 600
i: 536
end-i: 600
i: 540
end-i: 600
i: 544
end-i: 600
i: 548
end-i: 600
i: 552
end-i: 600
i: 556
end-i: 600
i: 560
end-i: 600
i: 564
end-i: 600
i: 568
end-i: 600
i: 572
end-i: 600
i: 576
end-i: 600
i: 580
end-i: 600
i: 584
end-i: 600
i: 596
end-i: 600
i: 600
end-i: 600
at header: 600
(comment . ";;536: r9 <- 0x8")
(comment . ";;540: r10 <- 0x8")
(comment . ";;544: r15 <- r1, 0x10\n")
(comment . ";;548: r14 <- r1, 0x18\n")
(comment . ";;552: r11 <- r1, 0x20\n")
(comment . ";;556: r13 <- r1, 0x8\n")
(comment . ";;560: r5 <- r1, 0x28\n")
(comment . ";;564: r4 <- r1, 0x30\n")
(comment . ";;568: r12 <- r1, 0x38\n")
(comment . ";;572: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;580: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;596: b r6")
chunklet-i: 600; chunklet-start-i: 616; chunklet-end-i: 660
i: 600
end-i: 660
at header: 600
i: 616
end-i: 660
i: 620
end-i: 660
i: 624
end-i: 660
i: 628
end-i: 660
i: 632
end-i: 660
i: 636
end-i: 660
i: 640
end-i: 660
i: 644
end-i: 660
i: 648
end-i: 660
i: 652
end-i: 660
i: 656
end-i: 660
i: 660
end-i: 660
i:660 HIT CHUNK END
(comment . ";;616: r1 <- r1, r0")
(comment . ";;620: r8 <- 0x4")
(comment . ";;624: r15 <- r1, 0x10\n")
(comment . ";;628: r14 <- r1, 0x18\n")
(comment . ";;632: r11 <- r1, 0x20\n")
(comment . ";;636: r13 <- r1, 0x8\n")
(comment . ";;640: r5 <- r1, 0x28\n")
(comment . ";;644: r4 <- r1, 0x30\n")
(comment . ";;648: r12 <- r1, 0x38\n")
(comment . ";;656 b -532")
chunklet-i: 660; chunklet-start-i: 660; chunklet-end-i: 680
i: 660
end-i: 680
i: 660
end-i: 680
i: 664
end-i: 680
i: 676
end-i: 680
i: 680
end-i: 680
i:680 HIT CHUNK END
(comment . ";;660: r11 <- 0xE")
(comment . ";; literal r6")
(comment . ";;676: b r6")
chunklet-i: 680; chunklet-start-i: 680; chunklet-end-i: 704
i: 680
end-i: 704
i: 680
end-i: 704
i: 684
end-i: 704
i: 688
end-i: 704
i: 700
end-i: 704
i: 704
end-i: 704
i:704 HIT CHUNK END
(comment . ";;680: r9 <- 0xA")
(comment . ";;684: r10 <- 0x7")
(comment . ";; literal r6")
(comment . ";;700: b r6")
chunklet-i: 704; chunklet-start-i: 704; chunklet-end-i: 768
i: 704
end-i: 768
i: 704
end-i: 768
i: 708
end-i: 768
i: 712
end-i: 768
i: 716
end-i: 768
i: 720
end-i: 768
i: 724
end-i: 768
i: 728
end-i: 768
i: 732
end-i: 768
i: 736
end-i: 768
i: 740
end-i: 768
i: 744
end-i: 768
i: 748
end-i: 768
i: 752
end-i: 768
i: 764
end-i: 768
i: 768
end-i: 768
at header: 768
(comment . ";;704: r15 <- r1, 0x10\n")
(comment . ";;708: r14 <- r1, 0x18\n")
(comment . ";;712: r11 <- r1, 0x20\n")
(comment . ";;716: r13 <- r1, 0x8\n")
(comment . ";;720: r5 <- r1, 0x28\n")
(comment . ";;724: r4 <- r1, 0x30\n")
(comment . ";;728: r12 <- r1, 0x38\n")
(comment . ";;732: r8 <- r1, 0x40\n")
(comment . ";;736: r10 <- r1, 0x48\n")
(comment . ";;740: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;748: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;764: b r6")
chunklet-i: 768; chunklet-start-i: 784; chunklet-end-i: 836
i: 768
end-i: 836
at header: 768
i: 784
end-i: 836
i: 788
end-i: 836
i: 792
end-i: 836
i: 796
end-i: 836
i: 800
end-i: 836
i: 804
end-i: 836
i: 808
end-i: 836
i: 812
end-i: 836
i: 816
end-i: 836
i: 820
end-i: 836
i: 824
end-i: 836
i: 828
end-i: 836
i: 832
end-i: 836
i: 836
end-i: 836
i:836 HIT CHUNK END
(comment . ";;784: r1 <- r1, r0")
(comment . ";;788: r7 <- 0x4")
(comment . ";;792: r15 <- r1, 0x10\n")
(comment . ";;796: r14 <- r1, 0x18\n")
(comment . ";;800: r11 <- r1, 0x20\n")
(comment . ";;804: r13 <- r1, 0x8\n")
(comment . ";;808: r5 <- r1, 0x28\n")
(comment . ";;812: r4 <- r1, 0x30\n")
(comment . ";;816: r12 <- r1, 0x38\n")
(comment . ";;820: r8 <- r1, 0x40\n")
(comment . ";;824: r10 <- r1, 0x48\n")
(comment . ";;832 b -440")
chunklet-i: 836; chunklet-start-i: 836; chunklet-end-i: 896
i: 836
end-i: 896
i: 836
end-i: 896
i: 840
end-i: 896
i: 844
end-i: 896
i: 848
end-i: 896
i: 852
end-i: 896
i: 856
end-i: 896
i: 860
end-i: 896
i: 864
end-i: 896
i: 868
end-i: 896
i: 872
end-i: 896
i: 876
end-i: 896
i: 880
end-i: 896
i: 892
end-i: 896
i: 896
end-i: 896
at header: 896
(comment . ";;836: r15 <- r1, 0x10\n")
(comment . ";;840: r14 <- r1, 0x18\n")
(comment . ";;844: r11 <- r1, 0x20\n")
(comment . ";;848: r13 <- r1, 0x8\n")
(comment . ";;852: r5 <- r1, 0x28\n")
(comment . ";;856: r4 <- r1, 0x30\n")
(comment . ";;860: r12 <- r1, 0x38\n")
(comment . ";;864: r8 <- r1, 0x40\n")
(comment . ";;868: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;876: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;892: b r6")
chunklet-i: 896; chunklet-start-i: 912; chunklet-end-i: 960
i: 896
end-i: 960
at header: 896
i: 912
end-i: 960
i: 916
end-i: 960
i: 920
end-i: 960
i: 924
end-i: 960
i: 928
end-i: 960
i: 932
end-i: 960
i: 936
end-i: 960
i: 940
end-i: 960
i: 944
end-i: 960
i: 948
end-i: 960
i: 952
end-i: 960
i: 956
end-i: 960
i: 960
end-i: 960
i:960 HIT CHUNK END
(comment . ";;912: r1 <- r1, r8")
(comment . ";;916: r10 <- 0x4")
(comment . ";;920: r15 <- r1, 0x10\n")
(comment . ";;924: r14 <- r1, 0x18\n")
(comment . ";;928: r11 <- r1, 0x20\n")
(comment . ";;932: r13 <- r1, 0x8\n")
(comment . ";;936: r5 <- r1, 0x28\n")
(comment . ";;940: r4 <- r1, 0x30\n")
(comment . ";;944: r12 <- r1, 0x38\n")
(comment . ";;948: r8 <- r1, 0x40\n")
(comment . ";;956 b -588")
chunklet-i: 960; chunklet-start-i: 960; chunklet-end-i: 972
i: 960
end-i: 972
i: 960
end-i: 972
i: 972
end-i: 972
i:972 HIT CHUNK END
(comment . ";; literal r10")
chunklet-i: 972; chunklet-start-i: 976; chunklet-end-i: 984
i: 972
end-i: 984
i: 976
end-i: 984
i: 980
end-i: 984
i: 984
end-i: 984
i:984 HIT CHUNK END
(comment . ";; instruction 972 not included")
(comment . ";;976: r7 <- r0, 0x68\n")
(comment . ";;980 b -648")
chunklet-i: 984; chunklet-start-i: 984; chunklet-end-i: 1048
i: 984
end-i: 1048
i: 984
end-i: 1048
i: 988
end-i: 1048
i: 992
end-i: 1048
i: 996
end-i: 1048
i: 1000
end-i: 1048
i: 1004
end-i: 1048
i: 1008
end-i: 1048
i: 1012
end-i: 1048
i: 1016
end-i: 1048
i: 1020
end-i: 1048
i: 1024
end-i: 1048
i: 1028
end-i: 1048
i: 1032
end-i: 1048
i: 1044
end-i: 1048
i: 1048
end-i: 1048
at header: 1048
(comment . ";;984: r9 <- 0x4")
(comment . ";;988: r15 <- r1, 0x10\n")
(comment . ";;992: r14 <- r1, 0x18\n")
(comment . ";;996: r11 <- r1, 0x20\n")
(comment . ";;1000: r13 <- r1, 0x8\n")
(comment . ";;1004: r5 <- r1, 0x28\n")
(comment . ";;1008: r4 <- r1, 0x30\n")
(comment . ";;1012: r12 <- r1, 0x38\n")
(comment . ";;1016: r8 <- r1, 0x40\n")
(comment . ";;1020: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1028: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1044: b r6")
chunklet-i: 1048; chunklet-start-i: 1064; chunklet-end-i: 1112
i: 1048
end-i: 1112
at header: 1048
i: 1064
end-i: 1112
i: 1068
end-i: 1112
i: 1072
end-i: 1112
i: 1076
end-i: 1112
i: 1080
end-i: 1112
i: 1084
end-i: 1112
i: 1088
end-i: 1112
i: 1092
end-i: 1112
i: 1096
end-i: 1112
i: 1100
end-i: 1112
i: 1104
end-i: 1112
i: 1108
end-i: 1112
i: 1112
end-i: 1112
i:1112 HIT CHUNK END
(comment . ";;1064: r1 <- r1, r8")
(comment . ";;1068: r10 <- 0x4")
(comment . ";;1072: r15 <- r1, 0x10\n")
(comment . ";;1076: r14 <- r1, 0x18\n")
(comment . ";;1080: r11 <- r1, 0x20\n")
(comment . ";;1084: r13 <- r1, 0x8\n")
(comment . ";;1088: r5 <- r1, 0x28\n")
(comment . ";;1092: r4 <- r1, 0x30\n")
(comment . ";;1096: r12 <- r1, 0x38\n")
(comment . ";;1100: r8 <- r1, 0x40\n")
(comment . ";;1108 b -804")
chunklet-i: 1112; chunklet-start-i: 1112; chunklet-end-i: 1176
i: 1112
end-i: 1176
i: 1112
end-i: 1176
i: 1116
end-i: 1176
i: 1120
end-i: 1176
i: 1124
end-i: 1176
i: 1128
end-i: 1176
i: 1132
end-i: 1176
i: 1136
end-i: 1176
i: 1140
end-i: 1176
i: 1144
end-i: 1176
i: 1148
end-i: 1176
i: 1152
end-i: 1176
i: 1156
end-i: 1176
i: 1160
end-i: 1176
i: 1172
end-i: 1176
i: 1176
end-i: 1176
at header: 1176
(comment . ";;1112: r9 <- 0x7")
(comment . ";;1116: r15 <- r1, 0x10\n")
(comment . ";;1120: r14 <- r1, 0x18\n")
(comment . ";;1124: r11 <- r1, 0x20\n")
(comment . ";;1128: r13 <- r1, 0x8\n")
(comment . ";;1132: r5 <- r1, 0x28\n")
(comment . ";;1136: r4 <- r1, 0x30\n")
(comment . ";;1140: r12 <- r1, 0x38\n")
(comment . ";;1144: r8 <- r1, 0x40\n")
(comment . ";;1148: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1156: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1172: b r6")
chunklet-i: 1176; chunklet-start-i: 1192; chunklet-end-i: 1236
i: 1176
end-i: 1236
at header: 1176
i: 1192
end-i: 1236
i: 1196
end-i: 1236
i: 1200
end-i: 1236
i: 1204
end-i: 1236
i: 1208
end-i: 1236
i: 1212
end-i: 1236
i: 1216
end-i: 1236
i: 1220
end-i: 1236
i: 1224
end-i: 1236
i: 1228
end-i: 1236
i: 1232
end-i: 1236
i: 1236
end-i: 1236
i:1236 HIT CHUNK END
(comment . ";;1192: r1 <- r1, r8")
(comment . ";;1196: r10 <- 0x4")
(comment . ";;1200: r15 <- r1, 0x10\n")
(comment . ";;1204: r14 <- r1, 0x18\n")
(comment . ";;1208: r11 <- r1, 0x20\n")
(comment . ";;1212: r13 <- r1, 0x8\n")
(comment . ";;1216: r5 <- r1, 0x28\n")
(comment . ";;1220: r4 <- r1, 0x30\n")
(comment . ";;1224: r12 <- r1, 0x38\n")
(comment . ";;1228: r8 <- r1, 0x40\n")
(comment . ";;1232 b -952")
chunklet-i: 1236; chunklet-start-i: 1236; chunklet-end-i: 1304
i: 1236
end-i: 1304
i: 1236
end-i: 1304
i: 1240
end-i: 1304
i: 1244
end-i: 1304
i: 1248
end-i: 1304
i: 1252
end-i: 1304
i: 1256
end-i: 1304
i: 1260
end-i: 1304
i: 1264
end-i: 1304
i: 1268
end-i: 1304
i: 1272
end-i: 1304
i: 1276
end-i: 1304
i: 1280
end-i: 1304
i: 1284
end-i: 1304
i: 1288
end-i: 1304
i: 1300
end-i: 1304
i: 1304
end-i: 1304
at header: 1304
(comment . ";;1236: r9 <- 0xC")
(comment . ";;1240: r15 <- r1, 0x10\n")
(comment . ";;1244: r14 <- r1, 0x18\n")
(comment . ";;1248: r11 <- r1, 0x20\n")
(comment . ";;1252: r13 <- r1, 0x8\n")
(comment . ";;1256: r5 <- r1, 0x28\n")
(comment . ";;1260: r4 <- r1, 0x30\n")
(comment . ";;1264: r12 <- r1, 0x38\n")
(comment . ";;1268: r8 <- r1, 0x40\n")
(comment . ";;1272: r7 <- r1, 0x48\n")
(comment . ";;1276: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1284: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1300: b r6")
chunklet-i: 1304; chunklet-start-i: 1320; chunklet-end-i: 1372
i: 1304
end-i: 1372
at header: 1304
i: 1320
end-i: 1372
i: 1324
end-i: 1372
i: 1328
end-i: 1372
i: 1332
end-i: 1372
i: 1336
end-i: 1372
i: 1340
end-i: 1372
i: 1344
end-i: 1372
i: 1348
end-i: 1372
i: 1352
end-i: 1372
i: 1356
end-i: 1372
i: 1360
end-i: 1372
i: 1364
end-i: 1372
i: 1368
end-i: 1372
i: 1372
end-i: 1372
i:1372 HIT CHUNK END
(comment . ";;1320: r1 <- r1, r0")
(comment . ";;1324: r10 <- 0x4")
(comment . ";;1328: r15 <- r1, 0x10\n")
(comment . ";;1332: r14 <- r1, 0x18\n")
(comment . ";;1336: r11 <- r1, 0x20\n")
(comment . ";;1340: r13 <- r1, 0x8\n")
(comment . ";;1344: r5 <- r1, 0x28\n")
(comment . ";;1348: r4 <- r1, 0x30\n")
(comment . ";;1352: r12 <- r1, 0x38\n")
(comment . ";;1356: r8 <- r1, 0x40\n")
(comment . ";;1360: r7 <- r1, 0x48\n")
(comment . ";;1368 b -1116")
chunklet-i: 1372; chunklet-start-i: 1372; chunklet-end-i: 1440
i: 1372
end-i: 1440
i: 1372
end-i: 1440
i: 1376
end-i: 1440
i: 1380
end-i: 1440
i: 1384
end-i: 1440
i: 1388
end-i: 1440
i: 1392
end-i: 1440
i: 1396
end-i: 1440
i: 1400
end-i: 1440
i: 1404
end-i: 1440
i: 1408
end-i: 1440
i: 1412
end-i: 1440
i: 1416
end-i: 1440
i: 1420
end-i: 1440
i: 1424
end-i: 1440
i: 1436
end-i: 1440
i: 1440
end-i: 1440
at header: 1440
(comment . ";;1372: r10 <- 0x8")
(comment . ";;1376: r15 <- r1, 0x10\n")
(comment . ";;1380: r14 <- r1, 0x18\n")
(comment . ";;1384: r11 <- r1, 0x20\n")
(comment . ";;1388: r13 <- r1, 0x8\n")
(comment . ";;1392: r5 <- r1, 0x28\n")
(comment . ";;1396: r4 <- r1, 0x30\n")
(comment . ";;1400: r12 <- r1, 0x38\n")
(comment . ";;1404: r8 <- r1, 0x40\n")
(comment . ";;1408: r7 <- r1, 0x48\n")
(comment . ";;1412: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1420: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1436: b r6")
chunklet-i: 1440; chunklet-start-i: 1456; chunklet-end-i: 1504
i: 1440
end-i: 1504
at header: 1440
i: 1456
end-i: 1504
i: 1460
end-i: 1504
i: 1464
end-i: 1504
i: 1468
end-i: 1504
i: 1472
end-i: 1504
i: 1476
end-i: 1504
i: 1480
end-i: 1504
i: 1484
end-i: 1504
i: 1488
end-i: 1504
i: 1492
end-i: 1504
i: 1496
end-i: 1504
i: 1500
end-i: 1504
i: 1504
end-i: 1504
i:1504 HIT CHUNK END
(comment . ";;1456: r1 <- r1, r0")
(comment . ";;1460: r10 <- 0x4")
(comment . ";;1464: r15 <- r1, 0x10\n")
(comment . ";;1468: r14 <- r1, 0x18\n")
(comment . ";;1472: r11 <- r1, 0x20\n")
(comment . ";;1476: r13 <- r1, 0x8\n")
(comment . ";;1480: r5 <- r1, 0x28\n")
(comment . ";;1484: r4 <- r1, 0x30\n")
(comment . ";;1488: r12 <- r1, 0x38\n")
(comment . ";;1492: r8 <- r1, 0x40\n")
(comment . ";;1496: r7 <- r1, 0x48\n")
(comment . ";;1500 b -1272")
chunklet-i: 1504; chunklet-start-i: 1504; chunklet-end-i: 1568
i: 1504
end-i: 1568
i: 1504
end-i: 1568
i: 1508
end-i: 1568
i: 1512
end-i: 1568
i: 1516
end-i: 1568
i: 1520
end-i: 1568
i: 1524
end-i: 1568
i: 1528
end-i: 1568
i: 1532
end-i: 1568
i: 1536
end-i: 1568
i: 1540
end-i: 1568
i: 1544
end-i: 1568
i: 1548
end-i: 1568
i: 1552
end-i: 1568
i: 1564
end-i: 1568
i: 1568
end-i: 1568
at header: 1568
(comment . ";;1504: r15 <- r1, 0x10\n")
(comment . ";;1508: r14 <- r1, 0x18\n")
(comment . ";;1512: r11 <- r1, 0x20\n")
(comment . ";;1516: r13 <- r1, 0x8\n")
(comment . ";;1520: r5 <- r1, 0x28\n")
(comment . ";;1524: r4 <- r1, 0x30\n")
(comment . ";;1528: r12 <- r1, 0x38\n")
(comment . ";;1532: r8 <- r1, 0x40\n")
(comment . ";;1536: r7 <- r1, 0x48\n")
(comment . ";;1540: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1548: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1564: b r6")
chunklet-i: 1568; chunklet-start-i: 1584; chunklet-end-i: 1636
i: 1568
end-i: 1636
at header: 1568
i: 1584
end-i: 1636
i: 1588
end-i: 1636
i: 1592
end-i: 1636
i: 1596
end-i: 1636
i: 1600
end-i: 1636
i: 1604
end-i: 1636
i: 1608
end-i: 1636
i: 1612
end-i: 1636
i: 1616
end-i: 1636
i: 1620
end-i: 1636
i: 1624
end-i: 1636
i: 1628
end-i: 1636
i: 1632
end-i: 1636
i: 1636
end-i: 1636
i:1636 HIT CHUNK END
(comment . ";;1584: r1 <- r1, r0")
(comment . ";;1588: r9 <- 0x4")
(comment . ";;1592: r15 <- r1, 0x10\n")
(comment . ";;1596: r14 <- r1, 0x18\n")
(comment . ";;1600: r11 <- r1, 0x20\n")
(comment . ";;1604: r13 <- r1, 0x8\n")
(comment . ";;1608: r5 <- r1, 0x28\n")
(comment . ";;1612: r4 <- r1, 0x30\n")
(comment . ";;1616: r12 <- r1, 0x38\n")
(comment . ";;1620: r8 <- r1, 0x40\n")
(comment . ";;1624: r7 <- r1, 0x48\n")
(comment . ";;1632 b -1428")
chunklet-i: 1636; chunklet-start-i: 1636; chunklet-end-i: 1696
i: 1636
end-i: 1696
i: 1636
end-i: 1696
i: 1640
end-i: 1696
i: 1644
end-i: 1696
i: 1648
end-i: 1696
i: 1652
end-i: 1696
i: 1656
end-i: 1696
i: 1660
end-i: 1696
i: 1664
end-i: 1696
i: 1668
end-i: 1696
i: 1672
end-i: 1696
i: 1676
end-i: 1696
i: 1680
end-i: 1696
i: 1692
end-i: 1696
i: 1696
end-i: 1696
at header: 1696
(comment . ";;1636: r15 <- r1, 0x10\n")
(comment . ";;1640: r14 <- r1, 0x18\n")
(comment . ";;1644: r11 <- r1, 0x20\n")
(comment . ";;1648: r13 <- r1, 0x8\n")
(comment . ";;1652: r5 <- r1, 0x28\n")
(comment . ";;1656: r4 <- r1, 0x30\n")
(comment . ";;1660: r12 <- r1, 0x38\n")
(comment . ";;1664: r8 <- r1, 0x40\n")
(comment . ";;1668: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1676: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1692: b r6")
chunklet-i: 1696; chunklet-start-i: 1712; chunklet-end-i: 1756
i: 1696
end-i: 1756
at header: 1696
i: 1712
end-i: 1756
i: 1716
end-i: 1756
i: 1720
end-i: 1756
i: 1724
end-i: 1756
i: 1728
end-i: 1756
i: 1732
end-i: 1756
i: 1736
end-i: 1756
i: 1740
end-i: 1756
i: 1744
end-i: 1756
i: 1748
end-i: 1756
i: 1752
end-i: 1756
i: 1756
end-i: 1756
i:1756 HIT CHUNK END
(comment . ";;1712: r1 <- r1, r8")
(comment . ";;1716: r7 <- 0x4")
(comment . ";;1720: r15 <- r1, 0x10\n")
(comment . ";;1724: r14 <- r1, 0x18\n")
(comment . ";;1728: r11 <- r1, 0x20\n")
(comment . ";;1732: r13 <- r1, 0x8\n")
(comment . ";;1736: r5 <- r1, 0x28\n")
(comment . ";;1740: r4 <- r1, 0x30\n")
(comment . ";;1744: r12 <- r1, 0x38\n")
(comment . ";;1748: r8 <- r1, 0x40\n")
(comment . ";;1752 b -1576")
chunklet-i: 1756; chunklet-start-i: 1756; chunklet-end-i: 1816
i: 1756
end-i: 1816
i: 1756
end-i: 1816
i: 1760
end-i: 1816
i: 1764
end-i: 1816
i: 1768
end-i: 1816
i: 1772
end-i: 1816
i: 1776
end-i: 1816
i: 1780
end-i: 1816
i: 1784
end-i: 1816
i: 1788
end-i: 1816
i: 1792
end-i: 1816
i: 1796
end-i: 1816
i: 1800
end-i: 1816
i: 1812
end-i: 1816
i: 1816
end-i: 1816
at header: 1816
(comment . ";;1756: r15 <- r1, 0x10\n")
(comment . ";;1760: r14 <- r1, 0x18\n")
(comment . ";;1764: r11 <- r1, 0x20\n")
(comment . ";;1768: r13 <- r1, 0x8\n")
(comment . ";;1772: r5 <- r1, 0x28\n")
(comment . ";;1776: r4 <- r1, 0x30\n")
(comment . ";;1780: r12 <- r1, 0x38\n")
(comment . ";;1784: r8 <- r1, 0x40\n")
(comment . ";;1788: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1796: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1812: b r6")
chunklet-i: 1816; chunklet-start-i: 1832; chunklet-end-i: 1876
i: 1816
end-i: 1876
at header: 1816
i: 1832
end-i: 1876
i: 1836
end-i: 1876
i: 1840
end-i: 1876
i: 1844
end-i: 1876
i: 1848
end-i: 1876
i: 1852
end-i: 1876
i: 1856
end-i: 1876
i: 1860
end-i: 1876
i: 1864
end-i: 1876
i: 1868
end-i: 1876
i: 1872
end-i: 1876
i: 1876
end-i: 1876
i:1876 HIT CHUNK END
(comment . ";;1836: r1 <- r1, r8")
(comment . ";;1840: r15 <- r1, 0x10\n")
(comment . ";;1844: r14 <- r1, 0x18\n")
(comment . ";;1848: r11 <- r1, 0x20\n")
(comment . ";;1852: r13 <- r1, 0x8\n")
(comment . ";;1856: r5 <- r1, 0x28\n")
(comment . ";;1860: r4 <- r1, 0x30\n")
(comment . ";;1864: r12 <- r1, 0x38\n")
(comment . ";;1868: r8 <- r1, 0x40\n")
(comment . ";;1872 b -1720")
chunklet-i: 1876; chunklet-start-i: 1876; chunklet-end-i: 1884
i: 1876
end-i: 1884
i: 1876
end-i: 1884
i: 1880
end-i: 1884
i: 1884
end-i: 1884
i:1884 HIT CHUNK END
(comment . ";;1876: r12 <- 0x7")
(comment . ";;1880 b 16")
chunklet-i: 1884; chunklet-start-i: 1884; chunklet-end-i: 1892
i: 1884
end-i: 1892
i: 1888
end-i: 1892
i: 1892
end-i: 1892
i:1892 HIT CHUNK END
(comment . ";;1884: r10 <- r12, 0x8\n")
(comment . ";;1888 b 8")
chunklet-i: 1892; chunklet-start-i: 1892; chunklet-end-i: 1900
i: 1892
end-i: 1900
i: 1896
end-i: 1900
i: 1900
end-i: 1900
i:1900 HIT CHUNK END
(comment . ";;1892: r12 <- 0xA")
(comment . ";;1896 b -1804")
chunklet-i: 1900; chunklet-start-i: 1900; chunklet-end-i: 1960
i: 1900
end-i: 1960
i: 1900
end-i: 1960
i: 1904
end-i: 1960
i: 1908
end-i: 1960
i: 1912
end-i: 1960
i: 1916
end-i: 1960
i: 1920
end-i: 1960
i: 1924
end-i: 1960
i: 1928
end-i: 1960
i: 1932
end-i: 1960
i: 1936
end-i: 1960
i: 1940
end-i: 1960
i: 1944
end-i: 1960
i: 1956
end-i: 1960
i: 1960
end-i: 1960
at header: 1960
(comment . ";;1900: r9 <- 0x8")
(comment . ";;1904: r10 <- 0xC")
(comment . ";;1908: r15 <- r1, 0x10\n")
(comment . ";;1912: r14 <- r1, 0x18\n")
(comment . ";;1916: r11 <- r1, 0x20\n")
(comment . ";;1920: r13 <- r1, 0x8\n")
(comment . ";;1924: r5 <- r1, 0x28\n")
(comment . ";;1928: r4 <- r1, 0x30\n")
(comment . ";;1932: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1940: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1956: b r6")
chunklet-i: 1960; chunklet-start-i: 1976; chunklet-end-i: 2012
i: 1960
end-i: 2012
at header: 1960
i: 1976
end-i: 2012
i: 1980
end-i: 2012
i: 1984
end-i: 2012
i: 1988
end-i: 2012
i: 1992
end-i: 2012
i: 1996
end-i: 2012
i: 2000
end-i: 2012
i: 2004
end-i: 2012
i: 2008
end-i: 2012
i: 2012
end-i: 2012
i:2012 HIT CHUNK END
(comment . ";;1976: r1 <- r1, r8")
(comment . ";;1980: r12 <- 0x4")
(comment . ";;1984: r15 <- r1, 0x10\n")
(comment . ";;1988: r14 <- r1, 0x18\n")
(comment . ";;1992: r11 <- r1, 0x20\n")
(comment . ";;1996: r13 <- r1, 0x8\n")
(comment . ";;2000: r5 <- r1, 0x28\n")
(comment . ";;2004: r4 <- r1, 0x30\n")
(comment . ";;2008 b -1916")
chunklet-i: 2012; chunklet-start-i: 2012; chunklet-end-i: 2020
i: 2012
end-i: 2020
i: 2012
end-i: 2020
i: 2016
end-i: 2020
i: 2020
end-i: 2020
i:2020 HIT CHUNK END
(comment . ";;2012: r3 <- r3, 0x1\n")
(comment . ";;2016 b 112")
chunklet-i: 2020; chunklet-start-i: 2020; chunklet-end-i: 2080
i: 2020
end-i: 2080
i: 2024
end-i: 2080
i: 2028
end-i: 2080
i: 2032
end-i: 2080
i: 2036
end-i: 2080
i: 2040
end-i: 2080
i: 2044
end-i: 2080
i: 2048
end-i: 2080
i: 2052
end-i: 2080
i: 2056
end-i: 2080
i: 2060
end-i: 2080
i: 2064
end-i: 2080
i: 2076
end-i: 2080
i: 2080
end-i: 2080
at header: 2080
(comment . ";;2020: r15 <- r1, 0x10\n")
(comment . ";;2024: r14 <- r1, 0x18\n")
(comment . ";;2028: r11 <- r1, 0x20\n")
(comment . ";;2032: r13 <- r1, 0x8\n")
(comment . ";;2036: r5 <- r1, 0x28\n")
(comment . ";;2040: r4 <- r1, 0x30\n")
(comment . ";;2044: r12 <- r1, 0x38\n")
(comment . ";;2048: r8 <- r1, 0x40\n")
(comment . ";;2052: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2060: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2076: b r6")
chunklet-i: 2080; chunklet-start-i: 2096; chunklet-end-i: 2132
i: 2080
end-i: 2132
at header: 2080
i: 2096
end-i: 2132
i: 2100
end-i: 2132
i: 2104
end-i: 2132
i: 2108
end-i: 2132
i: 2112
end-i: 2132
i: 2116
end-i: 2132
i: 2120
end-i: 2132
i: 2124
end-i: 2132
i: 2128
end-i: 2132
i: 2132
end-i: 2132
i:2132 HIT CHUNK END
(comment . ";;2096: r1 <- r1, r8")
(comment . ";;2100: r15 <- r1, 0x10\n")
(comment . ";;2104: r14 <- r1, 0x18\n")
(comment . ";;2108: r11 <- r1, 0x20\n")
(comment . ";;2112: r13 <- r1, 0x8\n")
(comment . ";;2116: r5 <- r1, 0x28\n")
(comment . ";;2120: r4 <- r1, 0x30\n")
(comment . ";;2124: r12 <- r1, 0x38\n")
(comment . ";;2128: r8 <- r1, 0x40\n")
chunklet-i: 2132; chunklet-start-i: 2132; chunklet-end-i: 2200
i: 2132
end-i: 2200
i: 2132
end-i: 2200
i: 2136
end-i: 2200
i: 2140
end-i: 2200
i: 2144
end-i: 2200
i: 2148
end-i: 2200
i: 2152
end-i: 2200
i: 2156
end-i: 2200
i: 2160
end-i: 2200
i: 2164
end-i: 2200
i: 2168
end-i: 2200
i: 2172
end-i: 2200
i: 2176
end-i: 2200
i: 2180
end-i: 2200
i: 2184
end-i: 2200
i: 2196
end-i: 2200
i: 2200
end-i: 2200
at header: 2200
(comment . ";;2132: r9 <- 0x8")
(comment . ";;2136: r10 <- 0xD")
(comment . ";;2140: r15 <- r1, 0x10\n")
(comment . ";;2144: r14 <- r1, 0x18\n")
(comment . ";;2148: r11 <- r1, 0x20\n")
(comment . ";;2152: r13 <- r1, 0x8\n")
(comment . ";;2156: r5 <- r1, 0x28\n")
(comment . ";;2160: r4 <- r1, 0x30\n")
(comment . ";;2164: r12 <- r1, 0x38\n")
(comment . ";;2168: r8 <- r1, 0x40\n")
(comment . ";;2172: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2196: b r6")
chunklet-i: 2200; chunklet-start-i: 2216; chunklet-end-i: 2268
i: 2200
end-i: 2268
at header: 2200
i: 2216
end-i: 2268
i: 2220
end-i: 2268
i: 2224
end-i: 2268
i: 2228
end-i: 2268
i: 2232
end-i: 2268
i: 2236
end-i: 2268
i: 2240
end-i: 2268
i: 2244
end-i: 2268
i: 2248
end-i: 2268
i: 2252
end-i: 2268
i: 2256
end-i: 2268
i: 2260
end-i: 2268
i: 2264
end-i: 2268
i: 2268
end-i: 2268
i:2268 HIT CHUNK END
(comment . ";;2216: r1 <- r1, r8")
(comment . ";;2220: r10 <- 0x4")
(comment . ";;2224: r15 <- r1, 0x10\n")
(comment . ";;2228: r14 <- r1, 0x18\n")
(comment . ";;2232: r11 <- r1, 0x20\n")
(comment . ";;2236: r13 <- r1, 0x8\n")
(comment . ";;2240: r5 <- r1, 0x28\n")
(comment . ";;2244: r4 <- r1, 0x30\n")
(comment . ";;2248: r12 <- r1, 0x38\n")
(comment . ";;2252: r8 <- r1, 0x40\n")
(comment . ";;2256: r10 <- 0x6")
(comment . ";;2264 b -2120")
chunklet-i: 2268; chunklet-start-i: 2268; chunklet-end-i: 2272
i: 2268
end-i: 2272
i: 2272
end-i: 2272
i:2272 HIT CHUNK END
(comment . ";;2268 b -396")
chunklet-i: 2272; chunklet-start-i: 2272; chunklet-end-i: 2328
i: 2272
end-i: 2328
i: 2272
end-i: 2328
i: 2276
end-i: 2328
i: 2280
end-i: 2328
i: 2284
end-i: 2328
i: 2288
end-i: 2328
i: 2292
end-i: 2328
i: 2296
end-i: 2328
i: 2300
end-i: 2328
i: 2304
end-i: 2328
i: 2308
end-i: 2328
i: 2312
end-i: 2328
i: 2324
end-i: 2328
i: 2328
end-i: 2328
at header: 2328
(comment . ";;2272: r15 <- r1, 0x10\n")
(comment . ";;2276: r14 <- r1, 0x18\n")
(comment . ";;2280: r11 <- r1, 0x20\n")
(comment . ";;2284: r13 <- r1, 0x8\n")
(comment . ";;2288: r5 <- r1, 0x28\n")
(comment . ";;2292: r4 <- r1, 0x30\n")
(comment . ";;2296: r12 <- r1, 0x38\n")
(comment . ";;2300: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2308: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2324: b r6")
chunklet-i: 2328; chunklet-start-i: 2344; chunklet-end-i: 2384
i: 2328
end-i: 2384
at header: 2328
i: 2344
end-i: 2384
i: 2348
end-i: 2384
i: 2352
end-i: 2384
i: 2356
end-i: 2384
i: 2360
end-i: 2384
i: 2364
end-i: 2384
i: 2368
end-i: 2384
i: 2372
end-i: 2384
i: 2376
end-i: 2384
i: 2380
end-i: 2384
i: 2384
end-i: 2384
i:2384 HIT CHUNK END
(comment . ";;2348: r1 <- r1, r0")
(comment . ";;2352: r15 <- r1, 0x10\n")
(comment . ";;2356: r14 <- r1, 0x18\n")
(comment . ";;2360: r11 <- r1, 0x20\n")
(comment . ";;2364: r13 <- r1, 0x8\n")
(comment . ";;2368: r5 <- r1, 0x28\n")
(comment . ";;2372: r4 <- r1, 0x30\n")
(comment . ";;2376: r12 <- r1, 0x38\n")
(comment . ";;2380 b -2260")
chunklet-i: 2384; chunklet-start-i: 2384; chunklet-end-i: 2392
i: 2384
end-i: 2392
i: 2384
end-i: 2392
i: 2388
end-i: 2392
i: 2392
end-i: 2392
i:2392 HIT CHUNK END
(comment . ";;2384: r4 <- 0x7")
(comment . ";;2388 b 16")
chunklet-i: 2392; chunklet-start-i: 2392; chunklet-end-i: 2400
i: 2392
end-i: 2400
i: 2396
end-i: 2400
i: 2400
end-i: 2400
i:2400 HIT CHUNK END
(comment . ";;2392: r12 <- r4, 0x8\n")
(comment . ";;2396 b 8")
chunklet-i: 2400; chunklet-start-i: 2400; chunklet-end-i: 2408
i: 2400
end-i: 2408
i: 2404
end-i: 2408
i: 2408
end-i: 2408
i:2408 HIT CHUNK END
(comment . ";;2400: r4 <- 0xC")
(comment . ";;2404 b -2344")
chunklet-i: 2408; chunklet-start-i: 2408; chunklet-end-i: 2464
i: 2408
end-i: 2464
i: 2408
end-i: 2464
i: 2412
end-i: 2464
i: 2416
end-i: 2464
i: 2420
end-i: 2464
i: 2424
end-i: 2464
i: 2428
end-i: 2464
i: 2432
end-i: 2464
i: 2436
end-i: 2464
i: 2440
end-i: 2464
i: 2444
end-i: 2464
i: 2448
end-i: 2464
i: 2460
end-i: 2464
i: 2464
end-i: 2464
at header: 2464
(comment . ";;2408: r9 <- 0x8")
(comment . ";;2412: r10 <- 0x4")
(comment . ";;2416: r15 <- r1, 0x10\n")
(comment . ";;2420: r14 <- r1, 0x18\n")
(comment . ";;2424: r11 <- r1, 0x20\n")
(comment . ";;2428: r13 <- r1, 0x8\n")
(comment . ";;2432: r5 <- r1, 0x28\n")
(comment . ";;2436: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2444: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2460: b r6")
chunklet-i: 2464; chunklet-start-i: 2480; chunklet-end-i: 2512
i: 2464
end-i: 2512
at header: 2464
i: 2480
end-i: 2512
i: 2484
end-i: 2512
i: 2488
end-i: 2512
i: 2492
end-i: 2512
i: 2496
end-i: 2512
i: 2500
end-i: 2512
i: 2504
end-i: 2512
i: 2508
end-i: 2512
i: 2512
end-i: 2512
i:2512 HIT CHUNK END
(comment . ";;2480: r1 <- r1, r0")
(comment . ";;2484: r15 <- r1, 0x10\n")
(comment . ";;2488: r14 <- r1, 0x18\n")
(comment . ";;2492: r11 <- r1, 0x20\n")
(comment . ";;2496: r13 <- r1, 0x8\n")
(comment . ";;2500: r5 <- r1, 0x28\n")
(comment . ";;2508 b -2448")
chunklet-i: 2512; chunklet-start-i: 2512; chunklet-end-i: 2520
i: 2512
end-i: 2520
i: 2512
end-i: 2520
i: 2516
end-i: 2520
i: 2520
end-i: 2520
i:2520 HIT CHUNK END
(comment . ";;2512: r3 <- r3, 0x1\n")
(comment . ";;2516 b 104")
chunklet-i: 2520; chunklet-start-i: 2520; chunklet-end-i: 2576
i: 2520
end-i: 2576
i: 2524
end-i: 2576
i: 2528
end-i: 2576
i: 2532
end-i: 2576
i: 2536
end-i: 2576
i: 2540
end-i: 2576
i: 2544
end-i: 2576
i: 2548
end-i: 2576
i: 2552
end-i: 2576
i: 2556
end-i: 2576
i: 2560
end-i: 2576
i: 2572
end-i: 2576
i: 2576
end-i: 2576
at header: 2576
(comment . ";;2520: r15 <- r1, 0x10\n")
(comment . ";;2524: r14 <- r1, 0x18\n")
(comment . ";;2528: r11 <- r1, 0x20\n")
(comment . ";;2532: r13 <- r1, 0x8\n")
(comment . ";;2536: r5 <- r1, 0x28\n")
(comment . ";;2540: r4 <- r1, 0x30\n")
(comment . ";;2544: r12 <- r1, 0x38\n")
(comment . ";;2548: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2556: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2572: b r6")
chunklet-i: 2576; chunklet-start-i: 2592; chunklet-end-i: 2624
i: 2576
end-i: 2624
at header: 2576
i: 2592
end-i: 2624
i: 2596
end-i: 2624
i: 2600
end-i: 2624
i: 2604
end-i: 2624
i: 2608
end-i: 2624
i: 2612
end-i: 2624
i: 2616
end-i: 2624
i: 2620
end-i: 2624
i: 2624
end-i: 2624
i:2624 HIT CHUNK END
(comment . ";;2592: r1 <- r1, r0")
(comment . ";;2596: r15 <- r1, 0x10\n")
(comment . ";;2600: r14 <- r1, 0x18\n")
(comment . ";;2604: r11 <- r1, 0x20\n")
(comment . ";;2608: r13 <- r1, 0x8\n")
(comment . ";;2612: r5 <- r1, 0x28\n")
(comment . ";;2616: r4 <- r1, 0x30\n")
(comment . ";;2620: r12 <- r1, 0x38\n")
chunklet-i: 2624; chunklet-start-i: 2624; chunklet-end-i: 2688
i: 2624
end-i: 2688
i: 2624
end-i: 2688
i: 2628
end-i: 2688
i: 2632
end-i: 2688
i: 2636
end-i: 2688
i: 2640
end-i: 2688
i: 2644
end-i: 2688
i: 2648
end-i: 2688
i: 2652
end-i: 2688
i: 2656
end-i: 2688
i: 2660
end-i: 2688
i: 2664
end-i: 2688
i: 2668
end-i: 2688
i: 2672
end-i: 2688
i: 2684
end-i: 2688
i: 2688
end-i: 2688
at header: 2688
(comment . ";;2624: r9 <- 0xC")
(comment . ";;2628: r10 <- 0xB")
(comment . ";;2632: r15 <- r1, 0x10\n")
(comment . ";;2636: r14 <- r1, 0x18\n")
(comment . ";;2640: r11 <- r1, 0x20\n")
(comment . ";;2644: r13 <- r1, 0x8\n")
(comment . ";;2648: r5 <- r1, 0x28\n")
(comment . ";;2652: r4 <- r1, 0x30\n")
(comment . ";;2656: r12 <- r1, 0x38\n")
(comment . ";;2660: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2668: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2684: b r6")
chunklet-i: 2688; chunklet-start-i: 2704; chunklet-end-i: 2752
i: 2688
end-i: 2752
at header: 2688
i: 2704
end-i: 2752
i: 2708
end-i: 2752
i: 2712
end-i: 2752
i: 2716
end-i: 2752
i: 2720
end-i: 2752
i: 2724
end-i: 2752
i: 2728
end-i: 2752
i: 2732
end-i: 2752
i: 2736
end-i: 2752
i: 2740
end-i: 2752
i: 2744
end-i: 2752
i: 2748
end-i: 2752
i: 2752
end-i: 2752
i:2752 HIT CHUNK END
(comment . ";;2704: r1 <- r1, r0")
(comment . ";;2708: r10 <- 0x4")
(comment . ";;2712: r15 <- r1, 0x10\n")
(comment . ";;2716: r14 <- r1, 0x18\n")
(comment . ";;2720: r11 <- r1, 0x20\n")
(comment . ";;2724: r13 <- r1, 0x8\n")
(comment . ";;2728: r5 <- r1, 0x28\n")
(comment . ";;2732: r4 <- r1, 0x30\n")
(comment . ";;2736: r12 <- r1, 0x38\n")
(comment . ";;2740: r10 <- 0x6")
(comment . ";;2748 b -2636")
chunklet-i: 2752; chunklet-start-i: 2752; chunklet-end-i: 2756
i: 2752
end-i: 2756
i: 2756
end-i: 2756
i:2756 HIT CHUNK END
(comment . ";;2752 b -372")
chunklet-i: 2756; chunklet-start-i: 2756; chunklet-end-i: 2808
i: 2756
end-i: 2808
i: 2756
end-i: 2808
i: 2760
end-i: 2808
i: 2764
end-i: 2808
i: 2768
end-i: 2808
i: 2772
end-i: 2808
i: 2776
end-i: 2808
i: 2780
end-i: 2808
i: 2784
end-i: 2808
i: 2788
end-i: 2808
i: 2792
end-i: 2808
i: 2804
end-i: 2808
i: 2808
end-i: 2808
at header: 2808
(comment . ";;2756: r15 <- r1, 0x10\n")
(comment . ";;2760: r14 <- r1, 0x18\n")
(comment . ";;2764: r11 <- r1, 0x20\n")
(comment . ";;2768: r13 <- r1, 0x8\n")
(comment . ";;2772: r5 <- r1, 0x28\n")
(comment . ";;2776: r4 <- r1, 0x30\n")
(comment . ";;2780: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2788: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2804: b r6")
chunklet-i: 2808; chunklet-start-i: 2824; chunklet-end-i: 2856
i: 2808
end-i: 2856
at header: 2808
i: 2824
end-i: 2856
i: 2828
end-i: 2856
i: 2832
end-i: 2856
i: 2836
end-i: 2856
i: 2840
end-i: 2856
i: 2844
end-i: 2856
i: 2848
end-i: 2856
i: 2852
end-i: 2856
i: 2856
end-i: 2856
i:2856 HIT CHUNK END
(comment . ";;2824: r1 <- r1, r8")
(comment . ";;2828: r15 <- r1, 0x10\n")
(comment . ";;2832: r14 <- r1, 0x18\n")
(comment . ";;2836: r11 <- r1, 0x20\n")
(comment . ";;2840: r13 <- r1, 0x8\n")
(comment . ";;2844: r5 <- r1, 0x28\n")
(comment . ";;2848: r4 <- r1, 0x30\n")
(comment . ";;2852 b -2764")
chunklet-i: 2856; chunklet-start-i: 2856; chunklet-end-i: 2880
i: 2856
end-i: 2880
i: 2856
end-i: 2880
i: 2868
end-i: 2880
i: 2872
end-i: 2880
i: 2876
end-i: 2880
i: 2880
end-i: 2880
i:2880 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;2868: r4 <- r9, 0x5\n")
(comment . ";;2872: r4 <- 0x1E")
(comment . ";;2876 b 1720")
chunklet-i: 2880; chunklet-start-i: 2880; chunklet-end-i: 2904
i: 2880
end-i: 2904
i: 2880
end-i: 2904
i: 2892
end-i: 2904
i: 2896
end-i: 2904
i: 2900
end-i: 2904
i: 2904
end-i: 2904
i:2904 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;2892: r10 <- r9, 0x5\n")
(comment . ";;2896: r10 <- 0x1E")
(comment . ";;2900 b 1524")
chunklet-i: 2904; chunklet-start-i: 2904; chunklet-end-i: 2916
i: 2904
end-i: 2916
i: 2904
end-i: 2916
i: 2908
end-i: 2916
i: 2912
end-i: 2916
i: 2916
end-i: 2916
i:2916 HIT CHUNK END
(comment . ";;2904: r14 <- r4, r7")
(comment . ";;2908: r14 <- 0x7")
(comment . ";;2912 b 1488")
chunklet-i: 2916; chunklet-start-i: 2916; chunklet-end-i: 2928
i: 2916
end-i: 2928
i: 2920
end-i: 2928
i: 2924
end-i: 2928
i: 2928
end-i: 2928
i:2928 HIT CHUNK END
(comment . ";;2916: r14 <- r4, 0x1\n")
(comment . ";;2920: r14 <- 0xF")
(comment . ";;2924 b 1476")
chunklet-i: 2928; chunklet-start-i: 2928; chunklet-end-i: 2936
i: 2928
end-i: 2936
i: 2932
end-i: 2936
i: 2936
end-i: 2936
i:2936 HIT CHUNK END
(comment . ";;2928: r10 <- 0x7")
(comment . ";;2932 b 1468")
chunklet-i: 2936; chunklet-start-i: 2936; chunklet-end-i: 2952
i: 2936
end-i: 2952
i: 2940
end-i: 2952
i: 2944
end-i: 2952
i: 2948
end-i: 2952
i: 2952
end-i: 2952
i:2952 HIT CHUNK END
(comment . ";;2936: r14 <- r14, r1")
(comment . ";;2940: r14 <- r14, r8")
(comment . ";;2944: r10 <- r14")
(comment . ";;2948 b 1452")
chunklet-i: 2952; chunklet-start-i: 2952; chunklet-end-i: 2972
i: 2952
end-i: 2972
i: 2956
end-i: 2972
i: 2960
end-i: 2972
i: 2964
end-i: 2972
i: 2968
end-i: 2972
i: 2972
end-i: 2972
i:2972 HIT CHUNK END
(comment . ";;2952: r14 <- r4, r9")
(comment . ";;2956: r14 <- r10, r14")
(comment . ";;2960: r15 <- r14, 0x0\n")
(comment . ";;2964: r15 <- 0x7")
(comment . ";;2968 b 24")
chunklet-i: 2972; chunklet-start-i: 2972; chunklet-end-i: 2984
i: 2972
end-i: 2984
i: 2976
end-i: 2984
i: 2980
end-i: 2984
i: 2984
end-i: 2984
i:2984 HIT CHUNK END
(comment . ";;2972: r7 <- r0, 0x68\n")
(comment . ";;2976: r2 <- r7")
(comment . ";;2980 b 1396")
chunklet-i: 2984; chunklet-start-i: 2984; chunklet-end-i: 2996
i: 2984
end-i: 2996
i: 2984
end-i: 2996
i: 2988
end-i: 2996
i: 2992
end-i: 2996
i: 2996
end-i: 2996
i:2996 HIT CHUNK END
(comment . ";;2984: r7 <- r7, r8")
(comment . ";;2988: r7 <- r0, 0x68\n")
(comment . ";;2992: r14 <- r7, 0x0\n")
chunklet-i: 2996; chunklet-start-i: 2996; chunklet-end-i: 3020
i: 2996
end-i: 3020
i: 2996
end-i: 3020
i: 3008
end-i: 3020
i: 3012
end-i: 3020
i: 3016
end-i: 3020
i: 3020
end-i: 3020
i:3020 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;3008: r4 <- r9, 0x5\n")
(comment . ";;3012: r4 <- 0x1E")
(comment . ";;3016 b 1224")
chunklet-i: 3020; chunklet-start-i: 3020; chunklet-end-i: 3044
i: 3020
end-i: 3044
i: 3020
end-i: 3044
i: 3032
end-i: 3044
i: 3036
end-i: 3044
i: 3040
end-i: 3044
i: 3044
end-i: 3044
i:3044 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;3032: r10 <- r9, 0x5\n")
(comment . ";;3036: r10 <- 0x1E")
(comment . ";;3040 b 1044")
chunklet-i: 3044; chunklet-start-i: 3044; chunklet-end-i: 3060
i: 3044
end-i: 3060
i: 3044
end-i: 3060
i: 3048
end-i: 3060
i: 3052
end-i: 3060
i: 3056
end-i: 3060
i: 3060
end-i: 3060
i:3060 HIT CHUNK END
(comment . ";;3044: r11 <- r5, 0x7\n")
(comment . ";;3048: r15 <- r4, r7")
(comment . ";;3052: r15 <- 0x7")
(comment . ";;3056 b 1008")
chunklet-i: 3060; chunklet-start-i: 3060; chunklet-end-i: 3072
i: 3060
end-i: 3072
i: 3064
end-i: 3072
i: 3068
end-i: 3072
i: 3072
end-i: 3072
i:3072 HIT CHUNK END
(comment . ";;3060: r15 <- r4, 0x1\n")
(comment . ";;3064: r15 <- 0xF")
(comment . ";;3068 b 996")
chunklet-i: 3072; chunklet-start-i: 3072; chunklet-end-i: 3080
i: 3072
end-i: 3080
i: 3076
end-i: 3080
i: 3080
end-i: 3080
i:3080 HIT CHUNK END
(comment . ";;3072: r10 <- 0x7")
(comment . ";;3076 b 988")
chunklet-i: 3080; chunklet-start-i: 3080; chunklet-end-i: 3096
i: 3080
end-i: 3096
i: 3084
end-i: 3096
i: 3088
end-i: 3096
i: 3092
end-i: 3096
i: 3096
end-i: 3096
i:3096 HIT CHUNK END
(comment . ";;3080: r15 <- r15, r1")
(comment . ";;3084: r15 <- r15, r8")
(comment . ";;3088: r10 <- r15")
(comment . ";;3092 b 972")
chunklet-i: 3096; chunklet-start-i: 3096; chunklet-end-i: 3116
i: 3096
end-i: 3116
i: 3100
end-i: 3116
i: 3104
end-i: 3116
i: 3108
end-i: 3116
i: 3112
end-i: 3116
i: 3116
end-i: 3116
i:3116 HIT CHUNK END
(comment . ";;3096: r15 <- r4, r9")
(comment . ";;3100: r15 <- r10, r15")
(comment . ";;3104: r11 <- r15, 0x0\n")
(comment . ";;3108: r11 <- 0x7")
(comment . ";;3112 b 24")
chunklet-i: 3116; chunklet-start-i: 3116; chunklet-end-i: 3128
i: 3116
end-i: 3128
i: 3120
end-i: 3128
i: 3124
end-i: 3128
i: 3128
end-i: 3128
i:3128 HIT CHUNK END
(comment . ";;3116: r7 <- r0, 0x68\n")
(comment . ";;3120: r2 <- r7")
(comment . ";;3124 b 916")
chunklet-i: 3128; chunklet-start-i: 3128; chunklet-end-i: 3140
i: 3128
end-i: 3140
i: 3128
end-i: 3140
i: 3132
end-i: 3140
i: 3136
end-i: 3140
i: 3140
end-i: 3140
i:3140 HIT CHUNK END
(comment . ";;3128: r7 <- r7, r8")
(comment . ";;3132: r7 <- r0, 0x68\n")
(comment . ";;3136: r15 <- r7, 0x0\n")
chunklet-i: 3140; chunklet-start-i: 3140; chunklet-end-i: 3164
i: 3140
end-i: 3164
i: 3140
end-i: 3164
i: 3152
end-i: 3164
i: 3156
end-i: 3164
i: 3160
end-i: 3164
i: 3164
end-i: 3164
i:3164 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;3152: r4 <- r9, 0x5\n")
(comment . ";;3156: r4 <- 0x1E")
(comment . ";;3160 b 756")
chunklet-i: 3164; chunklet-start-i: 3164; chunklet-end-i: 3188
i: 3164
end-i: 3188
i: 3164
end-i: 3188
i: 3176
end-i: 3188
i: 3180
end-i: 3188
i: 3184
end-i: 3188
i: 3188
end-i: 3188
i:3188 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;3176: r10 <- r9, 0x5\n")
(comment . ";;3180: r10 <- 0x1E")
(comment . ";;3184 b 592")
chunklet-i: 3188; chunklet-start-i: 3188; chunklet-end-i: 3200
i: 3188
end-i: 3200
i: 3188
end-i: 3200
i: 3192
end-i: 3200
i: 3196
end-i: 3200
i: 3200
end-i: 3200
i:3200 HIT CHUNK END
(comment . ";;3188: r15 <- r4, r10")
(comment . ";;3192: r15 <- 0x7")
(comment . ";;3196 b 436")
chunklet-i: 3200; chunklet-start-i: 3200; chunklet-end-i: 3208
i: 3200
end-i: 3208
i: 3204
end-i: 3208
i: 3208
end-i: 3208
i:3208 HIT CHUNK END
(comment . ";;3200: r4 <- r10")
(comment . ";;3204 b 8")
chunklet-i: 3208; chunklet-start-i: 3208; chunklet-end-i: 3216
i: 3208
end-i: 3216
i: 3208
end-i: 3216
i: 3212
end-i: 3216
i: 3216
end-i: 3216
i:3216 HIT CHUNK END
(comment . ";;3208: r4 <- 0x2E")
(comment . ";;3212: b r1, 0")
chunklet-i: 3216; chunklet-start-i: 3216; chunklet-end-i: 3252
i: 3216
end-i: 3252
i: 3216
end-i: 3252
i: 3228
end-i: 3252
i: 3240
end-i: 3252
i: 3244
end-i: 3252
i: 3248
end-i: 3252
i: 3252
end-i: 3252
i:3252 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;3240: r10 <- r9, 0x5\n")
(comment . ";;3244: r10 <- 0x1E")
(comment . ";;3248 b 240")
chunklet-i: 3252; chunklet-start-i: 3252; chunklet-end-i: 3260
i: 3252
end-i: 3260
i: 3252
end-i: 3260
i: 3256
end-i: 3260
i: 3260
end-i: 3260
i:3260 HIT CHUNK END
(comment . ";;3252: r10 <- 0x7")
(comment . ";;3256 b 96")
chunklet-i: 3260; chunklet-start-i: 3260; chunklet-end-i: 3268
i: 3260
end-i: 3268
i: 3264
end-i: 3268
i: 3268
end-i: 3268
i:3268 HIT CHUNK END
(comment . ";;3260: r4 <- r10, 0x8\n")
(comment . ";;3264 b 88")
chunklet-i: 3268; chunklet-start-i: 3268; chunklet-end-i: 3284
i: 3268
end-i: 3284
i: 3268
end-i: 3284
i: 3272
end-i: 3284
i: 3276
end-i: 3284
i: 3280
end-i: 3284
i: 3284
end-i: 3284
i:3284 HIT CHUNK END
(comment . ";;3268: r14 <- r15, r5")
(comment . ";;3272: r4 <- r14, 0x0\n")
(comment . ";;3276: r4 <- 0x7")
(comment . ";;3280 b 24")
chunklet-i: 3284; chunklet-start-i: 3284; chunklet-end-i: 3296
i: 3284
end-i: 3296
i: 3288
end-i: 3296
i: 3292
end-i: 3296
i: 3296
end-i: 3296
i:3296 HIT CHUNK END
(comment . ";;3284: r7 <- r0, 0x68\n")
(comment . ";;3288: r2 <- r7")
(comment . ";;3292 b 36")
chunklet-i: 3296; chunklet-start-i: 3296; chunklet-end-i: 3308
i: 3296
end-i: 3308
i: 3296
end-i: 3308
i: 3300
end-i: 3308
i: 3304
end-i: 3308
i: 3308
end-i: 3308
i:3308 HIT CHUNK END
(comment . ";;3296: r7 <- r7, r8")
(comment . ";;3300: r7 <- r0, 0x68\n")
(comment . ";;3304: r14 <- r7, 0x0\n")
chunklet-i: 3308; chunklet-start-i: 3308; chunklet-end-i: 3332
i: 3308
end-i: 3332
i: 3308
end-i: 3332
i: 3320
end-i: 3332
i: 3324
end-i: 3332
i: 3328
end-i: 3332
i: 3332
end-i: 3332
i:3332 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;3320: r14 <- r15, 0xD\n")
(comment . ";;3324: r4 <- 0x2E")
(comment . ";;3328: b r1, 0")
chunklet-i: 3332; chunklet-start-i: 3332; chunklet-end-i: 3344
i: 3332
end-i: 3344
i: 3332
end-i: 3344
i: 3344
end-i: 3344
i:3344 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 3344; chunklet-start-i: 3348; chunklet-end-i: 3356
i: 3344
end-i: 3356
i: 3348
end-i: 3356
i: 3352
end-i: 3356
i: 3356
end-i: 3356
i:3356 HIT CHUNK END
(comment . ";; instruction 3344 not included")
(comment . ";;3348: r7 <- r0, 0x68\n")
(comment . ";;3352 b -60")
chunklet-i: 3356; chunklet-start-i: 3356; chunklet-end-i: 3364
i: 3356
end-i: 3364
i: 3356
end-i: 3364
i: 3360
end-i: 3364
i: 3364
end-i: 3364
i:3364 HIT CHUNK END
(comment . ";;3356: r3 <- r3, 0x1\n")
(comment . ";;3360 b 64")
chunklet-i: 3364; chunklet-start-i: 3364; chunklet-end-i: 3400
i: 3364
end-i: 3400
i: 3368
end-i: 3400
i: 3372
end-i: 3400
i: 3376
end-i: 3400
i: 3380
end-i: 3400
i: 3384
end-i: 3400
i: 3396
end-i: 3400
i: 3400
end-i: 3400
at header: 3400
(comment . ";;3364: r15 <- r1, 0x8\n")
(comment . ";;3368: r10 <- r1, 0x10\n")
(comment . ";;3372: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3396: b r6")
chunklet-i: 3400; chunklet-start-i: 3416; chunklet-end-i: 3428
i: 3400
end-i: 3428
at header: 3400
i: 3416
end-i: 3428
i: 3420
end-i: 3428
i: 3424
end-i: 3428
i: 3428
end-i: 3428
i:3428 HIT CHUNK END
(comment . ";;3416: r1 <- r1, r8")
(comment . ";;3420: r15 <- r1, 0x8\n")
(comment . ";;3424: r10 <- r1, 0x10\n")
chunklet-i: 3428; chunklet-start-i: 3428; chunklet-end-i: 3464
i: 3428
end-i: 3464
i: 3428
end-i: 3464
i: 3432
end-i: 3464
i: 3436
end-i: 3464
i: 3440
end-i: 3464
i: 3444
end-i: 3464
i: 3448
end-i: 3464
i: 3460
end-i: 3464
i: 3464
end-i: 3464
at header: 3464
(comment . ";;3428: r9 <- 0x8")
(comment . ";;3432: r15 <- r1, 0x8\n")
(comment . ";;3436: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3444: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3460: b r6")
chunklet-i: 3464; chunklet-start-i: 3480; chunklet-end-i: 3492
i: 3464
end-i: 3492
at header: 3464
i: 3480
end-i: 3492
i: 3484
end-i: 3492
i: 3488
end-i: 3492
i: 3492
end-i: 3492
i:3492 HIT CHUNK END
(comment . ";;3480: r1 <- r1, r0")
(comment . ";;3484: r15 <- r1, 0x8\n")
(comment . ";;3488 b -224")
chunklet-i: 3492; chunklet-start-i: 3492; chunklet-end-i: 3500
i: 3492
end-i: 3500
i: 3492
end-i: 3500
i: 3496
end-i: 3500
i: 3500
end-i: 3500
i:3500 HIT CHUNK END
(comment . ";;3492: r3 <- r3, 0x1\n")
(comment . ";;3496 b 68")
chunklet-i: 3500; chunklet-start-i: 3500; chunklet-end-i: 3536
i: 3500
end-i: 3536
i: 3504
end-i: 3536
i: 3508
end-i: 3536
i: 3512
end-i: 3536
i: 3516
end-i: 3536
i: 3520
end-i: 3536
i: 3532
end-i: 3536
i: 3536
end-i: 3536
at header: 3536
(comment . ";;3500: r15 <- r1, 0x8\n")
(comment . ";;3504: r9 <- r1, 0x10\n")
(comment . ";;3508: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3516: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3532: b r6")
chunklet-i: 3536; chunklet-start-i: 3552; chunklet-end-i: 3568
i: 3536
end-i: 3568
at header: 3536
i: 3552
end-i: 3568
i: 3556
end-i: 3568
i: 3560
end-i: 3568
i: 3564
end-i: 3568
i: 3568
end-i: 3568
i:3568 HIT CHUNK END
(comment . ";;3556: r1 <- r1, r8")
(comment . ";;3560: r15 <- r1, 0x8\n")
(comment . ";;3564: r9 <- r1, 0x10\n")
chunklet-i: 3568; chunklet-start-i: 3568; chunklet-end-i: 3600
i: 3568
end-i: 3600
i: 3568
end-i: 3600
i: 3572
end-i: 3600
i: 3576
end-i: 3600
i: 3580
end-i: 3600
i: 3584
end-i: 3600
i: 3596
end-i: 3600
i: 3600
end-i: 3600
at header: 3600
(comment . ";;3568: r15 <- r1, 0x8\n")
(comment . ";;3572: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3580: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3596: b r6")
chunklet-i: 3600; chunklet-start-i: 3616; chunklet-end-i: 3636
i: 3600
end-i: 3636
at header: 3600
i: 3616
end-i: 3636
i: 3620
end-i: 3636
i: 3624
end-i: 3636
i: 3628
end-i: 3636
i: 3632
end-i: 3636
i: 3636
end-i: 3636
i:3636 HIT CHUNK END
(comment . ";;3616: r1 <- r1, r0")
(comment . ";;3620: r10 <- 0x4")
(comment . ";;3624: r15 <- r1, 0x8\n")
(comment . ";;3632 b -384")
chunklet-i: 3636; chunklet-start-i: 3636; chunklet-end-i: 3644
i: 3636
end-i: 3644
i: 3636
end-i: 3644
i: 3640
end-i: 3644
i: 3644
end-i: 3644
i:3644 HIT CHUNK END
(comment . ";;3636: r3 <- r3, 0x1\n")
(comment . ";;3640 b 68")
chunklet-i: 3644; chunklet-start-i: 3644; chunklet-end-i: 3680
i: 3644
end-i: 3680
i: 3648
end-i: 3680
i: 3652
end-i: 3680
i: 3656
end-i: 3680
i: 3660
end-i: 3680
i: 3664
end-i: 3680
i: 3676
end-i: 3680
i: 3680
end-i: 3680
at header: 3680
(comment . ";;3644: r4 <- r1, 0x8\n")
(comment . ";;3648: r10 <- r1, 0x10\n")
(comment . ";;3652: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3660: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3676: b r6")
chunklet-i: 3680; chunklet-start-i: 3696; chunklet-end-i: 3712
i: 3680
end-i: 3712
at header: 3680
i: 3696
end-i: 3712
i: 3700
end-i: 3712
i: 3704
end-i: 3712
i: 3708
end-i: 3712
i: 3712
end-i: 3712
i:3712 HIT CHUNK END
(comment . ";;3700: r1 <- r1, r8")
(comment . ";;3704: r4 <- r1, 0x8\n")
(comment . ";;3708: r10 <- r1, 0x10\n")
chunklet-i: 3712; chunklet-start-i: 3712; chunklet-end-i: 3744
i: 3712
end-i: 3744
i: 3712
end-i: 3744
i: 3716
end-i: 3744
i: 3720
end-i: 3744
i: 3724
end-i: 3744
i: 3728
end-i: 3744
i: 3740
end-i: 3744
i: 3744
end-i: 3744
at header: 3744
(comment . ";;3712: r9 <- 0x4")
(comment . ";;3716: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3724: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3740: b r6")
chunklet-i: 3744; chunklet-start-i: 3760; chunklet-end-i: 3776
i: 3744
end-i: 3776
at header: 3744
i: 3760
end-i: 3776
i: 3764
end-i: 3776
i: 3768
end-i: 3776
i: 3772
end-i: 3776
i: 3776
end-i: 3776
i:3776 HIT CHUNK END
(comment . ";;3760: r1 <- r1, r8")
(comment . ";;3764: r4 <- 0x6")
(comment . ";;3772 b -560")
chunklet-i: 3776; chunklet-start-i: 3776; chunklet-end-i: 3780
i: 3776
end-i: 3780
i: 3780
end-i: 3780
i:3780 HIT CHUNK END
(comment . ";;3776 b -572")
chunklet-i: 3780; chunklet-start-i: 3780; chunklet-end-i: 3788
i: 3780
end-i: 3788
i: 3780
end-i: 3788
i: 3784
end-i: 3788
i: 3788
end-i: 3788
i:3788 HIT CHUNK END
(comment . ";;3780: r3 <- r3, 0x1\n")
(comment . ";;3784 b 68")
chunklet-i: 3788; chunklet-start-i: 3788; chunklet-end-i: 3824
i: 3788
end-i: 3824
i: 3792
end-i: 3824
i: 3796
end-i: 3824
i: 3800
end-i: 3824
i: 3804
end-i: 3824
i: 3808
end-i: 3824
i: 3820
end-i: 3824
i: 3824
end-i: 3824
at header: 3824
(comment . ";;3788: r4 <- r1, 0x8\n")
(comment . ";;3792: r9 <- r1, 0x10\n")
(comment . ";;3796: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3804: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3820: b r6")
chunklet-i: 3824; chunklet-start-i: 3840; chunklet-end-i: 3856
i: 3824
end-i: 3856
at header: 3824
i: 3840
end-i: 3856
i: 3844
end-i: 3856
i: 3848
end-i: 3856
i: 3852
end-i: 3856
i: 3856
end-i: 3856
i:3856 HIT CHUNK END
(comment . ";;3844: r1 <- r1, r8")
(comment . ";;3848: r4 <- r1, 0x8\n")
(comment . ";;3852: r9 <- r1, 0x10\n")
chunklet-i: 3856; chunklet-start-i: 3856; chunklet-end-i: 3888
i: 3856
end-i: 3888
i: 3856
end-i: 3888
i: 3860
end-i: 3888
i: 3864
end-i: 3888
i: 3868
end-i: 3888
i: 3872
end-i: 3888
i: 3884
end-i: 3888
i: 3888
end-i: 3888
at header: 3888
(comment . ";;3856: r4 <- r1, 0x8\n")
(comment . ";;3860: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3868: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3884: b r6")
chunklet-i: 3888; chunklet-start-i: 3904; chunklet-end-i: 3920
i: 3888
end-i: 3920
at header: 3888
i: 3904
end-i: 3920
i: 3908
end-i: 3920
i: 3912
end-i: 3920
i: 3916
end-i: 3920
i: 3920
end-i: 3920
i:3920 HIT CHUNK END
(comment . ";;3904: r1 <- r1, r0")
(comment . ";;3908: r10 <- 0x4")
(comment . ";;3912: r4 <- r1, 0x8\n")
(comment . ";;3916 b -732")
chunklet-i: 3920; chunklet-start-i: 3920; chunklet-end-i: 3928
i: 3920
end-i: 3928
i: 3920
end-i: 3928
i: 3924
end-i: 3928
i: 3928
end-i: 3928
i:3928 HIT CHUNK END
(comment . ";;3920: r3 <- r3, 0x1\n")
(comment . ";;3924 b 60")
chunklet-i: 3928; chunklet-start-i: 3928; chunklet-end-i: 3960
i: 3928
end-i: 3960
i: 3932
end-i: 3960
i: 3936
end-i: 3960
i: 3940
end-i: 3960
i: 3944
end-i: 3960
i: 3956
end-i: 3960
i: 3960
end-i: 3960
at header: 3960
(comment . ";;3928: r9 <- r1, 0x8\n")
(comment . ";;3932: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3940: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3956: b r6")
chunklet-i: 3960; chunklet-start-i: 3976; chunklet-end-i: 3988
i: 3960
end-i: 3988
at header: 3960
i: 3976
end-i: 3988
i: 3980
end-i: 3988
i: 3984
end-i: 3988
i: 3988
end-i: 3988
i:3988 HIT CHUNK END
(comment . ";;3980: r1 <- r1, r0")
(comment . ";;3984: r9 <- r1, 0x8\n")
chunklet-i: 3988; chunklet-start-i: 3988; chunklet-end-i: 4016
i: 3988
end-i: 4016
i: 3988
end-i: 4016
i: 3992
end-i: 4016
i: 3996
end-i: 4016
i: 4000
end-i: 4016
i: 4012
end-i: 4016
i: 4016
end-i: 4016
at header: 4016
(comment . ";;3988: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3996: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4012: b r6")
chunklet-i: 4016; chunklet-start-i: 4032; chunklet-end-i: 4044
i: 4016
end-i: 4044
at header: 4016
i: 4032
end-i: 4044
i: 4036
end-i: 4044
i: 4040
end-i: 4044
i: 4044
end-i: 4044
i:4044 HIT CHUNK END
(comment . ";;4032: r1 <- r1, r8")
(comment . ";;4040 b -880")
chunklet-i: 4044; chunklet-start-i: 4044; chunklet-end-i: 4056
i: 4044
end-i: 4056
i: 4044
end-i: 4056
i: 4056
end-i: 4056
i:4056 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 4056; chunklet-start-i: 4060; chunklet-end-i: 4068
i: 4056
end-i: 4068
i: 4060
end-i: 4068
i: 4064
end-i: 4068
i: 4068
end-i: 4068
i:4068 HIT CHUNK END
(comment . ";; instruction 4056 not included")
(comment . ";;4060: r7 <- r0, 0x68\n")
(comment . ";;4064 b -940")
chunklet-i: 4068; chunklet-start-i: 4068; chunklet-end-i: 4088
i: 4068
end-i: 4088
i: 4068
end-i: 4088
i: 4072
end-i: 4088
i: 4084
end-i: 4088
i: 4088
end-i: 4088
i:4088 HIT CHUNK END
(comment . ";;4068: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;4084: b r6")
chunklet-i: 4088; chunklet-start-i: 4088; chunklet-end-i: 4096
i: 4088
end-i: 4096
i: 4088
end-i: 4096
i: 4092
end-i: 4096
i: 4096
end-i: 4096
i:4096 HIT CHUNK END
(comment . ";;4088: r3 <- r3, 0x1\n")
(comment . ";;4092 b 76")
chunklet-i: 4096; chunklet-start-i: 4096; chunklet-end-i: 4136
i: 4096
end-i: 4136
i: 4100
end-i: 4136
i: 4104
end-i: 4136
i: 4108
end-i: 4136
i: 4112
end-i: 4136
i: 4116
end-i: 4136
i: 4120
end-i: 4136
i: 4132
end-i: 4136
i: 4136
end-i: 4136
at header: 4136
(comment . ";;4096: r5 <- r1, 0x28\n")
(comment . ";;4100: r4 <- r1, 0x8\n")
(comment . ";;4104: r9 <- r1, 0x10\n")
(comment . ";;4108: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4116: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4132: b r6")
chunklet-i: 4136; chunklet-start-i: 4152; chunklet-end-i: 4172
i: 4136
end-i: 4172
at header: 4136
i: 4152
end-i: 4172
i: 4156
end-i: 4172
i: 4160
end-i: 4172
i: 4164
end-i: 4172
i: 4168
end-i: 4172
i: 4172
end-i: 4172
i:4172 HIT CHUNK END
(comment . ";;4156: r1 <- r1, r0")
(comment . ";;4160: r5 <- r1, 0x28\n")
(comment . ";;4164: r4 <- r1, 0x8\n")
(comment . ";;4168: r9 <- r1, 0x10\n")
chunklet-i: 4172; chunklet-start-i: 4172; chunklet-end-i: 4208
i: 4172
end-i: 4208
i: 4172
end-i: 4208
i: 4176
end-i: 4208
i: 4180
end-i: 4208
i: 4184
end-i: 4208
i: 4188
end-i: 4208
i: 4192
end-i: 4208
i: 4204
end-i: 4208
i: 4208
end-i: 4208
at header: 4208
(comment . ";;4172: r5 <- r1, 0x28\n")
(comment . ";;4176: r4 <- r1, 0x8\n")
(comment . ";;4180: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4188: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4204: b r6")
chunklet-i: 4208; chunklet-start-i: 4224; chunklet-end-i: 4244
i: 4208
end-i: 4244
at header: 4208
i: 4224
end-i: 4244
i: 4228
end-i: 4244
i: 4232
end-i: 4244
i: 4236
end-i: 4244
i: 4240
end-i: 4244
i: 4244
end-i: 4244
i:4244 HIT CHUNK END
(comment . ";;4224: r1 <- r1, r0")
(comment . ";;4228: r10 <- 0x4")
(comment . ";;4232: r5 <- r1, 0x28\n")
(comment . ";;4236: r4 <- r1, 0x8\n")
(comment . ";;4240 b -1200")
chunklet-i: 4244; chunklet-start-i: 4244; chunklet-end-i: 4252
i: 4244
end-i: 4252
i: 4244
end-i: 4252
i: 4248
end-i: 4252
i: 4252
end-i: 4252
i:4252 HIT CHUNK END
(comment . ";;4244: r3 <- r3, 0x1\n")
(comment . ";;4248 b 68")
chunklet-i: 4252; chunklet-start-i: 4252; chunklet-end-i: 4288
i: 4252
end-i: 4288
i: 4256
end-i: 4288
i: 4260
end-i: 4288
i: 4264
end-i: 4288
i: 4268
end-i: 4288
i: 4272
end-i: 4288
i: 4284
end-i: 4288
i: 4288
end-i: 4288
at header: 4288
(comment . ";;4252: r5 <- r1, 0x28\n")
(comment . ";;4256: r9 <- r1, 0x8\n")
(comment . ";;4260: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4268: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4284: b r6")
chunklet-i: 4288; chunklet-start-i: 4304; chunklet-end-i: 4320
i: 4288
end-i: 4320
at header: 4288
i: 4304
end-i: 4320
i: 4308
end-i: 4320
i: 4312
end-i: 4320
i: 4316
end-i: 4320
i: 4320
end-i: 4320
i:4320 HIT CHUNK END
(comment . ";;4308: r1 <- r1, r0")
(comment . ";;4312: r5 <- r1, 0x28\n")
(comment . ";;4316: r9 <- r1, 0x8\n")
chunklet-i: 4320; chunklet-start-i: 4320; chunklet-end-i: 4352
i: 4320
end-i: 4352
i: 4320
end-i: 4352
i: 4324
end-i: 4352
i: 4328
end-i: 4352
i: 4332
end-i: 4352
i: 4336
end-i: 4352
i: 4348
end-i: 4352
i: 4352
end-i: 4352
at header: 4352
(comment . ";;4320: r5 <- r1, 0x28\n")
(comment . ";;4324: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4332: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4348: b r6")
chunklet-i: 4352; chunklet-start-i: 4368; chunklet-end-i: 4380
i: 4352
end-i: 4380
at header: 4352
i: 4368
end-i: 4380
i: 4372
end-i: 4380
i: 4376
end-i: 4380
i: 4380
end-i: 4380
i:4380 HIT CHUNK END
(comment . ";;4368: r1 <- r1, r0")
(comment . ";;4372: r5 <- r1, 0x28\n")
(comment . ";;4376 b -1360")
chunklet-i: 4380; chunklet-start-i: 4380; chunklet-end-i: 4392
i: 4380
end-i: 4392
i: 4380
end-i: 4392
i: 4392
end-i: 4392
i:4392 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 4392; chunklet-start-i: 4396; chunklet-end-i: 4404
i: 4392
end-i: 4404
i: 4396
end-i: 4404
i: 4400
end-i: 4404
i: 4404
end-i: 4404
i:4404 HIT CHUNK END
(comment . ";; instruction 4392 not included")
(comment . ";;4396: r7 <- r0, 0x68\n")
(comment . ";;4400 b -1420")
chunklet-i: 4404; chunklet-start-i: 4404; chunklet-end-i: 4428
i: 4404
end-i: 4428
i: 4404
end-i: 4428
i: 4408
end-i: 4428
i: 4412
end-i: 4428
i: 4424
end-i: 4428
i: 4428
end-i: 4428
i:4428 HIT CHUNK END
(comment . ";;4404: r9 <- 0x4")
(comment . ";;4408: r11 <- 0xF")
(comment . ";; literal r6")
(comment . ";;4424: b r6")
chunklet-i: 4428; chunklet-start-i: 4428; chunklet-end-i: 4436
i: 4428
end-i: 4436
i: 4428
end-i: 4436
i: 4432
end-i: 4436
i: 4436
end-i: 4436
i:4436 HIT CHUNK END
(comment . ";;4428: r3 <- r3, 0x1\n")
(comment . ";;4432 b 84")
chunklet-i: 4436; chunklet-start-i: 4436; chunklet-end-i: 4480
i: 4436
end-i: 4480
i: 4440
end-i: 4480
i: 4444
end-i: 4480
i: 4448
end-i: 4480
i: 4452
end-i: 4480
i: 4456
end-i: 4480
i: 4460
end-i: 4480
i: 4464
end-i: 4480
i: 4476
end-i: 4480
i: 4480
end-i: 4480
at header: 4480
(comment . ";;4436: r15 <- r1, 0x10\n")
(comment . ";;4440: r5 <- r1, 0x28\n")
(comment . ";;4444: r4 <- r1, 0x8\n")
(comment . ";;4448: r9 <- r1, 0x18\n")
(comment . ";;4452: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4460: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4476: b r6")
chunklet-i: 4480; chunklet-start-i: 4496; chunklet-end-i: 4520
i: 4480
end-i: 4520
at header: 4480
i: 4496
end-i: 4520
i: 4500
end-i: 4520
i: 4504
end-i: 4520
i: 4508
end-i: 4520
i: 4512
end-i: 4520
i: 4516
end-i: 4520
i: 4520
end-i: 4520
i:4520 HIT CHUNK END
(comment . ";;4500: r1 <- r1, r0")
(comment . ";;4504: r15 <- r1, 0x10\n")
(comment . ";;4508: r5 <- r1, 0x28\n")
(comment . ";;4512: r4 <- r1, 0x8\n")
(comment . ";;4516: r9 <- r1, 0x18\n")
chunklet-i: 4520; chunklet-start-i: 4520; chunklet-end-i: 4560
i: 4520
end-i: 4560
i: 4520
end-i: 4560
i: 4524
end-i: 4560
i: 4528
end-i: 4560
i: 4532
end-i: 4560
i: 4536
end-i: 4560
i: 4540
end-i: 4560
i: 4544
end-i: 4560
i: 4556
end-i: 4560
i: 4560
end-i: 4560
at header: 4560
(comment . ";;4520: r15 <- r1, 0x10\n")
(comment . ";;4524: r5 <- r1, 0x28\n")
(comment . ";;4528: r4 <- r1, 0x8\n")
(comment . ";;4532: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4540: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4556: b r6")
chunklet-i: 4560; chunklet-start-i: 4576; chunklet-end-i: 4600
i: 4560
end-i: 4600
at header: 4560
i: 4576
end-i: 4600
i: 4580
end-i: 4600
i: 4584
end-i: 4600
i: 4588
end-i: 4600
i: 4592
end-i: 4600
i: 4596
end-i: 4600
i: 4600
end-i: 4600
i:4600 HIT CHUNK END
(comment . ";;4576: r1 <- r1, r0")
(comment . ";;4580: r10 <- 0x4")
(comment . ";;4584: r15 <- r1, 0x10\n")
(comment . ";;4588: r5 <- r1, 0x28\n")
(comment . ";;4592: r4 <- r1, 0x8\n")
(comment . ";;4596 b -1696")
chunklet-i: 4600; chunklet-start-i: 4600; chunklet-end-i: 4608
i: 4600
end-i: 4608
i: 4600
end-i: 4608
i: 4604
end-i: 4608
i: 4608
end-i: 4608
i:4608 HIT CHUNK END
(comment . ";;4600: r3 <- r3, 0x1\n")
(comment . ";;4604 b 76")
chunklet-i: 4608; chunklet-start-i: 4608; chunklet-end-i: 4648
i: 4608
end-i: 4648
i: 4612
end-i: 4648
i: 4616
end-i: 4648
i: 4620
end-i: 4648
i: 4624
end-i: 4648
i: 4628
end-i: 4648
i: 4632
end-i: 4648
i: 4644
end-i: 4648
i: 4648
end-i: 4648
at header: 4648
(comment . ";;4608: r15 <- r1, 0x10\n")
(comment . ";;4612: r5 <- r1, 0x28\n")
(comment . ";;4616: r9 <- r1, 0x8\n")
(comment . ";;4620: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4628: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4644: b r6")
chunklet-i: 4648; chunklet-start-i: 4664; chunklet-end-i: 4684
i: 4648
end-i: 4684
at header: 4648
i: 4664
end-i: 4684
i: 4668
end-i: 4684
i: 4672
end-i: 4684
i: 4676
end-i: 4684
i: 4680
end-i: 4684
i: 4684
end-i: 4684
i:4684 HIT CHUNK END
(comment . ";;4668: r1 <- r1, r0")
(comment . ";;4672: r15 <- r1, 0x10\n")
(comment . ";;4676: r5 <- r1, 0x28\n")
(comment . ";;4680: r9 <- r1, 0x8\n")
chunklet-i: 4684; chunklet-start-i: 4684; chunklet-end-i: 4720
i: 4684
end-i: 4720
i: 4684
end-i: 4720
i: 4688
end-i: 4720
i: 4692
end-i: 4720
i: 4696
end-i: 4720
i: 4700
end-i: 4720
i: 4704
end-i: 4720
i: 4716
end-i: 4720
i: 4720
end-i: 4720
at header: 4720
(comment . ";;4684: r15 <- r1, 0x10\n")
(comment . ";;4688: r5 <- r1, 0x28\n")
(comment . ";;4692: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4700: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4716: b r6")
chunklet-i: 4720; chunklet-start-i: 4736; chunklet-end-i: 4756
i: 4720
end-i: 4756
at header: 4720
i: 4736
end-i: 4756
i: 4740
end-i: 4756
i: 4744
end-i: 4756
i: 4748
end-i: 4756
i: 4752
end-i: 4756
i: 4756
end-i: 4756
i:4756 HIT CHUNK END
(comment . ";;4736: r1 <- r1, r0")
(comment . ";;4740: r15 <- r1, 0x10\n")
(comment . ";;4744: r5 <- r1, 0x28\n")
(comment . ";;4752 b -1876")
chunklet-i: 4756; chunklet-start-i: 4756; chunklet-end-i: 4764
i: 4756
end-i: 4764
i: 4756
end-i: 4764
i: 4760
end-i: 4764
i: 4764
end-i: 4764
i:4764 HIT CHUNK END
(comment . ";;4756: r3 <- r3, 0x1\n")
(comment . ";;4760 b 96")
chunklet-i: 4764; chunklet-start-i: 4764; chunklet-end-i: 4816
i: 4764
end-i: 4816
i: 4768
end-i: 4816
i: 4772
end-i: 4816
i: 4776
end-i: 4816
i: 4780
end-i: 4816
i: 4784
end-i: 4816
i: 4788
end-i: 4816
i: 4792
end-i: 4816
i: 4796
end-i: 4816
i: 4800
end-i: 4816
i: 4812
end-i: 4816
i: 4816
end-i: 4816
at header: 4816
(comment . ";;4764: r15 <- r1, 0x10\n")
(comment . ";;4768: r14 <- r1, 0x18\n")
(comment . ";;4772: r11 <- r1, 0x20\n")
(comment . ";;4776: r13 <- r1, 0x8\n")
(comment . ";;4780: r5 <- r1, 0x28\n")
(comment . ";;4784: r4 <- r1, 0x30\n")
(comment . ";;4788: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;4796: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4812: b r6")
chunklet-i: 4816; chunklet-start-i: 4832; chunklet-end-i: 4860
i: 4816
end-i: 4860
at header: 4816
i: 4832
end-i: 4860
i: 4836
end-i: 4860
i: 4840
end-i: 4860
i: 4844
end-i: 4860
i: 4848
end-i: 4860
i: 4852
end-i: 4860
i: 4856
end-i: 4860
i: 4860
end-i: 4860
i:4860 HIT CHUNK END
(comment . ";;4832: r1 <- r1, r8")
(comment . ";;4836: r15 <- r1, 0x10\n")
(comment . ";;4840: r14 <- r1, 0x18\n")
(comment . ";;4844: r11 <- r1, 0x20\n")
(comment . ";;4848: r13 <- r1, 0x8\n")
(comment . ";;4852: r5 <- r1, 0x28\n")
(comment . ";;4856: r4 <- r1, 0x30\n")
chunklet-i: 4860; chunklet-start-i: 4860; chunklet-end-i: 4920
i: 4860
end-i: 4920
i: 4860
end-i: 4920
i: 4864
end-i: 4920
i: 4868
end-i: 4920
i: 4872
end-i: 4920
i: 4876
end-i: 4920
i: 4880
end-i: 4920
i: 4884
end-i: 4920
i: 4888
end-i: 4920
i: 4892
end-i: 4920
i: 4896
end-i: 4920
i: 4900
end-i: 4920
i: 4904
end-i: 4920
i: 4916
end-i: 4920
i: 4920
end-i: 4920
at header: 4920
(comment . ";;4860: r9 <- 0x4")
(comment . ";;4864: r10 <- 0xE")
(comment . ";;4868: r15 <- r1, 0x10\n")
(comment . ";;4872: r14 <- r1, 0x18\n")
(comment . ";;4876: r11 <- r1, 0x20\n")
(comment . ";;4880: r13 <- r1, 0x8\n")
(comment . ";;4884: r5 <- r1, 0x28\n")
(comment . ";;4888: r4 <- r1, 0x30\n")
(comment . ";;4892: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;4900: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4916: b r6")
chunklet-i: 4920; chunklet-start-i: 4936; chunklet-end-i: 4976
i: 4920
end-i: 4976
at header: 4920
i: 4936
end-i: 4976
i: 4940
end-i: 4976
i: 4944
end-i: 4976
i: 4948
end-i: 4976
i: 4952
end-i: 4976
i: 4956
end-i: 4976
i: 4960
end-i: 4976
i: 4964
end-i: 4976
i: 4968
end-i: 4976
i: 4972
end-i: 4976
i: 4976
end-i: 4976
i:4976 HIT CHUNK END
(comment . ";;4936: r1 <- r1, r8")
(comment . ";;4940: r12 <- 0x4")
(comment . ";;4944: r15 <- r1, 0x10\n")
(comment . ";;4948: r14 <- r1, 0x18\n")
(comment . ";;4952: r11 <- r1, 0x20\n")
(comment . ";;4956: r13 <- r1, 0x8\n")
(comment . ";;4960: r5 <- r1, 0x28\n")
(comment . ";;4964: r4 <- r1, 0x30\n")
(comment . ";;4968: r12 <- 0x6")
(comment . ";;4972 b -4892")
chunklet-i: 4976; chunklet-start-i: 4976; chunklet-end-i: 4980
i: 4976
end-i: 4980
i: 4980
end-i: 4980
i:4980 HIT CHUNK END
(comment . ";;4976 b -2124")
chunklet-i: 4980; chunklet-start-i: 4980; chunklet-end-i: 4992
i: 4980
end-i: 4992
i: 4980
end-i: 4992
i: 4992
end-i: 4992
i:4992 HIT CHUNK END
(comment . ";; literal r10")
chunklet-i: 4992; chunklet-start-i: 4996; chunklet-end-i: 5000
i: 4992
end-i: 5000
i: 4996
end-i: 5000
i: 5000
end-i: 5000
i:5000 HIT CHUNK END
(comment . ";; instruction 4992 not included")
(comment . ";;4996 b -4952")
chunklet-i: 5000; chunklet-start-i: 5000; chunklet-end-i: 5016
i: 5000
end-i: 5016
i: 5000
end-i: 5016
i: 5012
end-i: 5016
i: 5016
end-i: 5016
i:5016 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;5012: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: start
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 36
instruction range for chunk: 36 76
instruction range for chunk: 76 88
instruction range for chunk: 88 96
instruction range for chunk: 96 104
instruction range for chunk: 104 128
instruction range for chunk: 128 132
instruction range for chunk: 132 144
instruction range for chunk: 144 156
instruction range for chunk: 156 164
instruction range for chunk: 164 180
instruction range for chunk: 180 200
instruction range for chunk: 200 208
instruction range for chunk: 208 216
instruction range for chunk: 216 256
instruction range for chunk: 272 284
instruction range for chunk: 284 308
instruction range for chunk: 308 344
instruction range for chunk: 360 380
instruction range for chunk: 380 416
instruction range for chunk: 432 448
instruction range for chunk: 448 452
instruction range for chunk: 452 460
instruction range for chunk: 460 468
instruction range for chunk: 468 476
instruction range for chunk: 476 480
instruction range for chunk: 480 488
instruction range for chunk: 488 496
instruction range for chunk: 496 504
instruction range for chunk: 504 508
instruction range for chunk: 508 516
instruction range for chunk: 516 524
instruction range for chunk: 524 532
instruction range for chunk: 532 556
instruction range for chunk: 556 580
instruction range for chunk: 580 604
instruction range for chunk: 604 608
instruction range for chunk: 608 620
instruction range for chunk: 620 632
instruction range for chunk: 632 644
instruction range for chunk: 644 652
instruction range for chunk: 652 656
instruction range for chunk: 656 668
instruction range for chunk: 668 680
instruction range for chunk: 680 684
instruction range for chunk: 684 696
instruction range for chunk: 696 704
instruction range for chunk: 704 708
instruction range for chunk: 708 720
instruction range for chunk: 720 732
instruction range for chunk: 732 740
instruction range for chunk: 740 756
instruction range for chunk: 756 776
instruction range for chunk: 776 784
instruction range for chunk: 784 792
instruction range for chunk: 792 840
instruction range for chunk: 856 884
instruction range for chunk: 884 908
instruction range for chunk: 908 960
instruction range for chunk: 976 1012
instruction range for chunk: 1012 1064
instruction range for chunk: 1080 1112
instruction range for chunk: 1112 1168
instruction range for chunk: 1184 1224
instruction range for chunk: 1224 1280
instruction range for chunk: 1296 1332
instruction range for chunk: 1332 1384
instruction range for chunk: 1400 1440
instruction range for chunk: 1440 1488
instruction range for chunk: 1504 1540
instruction range for chunk: 1540 1584
instruction range for chunk: 1600 1628
instruction range for chunk: 1628 1672
instruction range for chunk: 1688 1716
instruction range for chunk: 1716 1724
instruction range for chunk: 1724 1732
instruction range for chunk: 1732 1740
instruction range for chunk: 1740 1784
instruction range for chunk: 1800 1820
instruction range for chunk: 1820 1828
instruction range for chunk: 1828 1872
instruction range for chunk: 1888 1908
instruction range for chunk: 1908 1960
instruction range for chunk: 1976 2012
instruction range for chunk: 2012 2016
instruction range for chunk: 2016 2056
instruction range for chunk: 2072 2096
instruction range for chunk: 2096 2104
instruction range for chunk: 2104 2112
instruction range for chunk: 2112 2120
instruction range for chunk: 2120 2160
instruction range for chunk: 2176 2192
instruction range for chunk: 2192 2200
instruction range for chunk: 2200 2240
instruction range for chunk: 2256 2272
instruction range for chunk: 2272 2320
instruction range for chunk: 2336 2368
instruction range for chunk: 2368 2372
instruction range for chunk: 2372 2408
instruction range for chunk: 2424 2440
instruction range for chunk: 2440 2444
instruction range for chunk: 2444 2468
instruction range for chunk: 2468 2480
instruction range for chunk: 2480 2488
instruction range for chunk: 2488 2496
instruction range for chunk: 2496 2500
instruction range for chunk: 2500 2512
instruction range for chunk: 2512 2520
instruction range for chunk: 2520 2528
instruction range for chunk: 2528 2552
instruction range for chunk: 2552 2556
instruction range for chunk: 2556 2568
instruction range for chunk: 2568 2588
instruction range for chunk: 2588 2600
instruction range for chunk: 2600 2620
instruction range for chunk: 2620 2632
instruction range for chunk: 2632 2640
instruction range for chunk: 2640 2656
instruction range for chunk: 2656 2676
instruction range for chunk: 2676 2684
instruction range for chunk: 2684 2692
instruction range for chunk: 2692 2736
instruction range for chunk: 2752 2772
instruction range for chunk: 2772 2796
instruction range for chunk: 2796 2816
instruction range for chunk: 2816 2856
instruction range for chunk: 2872 2896
instruction range for chunk: 2896 2936
instruction range for chunk: 2952 2976
instruction range for chunk: 2976 2984
instruction range for chunk: 2984 2992
instruction range for chunk: 2992 3000
instruction range for chunk: 3000 3040
instruction range for chunk: 3056 3072
instruction range for chunk: 3072 3080
instruction range for chunk: 3080 3120
instruction range for chunk: 3136 3152
instruction range for chunk: 3152 3200
instruction range for chunk: 3216 3248
instruction range for chunk: 3248 3252
instruction range for chunk: 3252 3288
instruction range for chunk: 3304 3324
instruction range for chunk: 3324 3416
instruction range for chunk: 3432 3496
instruction range for chunk: 3512 3576
instruction range for chunk: 3592 3656
instruction range for chunk: 3672 3736
instruction range for chunk: 3752 3816
instruction range for chunk: 3832 3896
instruction range for chunk: 3912 3976
instruction range for chunk: 3992 4056
instruction range for chunk: 4072 4136
instruction range for chunk: 4152 4216
instruction range for chunk: 4232 4296
instruction range for chunk: 4312 4376
instruction range for chunk: 4392 4424
instruction range for chunk: 4424 4428
instruction range for chunk: 4428 4440
instruction range for chunk: 4440 4452
instruction range for chunk: 4452 4460
instruction range for chunk: 4460 4492
instruction range for chunk: 4492 4496
instruction range for chunk: 4496 4508
instruction range for chunk: 4508 4520
instruction range for chunk: 4520 4528
instruction range for chunk: 4528 4560
instruction range for chunk: 4560 4564
instruction range for chunk: 4564 4576
instruction range for chunk: 4576 4588
instruction range for chunk: 4588 4596
instruction range for chunk: 4596 4628
instruction range for chunk: 4628 4632
instruction range for chunk: 4632 4644
instruction range for chunk: 4644 4656
instruction range for chunk: 4656 4664
instruction range for chunk: 4664 4700
instruction range for chunk: 4700 4724
instruction range for chunk: 4724 4732
instruction range for chunk: 4732 4740
instruction range for chunk: 4740 4744
instruction range for chunk: 4744 4756
instruction range for chunk: 4756 4768
instruction range for chunk: 4768 4772
instruction range for chunk: 4772 4780
instruction range for chunk: 4780 4788
instruction range for chunk: 4788 4792
instruction range for chunk: 4792 4812
instruction range for chunk: 4812 4872
instruction range for chunk: 4888 4908
instruction range for chunk: 4908 4924
instruction range for chunk: 4924 4944
instruction range for chunk: 4944 4992
instruction range for chunk: 5008 5012
instruction range for chunk: 5012 5056
instruction range for chunk: 5072 5088
instruction range for chunk: 5088 5096
instruction range for chunk: 5096 5120
instruction range for chunk: 5120 5124
instruction range for chunk: 5124 5140
instruction range for chunk: 5140 5168
instruction range for chunk: 5184 5192
instruction range for chunk: 5192 5232
instruction range for chunk: 5248 5276
instruction range for chunk: 5276 5288
instruction range for chunk: 5288 5304
instruction range for chunk: 5304 5316
instruction range for chunk: 5320 5328
instruction range for chunk: 5328 5340
instruction range for chunk: 5344 5348
instruction range for chunk: 5348 5384
instruction range for chunk: 5400 5420
instruction range for chunk: 5420 5456
instruction range for chunk: 5472 5488
instruction range for chunk: 5488 5528
instruction range for chunk: 5544 5564
instruction range for chunk: 5564 5600
instruction range for chunk: 5616 5640
instruction range for chunk: 5640 5672
instruction range for chunk: 5688 5700
instruction range for chunk: 5700 5724
instruction range for chunk: 5724 5752
instruction range for chunk: 5768 5780
instruction range for chunk: 5780 5804
instruction range for chunk: 5804 5832
instruction range for chunk: 5848 5860
instruction range for chunk: 5860 5884
instruction range for chunk: 5884 5912
instruction range for chunk: 5928 5940
instruction range for chunk: 5940 5964
instruction range for chunk: 5964 5992
instruction range for chunk: 6008 6024
instruction range for chunk: 6024 6032
instruction range for chunk: 6032 6072
instruction range for chunk: 6088 6104
instruction range for chunk: 6104 6144
instruction range for chunk: 6160 6188
instruction range for chunk: 6188 6192
instruction range for chunk: 6192 6200
instruction range for chunk: 6200 6240
instruction range for chunk: 6256 6276
instruction range for chunk: 6276 6312
instruction range for chunk: 6328 6348
instruction range for chunk: 6348 6356
instruction range for chunk: 6356 6392
instruction range for chunk: 6408 6420
instruction range for chunk: 6420 6464
instruction range for chunk: 6480 6504
instruction range for chunk: 6504 6508
instruction range for chunk: 6508 6516
instruction range for chunk: 6516 6552
instruction range for chunk: 6568 6580
instruction range for chunk: 6580 6624
instruction range for chunk: 6640 6664
instruction range for chunk: 6664 6668
instruction range for chunk: 6668 6680
instruction range for chunk: 6684 6688
instruction range for chunk: 6688 6704
instruction range for chunk: 6704 6720
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r3 <- r3, 0x1\n")
(comment . ";;8 b 6692")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r4 <- 0x1")
(comment . ";;16 b 6668")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 36
i: 20
end-i: 36
i: 24
end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;20: r13 <- 0x9")
(comment . ";;24: r15 <- r0, 0x58\n")
(comment . ";;28: r1 <- r15")
(comment . ";;32 b 6632")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 76
i: 36
end-i: 76
i: 36
end-i: 76
i: 48
end-i: 76
i: 52
end-i: 76
i: 56
end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;48: r14 <- 0x0")
(comment . ";;52: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x0")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 88
i: 76
end-i: 88
i: 76
end-i: 88
i: 80
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
i:88 HIT CHUNK END
(comment . ";;76: r15 <- r4, r13")
(comment . ";;80: r15 <- 0x7")
(comment . ";;84 b 6420")
chunklet-i: 88; chunklet-start-i: 88; chunklet-end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
i:96 HIT CHUNK END
(comment . ";;88: r4 <- r13")
(comment . ";;92 b 352")
chunklet-i: 96; chunklet-start-i: 96; chunklet-end-i: 104
i: 96
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";;96: r3 <- r3, 0x1\n")
(comment . ";;100 b 276")
chunklet-i: 104; chunklet-start-i: 104; chunklet-end-i: 128
i: 104
end-i: 128
i: 104
end-i: 128
i: 116
end-i: 128
i: 120
end-i: 128
i: 124
end-i: 128
i: 128
end-i: 128
i:128 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;116: r15 <- r9, 0x5\n")
(comment . ";;120: r15 <- 0x1E")
(comment . ";;124 b 180")
chunklet-i: 128; chunklet-start-i: 128; chunklet-end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;128: r9 <- 0xF")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 144
i: 132
end-i: 144
i: 132
end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
i:144 HIT CHUNK END
(comment . ";;132: r15 <- r9, r7")
(comment . ";;136: r15 <- 0x7")
(comment . ";;140 b 140")
chunklet-i: 144; chunklet-start-i: 144; chunklet-end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;144: r15 <- r9, 0x1\n")
(comment . ";;148: r15 <- 0xF")
(comment . ";;152 b 128")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;156: r4 <- 0x7")
(comment . ";;160 b 120")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 180
i: 164
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";;164: r15 <- r15, r1")
(comment . ";;168: r15 <- r15, r8")
(comment . ";;172: r4 <- r15")
(comment . ";;176 b 104")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 200
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
i:200 HIT CHUNK END
(comment . ";;180: r14 <- 0xE")
(comment . ";;184: r15 <- r4, r9")
(comment . ";;188: r14 <- r9, r15")
(comment . ";;192: r4 <- 0x7")
(comment . ";;196 b 16")
chunklet-i: 200; chunklet-start-i: 200; chunklet-end-i: 208
i: 200
end-i: 208
i: 204
end-i: 208
i: 208
end-i: 208
i:208 HIT CHUNK END
(comment . ";;200: r15 <- r4, 0x8\n")
(comment . ";;204 b 8")
chunklet-i: 208; chunklet-start-i: 208; chunklet-end-i: 216
i: 208
end-i: 216
i: 212
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";;208: r4 <- 0xF")
(comment . ";;212 b -140")
chunklet-i: 216; chunklet-start-i: 216; chunklet-end-i: 256
i: 216
end-i: 256
i: 216
end-i: 256
i: 220
end-i: 256
i: 224
end-i: 256
i: 228
end-i: 256
i: 232
end-i: 256
i: 236
end-i: 256
i: 240
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
at header: 256
(comment . ";;216: r9 <- 0x8")
(comment . ";;220: r10 <- 0x4")
(comment . ";;224: r13 <- r1, 0x8\n")
(comment . ";;228: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;236: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;252: b r6")
chunklet-i: 256; chunklet-start-i: 272; chunklet-end-i: 284
i: 256
end-i: 284
at header: 256
i: 272
end-i: 284
i: 276
end-i: 284
i: 280
end-i: 284
i: 284
end-i: 284
i:284 HIT CHUNK END
(comment . ";;272: r1 <- r1, r0")
(comment . ";;276: r13 <- r1, 0x8\n")
(comment . ";;280 b -208")
chunklet-i: 284; chunklet-start-i: 284; chunklet-end-i: 308
i: 284
end-i: 308
i: 284
end-i: 308
i: 288
end-i: 308
i: 292
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;284: r10 <- 0x4")
(comment . ";;288: r11 <- 0xE")
(comment . ";; literal r6")
(comment . ";;304: b r6")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 344
i: 308
end-i: 344
i: 308
end-i: 344
i: 312
end-i: 344
i: 316
end-i: 344
i: 320
end-i: 344
i: 324
end-i: 344
i: 328
end-i: 344
i: 340
end-i: 344
i: 344
end-i: 344
at header: 344
(comment . ";;308: r13 <- r1, 0x8\n")
(comment . ";;312: r4 <- r1, 0x10\n")
(comment . ";;316: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;324: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;340: b r6")
chunklet-i: 344; chunklet-start-i: 360; chunklet-end-i: 380
i: 344
end-i: 380
at header: 344
i: 360
end-i: 380
i: 364
end-i: 380
i: 368
end-i: 380
i: 372
end-i: 380
i: 376
end-i: 380
i: 380
end-i: 380
i:380 HIT CHUNK END
(comment . ";;360: r1 <- r1, r8")
(comment . ";;364: r9 <- 0x4")
(comment . ";;368: r13 <- r1, 0x8\n")
(comment . ";;372: r4 <- r1, 0x10\n")
(comment . ";;376 b -248")
chunklet-i: 380; chunklet-start-i: 380; chunklet-end-i: 416
i: 380
end-i: 416
i: 380
end-i: 416
i: 384
end-i: 416
i: 388
end-i: 416
i: 392
end-i: 416
i: 396
end-i: 416
i: 400
end-i: 416
i: 412
end-i: 416
i: 416
end-i: 416
at header: 416
(comment . ";;380: r13 <- r1, 0x8\n")
(comment . ";;384: r4 <- r1, 0x10\n")
(comment . ";;388: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;396: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;412: b r6")
chunklet-i: 416; chunklet-start-i: 432; chunklet-end-i: 448
i: 416
end-i: 448
at header: 416
i: 432
end-i: 448
i: 436
end-i: 448
i: 440
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
i:448 HIT CHUNK END
(comment . ";;432: r1 <- r1, r8")
(comment . ";;436: r13 <- r1, 0x8\n")
(comment . ";;440: r4 <- r1, 0x10\n")
(comment . ";;444 b -344")
chunklet-i: 448; chunklet-start-i: 448; chunklet-end-i: 452
i: 448
end-i: 452
i: 448
end-i: 452
i: 452
end-i: 452
i:452 HIT CHUNK END
(comment . ";;448: r4 <- 0x8")
chunklet-i: 452; chunklet-start-i: 452; chunklet-end-i: 460
i: 452
end-i: 460
i: 452
end-i: 460
i: 456
end-i: 460
i: 460
end-i: 460
i:460 HIT CHUNK END
(comment . ";;452: r4 <- 0x7")
(comment . ";;456 b 5888")
chunklet-i: 460; chunklet-start-i: 460; chunklet-end-i: 468
i: 460
end-i: 468
i: 464
end-i: 468
i: 468
end-i: 468
i:468 HIT CHUNK END
(comment . ";;460: r4 <- 0x28")
(comment . ";;464 b 1972")
chunklet-i: 468; chunklet-start-i: 468; chunklet-end-i: 476
i: 468
end-i: 476
i: 468
end-i: 476
i: 472
end-i: 476
i: 476
end-i: 476
i:476 HIT CHUNK END
(comment . ";;468: r3 <- r3, 0x1\n")
(comment . ";;472 b 1896")
chunklet-i: 476; chunklet-start-i: 476; chunklet-end-i: 480
i: 476
end-i: 480
i: 476
end-i: 480
i: 480
end-i: 480
i:480 HIT CHUNK END
(comment . ";;476: r15 <- 0x8")
chunklet-i: 480; chunklet-start-i: 480; chunklet-end-i: 488
i: 480
end-i: 488
i: 480
end-i: 488
i: 484
end-i: 488
i: 488
end-i: 488
i:488 HIT CHUNK END
(comment . ";;480: r15 <- 0x7")
(comment . ";;484 b 1704")
chunklet-i: 488; chunklet-start-i: 488; chunklet-end-i: 496
i: 488
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";;488: r15 <- 0x28")
(comment . ";;492 b 1600")
chunklet-i: 496; chunklet-start-i: 496; chunklet-end-i: 504
i: 496
end-i: 504
i: 496
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
i:504 HIT CHUNK END
(comment . ";;496: r3 <- r3, 0x1\n")
(comment . ";;500 b 1512")
chunklet-i: 504; chunklet-start-i: 504; chunklet-end-i: 508
i: 504
end-i: 508
i: 504
end-i: 508
i: 508
end-i: 508
i:508 HIT CHUNK END
(comment . ";;504: r14 <- 0x8")
chunklet-i: 508; chunklet-start-i: 508; chunklet-end-i: 516
i: 508
end-i: 516
i: 508
end-i: 516
i: 512
end-i: 516
i: 516
end-i: 516
i:516 HIT CHUNK END
(comment . ";;508: r14 <- 0x7")
(comment . ";;512 b 1304")
chunklet-i: 516; chunklet-start-i: 516; chunklet-end-i: 524
i: 516
end-i: 524
i: 520
end-i: 524
i: 524
end-i: 524
i:524 HIT CHUNK END
(comment . ";;516: r14 <- 0x28")
(comment . ";;520 b 1192")
chunklet-i: 524; chunklet-start-i: 524; chunklet-end-i: 532
i: 524
end-i: 532
i: 524
end-i: 532
i: 528
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
(comment . ";;524: r3 <- r3, 0x1\n")
(comment . ";;528 b 1096")
chunklet-i: 532; chunklet-start-i: 532; chunklet-end-i: 556
i: 532
end-i: 556
i: 532
end-i: 556
i: 544
end-i: 556
i: 548
end-i: 556
i: 552
end-i: 556
i: 556
end-i: 556
i:556 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;544: r11 <- r9, 0x5\n")
(comment . ";;548: r11 <- 0x1E")
(comment . ";;552 b 984")
chunklet-i: 556; chunklet-start-i: 556; chunklet-end-i: 580
i: 556
end-i: 580
i: 556
end-i: 580
i: 568
end-i: 580
i: 572
end-i: 580
i: 576
end-i: 580
i: 580
end-i: 580
i:580 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;568: r12 <- r9, 0x5\n")
(comment . ";;572: r12 <- 0x1E")
(comment . ";;576 b 860")
chunklet-i: 580; chunklet-start-i: 580; chunklet-end-i: 604
i: 580
end-i: 604
i: 580
end-i: 604
i: 592
end-i: 604
i: 596
end-i: 604
i: 600
end-i: 604
i: 604
end-i: 604
i:604 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;592: r10 <- r9, 0x5\n")
(comment . ";;596: r10 <- 0x1E")
(comment . ";;600 b 728")
chunklet-i: 604; chunklet-start-i: 604; chunklet-end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
i:608 HIT CHUNK END
(comment . ";;604: r9 <- 0xA")
chunklet-i: 608; chunklet-start-i: 608; chunklet-end-i: 620
i: 608
end-i: 620
i: 608
end-i: 620
i: 612
end-i: 620
i: 616
end-i: 620
i: 620
end-i: 620
i:620 HIT CHUNK END
(comment . ";;608: r10 <- r9, r14")
(comment . ";;612: r10 <- 0x7")
(comment . ";;616 b 604")
chunklet-i: 620; chunklet-start-i: 620; chunklet-end-i: 632
i: 620
end-i: 632
i: 624
end-i: 632
i: 628
end-i: 632
i: 632
end-i: 632
i:632 HIT CHUNK END
(comment . ";;620: r10 <- r14, r3")
(comment . ";;624: r10 <- r9, r10")
(comment . ";;628 b 592")
chunklet-i: 632; chunklet-start-i: 632; chunklet-end-i: 644
i: 632
end-i: 644
i: 632
end-i: 644
i: 636
end-i: 644
i: 640
end-i: 644
i: 644
end-i: 644
i:644 HIT CHUNK END
(comment . ";;632: r9 <- r15, r10")
(comment . ";;636: r9 <- 0x7")
(comment . ";;640 b 468")
chunklet-i: 644; chunklet-start-i: 644; chunklet-end-i: 652
i: 644
end-i: 652
i: 648
end-i: 652
i: 652
end-i: 652
i:652 HIT CHUNK END
(comment . ";;644: r9 <- r15, r10")
(comment . ";;648 b 460")
chunklet-i: 652; chunklet-start-i: 652; chunklet-end-i: 656
i: 652
end-i: 656
i: 656
end-i: 656
i:656 HIT CHUNK END
(comment . ";;652: r10 <- 0x9")
chunklet-i: 656; chunklet-start-i: 656; chunklet-end-i: 668
i: 656
end-i: 668
i: 656
end-i: 668
i: 660
end-i: 668
i: 664
end-i: 668
i: 668
end-i: 668
i:668 HIT CHUNK END
(comment . ";;656: r9 <- r12, r10")
(comment . ";;660: r9 <- 0x7")
(comment . ";;664 b 344")
chunklet-i: 668; chunklet-start-i: 668; chunklet-end-i: 680
i: 668
end-i: 680
i: 672
end-i: 680
i: 676
end-i: 680
i: 680
end-i: 680
i:680 HIT CHUNK END
(comment . ";;668: r9 <- r10, r3")
(comment . ";;672: r9 <- r12, r9")
(comment . ";;676 b 332")
chunklet-i: 680; chunklet-start-i: 680; chunklet-end-i: 684
i: 680
end-i: 684
i: 684
end-i: 684
i:684 HIT CHUNK END
(comment . ";;680: r10 <- 0x9")
chunklet-i: 684; chunklet-start-i: 684; chunklet-end-i: 696
i: 684
end-i: 696
i: 684
end-i: 696
i: 688
end-i: 696
i: 692
end-i: 696
i: 696
end-i: 696
i:696 HIT CHUNK END
(comment . ";;684: r12 <- r4, r10")
(comment . ";;688: r12 <- 0x7")
(comment . ";;692 b 212")
chunklet-i: 696; chunklet-start-i: 696; chunklet-end-i: 704
i: 696
end-i: 704
i: 700
end-i: 704
i: 704
end-i: 704
i:704 HIT CHUNK END
(comment . ";;696: r12 <- r4, r10")
(comment . ";;700 b 204")
chunklet-i: 704; chunklet-start-i: 704; chunklet-end-i: 708
i: 704
end-i: 708
i: 708
end-i: 708
i:708 HIT CHUNK END
(comment . ";;704: r10 <- 0xC")
chunklet-i: 708; chunklet-start-i: 708; chunklet-end-i: 720
i: 708
end-i: 720
i: 708
end-i: 720
i: 712
end-i: 720
i: 716
end-i: 720
i: 720
end-i: 720
i:720 HIT CHUNK END
(comment . ";;708: r12 <- r11, r7")
(comment . ";;712: r12 <- 0x7")
(comment . ";;716 b 164")
chunklet-i: 720; chunklet-start-i: 720; chunklet-end-i: 732
i: 720
end-i: 732
i: 724
end-i: 732
i: 728
end-i: 732
i: 732
end-i: 732
i:732 HIT CHUNK END
(comment . ";;720: r12 <- r11, 0x1\n")
(comment . ";;724: r12 <- 0xF")
(comment . ";;728 b 152")
chunklet-i: 732; chunklet-start-i: 732; chunklet-end-i: 740
i: 732
end-i: 740
i: 736
end-i: 740
i: 740
end-i: 740
i:740 HIT CHUNK END
(comment . ";;732: r10 <- 0x7")
(comment . ";;736 b 144")
chunklet-i: 740; chunklet-start-i: 740; chunklet-end-i: 756
i: 740
end-i: 756
i: 744
end-i: 756
i: 748
end-i: 756
i: 752
end-i: 756
i: 756
end-i: 756
i:756 HIT CHUNK END
(comment . ";;740: r12 <- r12, r1")
(comment . ";;744: r12 <- r12, r8")
(comment . ";;748: r10 <- r12")
(comment . ";;752 b 128")
chunklet-i: 756; chunklet-start-i: 756; chunklet-end-i: 776
i: 756
end-i: 776
i: 760
end-i: 776
i: 764
end-i: 776
i: 768
end-i: 776
i: 772
end-i: 776
i: 776
end-i: 776
i:776 HIT CHUNK END
(comment . ";;756: r9 <- 0x6")
(comment . ";;760: r12 <- r10, r9")
(comment . ";;764: r9 <- r11, r12")
(comment . ";;768: r14 <- 0x7")
(comment . ";;772 b 16")
chunklet-i: 776; chunklet-start-i: 776; chunklet-end-i: 784
i: 776
end-i: 784
i: 780
end-i: 784
i: 784
end-i: 784
i:784 HIT CHUNK END
(comment . ";;776: r12 <- r14, 0x8\n")
(comment . ";;780 b 8")
chunklet-i: 784; chunklet-start-i: 784; chunklet-end-i: 792
i: 784
end-i: 792
i: 788
end-i: 792
i: 792
end-i: 792
i:792 HIT CHUNK END
(comment . ";;784: r14 <- 0xC")
(comment . ";;788 b -284")
chunklet-i: 792; chunklet-start-i: 792; chunklet-end-i: 840
i: 792
end-i: 840
i: 792
end-i: 840
i: 796
end-i: 840
i: 800
end-i: 840
i: 804
end-i: 840
i: 808
end-i: 840
i: 812
end-i: 840
i: 816
end-i: 840
i: 820
end-i: 840
i: 824
end-i: 840
i: 836
end-i: 840
i: 840
end-i: 840
at header: 840
(comment . ";;792: r9 <- 0x8")
(comment . ";;796: r10 <- 0xE")
(comment . ";;800: r13 <- r1, 0x8\n")
(comment . ";;804: r4 <- r1, 0x10\n")
(comment . ";;808: r15 <- r1, 0x18\n")
(comment . ";;812: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;820: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;836: b r6")
chunklet-i: 840; chunklet-start-i: 856; chunklet-end-i: 884
i: 840
end-i: 884
at header: 840
i: 856
end-i: 884
i: 860
end-i: 884
i: 864
end-i: 884
i: 868
end-i: 884
i: 872
end-i: 884
i: 876
end-i: 884
i: 880
end-i: 884
i: 884
end-i: 884
i:884 HIT CHUNK END
(comment . ";;856: r1 <- r1, r0")
(comment . ";;860: r14 <- 0x4")
(comment . ";;864: r13 <- r1, 0x8\n")
(comment . ";;868: r4 <- r1, 0x10\n")
(comment . ";;872: r15 <- r1, 0x18\n")
(comment . ";;880 b -376")
chunklet-i: 884; chunklet-start-i: 884; chunklet-end-i: 908
i: 884
end-i: 908
i: 884
end-i: 908
i: 888
end-i: 908
i: 892
end-i: 908
i: 904
end-i: 908
i: 908
end-i: 908
i:908 HIT CHUNK END
(comment . ";;884: r9 <- 0xB")
(comment . ";;888: r11 <- 0x6")
(comment . ";; literal r6")
(comment . ";;904: b r6")
chunklet-i: 908; chunklet-start-i: 908; chunklet-end-i: 960
i: 908
end-i: 960
i: 908
end-i: 960
i: 912
end-i: 960
i: 916
end-i: 960
i: 920
end-i: 960
i: 924
end-i: 960
i: 928
end-i: 960
i: 932
end-i: 960
i: 936
end-i: 960
i: 940
end-i: 960
i: 944
end-i: 960
i: 956
end-i: 960
i: 960
end-i: 960
at header: 960
(comment . ";;908: r9 <- 0x4")
(comment . ";;912: r13 <- r1, 0x8\n")
(comment . ";;916: r4 <- r1, 0x10\n")
(comment . ";;920: r15 <- r1, 0x18\n")
(comment . ";;924: r14 <- r1, 0x20\n")
(comment . ";;928: r11 <- r1, 0x28\n")
(comment . ";;932: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;940: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;956: b r6")
chunklet-i: 960; chunklet-start-i: 976; chunklet-end-i: 1012
i: 960
end-i: 1012
at header: 960
i: 976
end-i: 1012
i: 980
end-i: 1012
i: 984
end-i: 1012
i: 988
end-i: 1012
i: 992
end-i: 1012
i: 996
end-i: 1012
i: 1000
end-i: 1012
i: 1004
end-i: 1012
i: 1008
end-i: 1012
i: 1012
end-i: 1012
i:1012 HIT CHUNK END
(comment . ";;976: r1 <- r1, r0")
(comment . ";;980: r10 <- 0x4")
(comment . ";;984: r13 <- r1, 0x8\n")
(comment . ";;988: r4 <- r1, 0x10\n")
(comment . ";;992: r15 <- r1, 0x18\n")
(comment . ";;996: r14 <- r1, 0x20\n")
(comment . ";;1000: r11 <- r1, 0x28\n")
(comment . ";;1008 b -304")
chunklet-i: 1012; chunklet-start-i: 1012; chunklet-end-i: 1064
i: 1012
end-i: 1064
i: 1012
end-i: 1064
i: 1016
end-i: 1064
i: 1020
end-i: 1064
i: 1024
end-i: 1064
i: 1028
end-i: 1064
i: 1032
end-i: 1064
i: 1036
end-i: 1064
i: 1040
end-i: 1064
i: 1044
end-i: 1064
i: 1048
end-i: 1064
i: 1060
end-i: 1064
i: 1064
end-i: 1064
at header: 1064
(comment . ";;1012: r9 <- 0xC")
(comment . ";;1016: r13 <- r1, 0x8\n")
(comment . ";;1020: r4 <- r1, 0x10\n")
(comment . ";;1024: r15 <- r1, 0x18\n")
(comment . ";;1028: r14 <- r1, 0x20\n")
(comment . ";;1032: r11 <- r1, 0x28\n")
(comment . ";;1036: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1044: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1060: b r6")
chunklet-i: 1064; chunklet-start-i: 1080; chunklet-end-i: 1112
i: 1064
end-i: 1112
at header: 1064
i: 1080
end-i: 1112
i: 1084
end-i: 1112
i: 1088
end-i: 1112
i: 1092
end-i: 1112
i: 1096
end-i: 1112
i: 1100
end-i: 1112
i: 1104
end-i: 1112
i: 1108
end-i: 1112
i: 1112
end-i: 1112
i:1112 HIT CHUNK END
(comment . ";;1080: r1 <- r1, r0")
(comment . ";;1084: r10 <- 0x4")
(comment . ";;1088: r13 <- r1, 0x8\n")
(comment . ";;1092: r4 <- r1, 0x10\n")
(comment . ";;1096: r15 <- r1, 0x18\n")
(comment . ";;1100: r14 <- r1, 0x20\n")
(comment . ";;1104: r11 <- r1, 0x28\n")
(comment . ";;1108 b -428")
chunklet-i: 1112; chunklet-start-i: 1112; chunklet-end-i: 1168
i: 1112
end-i: 1168
i: 1112
end-i: 1168
i: 1116
end-i: 1168
i: 1120
end-i: 1168
i: 1124
end-i: 1168
i: 1128
end-i: 1168
i: 1132
end-i: 1168
i: 1136
end-i: 1168
i: 1140
end-i: 1168
i: 1144
end-i: 1168
i: 1148
end-i: 1168
i: 1152
end-i: 1168
i: 1164
end-i: 1168
i: 1168
end-i: 1168
at header: 1168
(comment . ";;1112: r9 <- 0xF")
(comment . ";;1116: r13 <- r1, 0x8\n")
(comment . ";;1120: r4 <- r1, 0x10\n")
(comment . ";;1124: r15 <- r1, 0x18\n")
(comment . ";;1128: r14 <- r1, 0x20\n")
(comment . ";;1132: r11 <- r1, 0x28\n")
(comment . ";;1136: r12 <- r1, 0x30\n")
(comment . ";;1140: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1148: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1164: b r6")
chunklet-i: 1168; chunklet-start-i: 1184; chunklet-end-i: 1224
i: 1168
end-i: 1224
at header: 1168
i: 1184
end-i: 1224
i: 1188
end-i: 1224
i: 1192
end-i: 1224
i: 1196
end-i: 1224
i: 1200
end-i: 1224
i: 1204
end-i: 1224
i: 1208
end-i: 1224
i: 1212
end-i: 1224
i: 1216
end-i: 1224
i: 1220
end-i: 1224
i: 1224
end-i: 1224
i:1224 HIT CHUNK END
(comment . ";;1184: r1 <- r1, r8")
(comment . ";;1188: r10 <- 0x4")
(comment . ";;1192: r13 <- r1, 0x8\n")
(comment . ";;1196: r4 <- r1, 0x10\n")
(comment . ";;1200: r15 <- r1, 0x18\n")
(comment . ";;1204: r14 <- r1, 0x20\n")
(comment . ";;1208: r11 <- r1, 0x28\n")
(comment . ";;1212: r12 <- r1, 0x30\n")
(comment . ";;1220 b -568")
chunklet-i: 1224; chunklet-start-i: 1224; chunklet-end-i: 1280
i: 1224
end-i: 1280
i: 1224
end-i: 1280
i: 1228
end-i: 1280
i: 1232
end-i: 1280
i: 1236
end-i: 1280
i: 1240
end-i: 1280
i: 1244
end-i: 1280
i: 1248
end-i: 1280
i: 1252
end-i: 1280
i: 1256
end-i: 1280
i: 1260
end-i: 1280
i: 1264
end-i: 1280
i: 1276
end-i: 1280
i: 1280
end-i: 1280
at header: 1280
(comment . ";;1224: r10 <- 0xE")
(comment . ";;1228: r13 <- r1, 0x8\n")
(comment . ";;1232: r4 <- r1, 0x10\n")
(comment . ";;1236: r15 <- r1, 0x18\n")
(comment . ";;1240: r14 <- r1, 0x20\n")
(comment . ";;1244: r11 <- r1, 0x28\n")
(comment . ";;1248: r12 <- r1, 0x30\n")
(comment . ";;1252: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1260: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1276: b r6")
chunklet-i: 1280; chunklet-start-i: 1296; chunklet-end-i: 1332
i: 1280
end-i: 1332
at header: 1280
i: 1296
end-i: 1332
i: 1300
end-i: 1332
i: 1304
end-i: 1332
i: 1308
end-i: 1332
i: 1312
end-i: 1332
i: 1316
end-i: 1332
i: 1320
end-i: 1332
i: 1324
end-i: 1332
i: 1328
end-i: 1332
i: 1332
end-i: 1332
i:1332 HIT CHUNK END
(comment . ";;1296: r1 <- r1, r8")
(comment . ";;1300: r10 <- 0x4")
(comment . ";;1304: r13 <- r1, 0x8\n")
(comment . ";;1308: r4 <- r1, 0x10\n")
(comment . ";;1312: r15 <- r1, 0x18\n")
(comment . ";;1316: r14 <- r1, 0x20\n")
(comment . ";;1320: r11 <- r1, 0x28\n")
(comment . ";;1324: r12 <- r1, 0x30\n")
(comment . ";;1328 b -700")
chunklet-i: 1332; chunklet-start-i: 1332; chunklet-end-i: 1384
i: 1332
end-i: 1384
i: 1332
end-i: 1384
i: 1336
end-i: 1384
i: 1340
end-i: 1384
i: 1344
end-i: 1384
i: 1348
end-i: 1384
i: 1352
end-i: 1384
i: 1356
end-i: 1384
i: 1360
end-i: 1384
i: 1364
end-i: 1384
i: 1368
end-i: 1384
i: 1380
end-i: 1384
i: 1384
end-i: 1384
at header: 1384
(comment . ";;1332: r13 <- r1, 0x8\n")
(comment . ";;1336: r4 <- r1, 0x10\n")
(comment . ";;1340: r15 <- r1, 0x18\n")
(comment . ";;1344: r14 <- r1, 0x20\n")
(comment . ";;1348: r11 <- r1, 0x28\n")
(comment . ";;1352: r12 <- r1, 0x30\n")
(comment . ";;1356: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1364: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1380: b r6")
chunklet-i: 1384; chunklet-start-i: 1400; chunklet-end-i: 1440
i: 1384
end-i: 1440
at header: 1384
i: 1400
end-i: 1440
i: 1404
end-i: 1440
i: 1408
end-i: 1440
i: 1412
end-i: 1440
i: 1416
end-i: 1440
i: 1420
end-i: 1440
i: 1424
end-i: 1440
i: 1428
end-i: 1440
i: 1432
end-i: 1440
i: 1436
end-i: 1440
i: 1440
end-i: 1440
i:1440 HIT CHUNK END
(comment . ";;1400: r1 <- r1, r8")
(comment . ";;1404: r9 <- 0x4")
(comment . ";;1408: r13 <- r1, 0x8\n")
(comment . ";;1412: r4 <- r1, 0x10\n")
(comment . ";;1416: r15 <- r1, 0x18\n")
(comment . ";;1420: r14 <- r1, 0x20\n")
(comment . ";;1424: r11 <- r1, 0x28\n")
(comment . ";;1428: r12 <- r1, 0x30\n")
(comment . ";;1436 b -832")
chunklet-i: 1440; chunklet-start-i: 1440; chunklet-end-i: 1488
i: 1440
end-i: 1488
i: 1440
end-i: 1488
i: 1444
end-i: 1488
i: 1448
end-i: 1488
i: 1452
end-i: 1488
i: 1456
end-i: 1488
i: 1460
end-i: 1488
i: 1464
end-i: 1488
i: 1468
end-i: 1488
i: 1472
end-i: 1488
i: 1484
end-i: 1488
i: 1488
end-i: 1488
at header: 1488
(comment . ";;1440: r13 <- r1, 0x8\n")
(comment . ";;1444: r4 <- r1, 0x10\n")
(comment . ";;1448: r15 <- r1, 0x18\n")
(comment . ";;1452: r14 <- r1, 0x20\n")
(comment . ";;1456: r11 <- r1, 0x28\n")
(comment . ";;1460: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1468: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1484: b r6")
chunklet-i: 1488; chunklet-start-i: 1504; chunklet-end-i: 1540
i: 1488
end-i: 1540
at header: 1488
i: 1504
end-i: 1540
i: 1508
end-i: 1540
i: 1512
end-i: 1540
i: 1516
end-i: 1540
i: 1520
end-i: 1540
i: 1524
end-i: 1540
i: 1528
end-i: 1540
i: 1532
end-i: 1540
i: 1536
end-i: 1540
i: 1540
end-i: 1540
i:1540 HIT CHUNK END
(comment . ";;1504: r1 <- r1, r0")
(comment . ";;1508: r12 <- 0x4")
(comment . ";;1512: r13 <- r1, 0x8\n")
(comment . ";;1516: r4 <- r1, 0x10\n")
(comment . ";;1520: r15 <- r1, 0x18\n")
(comment . ";;1524: r14 <- r1, 0x20\n")
(comment . ";;1528: r11 <- r1, 0x28\n")
(comment . ";;1536 b -960")
chunklet-i: 1540; chunklet-start-i: 1540; chunklet-end-i: 1584
i: 1540
end-i: 1584
i: 1540
end-i: 1584
i: 1544
end-i: 1584
i: 1548
end-i: 1584
i: 1552
end-i: 1584
i: 1556
end-i: 1584
i: 1560
end-i: 1584
i: 1564
end-i: 1584
i: 1568
end-i: 1584
i: 1580
end-i: 1584
i: 1584
end-i: 1584
at header: 1584
(comment . ";;1540: r13 <- r1, 0x8\n")
(comment . ";;1544: r4 <- r1, 0x10\n")
(comment . ";;1548: r15 <- r1, 0x18\n")
(comment . ";;1552: r14 <- r1, 0x20\n")
(comment . ";;1556: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1564: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1580: b r6")
chunklet-i: 1584; chunklet-start-i: 1600; chunklet-end-i: 1628
i: 1584
end-i: 1628
at header: 1584
i: 1600
end-i: 1628
i: 1604
end-i: 1628
i: 1608
end-i: 1628
i: 1612
end-i: 1628
i: 1616
end-i: 1628
i: 1620
end-i: 1628
i: 1624
end-i: 1628
i: 1628
end-i: 1628
i:1628 HIT CHUNK END
(comment . ";;1600: r1 <- r1, r8")
(comment . ";;1604: r11 <- 0x4")
(comment . ";;1608: r13 <- r1, 0x8\n")
(comment . ";;1612: r4 <- r1, 0x10\n")
(comment . ";;1616: r15 <- r1, 0x18\n")
(comment . ";;1620: r14 <- r1, 0x20\n")
(comment . ";;1624 b -1072")
chunklet-i: 1628; chunklet-start-i: 1628; chunklet-end-i: 1672
i: 1628
end-i: 1672
i: 1628
end-i: 1672
i: 1632
end-i: 1672
i: 1636
end-i: 1672
i: 1640
end-i: 1672
i: 1644
end-i: 1672
i: 1648
end-i: 1672
i: 1652
end-i: 1672
i: 1656
end-i: 1672
i: 1668
end-i: 1672
i: 1672
end-i: 1672
at header: 1672
(comment . ";;1628: r13 <- r1, 0x8\n")
(comment . ";;1632: r4 <- r1, 0x10\n")
(comment . ";;1636: r15 <- r1, 0x18\n")
(comment . ";;1640: r14 <- r1, 0x20\n")
(comment . ";;1644: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1652: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1668: b r6")
chunklet-i: 1672; chunklet-start-i: 1688; chunklet-end-i: 1716
i: 1672
end-i: 1716
at header: 1672
i: 1688
end-i: 1716
i: 1692
end-i: 1716
i: 1696
end-i: 1716
i: 1700
end-i: 1716
i: 1704
end-i: 1716
i: 1708
end-i: 1716
i: 1712
end-i: 1716
i: 1716
end-i: 1716
i:1716 HIT CHUNK END
(comment . ";;1692: r1 <- r1, r8")
(comment . ";;1696: r13 <- r1, 0x8\n")
(comment . ";;1700: r4 <- r1, 0x10\n")
(comment . ";;1704: r15 <- r1, 0x18\n")
(comment . ";;1708: r14 <- r1, 0x20\n")
(comment . ";;1712 b -1184")
chunklet-i: 1716; chunklet-start-i: 1716; chunklet-end-i: 1724
i: 1716
end-i: 1724
i: 1716
end-i: 1724
i: 1720
end-i: 1724
i: 1724
end-i: 1724
i:1724 HIT CHUNK END
(comment . ";;1716: r15 <- 0x7")
(comment . ";;1720 b 16")
chunklet-i: 1724; chunklet-start-i: 1724; chunklet-end-i: 1732
i: 1724
end-i: 1732
i: 1728
end-i: 1732
i: 1732
end-i: 1732
i:1732 HIT CHUNK END
(comment . ";;1724: r14 <- r15, 0x8\n")
(comment . ";;1728 b 8")
chunklet-i: 1732; chunklet-start-i: 1732; chunklet-end-i: 1740
i: 1732
end-i: 1740
i: 1736
end-i: 1740
i: 1740
end-i: 1740
i:1740 HIT CHUNK END
(comment . ";;1732: r15 <- 0xE")
(comment . ";;1736 b -1260")
chunklet-i: 1740; chunklet-start-i: 1740; chunklet-end-i: 1784
i: 1740
end-i: 1784
i: 1740
end-i: 1784
i: 1744
end-i: 1784
i: 1748
end-i: 1784
i: 1752
end-i: 1784
i: 1756
end-i: 1784
i: 1760
end-i: 1784
i: 1764
end-i: 1784
i: 1768
end-i: 1784
i: 1780
end-i: 1784
i: 1784
end-i: 1784
at header: 1784
(comment . ";;1740: r9 <- 0x8")
(comment . ";;1744: r10 <- 0xF")
(comment . ";;1748: r13 <- r1, 0x8\n")
(comment . ";;1752: r4 <- r1, 0x10\n")
(comment . ";;1756: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1764: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1780: b r6")
chunklet-i: 1784; chunklet-start-i: 1800; chunklet-end-i: 1820
i: 1784
end-i: 1820
at header: 1784
i: 1800
end-i: 1820
i: 1804
end-i: 1820
i: 1808
end-i: 1820
i: 1812
end-i: 1820
i: 1816
end-i: 1820
i: 1820
end-i: 1820
i:1820 HIT CHUNK END
(comment . ";;1800: r1 <- r1, r8")
(comment . ";;1804: r15 <- 0x4")
(comment . ";;1808: r13 <- r1, 0x8\n")
(comment . ";;1812: r4 <- r1, 0x10\n")
(comment . ";;1816 b -1340")
chunklet-i: 1820; chunklet-start-i: 1820; chunklet-end-i: 1828
i: 1820
end-i: 1828
i: 1820
end-i: 1828
i: 1824
end-i: 1828
i: 1828
end-i: 1828
i:1828 HIT CHUNK END
(comment . ";;1820: r3 <- r3, 0x1\n")
(comment . ";;1824 b 80")
chunklet-i: 1828; chunklet-start-i: 1828; chunklet-end-i: 1872
i: 1828
end-i: 1872
i: 1832
end-i: 1872
i: 1836
end-i: 1872
i: 1840
end-i: 1872
i: 1844
end-i: 1872
i: 1848
end-i: 1872
i: 1852
end-i: 1872
i: 1856
end-i: 1872
i: 1868
end-i: 1872
i: 1872
end-i: 1872
at header: 1872
(comment . ";;1828: r13 <- r1, 0x8\n")
(comment . ";;1832: r4 <- r1, 0x10\n")
(comment . ";;1836: r15 <- r1, 0x18\n")
(comment . ";;1840: r14 <- r1, 0x20\n")
(comment . ";;1844: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1852: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1868: b r6")
chunklet-i: 1872; chunklet-start-i: 1888; chunklet-end-i: 1908
i: 1872
end-i: 1908
at header: 1872
i: 1888
end-i: 1908
i: 1892
end-i: 1908
i: 1896
end-i: 1908
i: 1900
end-i: 1908
i: 1904
end-i: 1908
i: 1908
end-i: 1908
i:1908 HIT CHUNK END
(comment . ";;1888: r1 <- r1, r8")
(comment . ";;1892: r13 <- r1, 0x8\n")
(comment . ";;1896: r4 <- r1, 0x10\n")
(comment . ";;1900: r15 <- r1, 0x18\n")
(comment . ";;1904: r14 <- r1, 0x20\n")
chunklet-i: 1908; chunklet-start-i: 1908; chunklet-end-i: 1960
i: 1908
end-i: 1960
i: 1908
end-i: 1960
i: 1912
end-i: 1960
i: 1916
end-i: 1960
i: 1920
end-i: 1960
i: 1924
end-i: 1960
i: 1928
end-i: 1960
i: 1932
end-i: 1960
i: 1936
end-i: 1960
i: 1940
end-i: 1960
i: 1944
end-i: 1960
i: 1956
end-i: 1960
i: 1960
end-i: 1960
at header: 1960
(comment . ";;1908: r9 <- 0xE")
(comment . ";;1912: r10 <- 0x28")
(comment . ";;1916: r13 <- r1, 0x8\n")
(comment . ";;1920: r4 <- r1, 0x10\n")
(comment . ";;1924: r15 <- r1, 0x18\n")
(comment . ";;1928: r14 <- r1, 0x20\n")
(comment . ";;1932: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1940: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1956: b r6")
chunklet-i: 1960; chunklet-start-i: 1976; chunklet-end-i: 2012
i: 1960
end-i: 2012
at header: 1960
i: 1976
end-i: 2012
i: 1980
end-i: 2012
i: 1984
end-i: 2012
i: 1988
end-i: 2012
i: 1992
end-i: 2012
i: 1996
end-i: 2012
i: 2000
end-i: 2012
i: 2004
end-i: 2012
i: 2008
end-i: 2012
i: 2012
end-i: 2012
i:2012 HIT CHUNK END
(comment . ";;1976: r1 <- r1, r8")
(comment . ";;1980: r12 <- 0x4")
(comment . ";;1984: r13 <- r1, 0x8\n")
(comment . ";;1988: r4 <- r1, 0x10\n")
(comment . ";;1992: r15 <- r1, 0x18\n")
(comment . ";;1996: r14 <- r1, 0x20\n")
(comment . ";;2000: r12 <- 0x6")
(comment . ";;2008 b -1488")
chunklet-i: 2012; chunklet-start-i: 2012; chunklet-end-i: 2016
i: 2012
end-i: 2016
i: 2016
end-i: 2016
i:2016 HIT CHUNK END
(comment . ";;2012 b -300")
chunklet-i: 2016; chunklet-start-i: 2016; chunklet-end-i: 2056
i: 2016
end-i: 2056
i: 2016
end-i: 2056
i: 2020
end-i: 2056
i: 2024
end-i: 2056
i: 2028
end-i: 2056
i: 2032
end-i: 2056
i: 2036
end-i: 2056
i: 2040
end-i: 2056
i: 2052
end-i: 2056
i: 2056
end-i: 2056
at header: 2056
(comment . ";;2016: r13 <- r1, 0x8\n")
(comment . ";;2020: r4 <- r1, 0x10\n")
(comment . ";;2024: r15 <- r1, 0x18\n")
(comment . ";;2028: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2036: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2052: b r6")
chunklet-i: 2056; chunklet-start-i: 2072; chunklet-end-i: 2096
i: 2056
end-i: 2096
at header: 2056
i: 2072
end-i: 2096
i: 2076
end-i: 2096
i: 2080
end-i: 2096
i: 2084
end-i: 2096
i: 2088
end-i: 2096
i: 2092
end-i: 2096
i: 2096
end-i: 2096
i:2096 HIT CHUNK END
(comment . ";;2076: r1 <- r1, r0")
(comment . ";;2080: r13 <- r1, 0x8\n")
(comment . ";;2084: r4 <- r1, 0x10\n")
(comment . ";;2088: r15 <- r1, 0x18\n")
(comment . ";;2092 b -1592")
chunklet-i: 2096; chunklet-start-i: 2096; chunklet-end-i: 2104
i: 2096
end-i: 2104
i: 2096
end-i: 2104
i: 2100
end-i: 2104
i: 2104
end-i: 2104
i:2104 HIT CHUNK END
(comment . ";;2096: r4 <- 0x7")
(comment . ";;2100 b 16")
chunklet-i: 2104; chunklet-start-i: 2104; chunklet-end-i: 2112
i: 2104
end-i: 2112
i: 2108
end-i: 2112
i: 2112
end-i: 2112
i:2112 HIT CHUNK END
(comment . ";;2104: r15 <- r4, 0x8\n")
(comment . ";;2108 b 8")
chunklet-i: 2112; chunklet-start-i: 2112; chunklet-end-i: 2120
i: 2112
end-i: 2120
i: 2116
end-i: 2120
i: 2120
end-i: 2120
i:2120 HIT CHUNK END
(comment . ";;2112: r4 <- 0xF")
(comment . ";;2116 b -1668")
chunklet-i: 2120; chunklet-start-i: 2120; chunklet-end-i: 2160
i: 2120
end-i: 2160
i: 2120
end-i: 2160
i: 2124
end-i: 2160
i: 2128
end-i: 2160
i: 2132
end-i: 2160
i: 2136
end-i: 2160
i: 2140
end-i: 2160
i: 2144
end-i: 2160
i: 2156
end-i: 2160
i: 2160
end-i: 2160
at header: 2160
(comment . ";;2120: r9 <- 0x8")
(comment . ";;2124: r10 <- 0x4")
(comment . ";;2128: r13 <- r1, 0x8\n")
(comment . ";;2132: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2140: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2156: b r6")
chunklet-i: 2160; chunklet-start-i: 2176; chunklet-end-i: 2192
i: 2160
end-i: 2192
at header: 2160
i: 2176
end-i: 2192
i: 2180
end-i: 2192
i: 2184
end-i: 2192
i: 2188
end-i: 2192
i: 2192
end-i: 2192
i:2192 HIT CHUNK END
(comment . ";;2176: r1 <- r1, r0")
(comment . ";;2180: r13 <- r1, 0x8\n")
(comment . ";;2188 b -1740")
chunklet-i: 2192; chunklet-start-i: 2192; chunklet-end-i: 2200
i: 2192
end-i: 2200
i: 2192
end-i: 2200
i: 2196
end-i: 2200
i: 2200
end-i: 2200
i:2200 HIT CHUNK END
(comment . ";;2192: r3 <- r3, 0x1\n")
(comment . ";;2196 b 72")
chunklet-i: 2200; chunklet-start-i: 2200; chunklet-end-i: 2240
i: 2200
end-i: 2240
i: 2204
end-i: 2240
i: 2208
end-i: 2240
i: 2212
end-i: 2240
i: 2216
end-i: 2240
i: 2220
end-i: 2240
i: 2224
end-i: 2240
i: 2236
end-i: 2240
i: 2240
end-i: 2240
at header: 2240
(comment . ";;2200: r13 <- r1, 0x8\n")
(comment . ";;2204: r4 <- r1, 0x10\n")
(comment . ";;2208: r15 <- r1, 0x18\n")
(comment . ";;2212: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2220: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2236: b r6")
chunklet-i: 2240; chunklet-start-i: 2256; chunklet-end-i: 2272
i: 2240
end-i: 2272
at header: 2240
i: 2256
end-i: 2272
i: 2260
end-i: 2272
i: 2264
end-i: 2272
i: 2268
end-i: 2272
i: 2272
end-i: 2272
i:2272 HIT CHUNK END
(comment . ";;2256: r1 <- r1, r0")
(comment . ";;2260: r13 <- r1, 0x8\n")
(comment . ";;2264: r4 <- r1, 0x10\n")
(comment . ";;2268: r15 <- r1, 0x18\n")
chunklet-i: 2272; chunklet-start-i: 2272; chunklet-end-i: 2320
i: 2272
end-i: 2320
i: 2272
end-i: 2320
i: 2276
end-i: 2320
i: 2280
end-i: 2320
i: 2284
end-i: 2320
i: 2288
end-i: 2320
i: 2292
end-i: 2320
i: 2296
end-i: 2320
i: 2300
end-i: 2320
i: 2304
end-i: 2320
i: 2316
end-i: 2320
i: 2320
end-i: 2320
at header: 2320
(comment . ";;2272: r9 <- 0xF")
(comment . ";;2276: r10 <- 0x28")
(comment . ";;2280: r13 <- r1, 0x8\n")
(comment . ";;2284: r4 <- r1, 0x10\n")
(comment . ";;2288: r15 <- r1, 0x18\n")
(comment . ";;2292: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2300: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2316: b r6")
chunklet-i: 2320; chunklet-start-i: 2336; chunklet-end-i: 2368
i: 2320
end-i: 2368
at header: 2320
i: 2336
end-i: 2368
i: 2340
end-i: 2368
i: 2344
end-i: 2368
i: 2348
end-i: 2368
i: 2352
end-i: 2368
i: 2356
end-i: 2368
i: 2360
end-i: 2368
i: 2364
end-i: 2368
i: 2368
end-i: 2368
i:2368 HIT CHUNK END
(comment . ";;2336: r1 <- r1, r0")
(comment . ";;2340: r14 <- 0x4")
(comment . ";;2344: r13 <- r1, 0x8\n")
(comment . ";;2348: r4 <- r1, 0x10\n")
(comment . ";;2352: r15 <- r1, 0x18\n")
(comment . ";;2356: r14 <- 0x6")
(comment . ";;2364 b -1872")
chunklet-i: 2368; chunklet-start-i: 2368; chunklet-end-i: 2372
i: 2368
end-i: 2372
i: 2372
end-i: 2372
i:2372 HIT CHUNK END
(comment . ";;2368 b -276")
chunklet-i: 2372; chunklet-start-i: 2372; chunklet-end-i: 2408
i: 2372
end-i: 2408
i: 2372
end-i: 2408
i: 2376
end-i: 2408
i: 2380
end-i: 2408
i: 2384
end-i: 2408
i: 2388
end-i: 2408
i: 2392
end-i: 2408
i: 2404
end-i: 2408
i: 2408
end-i: 2408
at header: 2408
(comment . ";;2372: r13 <- r1, 0x8\n")
(comment . ";;2376: r4 <- r1, 0x10\n")
(comment . ";;2380: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2388: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2404: b r6")
chunklet-i: 2408; chunklet-start-i: 2424; chunklet-end-i: 2440
i: 2408
end-i: 2440
at header: 2408
i: 2424
end-i: 2440
i: 2428
end-i: 2440
i: 2432
end-i: 2440
i: 2436
end-i: 2440
i: 2440
end-i: 2440
i:2440 HIT CHUNK END
(comment . ";;2424: r1 <- r1, r8")
(comment . ";;2428: r13 <- r1, 0x8\n")
(comment . ";;2432: r4 <- r1, 0x10\n")
(comment . ";;2436 b -1964")
chunklet-i: 2440; chunklet-start-i: 2440; chunklet-end-i: 2444
i: 2440
end-i: 2444
i: 2440
end-i: 2444
i: 2444
end-i: 2444
i:2444 HIT CHUNK END
(comment . ";;2440: r4 <- 0x0")
chunklet-i: 2444; chunklet-start-i: 2444; chunklet-end-i: 2468
i: 2444
end-i: 2468
i: 2444
end-i: 2468
i: 2456
end-i: 2468
i: 2460
end-i: 2468
i: 2464
end-i: 2468
i: 2468
end-i: 2468
i:2468 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;2456: r10 <- r9, 0x5\n")
(comment . ";;2460: r10 <- 0x1E")
(comment . ";;2464 b 3724")
chunklet-i: 2468; chunklet-start-i: 2468; chunklet-end-i: 2480
i: 2468
end-i: 2480
i: 2468
end-i: 2480
i: 2472
end-i: 2480
i: 2476
end-i: 2480
i: 2480
end-i: 2480
i:2480 HIT CHUNK END
(comment . ";;2468: r15 <- r4, r10")
(comment . ";;2472: r15 <- 0x7")
(comment . ";;2476 b 3544")
chunklet-i: 2480; chunklet-start-i: 2480; chunklet-end-i: 2488
i: 2480
end-i: 2488
i: 2484
end-i: 2488
i: 2488
end-i: 2488
i:2488 HIT CHUNK END
(comment . ";;2480: r4 <- r10")
(comment . ";;2484 b 836")
chunklet-i: 2488; chunklet-start-i: 2488; chunklet-end-i: 2496
i: 2488
end-i: 2496
i: 2488
end-i: 2496
i: 2492
end-i: 2496
i: 2496
end-i: 2496
i:2496 HIT CHUNK END
(comment . ";;2488: r3 <- r3, 0x1\n")
(comment . ";;2492 b 756")
chunklet-i: 2496; chunklet-start-i: 2496; chunklet-end-i: 2500
i: 2496
end-i: 2500
i: 2496
end-i: 2500
i: 2500
end-i: 2500
i:2500 HIT CHUNK END
(comment . ";;2496: r15 <- 0x0")
chunklet-i: 2500; chunklet-start-i: 2500; chunklet-end-i: 2512
i: 2500
end-i: 2512
i: 2500
end-i: 2512
i: 2504
end-i: 2512
i: 2508
end-i: 2512
i: 2512
end-i: 2512
i:2512 HIT CHUNK END
(comment . ";;2500: r14 <- r15, r13")
(comment . ";;2504: r14 <- 0x7")
(comment . ";;2508 b 560")
chunklet-i: 2512; chunklet-start-i: 2512; chunklet-end-i: 2520
i: 2512
end-i: 2520
i: 2516
end-i: 2520
i: 2520
end-i: 2520
i:2520 HIT CHUNK END
(comment . ";;2512: r15 <- r13")
(comment . ";;2516 b 456")
chunklet-i: 2520; chunklet-start-i: 2520; chunklet-end-i: 2528
i: 2520
end-i: 2528
i: 2520
end-i: 2528
i: 2524
end-i: 2528
i: 2528
end-i: 2528
i:2528 HIT CHUNK END
(comment . ";;2520: r3 <- r3, 0x1\n")
(comment . ";;2524 b 368")
chunklet-i: 2528; chunklet-start-i: 2528; chunklet-end-i: 2552
i: 2528
end-i: 2552
i: 2528
end-i: 2552
i: 2540
end-i: 2552
i: 2544
end-i: 2552
i: 2548
end-i: 2552
i: 2552
end-i: 2552
i:2552 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;2540: r14 <- r9, 0x5\n")
(comment . ";;2544: r14 <- 0x1E")
(comment . ";;2548 b 264")
chunklet-i: 2552; chunklet-start-i: 2552; chunklet-end-i: 2556
i: 2552
end-i: 2556
i: 2556
end-i: 2556
i:2556 HIT CHUNK END
(comment . ";;2552: r9 <- 0xE")
chunklet-i: 2556; chunklet-start-i: 2556; chunklet-end-i: 2568
i: 2556
end-i: 2568
i: 2556
end-i: 2568
i: 2560
end-i: 2568
i: 2564
end-i: 2568
i: 2568
end-i: 2568
i:2568 HIT CHUNK END
(comment . ";;2556: r14 <- r9, r7")
(comment . ";;2560: r14 <- 0x7")
(comment . ";;2564 b 228")
chunklet-i: 2568; chunklet-start-i: 2568; chunklet-end-i: 2588
i: 2568
end-i: 2588
i: 2572
end-i: 2588
i: 2576
end-i: 2588
i: 2580
end-i: 2588
i: 2584
end-i: 2588
i: 2588
end-i: 2588
i:2588 HIT CHUNK END
(comment . ";;2568: r12 <- r9, 0x1\n")
(comment . ";;2572: r14 <- r12, r1")
(comment . ";;2576: r14 <- r14, r8")
(comment . ";;2580: r4 <- r14")
(comment . ";;2584 b 208")
chunklet-i: 2588; chunklet-start-i: 2588; chunklet-end-i: 2600
i: 2588
end-i: 2600
i: 2592
end-i: 2600
i: 2596
end-i: 2600
i: 2600
end-i: 2600
i:2600 HIT CHUNK END
(comment . ";;2588: r14 <- r4, r12")
(comment . ";;2592: r14 <- 0x7")
(comment . ";;2596 b 196")
chunklet-i: 2600; chunklet-start-i: 2600; chunklet-end-i: 2620
i: 2600
end-i: 2620
i: 2604
end-i: 2620
i: 2608
end-i: 2620
i: 2612
end-i: 2620
i: 2616
end-i: 2620
i: 2620
end-i: 2620
i:2620 HIT CHUNK END
(comment . ";;2600: r14 <- r4, r9")
(comment . ";;2604: r9 <- r9, r14")
(comment . ";;2608: r14 <- r9, r7")
(comment . ";;2612: r14 <- 0x7")
(comment . ";;2616 b 152")
chunklet-i: 2620; chunklet-start-i: 2620; chunklet-end-i: 2632
i: 2620
end-i: 2632
i: 2624
end-i: 2632
i: 2628
end-i: 2632
i: 2632
end-i: 2632
i:2632 HIT CHUNK END
(comment . ";;2620: r14 <- r9, 0x1\n")
(comment . ";;2624: r14 <- 0xF")
(comment . ";;2628 b 140")
chunklet-i: 2632; chunklet-start-i: 2632; chunklet-end-i: 2640
i: 2632
end-i: 2640
i: 2636
end-i: 2640
i: 2640
end-i: 2640
i:2640 HIT CHUNK END
(comment . ";;2632: r15 <- 0x7")
(comment . ";;2636 b 132")
chunklet-i: 2640; chunklet-start-i: 2640; chunklet-end-i: 2656
i: 2640
end-i: 2656
i: 2644
end-i: 2656
i: 2648
end-i: 2656
i: 2652
end-i: 2656
i: 2656
end-i: 2656
i:2656 HIT CHUNK END
(comment . ";;2640: r14 <- r14, r1")
(comment . ";;2644: r14 <- r14, r8")
(comment . ";;2648: r15 <- r14")
(comment . ";;2652 b 116")
chunklet-i: 2656; chunklet-start-i: 2656; chunklet-end-i: 2676
i: 2656
end-i: 2676
i: 2660
end-i: 2676
i: 2664
end-i: 2676
i: 2668
end-i: 2676
i: 2672
end-i: 2676
i: 2676
end-i: 2676
i:2676 HIT CHUNK END
(comment . ";;2656: r12 <- 0x6")
(comment . ";;2660: r14 <- r15, r9")
(comment . ";;2664: r12 <- r9, r14")
(comment . ";;2668: r15 <- 0x7")
(comment . ";;2672 b 16")
chunklet-i: 2676; chunklet-start-i: 2676; chunklet-end-i: 2684
i: 2676
end-i: 2684
i: 2680
end-i: 2684
i: 2684
end-i: 2684
i:2684 HIT CHUNK END
(comment . ";;2676: r14 <- r15, 0x8\n")
(comment . ";;2680 b 8")
chunklet-i: 2684; chunklet-start-i: 2684; chunklet-end-i: 2692
i: 2684
end-i: 2692
i: 2688
end-i: 2692
i: 2692
end-i: 2692
i:2692 HIT CHUNK END
(comment . ";;2684: r15 <- 0xE")
(comment . ";;2688 b -192")
chunklet-i: 2692; chunklet-start-i: 2692; chunklet-end-i: 2736
i: 2692
end-i: 2736
i: 2692
end-i: 2736
i: 2696
end-i: 2736
i: 2700
end-i: 2736
i: 2704
end-i: 2736
i: 2708
end-i: 2736
i: 2712
end-i: 2736
i: 2716
end-i: 2736
i: 2720
end-i: 2736
i: 2732
end-i: 2736
i: 2736
end-i: 2736
at header: 2736
(comment . ";;2692: r9 <- 0x8")
(comment . ";;2696: r10 <- 0xF")
(comment . ";;2700: r13 <- r1, 0x8\n")
(comment . ";;2704: r4 <- r1, 0x10\n")
(comment . ";;2708: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2716: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2732: b r6")
chunklet-i: 2736; chunklet-start-i: 2752; chunklet-end-i: 2772
i: 2736
end-i: 2772
at header: 2736
i: 2752
end-i: 2772
i: 2756
end-i: 2772
i: 2760
end-i: 2772
i: 2764
end-i: 2772
i: 2768
end-i: 2772
i: 2772
end-i: 2772
i:2772 HIT CHUNK END
(comment . ";;2752: r1 <- r1, r8")
(comment . ";;2756: r15 <- 0x4")
(comment . ";;2760: r13 <- r1, 0x8\n")
(comment . ";;2764: r4 <- r1, 0x10\n")
(comment . ";;2768 b -272")
chunklet-i: 2772; chunklet-start-i: 2772; chunklet-end-i: 2796
i: 2772
end-i: 2796
i: 2772
end-i: 2796
i: 2776
end-i: 2796
i: 2780
end-i: 2796
i: 2792
end-i: 2796
i: 2796
end-i: 2796
i:2796 HIT CHUNK END
(comment . ";;2772: r10 <- 0xF")
(comment . ";;2776: r11 <- 0x6")
(comment . ";; literal r6")
(comment . ";;2792: b r6")
chunklet-i: 2796; chunklet-start-i: 2796; chunklet-end-i: 2816
i: 2796
end-i: 2816
i: 2796
end-i: 2816
i: 2800
end-i: 2816
i: 2812
end-i: 2816
i: 2816
end-i: 2816
i:2816 HIT CHUNK END
(comment . ";;2796: r10 <- 0x4")
(comment . ";; literal r6")
(comment . ";;2812: b r6")
chunklet-i: 2816; chunklet-start-i: 2816; chunklet-end-i: 2856
i: 2816
end-i: 2856
i: 2816
end-i: 2856
i: 2820
end-i: 2856
i: 2824
end-i: 2856
i: 2828
end-i: 2856
i: 2832
end-i: 2856
i: 2836
end-i: 2856
i: 2840
end-i: 2856
i: 2852
end-i: 2856
i: 2856
end-i: 2856
at header: 2856
(comment . ";;2816: r13 <- r1, 0x8\n")
(comment . ";;2820: r4 <- r1, 0x10\n")
(comment . ";;2824: r15 <- r1, 0x18\n")
(comment . ";;2828: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2836: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2852: b r6")
chunklet-i: 2856; chunklet-start-i: 2872; chunklet-end-i: 2896
i: 2856
end-i: 2896
at header: 2856
i: 2872
end-i: 2896
i: 2876
end-i: 2896
i: 2880
end-i: 2896
i: 2884
end-i: 2896
i: 2888
end-i: 2896
i: 2892
end-i: 2896
i: 2896
end-i: 2896
i:2896 HIT CHUNK END
(comment . ";;2872: r1 <- r1, r0")
(comment . ";;2876: r9 <- 0x4")
(comment . ";;2880: r13 <- r1, 0x8\n")
(comment . ";;2884: r4 <- r1, 0x10\n")
(comment . ";;2888: r15 <- r1, 0x18\n")
(comment . ";;2892 b -340")
chunklet-i: 2896; chunklet-start-i: 2896; chunklet-end-i: 2936
i: 2896
end-i: 2936
i: 2896
end-i: 2936
i: 2900
end-i: 2936
i: 2904
end-i: 2936
i: 2908
end-i: 2936
i: 2912
end-i: 2936
i: 2916
end-i: 2936
i: 2920
end-i: 2936
i: 2932
end-i: 2936
i: 2936
end-i: 2936
at header: 2936
(comment . ";;2896: r13 <- r1, 0x8\n")
(comment . ";;2900: r4 <- r1, 0x10\n")
(comment . ";;2904: r15 <- r1, 0x18\n")
(comment . ";;2908: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2916: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2932: b r6")
chunklet-i: 2936; chunklet-start-i: 2952; chunklet-end-i: 2976
i: 2936
end-i: 2976
at header: 2936
i: 2952
end-i: 2976
i: 2956
end-i: 2976
i: 2960
end-i: 2976
i: 2964
end-i: 2976
i: 2968
end-i: 2976
i: 2972
end-i: 2976
i: 2976
end-i: 2976
i:2976 HIT CHUNK END
(comment . ";;2956: r1 <- r1, r0")
(comment . ";;2960: r13 <- r1, 0x8\n")
(comment . ";;2964: r4 <- r1, 0x10\n")
(comment . ";;2968: r15 <- r1, 0x18\n")
(comment . ";;2972 b -448")
chunklet-i: 2976; chunklet-start-i: 2976; chunklet-end-i: 2984
i: 2976
end-i: 2984
i: 2976
end-i: 2984
i: 2980
end-i: 2984
i: 2984
end-i: 2984
i:2984 HIT CHUNK END
(comment . ";;2976: r4 <- 0x7")
(comment . ";;2980 b 16")
chunklet-i: 2984; chunklet-start-i: 2984; chunklet-end-i: 2992
i: 2984
end-i: 2992
i: 2988
end-i: 2992
i: 2992
end-i: 2992
i:2992 HIT CHUNK END
(comment . ";;2984: r15 <- r4, 0x8\n")
(comment . ";;2988 b 8")
chunklet-i: 2992; chunklet-start-i: 2992; chunklet-end-i: 3000
i: 2992
end-i: 3000
i: 2996
end-i: 3000
i: 3000
end-i: 3000
i:3000 HIT CHUNK END
(comment . ";;2992: r4 <- 0xF")
(comment . ";;2996 b -556")
chunklet-i: 3000; chunklet-start-i: 3000; chunklet-end-i: 3040
i: 3000
end-i: 3040
i: 3000
end-i: 3040
i: 3004
end-i: 3040
i: 3008
end-i: 3040
i: 3012
end-i: 3040
i: 3016
end-i: 3040
i: 3020
end-i: 3040
i: 3024
end-i: 3040
i: 3036
end-i: 3040
i: 3040
end-i: 3040
at header: 3040
(comment . ";;3000: r9 <- 0x8")
(comment . ";;3004: r10 <- 0x4")
(comment . ";;3008: r13 <- r1, 0x8\n")
(comment . ";;3012: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3020: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3036: b r6")
chunklet-i: 3040; chunklet-start-i: 3056; chunklet-end-i: 3072
i: 3040
end-i: 3072
at header: 3040
i: 3056
end-i: 3072
i: 3060
end-i: 3072
i: 3064
end-i: 3072
i: 3068
end-i: 3072
i: 3072
end-i: 3072
i:3072 HIT CHUNK END
(comment . ";;3056: r1 <- r1, r0")
(comment . ";;3060: r13 <- r1, 0x8\n")
(comment . ";;3068 b -628")
chunklet-i: 3072; chunklet-start-i: 3072; chunklet-end-i: 3080
i: 3072
end-i: 3080
i: 3072
end-i: 3080
i: 3076
end-i: 3080
i: 3080
end-i: 3080
i:3080 HIT CHUNK END
(comment . ";;3072: r3 <- r3, 0x1\n")
(comment . ";;3076 b 72")
chunklet-i: 3080; chunklet-start-i: 3080; chunklet-end-i: 3120
i: 3080
end-i: 3120
i: 3084
end-i: 3120
i: 3088
end-i: 3120
i: 3092
end-i: 3120
i: 3096
end-i: 3120
i: 3100
end-i: 3120
i: 3104
end-i: 3120
i: 3116
end-i: 3120
i: 3120
end-i: 3120
at header: 3120
(comment . ";;3080: r13 <- r1, 0x8\n")
(comment . ";;3084: r4 <- r1, 0x10\n")
(comment . ";;3088: r15 <- r1, 0x18\n")
(comment . ";;3092: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3100: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3116: b r6")
chunklet-i: 3120; chunklet-start-i: 3136; chunklet-end-i: 3152
i: 3120
end-i: 3152
at header: 3120
i: 3136
end-i: 3152
i: 3140
end-i: 3152
i: 3144
end-i: 3152
i: 3148
end-i: 3152
i: 3152
end-i: 3152
i:3152 HIT CHUNK END
(comment . ";;3136: r1 <- r1, r0")
(comment . ";;3140: r13 <- r1, 0x8\n")
(comment . ";;3144: r4 <- r1, 0x10\n")
(comment . ";;3148: r15 <- r1, 0x18\n")
chunklet-i: 3152; chunklet-start-i: 3152; chunklet-end-i: 3200
i: 3152
end-i: 3200
i: 3152
end-i: 3200
i: 3156
end-i: 3200
i: 3160
end-i: 3200
i: 3164
end-i: 3200
i: 3168
end-i: 3200
i: 3172
end-i: 3200
i: 3176
end-i: 3200
i: 3180
end-i: 3200
i: 3184
end-i: 3200
i: 3196
end-i: 3200
i: 3200
end-i: 3200
at header: 3200
(comment . ";;3152: r9 <- 0xF")
(comment . ";;3156: r10 <- 0xD")
(comment . ";;3160: r13 <- r1, 0x8\n")
(comment . ";;3164: r4 <- r1, 0x10\n")
(comment . ";;3168: r15 <- r1, 0x18\n")
(comment . ";;3172: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3196: b r6")
chunklet-i: 3200; chunklet-start-i: 3216; chunklet-end-i: 3248
i: 3200
end-i: 3248
at header: 3200
i: 3216
end-i: 3248
i: 3220
end-i: 3248
i: 3224
end-i: 3248
i: 3228
end-i: 3248
i: 3232
end-i: 3248
i: 3236
end-i: 3248
i: 3240
end-i: 3248
i: 3244
end-i: 3248
i: 3248
end-i: 3248
i:3248 HIT CHUNK END
(comment . ";;3216: r1 <- r1, r0")
(comment . ";;3220: r14 <- 0x4")
(comment . ";;3224: r13 <- r1, 0x8\n")
(comment . ";;3228: r4 <- r1, 0x10\n")
(comment . ";;3232: r15 <- r1, 0x18\n")
(comment . ";;3236: r14 <- 0x6")
(comment . ";;3244 b -728")
chunklet-i: 3248; chunklet-start-i: 3248; chunklet-end-i: 3252
i: 3248
end-i: 3252
i: 3252
end-i: 3252
i:3252 HIT CHUNK END
(comment . ";;3248 b -276")
chunklet-i: 3252; chunklet-start-i: 3252; chunklet-end-i: 3288
i: 3252
end-i: 3288
i: 3252
end-i: 3288
i: 3256
end-i: 3288
i: 3260
end-i: 3288
i: 3264
end-i: 3288
i: 3268
end-i: 3288
i: 3272
end-i: 3288
i: 3284
end-i: 3288
i: 3288
end-i: 3288
at header: 3288
(comment . ";;3252: r13 <- r1, 0x8\n")
(comment . ";;3256: r4 <- r1, 0x10\n")
(comment . ";;3260: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3268: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3284: b r6")
chunklet-i: 3288; chunklet-start-i: 3304; chunklet-end-i: 3324
i: 3288
end-i: 3324
at header: 3288
i: 3304
end-i: 3324
i: 3308
end-i: 3324
i: 3312
end-i: 3324
i: 3316
end-i: 3324
i: 3320
end-i: 3324
i: 3324
end-i: 3324
i:3324 HIT CHUNK END
(comment . ";;3308: r1 <- r1, r8")
(comment . ";;3312: r13 <- r1, 0x8\n")
(comment . ";;3316: r4 <- r1, 0x10\n")
(comment . ";;3320 b -828")
chunklet-i: 3324; chunklet-start-i: 3324; chunklet-end-i: 3416
i: 3324
end-i: 3416
i: 3324
end-i: 3416
i: 3336
end-i: 3416
i: 3340
end-i: 3416
i: 3344
end-i: 3416
i: 3356
end-i: 3416
i: 3360
end-i: 3416
i: 3364
end-i: 3416
i: 3368
end-i: 3416
i: 3372
end-i: 3416
i: 3376
end-i: 3416
i: 3380
end-i: 3416
i: 3384
end-i: 3416
i: 3396
end-i: 3416
i: 3400
end-i: 3416
i: 3404
end-i: 3416
i: 3408
end-i: 3416
i: 3412
end-i: 3416
i: 3416
end-i: 3416
at header: 3416
(comment . ";; literal r15")
(comment . ";;3336: r14 <- 0x0")
(comment . ";;3340: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;3356: r14 <- r15, 0xD\n")
(comment . ";;3360: r15 <- 0x0")
(comment . ";;3364: r15 <- r1, 0x10\n")
(comment . ";;3368: r9 <- 0x0")
(comment . ";;3372: r10 <- 0x18")
(comment . ";;3376: r11 <- 0x8")
(comment . ";;3380: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;3396: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;3404: r15 <- r1, 0x0\n")
(comment . ";;3408: r4 <- 0x4")
(comment . ";;3412: b r5, 13")
chunklet-i: 3416; chunklet-start-i: 3432; chunklet-end-i: 3496
i: 3416
end-i: 3496
at header: 3416
i: 3432
end-i: 3496
i: 3436
end-i: 3496
i: 3440
end-i: 3496
i: 3444
end-i: 3496
i: 3448
end-i: 3496
i: 3452
end-i: 3496
i: 3456
end-i: 3496
i: 3460
end-i: 3496
i: 3464
end-i: 3496
i: 3476
end-i: 3496
i: 3480
end-i: 3496
i: 3484
end-i: 3496
i: 3488
end-i: 3496
i: 3492
end-i: 3496
i: 3496
end-i: 3496
at header: 3496
(comment . ";;3436: r1 <- r1, r8")
(comment . ";;3440: r15 <- 0x18")
(comment . ";;3444: r15 <- r1, 0x10\n")
(comment . ";;3448: r9 <- 0x0")
(comment . ";;3452: r10 <- 0x8")
(comment . ";;3456: r11 <- 0x0")
(comment . ";;3460: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;3476: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;3484: r15 <- r1, 0x0\n")
(comment . ";;3488: r4 <- 0x4")
(comment . ";;3492: b r5, 13")
chunklet-i: 3496; chunklet-start-i: 3512; chunklet-end-i: 3576
i: 3496
end-i: 3576
at header: 3496
i: 3512
end-i: 3576
i: 3516
end-i: 3576
i: 3520
end-i: 3576
i: 3524
end-i: 3576
i: 3528
end-i: 3576
i: 3532
end-i: 3576
i: 3536
end-i: 3576
i: 3540
end-i: 3576
i: 3544
end-i: 3576
i: 3556
end-i: 3576
i: 3560
end-i: 3576
i: 3564
end-i: 3576
i: 3568
end-i: 3576
i: 3572
end-i: 3576
i: 3576
end-i: 3576
at header: 3576
(comment . ";;3516: r1 <- r1, r8")
(comment . ";;3520: r15 <- 0x8")
(comment . ";;3524: r15 <- r1, 0x10\n")
(comment . ";;3528: r9 <- 0x0")
(comment . ";;3532: r10 <- 0x0")
(comment . ";;3536: r11 <- 0x18")
(comment . ";;3540: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;3556: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;3564: r15 <- r1, 0x0\n")
(comment . ";;3568: r4 <- 0x4")
(comment . ";;3572: b r5, 13")
chunklet-i: 3576; chunklet-start-i: 3592; chunklet-end-i: 3656
i: 3576
end-i: 3656
at header: 3576
i: 3592
end-i: 3656
i: 3596
end-i: 3656
i: 3600
end-i: 3656
i: 3604
end-i: 3656
i: 3608
end-i: 3656
i: 3612
end-i: 3656
i: 3616
end-i: 3656
i: 3620
end-i: 3656
i: 3624
end-i: 3656
i: 3636
end-i: 3656
i: 3640
end-i: 3656
i: 3644
end-i: 3656
i: 3648
end-i: 3656
i: 3652
end-i: 3656
i: 3656
end-i: 3656
at header: 3656
(comment . ";;3596: r1 <- r1, r8")
(comment . ";;3600: r15 <- 0x0")
(comment . ";;3604: r15 <- r1, 0x10\n")
(comment . ";;3608: r9 <- 0x0")
(comment . ";;3612: r10 <- 0x8")
(comment . ";;3616: r11 <- 0x18")
(comment . ";;3620: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;3636: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;3644: r15 <- r1, 0x0\n")
(comment . ";;3648: r4 <- 0x4")
(comment . ";;3652: b r5, 13")
chunklet-i: 3656; chunklet-start-i: 3672; chunklet-end-i: 3736
i: 3656
end-i: 3736
at header: 3656
i: 3672
end-i: 3736
i: 3676
end-i: 3736
i: 3680
end-i: 3736
i: 3684
end-i: 3736
i: 3688
end-i: 3736
i: 3692
end-i: 3736
i: 3696
end-i: 3736
i: 3700
end-i: 3736
i: 3704
end-i: 3736
i: 3716
end-i: 3736
i: 3720
end-i: 3736
i: 3724
end-i: 3736
i: 3728
end-i: 3736
i: 3732
end-i: 3736
i: 3736
end-i: 3736
at header: 3736
(comment . ";;3676: r1 <- r1, r8")
(comment . ";;3680: r15 <- 0x8")
(comment . ";;3684: r15 <- r1, 0x10\n")
(comment . ";;3688: r9 <- 0x0")
(comment . ";;3692: r10 <- 0x18")
(comment . ";;3696: r11 <- 0x0")
(comment . ";;3700: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;3716: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;3724: r15 <- r1, 0x0\n")
(comment . ";;3728: r4 <- 0x4")
(comment . ";;3732: b r5, 13")
chunklet-i: 3736; chunklet-start-i: 3752; chunklet-end-i: 3816
i: 3736
end-i: 3816
at header: 3736
i: 3752
end-i: 3816
i: 3756
end-i: 3816
i: 3760
end-i: 3816
i: 3764
end-i: 3816
i: 3768
end-i: 3816
i: 3772
end-i: 3816
i: 3776
end-i: 3816
i: 3780
end-i: 3816
i: 3784
end-i: 3816
i: 3796
end-i: 3816
i: 3800
end-i: 3816
i: 3804
end-i: 3816
i: 3808
end-i: 3816
i: 3812
end-i: 3816
i: 3816
end-i: 3816
at header: 3816
(comment . ";;3756: r1 <- r1, r8")
(comment . ";;3760: r15 <- 0x18")
(comment . ";;3764: r15 <- r1, 0x10\n")
(comment . ";;3768: r9 <- 0x0")
(comment . ";;3772: r10 <- 0x0")
(comment . ";;3776: r11 <- 0x8")
(comment . ";;3780: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;3796: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;3804: r15 <- r1, 0x0\n")
(comment . ";;3808: r4 <- 0x4")
(comment . ";;3812: b r5, 13")
chunklet-i: 3816; chunklet-start-i: 3832; chunklet-end-i: 3896
i: 3816
end-i: 3896
at header: 3816
i: 3832
end-i: 3896
i: 3836
end-i: 3896
i: 3840
end-i: 3896
i: 3844
end-i: 3896
i: 3848
end-i: 3896
i: 3852
end-i: 3896
i: 3856
end-i: 3896
i: 3860
end-i: 3896
i: 3864
end-i: 3896
i: 3876
end-i: 3896
i: 3880
end-i: 3896
i: 3884
end-i: 3896
i: 3888
end-i: 3896
i: 3892
end-i: 3896
i: 3896
end-i: 3896
at header: 3896
(comment . ";;3836: r1 <- r1, r8")
(comment . ";;3840: r15 <- 0x0")
(comment . ";;3844: r15 <- r1, 0x10\n")
(comment . ";;3848: r9 <- 0x8")
(comment . ";;3852: r10 <- 0x10")
(comment . ";;3856: r11 <- 0x0")
(comment . ";;3860: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;3876: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;3884: r15 <- r1, 0x0\n")
(comment . ";;3888: r4 <- 0x4")
(comment . ";;3892: b r5, 13")
chunklet-i: 3896; chunklet-start-i: 3912; chunklet-end-i: 3976
i: 3896
end-i: 3976
at header: 3896
i: 3912
end-i: 3976
i: 3916
end-i: 3976
i: 3920
end-i: 3976
i: 3924
end-i: 3976
i: 3928
end-i: 3976
i: 3932
end-i: 3976
i: 3936
end-i: 3976
i: 3940
end-i: 3976
i: 3944
end-i: 3976
i: 3956
end-i: 3976
i: 3960
end-i: 3976
i: 3964
end-i: 3976
i: 3968
end-i: 3976
i: 3972
end-i: 3976
i: 3976
end-i: 3976
at header: 3976
(comment . ";;3916: r1 <- r1, r8")
(comment . ";;3920: r15 <- 0x0")
(comment . ";;3924: r15 <- r1, 0x10\n")
(comment . ";;3928: r9 <- 0x8")
(comment . ";;3932: r10 <- 0x0")
(comment . ";;3936: r11 <- 0x10")
(comment . ";;3940: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;3956: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;3964: r15 <- r1, 0x0\n")
(comment . ";;3968: r4 <- 0x4")
(comment . ";;3972: b r5, 13")
chunklet-i: 3976; chunklet-start-i: 3992; chunklet-end-i: 4056
i: 3976
end-i: 4056
at header: 3976
i: 3992
end-i: 4056
i: 3996
end-i: 4056
i: 4000
end-i: 4056
i: 4004
end-i: 4056
i: 4008
end-i: 4056
i: 4012
end-i: 4056
i: 4016
end-i: 4056
i: 4020
end-i: 4056
i: 4024
end-i: 4056
i: 4036
end-i: 4056
i: 4040
end-i: 4056
i: 4044
end-i: 4056
i: 4048
end-i: 4056
i: 4052
end-i: 4056
i: 4056
end-i: 4056
at header: 4056
(comment . ";;3996: r1 <- r1, r8")
(comment . ";;4000: r15 <- 0x10")
(comment . ";;4004: r15 <- r1, 0x10\n")
(comment . ";;4008: r9 <- 0x8")
(comment . ";;4012: r10 <- 0x0")
(comment . ";;4016: r11 <- 0x0")
(comment . ";;4020: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;4036: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;4044: r15 <- r1, 0x0\n")
(comment . ";;4048: r4 <- 0x4")
(comment . ";;4052: b r5, 13")
chunklet-i: 4056; chunklet-start-i: 4072; chunklet-end-i: 4136
i: 4056
end-i: 4136
at header: 4056
i: 4072
end-i: 4136
i: 4076
end-i: 4136
i: 4080
end-i: 4136
i: 4084
end-i: 4136
i: 4088
end-i: 4136
i: 4092
end-i: 4136
i: 4096
end-i: 4136
i: 4100
end-i: 4136
i: 4104
end-i: 4136
i: 4116
end-i: 4136
i: 4120
end-i: 4136
i: 4124
end-i: 4136
i: 4128
end-i: 4136
i: 4132
end-i: 4136
i: 4136
end-i: 4136
at header: 4136
(comment . ";;4076: r1 <- r1, r8")
(comment . ";;4080: r15 <- 0x0")
(comment . ";;4084: r15 <- r1, 0x10\n")
(comment . ";;4088: r9 <- 0x10")
(comment . ";;4092: r10 <- 0x8")
(comment . ";;4096: r11 <- 0x8")
(comment . ";;4100: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;4116: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;4124: r15 <- r1, 0x0\n")
(comment . ";;4128: r4 <- 0x4")
(comment . ";;4132: b r5, 13")
chunklet-i: 4136; chunklet-start-i: 4152; chunklet-end-i: 4216
i: 4136
end-i: 4216
at header: 4136
i: 4152
end-i: 4216
i: 4156
end-i: 4216
i: 4160
end-i: 4216
i: 4164
end-i: 4216
i: 4168
end-i: 4216
i: 4172
end-i: 4216
i: 4176
end-i: 4216
i: 4180
end-i: 4216
i: 4184
end-i: 4216
i: 4196
end-i: 4216
i: 4200
end-i: 4216
i: 4204
end-i: 4216
i: 4208
end-i: 4216
i: 4212
end-i: 4216
i: 4216
end-i: 4216
at header: 4216
(comment . ";;4156: r1 <- r1, r8")
(comment . ";;4160: r15 <- 0x8")
(comment . ";;4164: r15 <- r1, 0x10\n")
(comment . ";;4168: r9 <- 0x10")
(comment . ";;4172: r10 <- 0x8")
(comment . ";;4176: r11 <- 0x0")
(comment . ";;4180: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;4196: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;4204: r15 <- r1, 0x0\n")
(comment . ";;4208: r4 <- 0x4")
(comment . ";;4212: b r5, 13")
chunklet-i: 4216; chunklet-start-i: 4232; chunklet-end-i: 4296
i: 4216
end-i: 4296
at header: 4216
i: 4232
end-i: 4296
i: 4236
end-i: 4296
i: 4240
end-i: 4296
i: 4244
end-i: 4296
i: 4248
end-i: 4296
i: 4252
end-i: 4296
i: 4256
end-i: 4296
i: 4260
end-i: 4296
i: 4264
end-i: 4296
i: 4276
end-i: 4296
i: 4280
end-i: 4296
i: 4284
end-i: 4296
i: 4288
end-i: 4296
i: 4292
end-i: 4296
i: 4296
end-i: 4296
at header: 4296
(comment . ";;4236: r1 <- r1, r8")
(comment . ";;4240: r15 <- 0x8")
(comment . ";;4244: r15 <- r1, 0x10\n")
(comment . ";;4248: r9 <- 0x10")
(comment . ";;4252: r10 <- 0x0")
(comment . ";;4256: r11 <- 0x8")
(comment . ";;4260: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;4276: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;4284: r15 <- r1, 0x0\n")
(comment . ";;4288: r4 <- 0x4")
(comment . ";;4292: b r5, 13")
chunklet-i: 4296; chunklet-start-i: 4312; chunklet-end-i: 4376
i: 4296
end-i: 4376
at header: 4296
i: 4312
end-i: 4376
i: 4316
end-i: 4376
i: 4320
end-i: 4376
i: 4324
end-i: 4376
i: 4328
end-i: 4376
i: 4332
end-i: 4376
i: 4336
end-i: 4376
i: 4340
end-i: 4376
i: 4344
end-i: 4376
i: 4356
end-i: 4376
i: 4360
end-i: 4376
i: 4364
end-i: 4376
i: 4368
end-i: 4376
i: 4372
end-i: 4376
i: 4376
end-i: 4376
at header: 4376
(comment . ";;4316: r1 <- r1, r8")
(comment . ";;4320: r15 <- 0x8")
(comment . ";;4324: r15 <- r1, 0x10\n")
(comment . ";;4328: r9 <- 0x18")
(comment . ";;4332: r10 <- 0x8")
(comment . ";;4336: r11 <- 0x8")
(comment . ";;4340: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;4356: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;4364: r15 <- r1, 0x0\n")
(comment . ";;4368: r4 <- 0x4")
(comment . ";;4372: b r5, 13")
chunklet-i: 4376; chunklet-start-i: 4392; chunklet-end-i: 4424
i: 4376
end-i: 4424
at header: 4376
i: 4392
end-i: 4424
i: 4396
end-i: 4424
i: 4400
end-i: 4424
i: 4412
end-i: 4424
i: 4416
end-i: 4424
i: 4420
end-i: 4424
i: 4424
end-i: 4424
i:4424 HIT CHUNK END
(comment . ";;4396: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";;4412: r15 <- r9, 0x5\n")
(comment . ";;4416: r15 <- 0x1E")
(comment . ";;4420 b 1540")
chunklet-i: 4424; chunklet-start-i: 4424; chunklet-end-i: 4428
i: 4424
end-i: 4428
i: 4428
end-i: 4428
i:4428 HIT CHUNK END
(comment . ";;4424: r9 <- 0xF")
chunklet-i: 4428; chunklet-start-i: 4428; chunklet-end-i: 4440
i: 4428
end-i: 4440
i: 4428
end-i: 4440
i: 4432
end-i: 4440
i: 4436
end-i: 4440
i: 4440
end-i: 4440
i:4440 HIT CHUNK END
(comment . ";;4428: r15 <- r9, r7")
(comment . ";;4432: r15 <- 0x7")
(comment . ";;4436 b 1500")
chunklet-i: 4440; chunklet-start-i: 4440; chunklet-end-i: 4452
i: 4440
end-i: 4452
i: 4444
end-i: 4452
i: 4448
end-i: 4452
i: 4452
end-i: 4452
i:4452 HIT CHUNK END
(comment . ";;4440: r15 <- r9, 0x1\n")
(comment . ";;4444: r15 <- 0xF")
(comment . ";;4448 b 1488")
chunklet-i: 4452; chunklet-start-i: 4452; chunklet-end-i: 4460
i: 4452
end-i: 4460
i: 4456
end-i: 4460
i: 4460
end-i: 4460
i:4460 HIT CHUNK END
(comment . ";;4452: r15 <- 0x8")
(comment . ";;4456 b 1480")
chunklet-i: 4460; chunklet-start-i: 4460; chunklet-end-i: 4492
i: 4460
end-i: 4492
i: 4464
end-i: 4492
i: 4468
end-i: 4492
i: 4480
end-i: 4492
i: 4484
end-i: 4492
i: 4488
end-i: 4492
i: 4492
end-i: 4492
i:4492 HIT CHUNK END
(comment . ";;4460: r15 <- 0x68")
(comment . ";;4464: r15 <- r9, 0x9\n")
(comment . ";; literal r9")
(comment . ";;4480: r15 <- r9, 0x5\n")
(comment . ";;4484: r15 <- 0x1E")
(comment . ";;4488 b 1392")
chunklet-i: 4492; chunklet-start-i: 4492; chunklet-end-i: 4496
i: 4492
end-i: 4496
i: 4496
end-i: 4496
i:4496 HIT CHUNK END
(comment . ";;4492: r9 <- 0xF")
chunklet-i: 4496; chunklet-start-i: 4496; chunklet-end-i: 4508
i: 4496
end-i: 4508
i: 4496
end-i: 4508
i: 4500
end-i: 4508
i: 4504
end-i: 4508
i: 4508
end-i: 4508
i:4508 HIT CHUNK END
(comment . ";;4496: r15 <- r9, r7")
(comment . ";;4500: r15 <- 0x7")
(comment . ";;4504 b 1352")
chunklet-i: 4508; chunklet-start-i: 4508; chunklet-end-i: 4520
i: 4508
end-i: 4520
i: 4512
end-i: 4520
i: 4516
end-i: 4520
i: 4520
end-i: 4520
i:4520 HIT CHUNK END
(comment . ";;4508: r15 <- r9, 0x1\n")
(comment . ";;4512: r15 <- 0xF")
(comment . ";;4516 b 1340")
chunklet-i: 4520; chunklet-start-i: 4520; chunklet-end-i: 4528
i: 4520
end-i: 4528
i: 4524
end-i: 4528
i: 4528
end-i: 4528
i:4528 HIT CHUNK END
(comment . ";;4520: r15 <- 0x18")
(comment . ";;4524 b 1332")
chunklet-i: 4528; chunklet-start-i: 4528; chunklet-end-i: 4560
i: 4528
end-i: 4560
i: 4532
end-i: 4560
i: 4536
end-i: 4560
i: 4548
end-i: 4560
i: 4552
end-i: 4560
i: 4556
end-i: 4560
i: 4560
end-i: 4560
i:4560 HIT CHUNK END
(comment . ";;4528: r15 <- 0x18")
(comment . ";;4532: r15 <- r9, 0x11\n")
(comment . ";; literal r9")
(comment . ";;4548: r15 <- r9, 0x5\n")
(comment . ";;4552: r15 <- 0x1E")
(comment . ";;4556 b 1244")
chunklet-i: 4560; chunklet-start-i: 4560; chunklet-end-i: 4564
i: 4560
end-i: 4564
i: 4564
end-i: 4564
i:4564 HIT CHUNK END
(comment . ";;4560: r9 <- 0xF")
chunklet-i: 4564; chunklet-start-i: 4564; chunklet-end-i: 4576
i: 4564
end-i: 4576
i: 4564
end-i: 4576
i: 4568
end-i: 4576
i: 4572
end-i: 4576
i: 4576
end-i: 4576
i:4576 HIT CHUNK END
(comment . ";;4564: r15 <- r9, r7")
(comment . ";;4568: r15 <- 0x7")
(comment . ";;4572 b 1204")
chunklet-i: 4576; chunklet-start-i: 4576; chunklet-end-i: 4588
i: 4576
end-i: 4588
i: 4580
end-i: 4588
i: 4584
end-i: 4588
i: 4588
end-i: 4588
i:4588 HIT CHUNK END
(comment . ";;4576: r15 <- r9, 0x1\n")
(comment . ";;4580: r15 <- 0xF")
(comment . ";;4584 b 1192")
chunklet-i: 4588; chunklet-start-i: 4588; chunklet-end-i: 4596
i: 4588
end-i: 4596
i: 4592
end-i: 4596
i: 4596
end-i: 4596
i:4596 HIT CHUNK END
(comment . ";;4588: r15 <- 0x28")
(comment . ";;4592 b 1184")
chunklet-i: 4596; chunklet-start-i: 4596; chunklet-end-i: 4628
i: 4596
end-i: 4628
i: 4600
end-i: 4628
i: 4604
end-i: 4628
i: 4616
end-i: 4628
i: 4620
end-i: 4628
i: 4624
end-i: 4628
i: 4628
end-i: 4628
i:4628 HIT CHUNK END
(comment . ";;4596: r15 <- 0x8")
(comment . ";;4600: r15 <- r9, 0x19\n")
(comment . ";; literal r9")
(comment . ";;4616: r15 <- r9, 0x5\n")
(comment . ";;4620: r15 <- 0x1E")
(comment . ";;4624 b 1096")
chunklet-i: 4628; chunklet-start-i: 4628; chunklet-end-i: 4632
i: 4628
end-i: 4632
i: 4632
end-i: 4632
i:4632 HIT CHUNK END
(comment . ";;4628: r9 <- 0xF")
chunklet-i: 4632; chunklet-start-i: 4632; chunklet-end-i: 4644
i: 4632
end-i: 4644
i: 4632
end-i: 4644
i: 4636
end-i: 4644
i: 4640
end-i: 4644
i: 4644
end-i: 4644
i:4644 HIT CHUNK END
(comment . ";;4632: r15 <- r9, r7")
(comment . ";;4636: r15 <- 0x7")
(comment . ";;4640 b 1056")
chunklet-i: 4644; chunklet-start-i: 4644; chunklet-end-i: 4656
i: 4644
end-i: 4656
i: 4648
end-i: 4656
i: 4652
end-i: 4656
i: 4656
end-i: 4656
i:4656 HIT CHUNK END
(comment . ";;4644: r15 <- r9, 0x1\n")
(comment . ";;4648: r15 <- 0xF")
(comment . ";;4652 b 1044")
chunklet-i: 4656; chunklet-start-i: 4656; chunklet-end-i: 4664
i: 4656
end-i: 4664
i: 4660
end-i: 4664
i: 4664
end-i: 4664
i:4664 HIT CHUNK END
(comment . ";;4656: r15 <- 0x38")
(comment . ";;4660 b 1036")
chunklet-i: 4664; chunklet-start-i: 4664; chunklet-end-i: 4700
i: 4664
end-i: 4700
i: 4668
end-i: 4700
i: 4672
end-i: 4700
i: 4676
end-i: 4700
i: 4688
end-i: 4700
i: 4692
end-i: 4700
i: 4696
end-i: 4700
i: 4700
end-i: 4700
i:4700 HIT CHUNK END
(comment . ";;4664: r15 <- 0x8")
(comment . ";;4668: r15 <- r9, 0x21\n")
(comment . ";;4672: r15 <- 0x0")
(comment . ";; literal r9")
(comment . ";;4688: r4 <- r9, 0x5\n")
(comment . ";;4692: r4 <- 0x1E")
(comment . ";;4696 b 940")
chunklet-i: 4700; chunklet-start-i: 4700; chunklet-end-i: 4724
i: 4700
end-i: 4724
i: 4700
end-i: 4724
i: 4712
end-i: 4724
i: 4716
end-i: 4724
i: 4720
end-i: 4724
i: 4724
end-i: 4724
i:4724 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;4712: r10 <- r9, 0x5\n")
(comment . ";;4716: r10 <- 0x1E")
(comment . ";;4720 b 840")
chunklet-i: 4724; chunklet-start-i: 4724; chunklet-end-i: 4732
i: 4724
end-i: 4732
i: 4724
end-i: 4732
i: 4728
end-i: 4732
i: 4732
end-i: 4732
i:4732 HIT CHUNK END
(comment . ";;4724: r10 <- 0x7")
(comment . ";;4728 b 756")
chunklet-i: 4732; chunklet-start-i: 4732; chunklet-end-i: 4740
i: 4732
end-i: 4740
i: 4736
end-i: 4740
i: 4740
end-i: 4740
i:4740 HIT CHUNK END
(comment . ";;4732: r14 <- r10, 0x8\n")
(comment . ";;4736 b 748")
chunklet-i: 4740; chunklet-start-i: 4740; chunklet-end-i: 4744
i: 4740
end-i: 4744
i: 4744
end-i: 4744
i:4744 HIT CHUNK END
(comment . ";;4740: r10 <- 0xE")
chunklet-i: 4744; chunklet-start-i: 4744; chunklet-end-i: 4756
i: 4744
end-i: 4756
i: 4744
end-i: 4756
i: 4748
end-i: 4756
i: 4752
end-i: 4756
i: 4756
end-i: 4756
i:4756 HIT CHUNK END
(comment . ";;4744: r14 <- r4, r10")
(comment . ";;4748: r14 <- 0x7")
(comment . ";;4752 b 664")
chunklet-i: 4756; chunklet-start-i: 4756; chunklet-end-i: 4768
i: 4756
end-i: 4768
i: 4760
end-i: 4768
i: 4764
end-i: 4768
i: 4768
end-i: 4768
i:4768 HIT CHUNK END
(comment . ";;4756: r14 <- r10, r3")
(comment . ";;4760: r14 <- r4, r14")
(comment . ";;4764 b 652")
chunklet-i: 4768; chunklet-start-i: 4768; chunklet-end-i: 4772
i: 4768
end-i: 4772
i: 4772
end-i: 4772
i:4772 HIT CHUNK END
(comment . ";;4768: r10 <- 0xE")
chunklet-i: 4772; chunklet-start-i: 4772; chunklet-end-i: 4780
i: 4772
end-i: 4780
i: 4772
end-i: 4780
i: 4776
end-i: 4780
i: 4780
end-i: 4780
i:4780 HIT CHUNK END
(comment . ";;4772: r10 <- 0x7")
(comment . ";;4776 b 568")
chunklet-i: 4780; chunklet-start-i: 4780; chunklet-end-i: 4788
i: 4780
end-i: 4788
i: 4784
end-i: 4788
i: 4788
end-i: 4788
i:4788 HIT CHUNK END
(comment . ";;4780: r14 <- r10, 0x8\n")
(comment . ";;4784 b 560")
chunklet-i: 4788; chunklet-start-i: 4788; chunklet-end-i: 4792
i: 4788
end-i: 4792
i: 4792
end-i: 4792
i:4792 HIT CHUNK END
(comment . ";;4788: r10 <- 0xE")
chunklet-i: 4792; chunklet-start-i: 4792; chunklet-end-i: 4812
i: 4792
end-i: 4812
i: 4792
end-i: 4812
i: 4796
end-i: 4812
i: 4800
end-i: 4812
i: 4804
end-i: 4812
i: 4808
end-i: 4812
i: 4812
end-i: 4812
i:4812 HIT CHUNK END
(comment . ";;4792: r5 <- r2, r9")
(comment . ";;4796: r2 <- r2, r0")
(comment . ";;4800: r14 <- r0, 0x68\n")
(comment . ";;4804: r14 <- r2")
(comment . ";;4808 b 516")
chunklet-i: 4812; chunklet-start-i: 4812; chunklet-end-i: 4872
i: 4812
end-i: 4872
i: 4812
end-i: 4872
i: 4816
end-i: 4872
i: 4820
end-i: 4872
i: 4824
end-i: 4872
i: 4828
end-i: 4872
i: 4832
end-i: 4872
i: 4836
end-i: 4872
i: 4840
end-i: 4872
i: 4852
end-i: 4872
i: 4856
end-i: 4872
i: 4860
end-i: 4872
i: 4864
end-i: 4872
i: 4868
end-i: 4872
i: 4872
end-i: 4872
at header: 4872
(comment . ";;4812: r15 <- r5, 0x7\n")
(comment . ";;4816: r15 <- 0x1E")
(comment . ";;4820: r15 <- r5, 0xF\n")
(comment . ";;4824: r5 <- r1, 0x10\n")
(comment . ";;4828: r9 <- 0x0")
(comment . ";;4832: r10 <- r1, 0x8\n")
(comment . ";;4836: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;4852: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;4860: r15 <- r1, 0x0\n")
(comment . ";;4864: r4 <- 0x2")
(comment . ";;4868: b r5, 13")
chunklet-i: 4872; chunklet-start-i: 4888; chunklet-end-i: 4908
i: 4872
end-i: 4908
at header: 4872
i: 4888
end-i: 4908
i: 4892
end-i: 4908
i: 4896
end-i: 4908
i: 4900
end-i: 4908
i: 4904
end-i: 4908
i: 4908
end-i: 4908
i:4908 HIT CHUNK END
(comment . ";;4888: r1 <- r1, r8")
(comment . ";;4892: r10 <- r1, 0x8\n")
(comment . ";;4896: r4 <- 0x6")
(comment . ";;4904 b 284")
chunklet-i: 4908; chunklet-start-i: 4908; chunklet-end-i: 4924
i: 4908
end-i: 4924
i: 4912
end-i: 4924
i: 4916
end-i: 4924
i: 4920
end-i: 4924
i: 4924
end-i: 4924
i:4924 HIT CHUNK END
(comment . ";;4908: r9 <- r0, 0x1F0\n")
(comment . ";;4912: r15 <- r9, 0x11\n")
(comment . ";;4916: r15 <- 0x0")
(comment . ";;4920 b 216")
chunklet-i: 4924; chunklet-start-i: 4924; chunklet-end-i: 4944
i: 4924
end-i: 4944
i: 4928
end-i: 4944
i: 4932
end-i: 4944
i: 4936
end-i: 4944
i: 4940
end-i: 4944
i: 4944
end-i: 4944
i:4944 HIT CHUNK END
(comment . ";;4924: r14 <- r15, r4")
(comment . ";;4928: r14 <- r9, 0x11\n")
(comment . ";;4932: r13 <- r9, 0x21\n")
(comment . ";;4936: r14 <- 0xA16")
(comment . ";;4940: r14 <- r15, r13")
chunklet-i: 4944; chunklet-start-i: 4944; chunklet-end-i: 4992
i: 4944
end-i: 4992
i: 4944
end-i: 4992
i: 4956
end-i: 4992
i: 4960
end-i: 4992
i: 4972
end-i: 4992
i: 4976
end-i: 4992
i: 4980
end-i: 4992
i: 4984
end-i: 4992
i: 4988
end-i: 4992
i: 4992
end-i: 4992
at header: 4992
(comment . ";; literal r9")
(comment . ";;4956: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;4972: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;4980: r15 <- r1, 0x0\n")
(comment . ";;4984: r4 <- 0x1")
(comment . ";;4988: b r5, 13")
chunklet-i: 4992; chunklet-start-i: 5008; chunklet-end-i: 5012
i: 4992
end-i: 5012
at header: 4992
i: 5008
end-i: 5012
i: 5012
end-i: 5012
i:5012 HIT CHUNK END
(comment . ";;5008: r1 <- r1, r8")
chunklet-i: 5012; chunklet-start-i: 5012; chunklet-end-i: 5056
i: 5012
end-i: 5056
i: 5012
end-i: 5056
i: 5016
end-i: 5056
i: 5020
end-i: 5056
i: 5024
end-i: 5056
i: 5036
end-i: 5056
i: 5040
end-i: 5056
i: 5044
end-i: 5056
i: 5048
end-i: 5056
i: 5052
end-i: 5056
i: 5056
end-i: 5056
at header: 5056
(comment . ";;5012: r15 <- r1, 0x10\n")
(comment . ";;5016: r9 <- r15, 0x7\n")
(comment . ";;5020: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;5036: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;5044: r15 <- r1, 0x0\n")
(comment . ";;5048: r4 <- 0x1")
(comment . ";;5052: b r5, 13")
chunklet-i: 5056; chunklet-start-i: 5072; chunklet-end-i: 5088
i: 5056
end-i: 5088
at header: 5056
i: 5072
end-i: 5088
i: 5076
end-i: 5088
i: 5080
end-i: 5088
i: 5084
end-i: 5088
i: 5088
end-i: 5088
i:5088 HIT CHUNK END
(comment . ";;5072: r1 <- r1, r8")
(comment . ";;5076: r4 <- 0x6")
(comment . ";;5084 b 8")
chunklet-i: 5088; chunklet-start-i: 5088; chunklet-end-i: 5096
i: 5088
end-i: 5096
i: 5092
end-i: 5096
i: 5096
end-i: 5096
i:5096 HIT CHUNK END
(comment . ";;5088: r4 <- 0x6")
(comment . ";;5092: b r1, 0")
chunklet-i: 5096; chunklet-start-i: 5096; chunklet-end-i: 5120
i: 5096
end-i: 5120
i: 5096
end-i: 5120
i: 5108
end-i: 5120
i: 5112
end-i: 5120
i: 5116
end-i: 5120
i: 5120
end-i: 5120
i:5120 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;5108: r4 <- r9, 0x5\n")
(comment . ";;5112: r4 <- 0x1E")
(comment . ";;5116 b 4")
chunklet-i: 5120; chunklet-start-i: 5120; chunklet-end-i: 5124
i: 5120
end-i: 5124
i: 5124
end-i: 5124
i:5124 HIT CHUNK END
(comment . ";;5120: b r1, 0")
chunklet-i: 5124; chunklet-start-i: 5124; chunklet-end-i: 5140
i: 5124
end-i: 5140
i: 5124
end-i: 5140
i: 5136
end-i: 5140
i: 5140
end-i: 5140
i:5140 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;5136: b r6")
chunklet-i: 5140; chunklet-start-i: 5140; chunklet-end-i: 5168
i: 5140
end-i: 5168
i: 5140
end-i: 5168
i: 5144
end-i: 5168
i: 5148
end-i: 5168
i: 5152
end-i: 5168
i: 5164
end-i: 5168
i: 5168
end-i: 5168
at header: 5168
(comment . ";;5140: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;5148: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5164: b r6")
chunklet-i: 5168; chunklet-start-i: 5184; chunklet-end-i: 5192
i: 5168
end-i: 5192
at header: 5168
i: 5184
end-i: 5192
i: 5188
end-i: 5192
i: 5192
end-i: 5192
i:5192 HIT CHUNK END
(comment . ";;5184: r1 <- r1, r8")
(comment . ";;5188 b -248")
chunklet-i: 5192; chunklet-start-i: 5192; chunklet-end-i: 5232
i: 5192
end-i: 5232
i: 5192
end-i: 5232
i: 5196
end-i: 5232
i: 5200
end-i: 5232
i: 5212
end-i: 5232
i: 5216
end-i: 5232
i: 5220
end-i: 5232
i: 5224
end-i: 5232
i: 5228
end-i: 5232
i: 5232
end-i: 5232
at header: 5232
(comment . ";;5192: r9 <- 0x0")
(comment . ";;5196: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;5212: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;5220: r15 <- r1, 0x0\n")
(comment . ";;5224: r4 <- 0x2")
(comment . ";;5228: b r5, 13")
chunklet-i: 5232; chunklet-start-i: 5248; chunklet-end-i: 5276
i: 5232
end-i: 5276
at header: 5232
i: 5248
end-i: 5276
i: 5252
end-i: 5276
i: 5256
end-i: 5276
i: 5260
end-i: 5276
i: 5264
end-i: 5276
i: 5268
end-i: 5276
i: 5272
end-i: 5276
i: 5276
end-i: 5276
i:5276 HIT CHUNK END
(comment . ";;5248: r1 <- r1, r8")
(comment . ";;5252: r15 <- r1, 0x10\n")
(comment . ";;5256: r15 <- r15, r7")
(comment . ";;5260: r4 <- r15, 0x0\n")
(comment . ";;5264: r4 <- 0x7")
(comment . ";;5272 b -264")
chunklet-i: 5276; chunklet-start-i: 5276; chunklet-end-i: 5288
i: 5276
end-i: 5288
i: 5280
end-i: 5288
i: 5284
end-i: 5288
i: 5288
end-i: 5288
i:5288 HIT CHUNK END
(comment . ";;5276: r7 <- r0, 0x68\n")
(comment . ";;5280: r2 <- r7")
(comment . ";;5284 b 16")
chunklet-i: 5288; chunklet-start-i: 5288; chunklet-end-i: 5304
i: 5288
end-i: 5304
i: 5288
end-i: 5304
i: 5292
end-i: 5304
i: 5296
end-i: 5304
i: 5300
end-i: 5304
i: 5304
end-i: 5304
i:5304 HIT CHUNK END
(comment . ";;5288: r7 <- r7, r8")
(comment . ";;5292: r7 <- r0, 0x68\n")
(comment . ";;5296: r15 <- r7, 0x0\n")
(comment . ";;5300 b -292")
chunklet-i: 5304; chunklet-start-i: 5304; chunklet-end-i: 5316
i: 5304
end-i: 5316
i: 5304
end-i: 5316
i: 5316
end-i: 5316
i:5316 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 5316; chunklet-start-i: 5320; chunklet-end-i: 5328
i: 5316
end-i: 5328
i: 5320
end-i: 5328
i: 5324
end-i: 5328
i: 5328
end-i: 5328
i:5328 HIT CHUNK END
(comment . ";; instruction 5316 not included")
(comment . ";;5320: r7 <- r0, 0x68\n")
(comment . ";;5324 b -40")
chunklet-i: 5328; chunklet-start-i: 5328; chunklet-end-i: 5340
i: 5328
end-i: 5340
i: 5328
end-i: 5340
i: 5340
end-i: 5340
i:5340 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 5340; chunklet-start-i: 5344; chunklet-end-i: 5348
i: 5340
end-i: 5348
i: 5344
end-i: 5348
i: 5348
end-i: 5348
i:5348 HIT CHUNK END
(comment . ";; instruction 5340 not included")
(comment . ";;5344 b -536")
chunklet-i: 5348; chunklet-start-i: 5348; chunklet-end-i: 5384
i: 5348
end-i: 5384
i: 5348
end-i: 5384
i: 5352
end-i: 5384
i: 5356
end-i: 5384
i: 5360
end-i: 5384
i: 5364
end-i: 5384
i: 5368
end-i: 5384
i: 5380
end-i: 5384
i: 5384
end-i: 5384
at header: 5384
(comment . ";;5348: r9 <- 0x8")
(comment . ";;5352: r15 <- r1, 0x10\n")
(comment . ";;5356: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;5364: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5380: b r6")
chunklet-i: 5384; chunklet-start-i: 5400; chunklet-end-i: 5420
i: 5384
end-i: 5420
at header: 5384
i: 5400
end-i: 5420
i: 5404
end-i: 5420
i: 5408
end-i: 5420
i: 5412
end-i: 5420
i: 5416
end-i: 5420
i: 5420
end-i: 5420
i:5420 HIT CHUNK END
(comment . ";;5400: r1 <- r1, r8")
(comment . ";;5404: r10 <- 0x4")
(comment . ";;5408: r15 <- r1, 0x10\n")
(comment . ";;5416 b -628")
chunklet-i: 5420; chunklet-start-i: 5420; chunklet-end-i: 5456
i: 5420
end-i: 5456
i: 5420
end-i: 5456
i: 5424
end-i: 5456
i: 5428
end-i: 5456
i: 5432
end-i: 5456
i: 5436
end-i: 5456
i: 5440
end-i: 5456
i: 5452
end-i: 5456
i: 5456
end-i: 5456
at header: 5456
(comment . ";;5420: r9 <- 0x4")
(comment . ";;5424: r15 <- r1, 0x10\n")
(comment . ";;5428: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;5436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5452: b r6")
chunklet-i: 5456; chunklet-start-i: 5472; chunklet-end-i: 5488
i: 5456
end-i: 5488
at header: 5456
i: 5472
end-i: 5488
i: 5476
end-i: 5488
i: 5480
end-i: 5488
i: 5484
end-i: 5488
i: 5488
end-i: 5488
i:5488 HIT CHUNK END
(comment . ";;5472: r1 <- r1, r8")
(comment . ";;5476: r10 <- 0x4")
(comment . ";;5480: r15 <- r1, 0x10\n")
(comment . ";;5484 b -716")
chunklet-i: 5488; chunklet-start-i: 5488; chunklet-end-i: 5528
i: 5488
end-i: 5528
i: 5488
end-i: 5528
i: 5492
end-i: 5528
i: 5496
end-i: 5528
i: 5500
end-i: 5528
i: 5504
end-i: 5528
i: 5508
end-i: 5528
i: 5512
end-i: 5528
i: 5524
end-i: 5528
i: 5528
end-i: 5528
at header: 5528
(comment . ";;5488: r9 <- 0x8")
(comment . ";;5492: r4 <- r1, 0x8\n")
(comment . ";;5496: r15 <- r1, 0x10\n")
(comment . ";;5500: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;5508: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5524: b r6")
chunklet-i: 5528; chunklet-start-i: 5544; chunklet-end-i: 5564
i: 5528
end-i: 5564
at header: 5528
i: 5544
end-i: 5564
i: 5548
end-i: 5564
i: 5552
end-i: 5564
i: 5556
end-i: 5564
i: 5560
end-i: 5564
i: 5564
end-i: 5564
i:5564 HIT CHUNK END
(comment . ";;5544: r1 <- r1, r8")
(comment . ";;5548: r10 <- 0x4")
(comment . ";;5552: r4 <- r1, 0x8\n")
(comment . ";;5556: r15 <- r1, 0x10\n")
(comment . ";;5560 b -820")
chunklet-i: 5564; chunklet-start-i: 5564; chunklet-end-i: 5600
i: 5564
end-i: 5600
i: 5564
end-i: 5600
i: 5568
end-i: 5600
i: 5572
end-i: 5600
i: 5576
end-i: 5600
i: 5580
end-i: 5600
i: 5584
end-i: 5600
i: 5596
end-i: 5600
i: 5600
end-i: 5600
at header: 5600
(comment . ";;5564: r4 <- r1, 0x8\n")
(comment . ";;5568: r15 <- r1, 0x10\n")
(comment . ";;5572: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;5580: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5596: b r6")
chunklet-i: 5600; chunklet-start-i: 5616; chunklet-end-i: 5640
i: 5600
end-i: 5640
at header: 5600
i: 5616
end-i: 5640
i: 5620
end-i: 5640
i: 5624
end-i: 5640
i: 5628
end-i: 5640
i: 5632
end-i: 5640
i: 5636
end-i: 5640
i: 5640
end-i: 5640
i:5640 HIT CHUNK END
(comment . ";;5616: r1 <- r1, r8")
(comment . ";;5620: r10 <- 0x4")
(comment . ";;5624: r4 <- r1, 0x8\n")
(comment . ";;5628: r15 <- r1, 0x10\n")
(comment . ";;5636 b -916")
chunklet-i: 5640; chunklet-start-i: 5640; chunklet-end-i: 5672
i: 5640
end-i: 5672
i: 5640
end-i: 5672
i: 5644
end-i: 5672
i: 5648
end-i: 5672
i: 5652
end-i: 5672
i: 5656
end-i: 5672
i: 5668
end-i: 5672
i: 5672
end-i: 5672
at header: 5672
(comment . ";;5640: r15 <- r1, 0x10\n")
(comment . ";;5644: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;5652: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5668: b r6")
chunklet-i: 5672; chunklet-start-i: 5688; chunklet-end-i: 5700
i: 5672
end-i: 5700
at header: 5672
i: 5688
end-i: 5700
i: 5692
end-i: 5700
i: 5696
end-i: 5700
i: 5700
end-i: 5700
i:5700 HIT CHUNK END
(comment . ";;5688: r1 <- r1, r8")
(comment . ";;5692: r15 <- r1, 0x10\n")
(comment . ";;5696 b -1000")
chunklet-i: 5700; chunklet-start-i: 5700; chunklet-end-i: 5724
i: 5700
end-i: 5724
i: 5700
end-i: 5724
i: 5704
end-i: 5724
i: 5708
end-i: 5724
i: 5720
end-i: 5724
i: 5724
end-i: 5724
i:5724 HIT CHUNK END
(comment . ";;5700: r10 <- 0x18")
(comment . ";;5704: r11 <- 0x8")
(comment . ";; literal r6")
(comment . ";;5720: b r6")
chunklet-i: 5724; chunklet-start-i: 5724; chunklet-end-i: 5752
i: 5724
end-i: 5752
i: 5724
end-i: 5752
i: 5728
end-i: 5752
i: 5732
end-i: 5752
i: 5736
end-i: 5752
i: 5748
end-i: 5752
i: 5752
end-i: 5752
at header: 5752
(comment . ";;5724: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;5732: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5748: b r6")
chunklet-i: 5752; chunklet-start-i: 5768; chunklet-end-i: 5780
i: 5752
end-i: 5780
at header: 5752
i: 5768
end-i: 5780
i: 5772
end-i: 5780
i: 5776
end-i: 5780
i: 5780
end-i: 5780
i:5780 HIT CHUNK END
(comment . ";;5768: r1 <- r1, r8")
(comment . ";;5772: r9 <- 0x4")
(comment . ";;5776 b -1148")
chunklet-i: 5780; chunklet-start-i: 5780; chunklet-end-i: 5804
i: 5780
end-i: 5804
i: 5780
end-i: 5804
i: 5784
end-i: 5804
i: 5788
end-i: 5804
i: 5800
end-i: 5804
i: 5804
end-i: 5804
i:5804 HIT CHUNK END
(comment . ";;5780: r10 <- 0x10")
(comment . ";;5784: r11 <- 0x8")
(comment . ";; literal r6")
(comment . ";;5800: b r6")
chunklet-i: 5804; chunklet-start-i: 5804; chunklet-end-i: 5832
i: 5804
end-i: 5832
i: 5804
end-i: 5832
i: 5808
end-i: 5832
i: 5812
end-i: 5832
i: 5816
end-i: 5832
i: 5828
end-i: 5832
i: 5832
end-i: 5832
at header: 5832
(comment . ";;5804: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;5812: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5828: b r6")
chunklet-i: 5832; chunklet-start-i: 5848; chunklet-end-i: 5860
i: 5832
end-i: 5860
at header: 5832
i: 5848
end-i: 5860
i: 5852
end-i: 5860
i: 5856
end-i: 5860
i: 5860
end-i: 5860
i:5860 HIT CHUNK END
(comment . ";;5848: r1 <- r1, r8")
(comment . ";;5852: r9 <- 0x4")
(comment . ";;5856 b -1296")
chunklet-i: 5860; chunklet-start-i: 5860; chunklet-end-i: 5884
i: 5860
end-i: 5884
i: 5860
end-i: 5884
i: 5864
end-i: 5884
i: 5868
end-i: 5884
i: 5880
end-i: 5884
i: 5884
end-i: 5884
i:5884 HIT CHUNK END
(comment . ";;5860: r10 <- 0x8")
(comment . ";;5864: r11 <- 0x18")
(comment . ";; literal r6")
(comment . ";;5880: b r6")
chunklet-i: 5884; chunklet-start-i: 5884; chunklet-end-i: 5912
i: 5884
end-i: 5912
i: 5884
end-i: 5912
i: 5888
end-i: 5912
i: 5892
end-i: 5912
i: 5896
end-i: 5912
i: 5908
end-i: 5912
i: 5912
end-i: 5912
at header: 5912
(comment . ";;5884: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;5892: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5908: b r6")
chunklet-i: 5912; chunklet-start-i: 5928; chunklet-end-i: 5940
i: 5912
end-i: 5940
at header: 5912
i: 5928
end-i: 5940
i: 5932
end-i: 5940
i: 5936
end-i: 5940
i: 5940
end-i: 5940
i:5940 HIT CHUNK END
(comment . ";;5928: r1 <- r1, r8")
(comment . ";;5932: r9 <- 0x4")
(comment . ";;5936 b -1444")
chunklet-i: 5940; chunklet-start-i: 5940; chunklet-end-i: 5964
i: 5940
end-i: 5964
i: 5940
end-i: 5964
i: 5944
end-i: 5964
i: 5948
end-i: 5964
i: 5960
end-i: 5964
i: 5964
end-i: 5964
i:5964 HIT CHUNK END
(comment . ";;5940: r10 <- 0x0")
(comment . ";;5944: r11 <- 0x68")
(comment . ";; literal r6")
(comment . ";;5960: b r6")
chunklet-i: 5964; chunklet-start-i: 5964; chunklet-end-i: 5992
i: 5964
end-i: 5992
i: 5964
end-i: 5992
i: 5968
end-i: 5992
i: 5972
end-i: 5992
i: 5976
end-i: 5992
i: 5988
end-i: 5992
i: 5992
end-i: 5992
at header: 5992
(comment . ";;5964: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;5972: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5988: b r6")
chunklet-i: 5992; chunklet-start-i: 6008; chunklet-end-i: 6024
i: 5992
end-i: 6024
at header: 5992
i: 6008
end-i: 6024
i: 6012
end-i: 6024
i: 6016
end-i: 6024
i: 6020
end-i: 6024
i: 6024
end-i: 6024
i:6024 HIT CHUNK END
(comment . ";;6008: r1 <- r1, r8")
(comment . ";;6012: r9 <- 0x4")
(comment . ";;6020 b -1596")
chunklet-i: 6024; chunklet-start-i: 6024; chunklet-end-i: 6032
i: 6024
end-i: 6032
i: 6024
end-i: 6032
i: 6028
end-i: 6032
i: 6032
end-i: 6032
i:6032 HIT CHUNK END
(comment . ";;6024: r3 <- r3, 0x1\n")
(comment . ";;6028 b 72")
chunklet-i: 6032; chunklet-start-i: 6032; chunklet-end-i: 6072
i: 6032
end-i: 6072
i: 6036
end-i: 6072
i: 6040
end-i: 6072
i: 6044
end-i: 6072
i: 6048
end-i: 6072
i: 6052
end-i: 6072
i: 6056
end-i: 6072
i: 6068
end-i: 6072
i: 6072
end-i: 6072
at header: 6072
(comment . ";;6032: r13 <- r1, 0x8\n")
(comment . ";;6036: r4 <- r1, 0x10\n")
(comment . ";;6040: r10 <- r1, 0x18\n")
(comment . ";;6044: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;6052: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6068: b r6")
chunklet-i: 6072; chunklet-start-i: 6088; chunklet-end-i: 6104
i: 6072
end-i: 6104
at header: 6072
i: 6088
end-i: 6104
i: 6092
end-i: 6104
i: 6096
end-i: 6104
i: 6100
end-i: 6104
i: 6104
end-i: 6104
i:6104 HIT CHUNK END
(comment . ";;6088: r1 <- r1, r0")
(comment . ";;6092: r13 <- r1, 0x8\n")
(comment . ";;6096: r4 <- r1, 0x10\n")
(comment . ";;6100: r10 <- r1, 0x18\n")
chunklet-i: 6104; chunklet-start-i: 6104; chunklet-end-i: 6144
i: 6104
end-i: 6144
i: 6104
end-i: 6144
i: 6108
end-i: 6144
i: 6112
end-i: 6144
i: 6116
end-i: 6144
i: 6120
end-i: 6144
i: 6124
end-i: 6144
i: 6128
end-i: 6144
i: 6140
end-i: 6144
i: 6144
end-i: 6144
at header: 6144
(comment . ";;6104: r9 <- 0x4")
(comment . ";;6108: r13 <- r1, 0x8\n")
(comment . ";;6112: r4 <- r1, 0x10\n")
(comment . ";;6116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;6124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6140: b r6")
chunklet-i: 6144; chunklet-start-i: 6160; chunklet-end-i: 6188
i: 6144
end-i: 6188
at header: 6144
i: 6160
end-i: 6188
i: 6164
end-i: 6188
i: 6168
end-i: 6188
i: 6172
end-i: 6188
i: 6176
end-i: 6188
i: 6180
end-i: 6188
i: 6184
end-i: 6188
i: 6188
end-i: 6188
i:6188 HIT CHUNK END
(comment . ";;6160: r1 <- r1, r8")
(comment . ";;6164: r15 <- 0x4")
(comment . ";;6168: r13 <- r1, 0x8\n")
(comment . ";;6172: r4 <- r1, 0x10\n")
(comment . ";;6176: r15 <- 0x6")
(comment . ";;6184 b -3700")
chunklet-i: 6188; chunklet-start-i: 6188; chunklet-end-i: 6192
i: 6188
end-i: 6192
i: 6192
end-i: 6192
i:6192 HIT CHUNK END
(comment . ";;6188 b -2868")
chunklet-i: 6192; chunklet-start-i: 6192; chunklet-end-i: 6200
i: 6192
end-i: 6200
i: 6192
end-i: 6200
i: 6196
end-i: 6200
i: 6200
end-i: 6200
i:6200 HIT CHUNK END
(comment . ";;6192: r3 <- r3, 0x1\n")
(comment . ";;6196 b 76")
chunklet-i: 6200; chunklet-start-i: 6200; chunklet-end-i: 6240
i: 6200
end-i: 6240
i: 6204
end-i: 6240
i: 6208
end-i: 6240
i: 6212
end-i: 6240
i: 6216
end-i: 6240
i: 6220
end-i: 6240
i: 6224
end-i: 6240
i: 6236
end-i: 6240
i: 6240
end-i: 6240
at header: 6240
(comment . ";;6200: r13 <- r1, 0x8\n")
(comment . ";;6204: r4 <- r1, 0x10\n")
(comment . ";;6208: r9 <- r1, 0x18\n")
(comment . ";;6212: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;6220: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6236: b r6")
chunklet-i: 6240; chunklet-start-i: 6256; chunklet-end-i: 6276
i: 6240
end-i: 6276
at header: 6240
i: 6256
end-i: 6276
i: 6260
end-i: 6276
i: 6264
end-i: 6276
i: 6268
end-i: 6276
i: 6272
end-i: 6276
i: 6276
end-i: 6276
i:6276 HIT CHUNK END
(comment . ";;6260: r1 <- r1, r0")
(comment . ";;6264: r13 <- r1, 0x8\n")
(comment . ";;6268: r4 <- r1, 0x10\n")
(comment . ";;6272: r9 <- r1, 0x18\n")
chunklet-i: 6276; chunklet-start-i: 6276; chunklet-end-i: 6312
i: 6276
end-i: 6312
i: 6276
end-i: 6312
i: 6280
end-i: 6312
i: 6284
end-i: 6312
i: 6288
end-i: 6312
i: 6292
end-i: 6312
i: 6296
end-i: 6312
i: 6308
end-i: 6312
i: 6312
end-i: 6312
at header: 6312
(comment . ";;6276: r13 <- r1, 0x8\n")
(comment . ";;6280: r4 <- r1, 0x10\n")
(comment . ";;6284: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;6292: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6308: b r6")
chunklet-i: 6312; chunklet-start-i: 6328; chunklet-end-i: 6348
i: 6312
end-i: 6348
at header: 6312
i: 6328
end-i: 6348
i: 6332
end-i: 6348
i: 6336
end-i: 6348
i: 6340
end-i: 6348
i: 6344
end-i: 6348
i: 6348
end-i: 6348
i:6348 HIT CHUNK END
(comment . ";;6328: r1 <- r1, r8")
(comment . ";;6332: r10 <- 0x4")
(comment . ";;6336: r13 <- r1, 0x8\n")
(comment . ";;6340: r4 <- r1, 0x10\n")
(comment . ";;6344 b -3880")
chunklet-i: 6348; chunklet-start-i: 6348; chunklet-end-i: 6356
i: 6348
end-i: 6356
i: 6348
end-i: 6356
i: 6352
end-i: 6356
i: 6356
end-i: 6356
i:6356 HIT CHUNK END
(comment . ";;6348: r3 <- r3, 0x1\n")
(comment . ";;6352 b 64")
chunklet-i: 6356; chunklet-start-i: 6356; chunklet-end-i: 6392
i: 6356
end-i: 6392
i: 6360
end-i: 6392
i: 6364
end-i: 6392
i: 6368
end-i: 6392
i: 6372
end-i: 6392
i: 6376
end-i: 6392
i: 6388
end-i: 6392
i: 6392
end-i: 6392
at header: 6392
(comment . ";;6356: r13 <- r1, 0x8\n")
(comment . ";;6360: r4 <- r1, 0x10\n")
(comment . ";;6364: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;6372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6388: b r6")
chunklet-i: 6392; chunklet-start-i: 6408; chunklet-end-i: 6420
i: 6392
end-i: 6420
at header: 6392
i: 6408
end-i: 6420
i: 6412
end-i: 6420
i: 6416
end-i: 6420
i: 6420
end-i: 6420
i:6420 HIT CHUNK END
(comment . ";;6408: r1 <- r1, r8")
(comment . ";;6412: r13 <- r1, 0x8\n")
(comment . ";;6416: r4 <- r1, 0x10\n")
chunklet-i: 6420; chunklet-start-i: 6420; chunklet-end-i: 6464
i: 6420
end-i: 6464
i: 6420
end-i: 6464
i: 6424
end-i: 6464
i: 6428
end-i: 6464
i: 6432
end-i: 6464
i: 6436
end-i: 6464
i: 6440
end-i: 6464
i: 6444
end-i: 6464
i: 6448
end-i: 6464
i: 6460
end-i: 6464
i: 6464
end-i: 6464
at header: 6464
(comment . ";;6420: r9 <- 0x4")
(comment . ";;6424: r10 <- 0x28")
(comment . ";;6428: r13 <- r1, 0x8\n")
(comment . ";;6432: r4 <- r1, 0x10\n")
(comment . ";;6436: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;6444: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6460: b r6")
chunklet-i: 6464; chunklet-start-i: 6480; chunklet-end-i: 6504
i: 6464
end-i: 6504
at header: 6464
i: 6480
end-i: 6504
i: 6484
end-i: 6504
i: 6488
end-i: 6504
i: 6492
end-i: 6504
i: 6496
end-i: 6504
i: 6500
end-i: 6504
i: 6504
end-i: 6504
i:6504 HIT CHUNK END
(comment . ";;6480: r1 <- r1, r8")
(comment . ";;6484: r15 <- 0x4")
(comment . ";;6488: r13 <- r1, 0x8\n")
(comment . ";;6492: r4 <- r1, 0x10\n")
(comment . ";;6496: r15 <- 0x6")
(comment . ";;6500 b -6036")
chunklet-i: 6504; chunklet-start-i: 6504; chunklet-end-i: 6508
i: 6504
end-i: 6508
i: 6508
end-i: 6508
i:6508 HIT CHUNK END
(comment . ";;6504 b -4068")
chunklet-i: 6508; chunklet-start-i: 6508; chunklet-end-i: 6516
i: 6508
end-i: 6516
i: 6508
end-i: 6516
i: 6512
end-i: 6516
i: 6516
end-i: 6516
i:6516 HIT CHUNK END
(comment . ";;6508: r3 <- r3, 0x1\n")
(comment . ";;6512 b 64")
chunklet-i: 6516; chunklet-start-i: 6516; chunklet-end-i: 6552
i: 6516
end-i: 6552
i: 6520
end-i: 6552
i: 6524
end-i: 6552
i: 6528
end-i: 6552
i: 6532
end-i: 6552
i: 6536
end-i: 6552
i: 6548
end-i: 6552
i: 6552
end-i: 6552
at header: 6552
(comment . ";;6516: r13 <- r1, 0x8\n")
(comment . ";;6520: r4 <- r1, 0x10\n")
(comment . ";;6524: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;6532: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6548: b r6")
chunklet-i: 6552; chunklet-start-i: 6568; chunklet-end-i: 6580
i: 6552
end-i: 6580
at header: 6552
i: 6568
end-i: 6580
i: 6572
end-i: 6580
i: 6576
end-i: 6580
i: 6580
end-i: 6580
i:6580 HIT CHUNK END
(comment . ";;6568: r1 <- r1, r8")
(comment . ";;6572: r13 <- r1, 0x8\n")
(comment . ";;6576: r4 <- r1, 0x10\n")
chunklet-i: 6580; chunklet-start-i: 6580; chunklet-end-i: 6624
i: 6580
end-i: 6624
i: 6580
end-i: 6624
i: 6584
end-i: 6624
i: 6588
end-i: 6624
i: 6592
end-i: 6624
i: 6596
end-i: 6624
i: 6600
end-i: 6624
i: 6604
end-i: 6624
i: 6608
end-i: 6624
i: 6620
end-i: 6624
i: 6624
end-i: 6624
at header: 6624
(comment . ";;6580: r9 <- 0x4")
(comment . ";;6584: r10 <- 0xD")
(comment . ";;6588: r13 <- r1, 0x8\n")
(comment . ";;6592: r4 <- r1, 0x10\n")
(comment . ";;6596: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;6604: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6620: b r6")
chunklet-i: 6624; chunklet-start-i: 6640; chunklet-end-i: 6664
i: 6624
end-i: 6664
at header: 6624
i: 6640
end-i: 6664
i: 6644
end-i: 6664
i: 6648
end-i: 6664
i: 6652
end-i: 6664
i: 6656
end-i: 6664
i: 6660
end-i: 6664
i: 6664
end-i: 6664
i:6664 HIT CHUNK END
(comment . ";;6640: r1 <- r1, r8")
(comment . ";;6644: r15 <- 0x4")
(comment . ";;6648: r13 <- r1, 0x8\n")
(comment . ";;6652: r4 <- r1, 0x10\n")
(comment . ";;6656: r15 <- 0x6")
(comment . ";;6660 b -6568")
chunklet-i: 6664; chunklet-start-i: 6664; chunklet-end-i: 6668
i: 6664
end-i: 6668
i: 6668
end-i: 6668
i:6668 HIT CHUNK END
(comment . ";;6664 b -6220")
chunklet-i: 6668; chunklet-start-i: 6668; chunklet-end-i: 6680
i: 6668
end-i: 6680
i: 6668
end-i: 6680
i: 6680
end-i: 6680
i:6680 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 6680; chunklet-start-i: 6684; chunklet-end-i: 6688
i: 6680
end-i: 6688
i: 6684
end-i: 6688
i: 6688
end-i: 6688
i:6688 HIT CHUNK END
(comment . ";; instruction 6680 not included")
(comment . ";;6684 b -6652")
chunklet-i: 6688; chunklet-start-i: 6688; chunklet-end-i: 6704
i: 6688
end-i: 6704
i: 6688
end-i: 6704
i: 6700
end-i: 6704
i: 6704
end-i: 6704
i:6704 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;6700: b r6")
chunklet-i: 6704; chunklet-start-i: 6704; chunklet-end-i: 6720
i: 6704
end-i: 6720
i: 6704
end-i: 6720
i: 6716
end-i: 6720
i: 6720
end-i: 6720
i:6720 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;6716: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 44
instruction range for chunk: 44 60
instruction range for chunk: 60 76
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 52")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x1")
(comment . ";;12 b 28")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;16: r10 <- r8, 0xB\n")
(comment . ";; literal r5")
(comment . ";;32: r8 <- r5, 0x5\n")
(comment . ";;36: r4 <- 0x2")
(comment . ";;40: b r5, 13")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 60
i: 44
end-i: 60
i: 44
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;56: b r6")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 76
i: 60
end-i: 76
i: 60
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;72: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 96
instruction range for chunk: 112 156
instruction range for chunk: 156 160
instruction range for chunk: 160 192
instruction range for chunk: 208 220
instruction range for chunk: 220 248
instruction range for chunk: 264 276
instruction range for chunk: 276 304
instruction range for chunk: 320 328
instruction range for chunk: 328 340
instruction range for chunk: 344 348
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;0: r15 <- r0, 0x58\n")
(comment . ";;4: r1 <- r15")
(comment . ";;8 b 316")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r3 <- r3, 0x1\n")
(comment . ";;16 b 256")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 44
i: 20
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;32: r10 <- r9, 0x5\n")
(comment . ";;36: r10 <- 0x1E")
(comment . ";;40 b 176")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r10 <- 0x7")
(comment . ";;48 b 108")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r9 <- r10, 0x8\n")
(comment . ";;56 b 100")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x1")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 156
i: 96
end-i: 156
at header: 96
i: 112
end-i: 156
i: 116
end-i: 156
i: 120
end-i: 156
i: 132
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116: r10 <- 0x4")
(comment . ";; literal r9")
(comment . ";; literal r5")
(comment . ";;144: r8 <- r5, 0x5\n")
(comment . ";;148: r4 <- 0x2")
(comment . ";;152: b r5, 13")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 192
i: 160
end-i: 192
i: 160
end-i: 192
i: 164
end-i: 192
i: 168
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;160: r9 <- 0x8")
(comment . ";;164: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;172: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;188: b r6")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 220
i: 192
end-i: 220
at header: 192
i: 208
end-i: 220
i: 212
end-i: 220
i: 216
end-i: 220
i: 220
end-i: 220
i:220 HIT CHUNK END
(comment . ";;208: r1 <- r1, r8")
(comment . ";;212: r9 <- 0x4")
(comment . ";;216 b -160")
chunklet-i: 220; chunklet-start-i: 220; chunklet-end-i: 248
i: 220
end-i: 248
i: 220
end-i: 248
i: 224
end-i: 248
i: 228
end-i: 248
i: 232
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
at header: 248
(comment . ";;220: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;228: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;244: b r6")
chunklet-i: 248; chunklet-start-i: 264; chunklet-end-i: 276
i: 248
end-i: 276
at header: 248
i: 264
end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";;264: r1 <- r1, r8")
(comment . ";;268: r10 <- 0x4")
(comment . ";;272 b -232")
chunklet-i: 276; chunklet-start-i: 276; chunklet-end-i: 304
i: 276
end-i: 304
i: 276
end-i: 304
i: 280
end-i: 304
i: 284
end-i: 304
i: 288
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
at header: 304
(comment . ";;276: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;284: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;300: b r6")
chunklet-i: 304; chunklet-start-i: 320; chunklet-end-i: 328
i: 304
end-i: 328
at header: 304
i: 320
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
i:328 HIT CHUNK END
(comment . ";;320: r1 <- r1, r8")
(comment . ";;324 b -308")
chunklet-i: 328; chunklet-start-i: 328; chunklet-end-i: 340
i: 328
end-i: 340
i: 328
end-i: 340
i: 340
end-i: 340
i:340 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 340; chunklet-start-i: 344; chunklet-end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";; instruction 340 not included")
(comment . ";;344 b -336")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 36
instruction range for chunk: 36 60
instruction range for chunk: 60 84
instruction range for chunk: 84 92
instruction range for chunk: 92 100
instruction range for chunk: 100 144
instruction range for chunk: 160 192
instruction range for chunk: 192 204
instruction range for chunk: 204 212
instruction range for chunk: 212 228
instruction range for chunk: 228 248
instruction range for chunk: 248 256
instruction range for chunk: 256 268
instruction range for chunk: 268 288
instruction range for chunk: 288 300
instruction range for chunk: 304 312
instruction range for chunk: 312 336
instruction range for chunk: 336 376
instruction range for chunk: 392 412
instruction range for chunk: 412 448
instruction range for chunk: 464 488
instruction range for chunk: 488 520
instruction range for chunk: 536 548
instruction range for chunk: 548 560
instruction range for chunk: 564 568
instruction range for chunk: 568 584
instruction range for chunk: 584 600
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r3 <- r3, 0x1\n")
(comment . ";;8 b 572")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r4 <- 0x1")
(comment . ";;16 b 548")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 36
i: 20
end-i: 36
i: 24
end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;20: r15 <- 0x9")
(comment . ";;24: r14 <- r0, 0x58\n")
(comment . ";;28: r1 <- r14")
(comment . ";;32 b 512")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;48: r4 <- r9, 0x5\n")
(comment . ";;52: r4 <- 0x1E")
(comment . ";;56 b 428")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 84
i: 60
end-i: 84
i: 60
end-i: 84
i: 72
end-i: 84
i: 76
end-i: 84
i: 80
end-i: 84
i: 84
end-i: 84
i:84 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;72: r10 <- r9, 0x5\n")
(comment . ";;76: r10 <- 0x1E")
(comment . ";;80 b 328")
chunklet-i: 84; chunklet-start-i: 84; chunklet-end-i: 92
i: 84
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;84: r10 <- 0x7")
(comment . ";;88 b 244")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 100
i: 92
end-i: 100
i: 96
end-i: 100
i: 100
end-i: 100
i:100 HIT CHUNK END
(comment . ";;92: r9 <- r10, 0x8\n")
(comment . ";;96 b 236")
chunklet-i: 100; chunklet-start-i: 100; chunklet-end-i: 144
i: 100
end-i: 144
i: 100
end-i: 144
i: 104
end-i: 144
i: 108
end-i: 144
i: 112
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 132
end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;100: r15 <- r1, 0x8\n")
(comment . ";;104: r4 <- r1, 0x10\n")
(comment . ";;108: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;124: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;132: r15 <- r1, 0x0\n")
(comment . ";;136: r4 <- 0x1")
(comment . ";;140: b r5, 13")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 192
i: 144
end-i: 192
at header: 144
i: 160
end-i: 192
i: 164
end-i: 192
i: 168
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164: r11 <- 0x4")
(comment . ";;168: r15 <- r1, 0x8\n")
(comment . ";;172: r4 <- r1, 0x10\n")
(comment . ";;176: r14 <- r4, r7")
(comment . ";;180: r14 <- 0x7")
(comment . ";;188 b 120")
chunklet-i: 192; chunklet-start-i: 192; chunklet-end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";;192: r14 <- r4, 0x1\n")
(comment . ";;196: r14 <- 0xF")
(comment . ";;200 b 108")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 212
i: 204
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";;204: r15 <- 0x7")
(comment . ";;208 b 100")
chunklet-i: 212; chunklet-start-i: 212; chunklet-end-i: 228
i: 212
end-i: 228
i: 216
end-i: 228
i: 220
end-i: 228
i: 224
end-i: 228
i: 228
end-i: 228
i:228 HIT CHUNK END
(comment . ";;212: r14 <- r14, r1")
(comment . ";;216: r14 <- r14, r8")
(comment . ";;220: r15 <- r14")
(comment . ";;224 b 84")
chunklet-i: 228; chunklet-start-i: 228; chunklet-end-i: 248
i: 228
end-i: 248
i: 232
end-i: 248
i: 236
end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;228: r14 <- r4, r9")
(comment . ";;232: r15 <- r15, r14")
(comment . ";;236: r11 <- r15, 0x0\n")
(comment . ";;240: r11 <- 0x7")
(comment . ";;244 b 8")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r4 <- 0x2E")
(comment . ";;252: b r1, 0")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 268
i: 256
end-i: 268
i: 256
end-i: 268
i: 260
end-i: 268
i: 264
end-i: 268
i: 268
end-i: 268
i:268 HIT CHUNK END
(comment . ";;256: r7 <- r0, 0x68\n")
(comment . ";;260: r2 <- r7")
(comment . ";;264 b 20")
chunklet-i: 268; chunklet-start-i: 268; chunklet-end-i: 288
i: 268
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
i:288 HIT CHUNK END
(comment . ";;268: r7 <- r7, r8")
(comment . ";;272: r7 <- r0, 0x68\n")
(comment . ";;276: r15 <- r7, 0x0\n")
(comment . ";;280: r4 <- 0x2E")
(comment . ";;284: b r1, 0")
chunklet-i: 288; chunklet-start-i: 288; chunklet-end-i: 300
i: 288
end-i: 300
i: 288
end-i: 300
i: 300
end-i: 300
i:300 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 300; chunklet-start-i: 304; chunklet-end-i: 312
i: 300
end-i: 312
i: 304
end-i: 312
i: 308
end-i: 312
i: 312
end-i: 312
i:312 HIT CHUNK END
(comment . ";; instruction 300 not included")
(comment . ";;304: r7 <- r0, 0x68\n")
(comment . ";;308 b -44")
chunklet-i: 312; chunklet-start-i: 312; chunklet-end-i: 336
i: 312
end-i: 336
i: 312
end-i: 336
i: 316
end-i: 336
i: 320
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
i:336 HIT CHUNK END
(comment . ";;312: r9 <- 0x4")
(comment . ";;316: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;332: b r6")
chunklet-i: 336; chunklet-start-i: 336; chunklet-end-i: 376
i: 336
end-i: 376
i: 336
end-i: 376
i: 340
end-i: 376
i: 344
end-i: 376
i: 348
end-i: 376
i: 352
end-i: 376
i: 356
end-i: 376
i: 360
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
at header: 376
(comment . ";;336: r9 <- 0x8")
(comment . ";;340: r15 <- r1, 0x8\n")
(comment . ";;344: r4 <- r1, 0x10\n")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;356: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;372: b r6")
chunklet-i: 376; chunklet-start-i: 392; chunklet-end-i: 412
i: 376
end-i: 412
at header: 376
i: 392
end-i: 412
i: 396
end-i: 412
i: 400
end-i: 412
i: 404
end-i: 412
i: 408
end-i: 412
i: 412
end-i: 412
i:412 HIT CHUNK END
(comment . ";;392: r1 <- r1, r8")
(comment . ";;396: r9 <- 0x4")
(comment . ";;400: r15 <- r1, 0x8\n")
(comment . ";;404: r4 <- r1, 0x10\n")
(comment . ";;408 b -312")
chunklet-i: 412; chunklet-start-i: 412; chunklet-end-i: 448
i: 412
end-i: 448
i: 412
end-i: 448
i: 416
end-i: 448
i: 420
end-i: 448
i: 424
end-i: 448
i: 428
end-i: 448
i: 432
end-i: 448
i: 444
end-i: 448
i: 448
end-i: 448
at header: 448
(comment . ";;412: r15 <- r1, 0x8\n")
(comment . ";;416: r4 <- r1, 0x10\n")
(comment . ";;420: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;444: b r6")
chunklet-i: 448; chunklet-start-i: 464; chunklet-end-i: 488
i: 448
end-i: 488
at header: 448
i: 464
end-i: 488
i: 468
end-i: 488
i: 472
end-i: 488
i: 476
end-i: 488
i: 480
end-i: 488
i: 484
end-i: 488
i: 488
end-i: 488
i:488 HIT CHUNK END
(comment . ";;464: r1 <- r1, r8")
(comment . ";;468: r10 <- 0x4")
(comment . ";;472: r15 <- r1, 0x8\n")
(comment . ";;476: r4 <- r1, 0x10\n")
(comment . ";;484 b -404")
chunklet-i: 488; chunklet-start-i: 488; chunklet-end-i: 520
i: 488
end-i: 520
i: 488
end-i: 520
i: 492
end-i: 520
i: 496
end-i: 520
i: 500
end-i: 520
i: 504
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
at header: 520
(comment . ";;488: r15 <- r1, 0x8\n")
(comment . ";;492: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;500: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;516: b r6")
chunklet-i: 520; chunklet-start-i: 536; chunklet-end-i: 548
i: 520
end-i: 548
at header: 520
i: 536
end-i: 548
i: 540
end-i: 548
i: 544
end-i: 548
i: 548
end-i: 548
i:548 HIT CHUNK END
(comment . ";;536: r1 <- r1, r0")
(comment . ";;540: r15 <- r1, 0x8\n")
(comment . ";;544 b -488")
chunklet-i: 548; chunklet-start-i: 548; chunklet-end-i: 560
i: 548
end-i: 560
i: 548
end-i: 560
i: 560
end-i: 560
i:560 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 560; chunklet-start-i: 564; chunklet-end-i: 568
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";; instruction 560 not included")
(comment . ";;564 b -532")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 584
i: 568
end-i: 584
i: 568
end-i: 584
i: 580
end-i: 584
i: 584
end-i: 584
i:584 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;580: b r6")
chunklet-i: 584; chunklet-start-i: 584; chunklet-end-i: 600
i: 584
end-i: 600
i: 584
end-i: 600
i: 596
end-i: 600
i: 600
end-i: 600
i:600 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;596: b r6")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 32
instruction range for chunk: 32 36
instruction range for chunk: 36 60
instruction range for chunk: 60 88
instruction range for chunk: 104 116
instruction range for chunk: 116 144
instruction range for chunk: 160 168
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 108")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 32
i: 8
end-i: 32
i: 8
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;20: r15 <- r9, 0x5\n")
(comment . ";;24: r15 <- 0x1E")
(comment . ";;28 b 28")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: r9 <- 0xF")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r5")
(comment . ";;48: r8 <- r5, 0x5\n")
(comment . ";;52: r4 <- 0x1")
(comment . ";;56: b r5, 13")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 88
i: 60
end-i: 88
i: 60
end-i: 88
i: 64
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";;60: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;84: b r6")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 116
i: 88
end-i: 116
at header: 88
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r1 <- r1, r8")
(comment . ";;108: r9 <- 0x4")
(comment . ";;112 b -80")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 144
i: 116
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 168
i: 144
end-i: 168
at header: 144
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164 b -160")
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_puzzle0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
wat2wasm -r -o em-pb64l/c/pbchunk_puzzle0.wasm pbchunk-out/pbchunk_puzzle0.wat
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_puzzle0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
emcc -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -o em-pb64l/bin/pb64l/scheme.html em-pb64l/boot/pb64l/main.o em-pb64l/boot/pb64l/libkernel.a em-pb64l/lz4/lib/liblz4.a --preload-file em-pb64l/boot/pb64l/petite.boot'@'petite.boot --preload-file em-pb64l/boot/pb64l/scheme.boot'@'scheme.boot --preload-file pbchunk-out/puzzle.boot'@'puzzle.boot -s EXIT_RUNTIME=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_ZLIB=1
: em-pb64l/bin/pb64l/scheme.html
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./puzzle.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running puzzle:500

real	1m15.044s
user	1m14.488s
sys	0m0.691s

Testing triangl under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/triangl.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/triangl.scm with output to /tmp/larcenous/triangl.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/triangl.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/triangl.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 480
instruction range for chunk: 496 576
instruction range for chunk: 592 672
instruction range for chunk: 688 768
instruction range for chunk: 784 852
instruction range for chunk: 852 880
instruction range for chunk: 896 904
instruction range for chunk: 904 916
instruction range for chunk: 920 924
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 888")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 828")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 480
i: 384
end-i: 480
at header: 384
i: 400
end-i: 480
i: 404
end-i: 480
i: 408
end-i: 480
i: 420
end-i: 480
i: 432
end-i: 480
i: 444
end-i: 480
i: 448
end-i: 480
i: 460
end-i: 480
i: 464
end-i: 480
i: 468
end-i: 480
i: 472
end-i: 480
i: 476
end-i: 480
i: 480
end-i: 480
at header: 480
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;444: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;460: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;468: r15 <- r1, 0x0\n")
(comment . ";;472: r4 <- 0x3")
(comment . ";;476: b r5, 13")
chunklet-i: 480; chunklet-start-i: 496; chunklet-end-i: 576
i: 480
end-i: 576
at header: 480
i: 496
end-i: 576
i: 500
end-i: 576
i: 504
end-i: 576
i: 516
end-i: 576
i: 528
end-i: 576
i: 540
end-i: 576
i: 544
end-i: 576
i: 556
end-i: 576
i: 560
end-i: 576
i: 564
end-i: 576
i: 568
end-i: 576
i: 572
end-i: 576
i: 576
end-i: 576
at header: 576
(comment . ";;500: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;540: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;556: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;564: r15 <- r1, 0x0\n")
(comment . ";;568: r4 <- 0x3")
(comment . ";;572: b r5, 13")
chunklet-i: 576; chunklet-start-i: 592; chunklet-end-i: 672
i: 576
end-i: 672
at header: 576
i: 592
end-i: 672
i: 596
end-i: 672
i: 600
end-i: 672
i: 612
end-i: 672
i: 624
end-i: 672
i: 636
end-i: 672
i: 640
end-i: 672
i: 652
end-i: 672
i: 656
end-i: 672
i: 660
end-i: 672
i: 664
end-i: 672
i: 668
end-i: 672
i: 672
end-i: 672
at header: 672
(comment . ";;596: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;636: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;652: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;660: r15 <- r1, 0x0\n")
(comment . ";;664: r4 <- 0x3")
(comment . ";;668: b r5, 13")
chunklet-i: 672; chunklet-start-i: 688; chunklet-end-i: 768
i: 672
end-i: 768
at header: 672
i: 688
end-i: 768
i: 692
end-i: 768
i: 696
end-i: 768
i: 708
end-i: 768
i: 720
end-i: 768
i: 732
end-i: 768
i: 736
end-i: 768
i: 748
end-i: 768
i: 752
end-i: 768
i: 756
end-i: 768
i: 760
end-i: 768
i: 764
end-i: 768
i: 768
end-i: 768
at header: 768
(comment . ";;692: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;732: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;748: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;756: r15 <- r1, 0x0\n")
(comment . ";;760: r4 <- 0x3")
(comment . ";;764: b r5, 13")
chunklet-i: 768; chunklet-start-i: 784; chunklet-end-i: 852
i: 768
end-i: 852
at header: 768
i: 784
end-i: 852
i: 788
end-i: 852
i: 792
end-i: 852
i: 804
end-i: 852
i: 816
end-i: 852
i: 828
end-i: 852
i: 840
end-i: 852
i: 844
end-i: 852
i: 848
end-i: 852
i: 852
end-i: 852
i:852 HIT CHUNK END
(comment . ";;788: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;840: r8 <- r5, 0x5\n")
(comment . ";;844: r4 <- 0x3")
(comment . ";;848: b r5, 13")
chunklet-i: 852; chunklet-start-i: 852; chunklet-end-i: 880
i: 852
end-i: 880
i: 852
end-i: 880
i: 856
end-i: 880
i: 860
end-i: 880
i: 864
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
at header: 880
(comment . ";;852: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;860: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;876: b r6")
chunklet-i: 880; chunklet-start-i: 896; chunklet-end-i: 904
i: 880
end-i: 904
at header: 880
i: 896
end-i: 904
i: 900
end-i: 904
i: 904
end-i: 904
i:904 HIT CHUNK END
(comment . ";;896: r1 <- r1, r8")
(comment . ";;900 b -880")
chunklet-i: 904; chunklet-start-i: 904; chunklet-end-i: 916
i: 904
end-i: 916
i: 904
end-i: 916
i: 916
end-i: 916
i:916 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 916; chunklet-start-i: 920; chunklet-end-i: 924
i: 916
end-i: 924
i: 920
end-i: 924
i: 924
end-i: 924
i:924 HIT CHUNK END
(comment . ";; instruction 916 not included")
(comment . ";;920 b -908")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 88
instruction range for chunk: 104 132
instruction range for chunk: 132 144
instruction range for chunk: 144 156
instruction range for chunk: 156 180
instruction range for chunk: 180 192
instruction range for chunk: 196 204
instruction range for chunk: 204 232
instruction range for chunk: 248 256
instruction range for chunk: 256 268
instruction range for chunk: 272 276
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 240")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 180")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 88
i: 24
end-i: 88
i: 24
end-i: 88
i: 36
end-i: 88
i: 48
end-i: 88
i: 52
end-i: 88
i: 56
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 76
end-i: 88
i: 80
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;48: r15 <- r1, 0x8\n")
(comment . ";;52: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;68: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";;80: r4 <- 0x1")
(comment . ";;84: b r5, 13")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 132
i: 88
end-i: 132
at header: 88
i: 104
end-i: 132
i: 108
end-i: 132
i: 112
end-i: 132
i: 116
end-i: 132
i: 120
end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;104: r1 <- r1, r0")
(comment . ";;108: r15 <- r1, 0x8\n")
(comment . ";;112: r14 <- r15, r5")
(comment . ";;116: r4 <- r14, 0x0\n")
(comment . ";;120: r4 <- 0x7")
(comment . ";;128 b 24")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 144
i: 132
end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
i:144 HIT CHUNK END
(comment . ";;132: r7 <- r0, 0x68\n")
(comment . ";;136: r2 <- r7")
(comment . ";;140 b 36")
chunklet-i: 144; chunklet-start-i: 144; chunklet-end-i: 156
i: 144
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;144: r7 <- r7, r8")
(comment . ";;148: r7 <- r0, 0x68\n")
(comment . ";;152: r14 <- r7, 0x0\n")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 180
i: 156
end-i: 180
i: 156
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;168: r14 <- r15, 0xD\n")
(comment . ";;172: r4 <- 0x2E")
(comment . ";;176: b r1, 0")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 192
i: 180
end-i: 192
i: 180
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 192; chunklet-start-i: 196; chunklet-end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";; instruction 192 not included")
(comment . ";;196: r7 <- r0, 0x68\n")
(comment . ";;200 b -60")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 232
i: 204
end-i: 232
i: 204
end-i: 232
i: 208
end-i: 232
i: 212
end-i: 232
i: 216
end-i: 232
i: 228
end-i: 232
i: 232
end-i: 232
at header: 232
(comment . ";;204: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;212: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;228: b r6")
chunklet-i: 232; chunklet-start-i: 248; chunklet-end-i: 256
i: 232
end-i: 256
at header: 232
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r1 <- r1, r8")
(comment . ";;252 b -232")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 268
i: 256
end-i: 268
i: 256
end-i: 268
i: 268
end-i: 268
i:268 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 268; chunklet-start-i: 272; chunklet-end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";; instruction 268 not included")
(comment . ";;272 b -260")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 88
instruction range for chunk: 104 132
instruction range for chunk: 132 144
instruction range for chunk: 144 156
instruction range for chunk: 156 180
instruction range for chunk: 180 192
instruction range for chunk: 196 204
instruction range for chunk: 204 232
instruction range for chunk: 248 256
instruction range for chunk: 256 268
instruction range for chunk: 272 276
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 240")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 180")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 88
i: 24
end-i: 88
i: 24
end-i: 88
i: 36
end-i: 88
i: 48
end-i: 88
i: 52
end-i: 88
i: 56
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 76
end-i: 88
i: 80
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;48: r15 <- r1, 0x8\n")
(comment . ";;52: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;68: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";;80: r4 <- 0x1")
(comment . ";;84: b r5, 13")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 132
i: 88
end-i: 132
at header: 88
i: 104
end-i: 132
i: 108
end-i: 132
i: 112
end-i: 132
i: 116
end-i: 132
i: 120
end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;104: r1 <- r1, r0")
(comment . ";;108: r15 <- r1, 0x8\n")
(comment . ";;112: r14 <- r15, r5")
(comment . ";;116: r4 <- r14, 0x0\n")
(comment . ";;120: r4 <- 0x7")
(comment . ";;128 b 24")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 144
i: 132
end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
i:144 HIT CHUNK END
(comment . ";;132: r7 <- r0, 0x68\n")
(comment . ";;136: r2 <- r7")
(comment . ";;140 b 36")
chunklet-i: 144; chunklet-start-i: 144; chunklet-end-i: 156
i: 144
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;144: r7 <- r7, r8")
(comment . ";;148: r7 <- r0, 0x68\n")
(comment . ";;152: r14 <- r7, 0x0\n")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 180
i: 156
end-i: 180
i: 156
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;168: r14 <- r15, 0xD\n")
(comment . ";;172: r4 <- 0x2E")
(comment . ";;176: b r1, 0")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 192
i: 180
end-i: 192
i: 180
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 192; chunklet-start-i: 196; chunklet-end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";; instruction 192 not included")
(comment . ";;196: r7 <- r0, 0x68\n")
(comment . ";;200 b -60")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 232
i: 204
end-i: 232
i: 204
end-i: 232
i: 208
end-i: 232
i: 212
end-i: 232
i: 216
end-i: 232
i: 228
end-i: 232
i: 232
end-i: 232
at header: 232
(comment . ";;204: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;212: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;228: b r6")
chunklet-i: 232; chunklet-start-i: 248; chunklet-end-i: 256
i: 232
end-i: 256
at header: 232
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r1 <- r1, r8")
(comment . ";;252 b -232")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 268
i: 256
end-i: 268
i: 256
end-i: 268
i: 268
end-i: 268
i:268 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 268; chunklet-start-i: 272; chunklet-end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";; instruction 268 not included")
(comment . ";;272 b -260")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 88
instruction range for chunk: 104 132
instruction range for chunk: 132 144
instruction range for chunk: 144 156
instruction range for chunk: 156 180
instruction range for chunk: 180 192
instruction range for chunk: 196 204
instruction range for chunk: 204 232
instruction range for chunk: 248 256
instruction range for chunk: 256 268
instruction range for chunk: 272 276
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 240")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 180")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 88
i: 24
end-i: 88
i: 24
end-i: 88
i: 36
end-i: 88
i: 48
end-i: 88
i: 52
end-i: 88
i: 56
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 76
end-i: 88
i: 80
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;48: r15 <- r1, 0x8\n")
(comment . ";;52: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;68: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";;80: r4 <- 0x1")
(comment . ";;84: b r5, 13")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 132
i: 88
end-i: 132
at header: 88
i: 104
end-i: 132
i: 108
end-i: 132
i: 112
end-i: 132
i: 116
end-i: 132
i: 120
end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;104: r1 <- r1, r0")
(comment . ";;108: r15 <- r1, 0x8\n")
(comment . ";;112: r14 <- r15, r5")
(comment . ";;116: r4 <- r14, 0x0\n")
(comment . ";;120: r4 <- 0x7")
(comment . ";;128 b 24")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 144
i: 132
end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
i:144 HIT CHUNK END
(comment . ";;132: r7 <- r0, 0x68\n")
(comment . ";;136: r2 <- r7")
(comment . ";;140 b 36")
chunklet-i: 144; chunklet-start-i: 144; chunklet-end-i: 156
i: 144
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;144: r7 <- r7, r8")
(comment . ";;148: r7 <- r0, 0x68\n")
(comment . ";;152: r14 <- r7, 0x0\n")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 180
i: 156
end-i: 180
i: 156
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;168: r14 <- r15, 0xD\n")
(comment . ";;172: r4 <- 0x2E")
(comment . ";;176: b r1, 0")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 192
i: 180
end-i: 192
i: 180
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 192; chunklet-start-i: 196; chunklet-end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";; instruction 192 not included")
(comment . ";;196: r7 <- r0, 0x68\n")
(comment . ";;200 b -60")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 232
i: 204
end-i: 232
i: 204
end-i: 232
i: 208
end-i: 232
i: 212
end-i: 232
i: 216
end-i: 232
i: 228
end-i: 232
i: 232
end-i: 232
at header: 232
(comment . ";;204: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;212: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;228: b r6")
chunklet-i: 232; chunklet-start-i: 248; chunklet-end-i: 256
i: 232
end-i: 256
at header: 232
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r1 <- r1, r8")
(comment . ";;252 b -232")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 268
i: 256
end-i: 268
i: 256
end-i: 268
i: 268
end-i: 268
i:268 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 268; chunklet-start-i: 272; chunklet-end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";; instruction 268 not included")
(comment . ";;272 b -260")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 88
instruction range for chunk: 104 132
instruction range for chunk: 132 144
instruction range for chunk: 144 156
instruction range for chunk: 156 180
instruction range for chunk: 180 192
instruction range for chunk: 196 204
instruction range for chunk: 204 232
instruction range for chunk: 248 256
instruction range for chunk: 256 268
instruction range for chunk: 272 276
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 240")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 180")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 88
i: 24
end-i: 88
i: 24
end-i: 88
i: 36
end-i: 88
i: 48
end-i: 88
i: 52
end-i: 88
i: 56
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 76
end-i: 88
i: 80
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;48: r15 <- r1, 0x8\n")
(comment . ";;52: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;68: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";;80: r4 <- 0x1")
(comment . ";;84: b r5, 13")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 132
i: 88
end-i: 132
at header: 88
i: 104
end-i: 132
i: 108
end-i: 132
i: 112
end-i: 132
i: 116
end-i: 132
i: 120
end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;104: r1 <- r1, r0")
(comment . ";;108: r15 <- r1, 0x8\n")
(comment . ";;112: r14 <- r15, r5")
(comment . ";;116: r4 <- r14, 0x0\n")
(comment . ";;120: r4 <- 0x7")
(comment . ";;128 b 24")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 144
i: 132
end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
i:144 HIT CHUNK END
(comment . ";;132: r7 <- r0, 0x68\n")
(comment . ";;136: r2 <- r7")
(comment . ";;140 b 36")
chunklet-i: 144; chunklet-start-i: 144; chunklet-end-i: 156
i: 144
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;144: r7 <- r7, r8")
(comment . ";;148: r7 <- r0, 0x68\n")
(comment . ";;152: r14 <- r7, 0x0\n")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 180
i: 156
end-i: 180
i: 156
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;168: r14 <- r15, 0xD\n")
(comment . ";;172: r4 <- 0x2E")
(comment . ";;176: b r1, 0")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 192
i: 180
end-i: 192
i: 180
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 192; chunklet-start-i: 196; chunklet-end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";; instruction 192 not included")
(comment . ";;196: r7 <- r0, 0x68\n")
(comment . ";;200 b -60")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 232
i: 204
end-i: 232
i: 204
end-i: 232
i: 208
end-i: 232
i: 212
end-i: 232
i: 216
end-i: 232
i: 228
end-i: 232
i: 232
end-i: 232
at header: 232
(comment . ";;204: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;212: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;228: b r6")
chunklet-i: 232; chunklet-start-i: 248; chunklet-end-i: 256
i: 232
end-i: 256
at header: 232
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r1 <- r1, r8")
(comment . ";;252 b -232")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 268
i: 256
end-i: 268
i: 256
end-i: 268
i: 268
end-i: 268
i:268 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 268; chunklet-start-i: 272; chunklet-end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";; instruction 268 not included")
(comment . ";;272 b -260")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 88
instruction range for chunk: 104 132
instruction range for chunk: 132 144
instruction range for chunk: 144 156
instruction range for chunk: 156 180
instruction range for chunk: 180 192
instruction range for chunk: 196 204
instruction range for chunk: 204 232
instruction range for chunk: 248 256
instruction range for chunk: 256 268
instruction range for chunk: 272 276
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 240")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 180")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 88
i: 24
end-i: 88
i: 24
end-i: 88
i: 36
end-i: 88
i: 48
end-i: 88
i: 52
end-i: 88
i: 56
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 76
end-i: 88
i: 80
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;48: r15 <- r1, 0x8\n")
(comment . ";;52: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;68: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";;80: r4 <- 0x1")
(comment . ";;84: b r5, 13")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 132
i: 88
end-i: 132
at header: 88
i: 104
end-i: 132
i: 108
end-i: 132
i: 112
end-i: 132
i: 116
end-i: 132
i: 120
end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;104: r1 <- r1, r0")
(comment . ";;108: r15 <- r1, 0x8\n")
(comment . ";;112: r14 <- r15, r5")
(comment . ";;116: r4 <- r14, 0x0\n")
(comment . ";;120: r4 <- 0x7")
(comment . ";;128 b 24")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 144
i: 132
end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
i:144 HIT CHUNK END
(comment . ";;132: r7 <- r0, 0x68\n")
(comment . ";;136: r2 <- r7")
(comment . ";;140 b 36")
chunklet-i: 144; chunklet-start-i: 144; chunklet-end-i: 156
i: 144
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;144: r7 <- r7, r8")
(comment . ";;148: r7 <- r0, 0x68\n")
(comment . ";;152: r14 <- r7, 0x0\n")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 180
i: 156
end-i: 180
i: 156
end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;168: r14 <- r15, 0xD\n")
(comment . ";;172: r4 <- 0x2E")
(comment . ";;176: b r1, 0")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 192
i: 180
end-i: 192
i: 180
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 192; chunklet-start-i: 196; chunklet-end-i: 204
i: 192
end-i: 204
i: 196
end-i: 204
i: 200
end-i: 204
i: 204
end-i: 204
i:204 HIT CHUNK END
(comment . ";; instruction 192 not included")
(comment . ";;196: r7 <- r0, 0x68\n")
(comment . ";;200 b -60")
chunklet-i: 204; chunklet-start-i: 204; chunklet-end-i: 232
i: 204
end-i: 232
i: 204
end-i: 232
i: 208
end-i: 232
i: 212
end-i: 232
i: 216
end-i: 232
i: 228
end-i: 232
i: 232
end-i: 232
at header: 232
(comment . ";;204: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;212: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;228: b r6")
chunklet-i: 232; chunklet-start-i: 248; chunklet-end-i: 256
i: 232
end-i: 256
at header: 232
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";;248: r1 <- r1, r8")
(comment . ";;252 b -232")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 268
i: 256
end-i: 268
i: 256
end-i: 268
i: 268
end-i: 268
i:268 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 268; chunklet-start-i: 272; chunklet-end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";; instruction 268 not included")
(comment . ";;272 b -260")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x26")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: attempt
instruction range for chunk: 0 12
instruction range for chunk: 12 28
instruction range for chunk: 28 36
instruction range for chunk: 36 60
instruction range for chunk: 60 84
instruction range for chunk: 84 88
instruction range for chunk: 88 100
instruction range for chunk: 100 120
instruction range for chunk: 120 132
instruction range for chunk: 132 152
instruction range for chunk: 152 172
instruction range for chunk: 172 184
instruction range for chunk: 184 200
instruction range for chunk: 200 208
instruction range for chunk: 208 232
instruction range for chunk: 232 256
instruction range for chunk: 256 260
instruction range for chunk: 260 272
instruction range for chunk: 272 292
instruction range for chunk: 292 304
instruction range for chunk: 304 324
instruction range for chunk: 324 344
instruction range for chunk: 344 356
instruction range for chunk: 356 372
instruction range for chunk: 372 380
instruction range for chunk: 380 404
instruction range for chunk: 404 428
instruction range for chunk: 428 432
instruction range for chunk: 432 444
instruction range for chunk: 444 464
instruction range for chunk: 464 476
instruction range for chunk: 476 496
instruction range for chunk: 496 516
instruction range for chunk: 516 528
instruction range for chunk: 528 544
instruction range for chunk: 544 552
instruction range for chunk: 552 560
instruction range for chunk: 560 568
instruction range for chunk: 568 608
instruction range for chunk: 624 640
instruction range for chunk: 640 680
instruction range for chunk: 696 720
instruction range for chunk: 720 732
instruction range for chunk: 732 756
instruction range for chunk: 756 780
instruction range for chunk: 780 784
instruction range for chunk: 784 796
instruction range for chunk: 796 816
instruction range for chunk: 816 828
instruction range for chunk: 828 848
instruction range for chunk: 848 860
instruction range for chunk: 860 868
instruction range for chunk: 868 884
instruction range for chunk: 884 920
instruction range for chunk: 920 944
instruction range for chunk: 944 948
instruction range for chunk: 948 960
instruction range for chunk: 960 980
instruction range for chunk: 980 992
instruction range for chunk: 992 1012
instruction range for chunk: 1012 1024
instruction range for chunk: 1024 1032
instruction range for chunk: 1032 1048
instruction range for chunk: 1048 1084
instruction range for chunk: 1084 1108
instruction range for chunk: 1108 1112
instruction range for chunk: 1112 1124
instruction range for chunk: 1124 1144
instruction range for chunk: 1144 1156
instruction range for chunk: 1156 1176
instruction range for chunk: 1176 1188
instruction range for chunk: 1188 1196
instruction range for chunk: 1196 1212
instruction range for chunk: 1212 1248
instruction range for chunk: 1248 1252
instruction range for chunk: 1252 1264
instruction range for chunk: 1264 1276
instruction range for chunk: 1276 1284
instruction range for chunk: 1284 1300
instruction range for chunk: 1300 1316
instruction range for chunk: 1316 1324
instruction range for chunk: 1324 1328
instruction range for chunk: 1328 1336
instruction range for chunk: 1336 1344
instruction range for chunk: 1344 1352
instruction range for chunk: 1352 1408
instruction range for chunk: 1424 1452
instruction range for chunk: 1452 1460
instruction range for chunk: 1460 1468
instruction range for chunk: 1468 1476
instruction range for chunk: 1476 1520
instruction range for chunk: 1536 1560
instruction range for chunk: 1560 1584
instruction range for chunk: 1584 1608
instruction range for chunk: 1608 1612
instruction range for chunk: 1612 1624
instruction range for chunk: 1624 1644
instruction range for chunk: 1644 1656
instruction range for chunk: 1656 1676
instruction range for chunk: 1676 1688
instruction range for chunk: 1688 1696
instruction range for chunk: 1696 1712
instruction range for chunk: 1712 1748
instruction range for chunk: 1748 1772
instruction range for chunk: 1772 1776
instruction range for chunk: 1776 1788
instruction range for chunk: 1788 1808
instruction range for chunk: 1808 1820
instruction range for chunk: 1820 1840
instruction range for chunk: 1840 1852
instruction range for chunk: 1852 1860
instruction range for chunk: 1860 1876
instruction range for chunk: 1876 1912
instruction range for chunk: 1912 1936
instruction range for chunk: 1936 1940
instruction range for chunk: 1940 1952
instruction range for chunk: 1952 1972
instruction range for chunk: 1972 1984
instruction range for chunk: 1984 2004
instruction range for chunk: 2004 2016
instruction range for chunk: 2016 2024
instruction range for chunk: 2024 2040
instruction range for chunk: 2040 2060
instruction range for chunk: 2060 2084
instruction range for chunk: 2084 2104
instruction range for chunk: 2104 2112
instruction range for chunk: 2112 2152
instruction range for chunk: 2168 2188
instruction range for chunk: 2188 2224
instruction range for chunk: 2240 2260
instruction range for chunk: 2260 2268
instruction range for chunk: 2268 2304
instruction range for chunk: 2320 2336
instruction range for chunk: 2336 2368
instruction range for chunk: 2384 2396
instruction range for chunk: 2396 2420
instruction range for chunk: 2420 2440
instruction range for chunk: 2440 2448
instruction range for chunk: 2448 2488
instruction range for chunk: 2504 2524
instruction range for chunk: 2524 2560
instruction range for chunk: 2576 2596
instruction range for chunk: 2596 2604
instruction range for chunk: 2604 2640
instruction range for chunk: 2656 2672
instruction range for chunk: 2672 2704
instruction range for chunk: 2720 2732
instruction range for chunk: 2732 2756
instruction range for chunk: 2756 2776
instruction range for chunk: 2776 2784
instruction range for chunk: 2784 2824
instruction range for chunk: 2840 2860
instruction range for chunk: 2860 2896
instruction range for chunk: 2912 2932
instruction range for chunk: 2932 2940
instruction range for chunk: 2940 2976
instruction range for chunk: 2992 3008
instruction range for chunk: 3008 3040
instruction range for chunk: 3056 3072
instruction range for chunk: 3072 3120
instruction range for chunk: 3136 3164
instruction range for chunk: 3164 3168
instruction range for chunk: 3168 3208
instruction range for chunk: 3224 3244
instruction range for chunk: 3244 3252
instruction range for chunk: 3252 3288
instruction range for chunk: 3304 3320
instruction range for chunk: 3320 3360
instruction range for chunk: 3376 3388
instruction range for chunk: 3388 3408
instruction range for chunk: 3408 3416
instruction range for chunk: 3416 3456
instruction range for chunk: 3472 3492
instruction range for chunk: 3492 3528
instruction range for chunk: 3544 3568
instruction range for chunk: 3568 3592
instruction range for chunk: 3592 3612
instruction range for chunk: 3612 3620
instruction range for chunk: 3620 3664
instruction range for chunk: 3680 3704
instruction range for chunk: 3704 3744
instruction range for chunk: 3760 3784
instruction range for chunk: 3784 3792
instruction range for chunk: 3792 3832
instruction range for chunk: 3848 3868
instruction range for chunk: 3868 3904
instruction range for chunk: 3920 3936
instruction range for chunk: 3936 3960
instruction range for chunk: 3960 3980
instruction range for chunk: 3980 3988
instruction range for chunk: 3988 4032
instruction range for chunk: 4048 4072
instruction range for chunk: 4072 4112
instruction range for chunk: 4128 4152
instruction range for chunk: 4152 4160
instruction range for chunk: 4160 4200
instruction range for chunk: 4216 4236
instruction range for chunk: 4236 4272
instruction range for chunk: 4288 4304
instruction range for chunk: 4304 4328
instruction range for chunk: 4328 4348
instruction range for chunk: 4348 4356
instruction range for chunk: 4356 4400
instruction range for chunk: 4416 4440
instruction range for chunk: 4440 4480
instruction range for chunk: 4496 4520
instruction range for chunk: 4520 4528
instruction range for chunk: 4528 4568
instruction range for chunk: 4584 4604
instruction range for chunk: 4604 4640
instruction range for chunk: 4656 4672
instruction range for chunk: 4672 4684
instruction range for chunk: 4688 4692
instruction range for chunk: 4692 4712
instruction range for chunk: 4712 4732
instruction range for chunk: 4732 4740
instruction range for chunk: 4740 4784
instruction range for chunk: 4800 4824
instruction range for chunk: 4824 4864
instruction range for chunk: 4880 4904
instruction range for chunk: 4904 4912
instruction range for chunk: 4912 4952
instruction range for chunk: 4968 4988
instruction range for chunk: 4988 5024
instruction range for chunk: 5040 5056
instruction range for chunk: 5056 5064
instruction range for chunk: 5064 5104
instruction range for chunk: 5120 5136
instruction range for chunk: 5136 5176
instruction range for chunk: 5192 5216
instruction range for chunk: 5216 5220
instruction range for chunk: 5220 5240
instruction range for chunk: 5240 5260
instruction range for chunk: 5260 5268
instruction range for chunk: 5268 5312
instruction range for chunk: 5328 5352
instruction range for chunk: 5352 5392
instruction range for chunk: 5408 5432
instruction range for chunk: 5432 5440
instruction range for chunk: 5440 5480
instruction range for chunk: 5496 5516
instruction range for chunk: 5516 5552
instruction range for chunk: 5568 5584
instruction range for chunk: 5584 5592
instruction range for chunk: 5592 5632
instruction range for chunk: 5648 5664
instruction range for chunk: 5664 5704
instruction range for chunk: 5720 5744
instruction range for chunk: 5744 5748
instruction range for chunk: 5748 5768
instruction range for chunk: 5768 5788
instruction range for chunk: 5788 5796
instruction range for chunk: 5796 5840
instruction range for chunk: 5856 5880
instruction range for chunk: 5880 5920
instruction range for chunk: 5936 5960
instruction range for chunk: 5960 5968
instruction range for chunk: 5968 6008
instruction range for chunk: 6024 6044
instruction range for chunk: 6044 6080
instruction range for chunk: 6096 6116
instruction range for chunk: 6116 6128
instruction range for chunk: 6128 6136
instruction range for chunk: 6136 6172
instruction range for chunk: 6172 6176
instruction range for chunk: 6176 6216
instruction range for chunk: 6232 6256
instruction range for chunk: 6256 6284
instruction range for chunk: 6284 6304
instruction range for chunk: 6304 6328
instruction range for chunk: 6328 6340
instruction range for chunk: 6340 6352
instruction range for chunk: 6352 6376
instruction range for chunk: 6376 6388
instruction range for chunk: 6392 6400
instruction range for chunk: 6400 6412
instruction range for chunk: 6416 6420
instruction range for chunk: 6420 6456
instruction range for chunk: 6472 6492
instruction range for chunk: 6492 6512
instruction range for chunk: 6512 6544
instruction range for chunk: 6560 6580
instruction range for chunk: 6580 6608
instruction range for chunk: 6624 6632
instruction range for chunk: 6632 6644
instruction range for chunk: 6648 6652
instruction range for chunk: 6652 6660
instruction range for chunk: 6660 6696
instruction range for chunk: 6712 6724
instruction range for chunk: 6724 6768
instruction range for chunk: 6784 6804
instruction range for chunk: 6804 6808
instruction range for chunk: 6808 6824
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x2")
(comment . ";;8 b 6796")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 28
i: 12
end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;12: r11 <- 0x9")
(comment . ";;16: r15 <- 0xA")
(comment . ";;20: r15 <- 0x7")
(comment . ";;24 b 6624")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;28: r15 <- 0x70")
(comment . ";;32 b 6080")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;48: r4 <- r9, 0x5\n")
(comment . ";;52: r4 <- 0x1E")
(comment . ";;56 b 5900")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 84
i: 60
end-i: 84
i: 60
end-i: 84
i: 72
end-i: 84
i: 76
end-i: 84
i: 80
end-i: 84
i: 84
end-i: 84
i:84 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;72: r14 <- r9, 0x5\n")
(comment . ";;76: r14 <- 0x1E")
(comment . ";;80 b 5704")
chunklet-i: 84; chunklet-start-i: 84; chunklet-end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
i:88 HIT CHUNK END
(comment . ";;84: r9 <- 0xE")
chunklet-i: 88; chunklet-start-i: 88; chunklet-end-i: 100
i: 88
end-i: 100
i: 88
end-i: 100
i: 92
end-i: 100
i: 96
end-i: 100
i: 100
end-i: 100
i:100 HIT CHUNK END
(comment . ";;88: r14 <- r9, r7")
(comment . ";;92: r14 <- 0x7")
(comment . ";;96 b 5668")
chunklet-i: 100; chunklet-start-i: 100; chunklet-end-i: 120
i: 100
end-i: 120
i: 104
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;100: r13 <- r9, 0x1\n")
(comment . ";;104: r14 <- r13, r1")
(comment . ";;108: r14 <- r14, r8")
(comment . ";;112: r11 <- r14")
(comment . ";;116 b 5648")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;120: r14 <- r11, r13")
(comment . ";;124: r14 <- 0x7")
(comment . ";;128 b 5636")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 152
i: 132
end-i: 152
i: 136
end-i: 152
i: 140
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;132: r14 <- r11, r9")
(comment . ";;136: r10 <- r9, r14")
(comment . ";;140: r14 <- r4, r7")
(comment . ";;144: r14 <- 0x7")
(comment . ";;148 b 5596")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 172
i: 152
end-i: 172
i: 156
end-i: 172
i: 160
end-i: 172
i: 164
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";;152: r13 <- r4, 0x1\n")
(comment . ";;156: r14 <- r13, r1")
(comment . ";;160: r14 <- r14, r8")
(comment . ";;164: r10 <- r14")
(comment . ";;168 b 5576")
chunklet-i: 172; chunklet-start-i: 172; chunklet-end-i: 184
i: 172
end-i: 184
i: 176
end-i: 184
i: 180
end-i: 184
i: 184
end-i: 184
i:184 HIT CHUNK END
(comment . ";;172: r14 <- r10, r13")
(comment . ";;176: r14 <- 0x7")
(comment . ";;180 b 5564")
chunklet-i: 184; chunklet-start-i: 184; chunklet-end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
i:200 HIT CHUNK END
(comment . ";;184: r14 <- r10, r9")
(comment . ";;188: r10 <- r4, r14")
(comment . ";;192: r10 <- 0x7")
(comment . ";;196 b 5384")
chunklet-i: 200; chunklet-start-i: 200; chunklet-end-i: 208
i: 200
end-i: 208
i: 204
end-i: 208
i: 208
end-i: 208
i:208 HIT CHUNK END
(comment . ";;200: r10 <- 0x8")
(comment . ";;204 b 344")
chunklet-i: 208; chunklet-start-i: 208; chunklet-end-i: 232
i: 208
end-i: 232
i: 208
end-i: 232
i: 220
end-i: 232
i: 224
end-i: 232
i: 228
end-i: 232
i: 232
end-i: 232
i:232 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;220: r4 <- r9, 0x5\n")
(comment . ";;224: r4 <- 0x1E")
(comment . ";;228 b 5200")
chunklet-i: 232; chunklet-start-i: 232; chunklet-end-i: 256
i: 232
end-i: 256
i: 232
end-i: 256
i: 244
end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;244: r14 <- r9, 0x5\n")
(comment . ";;248: r14 <- 0x1E")
(comment . ";;252 b 5004")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 260
i: 256
end-i: 260
i: 260
end-i: 260
i:260 HIT CHUNK END
(comment . ";;256: r9 <- 0xE")
chunklet-i: 260; chunklet-start-i: 260; chunklet-end-i: 272
i: 260
end-i: 272
i: 260
end-i: 272
i: 264
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
i:272 HIT CHUNK END
(comment . ";;260: r14 <- r9, r7")
(comment . ";;264: r14 <- 0x7")
(comment . ";;268 b 4968")
chunklet-i: 272; chunklet-start-i: 272; chunklet-end-i: 292
i: 272
end-i: 292
i: 276
end-i: 292
i: 280
end-i: 292
i: 284
end-i: 292
i: 288
end-i: 292
i: 292
end-i: 292
i:292 HIT CHUNK END
(comment . ";;272: r13 <- r9, 0x1\n")
(comment . ";;276: r14 <- r13, r1")
(comment . ";;280: r14 <- r14, r8")
(comment . ";;284: r11 <- r14")
(comment . ";;288 b 4948")
chunklet-i: 292; chunklet-start-i: 292; chunklet-end-i: 304
i: 292
end-i: 304
i: 296
end-i: 304
i: 300
end-i: 304
i: 304
end-i: 304
i:304 HIT CHUNK END
(comment . ";;292: r14 <- r11, r13")
(comment . ";;296: r14 <- 0x7")
(comment . ";;300 b 4936")
chunklet-i: 304; chunklet-start-i: 304; chunklet-end-i: 324
i: 304
end-i: 324
i: 308
end-i: 324
i: 312
end-i: 324
i: 316
end-i: 324
i: 320
end-i: 324
i: 324
end-i: 324
i:324 HIT CHUNK END
(comment . ";;304: r14 <- r11, r9")
(comment . ";;308: r10 <- r9, r14")
(comment . ";;312: r14 <- r4, r7")
(comment . ";;316: r14 <- 0x7")
(comment . ";;320 b 4896")
chunklet-i: 324; chunklet-start-i: 324; chunklet-end-i: 344
i: 324
end-i: 344
i: 328
end-i: 344
i: 332
end-i: 344
i: 336
end-i: 344
i: 340
end-i: 344
i: 344
end-i: 344
i:344 HIT CHUNK END
(comment . ";;324: r13 <- r4, 0x1\n")
(comment . ";;328: r14 <- r13, r1")
(comment . ";;332: r14 <- r14, r8")
(comment . ";;336: r10 <- r14")
(comment . ";;340 b 4876")
chunklet-i: 344; chunklet-start-i: 344; chunklet-end-i: 356
i: 344
end-i: 356
i: 348
end-i: 356
i: 352
end-i: 356
i: 356
end-i: 356
i:356 HIT CHUNK END
(comment . ";;344: r14 <- r10, r13")
(comment . ";;348: r14 <- 0x7")
(comment . ";;352 b 4864")
chunklet-i: 356; chunklet-start-i: 356; chunklet-end-i: 372
i: 356
end-i: 372
i: 360
end-i: 372
i: 364
end-i: 372
i: 368
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";;356: r14 <- r10, r9")
(comment . ";;360: r10 <- r4, r14")
(comment . ";;364: r10 <- 0x7")
(comment . ";;368 b 4684")
chunklet-i: 372; chunklet-start-i: 372; chunklet-end-i: 380
i: 372
end-i: 380
i: 376
end-i: 380
i: 380
end-i: 380
i:380 HIT CHUNK END
(comment . ";;372: r10 <- 0x8")
(comment . ";;376 b 172")
chunklet-i: 380; chunklet-start-i: 380; chunklet-end-i: 404
i: 380
end-i: 404
i: 380
end-i: 404
i: 392
end-i: 404
i: 396
end-i: 404
i: 400
end-i: 404
i: 404
end-i: 404
i:404 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;392: r4 <- r9, 0x5\n")
(comment . ";;396: r4 <- 0x1E")
(comment . ";;400 b 4500")
chunklet-i: 404; chunklet-start-i: 404; chunklet-end-i: 428
i: 404
end-i: 428
i: 404
end-i: 428
i: 416
end-i: 428
i: 420
end-i: 428
i: 424
end-i: 428
i: 428
end-i: 428
i:428 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;416: r14 <- r9, 0x5\n")
(comment . ";;420: r14 <- 0x1E")
(comment . ";;424 b 4304")
chunklet-i: 428; chunklet-start-i: 428; chunklet-end-i: 432
i: 428
end-i: 432
i: 432
end-i: 432
i:432 HIT CHUNK END
(comment . ";;428: r9 <- 0xE")
chunklet-i: 432; chunklet-start-i: 432; chunklet-end-i: 444
i: 432
end-i: 444
i: 432
end-i: 444
i: 436
end-i: 444
i: 440
end-i: 444
i: 444
end-i: 444
i:444 HIT CHUNK END
(comment . ";;432: r14 <- r9, r7")
(comment . ";;436: r14 <- 0x7")
(comment . ";;440 b 4268")
chunklet-i: 444; chunklet-start-i: 444; chunklet-end-i: 464
i: 444
end-i: 464
i: 448
end-i: 464
i: 452
end-i: 464
i: 456
end-i: 464
i: 460
end-i: 464
i: 464
end-i: 464
i:464 HIT CHUNK END
(comment . ";;444: r13 <- r9, 0x1\n")
(comment . ";;448: r14 <- r13, r1")
(comment . ";;452: r14 <- r14, r8")
(comment . ";;456: r11 <- r14")
(comment . ";;460 b 4248")
chunklet-i: 464; chunklet-start-i: 464; chunklet-end-i: 476
i: 464
end-i: 476
i: 468
end-i: 476
i: 472
end-i: 476
i: 476
end-i: 476
i:476 HIT CHUNK END
(comment . ";;464: r14 <- r11, r13")
(comment . ";;468: r14 <- 0x7")
(comment . ";;472 b 4236")
chunklet-i: 476; chunklet-start-i: 476; chunklet-end-i: 496
i: 476
end-i: 496
i: 480
end-i: 496
i: 484
end-i: 496
i: 488
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";;476: r14 <- r11, r9")
(comment . ";;480: r10 <- r9, r14")
(comment . ";;484: r14 <- r4, r7")
(comment . ";;488: r14 <- 0x7")
(comment . ";;492 b 4196")
chunklet-i: 496; chunklet-start-i: 496; chunklet-end-i: 516
i: 496
end-i: 516
i: 500
end-i: 516
i: 504
end-i: 516
i: 508
end-i: 516
i: 512
end-i: 516
i: 516
end-i: 516
i:516 HIT CHUNK END
(comment . ";;496: r13 <- r4, 0x1\n")
(comment . ";;500: r14 <- r13, r1")
(comment . ";;504: r14 <- r14, r8")
(comment . ";;508: r10 <- r14")
(comment . ";;512 b 4176")
chunklet-i: 516; chunklet-start-i: 516; chunklet-end-i: 528
i: 516
end-i: 528
i: 520
end-i: 528
i: 524
end-i: 528
i: 528
end-i: 528
i:528 HIT CHUNK END
(comment . ";;516: r14 <- r10, r13")
(comment . ";;520: r14 <- 0x7")
(comment . ";;524 b 4164")
chunklet-i: 528; chunklet-start-i: 528; chunklet-end-i: 544
i: 528
end-i: 544
i: 532
end-i: 544
i: 536
end-i: 544
i: 540
end-i: 544
i: 544
end-i: 544
i:544 HIT CHUNK END
(comment . ";;528: r14 <- r10, r9")
(comment . ";;532: r10 <- r4, r14")
(comment . ";;536: r10 <- 0x0")
(comment . ";;540 b 176")
chunklet-i: 544; chunklet-start-i: 544; chunklet-end-i: 552
i: 544
end-i: 552
i: 548
end-i: 552
i: 552
end-i: 552
i:552 HIT CHUNK END
(comment . ";;544: r10 <- 0x7")
(comment . ";;548 b 8")
chunklet-i: 552; chunklet-start-i: 552; chunklet-end-i: 560
i: 552
end-i: 560
i: 552
end-i: 560
i: 556
end-i: 560
i: 560
end-i: 560
i:560 HIT CHUNK END
(comment . ";;552: r4 <- 0x6")
(comment . ";;556: b r1, 0")
chunklet-i: 560; chunklet-start-i: 560; chunklet-end-i: 568
i: 560
end-i: 568
i: 560
end-i: 568
i: 564
end-i: 568
i: 568
end-i: 568
i:568 HIT CHUNK END
(comment . ";;560: r3 <- r3, 0x1\n")
(comment . ";;564 b 72")
chunklet-i: 568; chunklet-start-i: 568; chunklet-end-i: 608
i: 568
end-i: 608
i: 572
end-i: 608
i: 576
end-i: 608
i: 580
end-i: 608
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
at header: 608
(comment . ";;568: r11 <- r1, 0x18\n")
(comment . ";;572: r15 <- r1, 0x8\n")
(comment . ";;576: r10 <- r1, 0x10\n")
(comment . ";;580: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;604: b r6")
chunklet-i: 608; chunklet-start-i: 624; chunklet-end-i: 640
i: 608
end-i: 640
at header: 608
i: 624
end-i: 640
i: 628
end-i: 640
i: 632
end-i: 640
i: 636
end-i: 640
i: 640
end-i: 640
i:640 HIT CHUNK END
(comment . ";;624: r1 <- r1, r0")
(comment . ";;628: r11 <- r1, 0x18\n")
(comment . ";;632: r15 <- r1, 0x8\n")
(comment . ";;636: r10 <- r1, 0x10\n")
chunklet-i: 640; chunklet-start-i: 640; chunklet-end-i: 680
i: 640
end-i: 680
i: 640
end-i: 680
i: 644
end-i: 680
i: 648
end-i: 680
i: 652
end-i: 680
i: 656
end-i: 680
i: 660
end-i: 680
i: 664
end-i: 680
i: 676
end-i: 680
i: 680
end-i: 680
at header: 680
(comment . ";;640: r9 <- 0x0")
(comment . ";;644: r11 <- r1, 0x18\n")
(comment . ";;648: r15 <- r1, 0x8\n")
(comment . ";;652: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;660: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;676: b r6")
chunklet-i: 680; chunklet-start-i: 696; chunklet-end-i: 720
i: 680
end-i: 720
at header: 680
i: 696
end-i: 720
i: 700
end-i: 720
i: 704
end-i: 720
i: 708
end-i: 720
i: 712
end-i: 720
i: 716
end-i: 720
i: 720
end-i: 720
i:720 HIT CHUNK END
(comment . ";;696: r1 <- r1, r0")
(comment . ";;700: r11 <- r1, 0x18\n")
(comment . ";;704: r15 <- r1, 0x8\n")
(comment . ";;708: r4 <- 0x6")
(comment . ";;716 b -168")
chunklet-i: 720; chunklet-start-i: 720; chunklet-end-i: 732
i: 720
end-i: 732
i: 720
end-i: 732
i: 724
end-i: 732
i: 728
end-i: 732
i: 732
end-i: 732
i:732 HIT CHUNK END
(comment . ";;720: r14 <- r0, 0x58\n")
(comment . ";;724: r1 <- r14")
(comment . ";;728 b 3940")
chunklet-i: 732; chunklet-start-i: 732; chunklet-end-i: 756
i: 732
end-i: 756
i: 732
end-i: 756
i: 744
end-i: 756
i: 748
end-i: 756
i: 752
end-i: 756
i: 756
end-i: 756
i:756 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;744: r4 <- r9, 0x5\n")
(comment . ";;748: r4 <- 0x1E")
(comment . ";;752 b 3764")
chunklet-i: 756; chunklet-start-i: 756; chunklet-end-i: 780
i: 756
end-i: 780
i: 756
end-i: 780
i: 768
end-i: 780
i: 772
end-i: 780
i: 776
end-i: 780
i: 780
end-i: 780
i:780 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;768: r14 <- r9, 0x5\n")
(comment . ";;772: r14 <- 0x1E")
(comment . ";;776 b 3568")
chunklet-i: 780; chunklet-start-i: 780; chunklet-end-i: 784
i: 780
end-i: 784
i: 784
end-i: 784
i:784 HIT CHUNK END
(comment . ";;780: r9 <- 0xE")
chunklet-i: 784; chunklet-start-i: 784; chunklet-end-i: 796
i: 784
end-i: 796
i: 784
end-i: 796
i: 788
end-i: 796
i: 792
end-i: 796
i: 796
end-i: 796
i:796 HIT CHUNK END
(comment . ";;784: r14 <- r9, r7")
(comment . ";;788: r14 <- 0x7")
(comment . ";;792 b 3532")
chunklet-i: 796; chunklet-start-i: 796; chunklet-end-i: 816
i: 796
end-i: 816
i: 800
end-i: 816
i: 804
end-i: 816
i: 808
end-i: 816
i: 812
end-i: 816
i: 816
end-i: 816
i:816 HIT CHUNK END
(comment . ";;796: r13 <- r9, 0x1\n")
(comment . ";;800: r14 <- r13, r1")
(comment . ";;804: r14 <- r14, r8")
(comment . ";;808: r11 <- r14")
(comment . ";;812 b 3512")
chunklet-i: 816; chunklet-start-i: 816; chunklet-end-i: 828
i: 816
end-i: 828
i: 820
end-i: 828
i: 824
end-i: 828
i: 828
end-i: 828
i:828 HIT CHUNK END
(comment . ";;816: r14 <- r11, r13")
(comment . ";;820: r14 <- 0x7")
(comment . ";;824 b 3500")
chunklet-i: 828; chunklet-start-i: 828; chunklet-end-i: 848
i: 828
end-i: 848
i: 832
end-i: 848
i: 836
end-i: 848
i: 840
end-i: 848
i: 844
end-i: 848
i: 848
end-i: 848
i:848 HIT CHUNK END
(comment . ";;828: r14 <- r11, r9")
(comment . ";;832: r10 <- r9, r14")
(comment . ";;836: r14 <- r4, r7")
(comment . ";;840: r14 <- 0x7")
(comment . ";;844 b 3456")
chunklet-i: 848; chunklet-start-i: 848; chunklet-end-i: 860
i: 848
end-i: 860
i: 852
end-i: 860
i: 856
end-i: 860
i: 860
end-i: 860
i:860 HIT CHUNK END
(comment . ";;848: r14 <- r4, 0x1\n")
(comment . ";;852: r14 <- 0xF")
(comment . ";;856 b 3444")
chunklet-i: 860; chunklet-start-i: 860; chunklet-end-i: 868
i: 860
end-i: 868
i: 864
end-i: 868
i: 868
end-i: 868
i:868 HIT CHUNK END
(comment . ";;860: r10 <- 0x7")
(comment . ";;864 b 3436")
chunklet-i: 868; chunklet-start-i: 868; chunklet-end-i: 884
i: 868
end-i: 884
i: 872
end-i: 884
i: 876
end-i: 884
i: 880
end-i: 884
i: 884
end-i: 884
i:884 HIT CHUNK END
(comment . ";;868: r14 <- r14, r1")
(comment . ";;872: r14 <- r14, r8")
(comment . ";;876: r10 <- r14")
(comment . ";;880 b 3420")
chunklet-i: 884; chunklet-start-i: 884; chunklet-end-i: 920
i: 884
end-i: 920
i: 888
end-i: 920
i: 892
end-i: 920
i: 896
end-i: 920
i: 908
end-i: 920
i: 912
end-i: 920
i: 916
end-i: 920
i: 920
end-i: 920
i:920 HIT CHUNK END
(comment . ";;884: r13 <- 0x0")
(comment . ";;888: r14 <- r10, r9")
(comment . ";;892: r13 <- r4, r14")
(comment . ";; literal r9")
(comment . ";;908: r4 <- r9, 0x5\n")
(comment . ";;912: r4 <- 0x1E")
(comment . ";;916 b 3232")
chunklet-i: 920; chunklet-start-i: 920; chunklet-end-i: 944
i: 920
end-i: 944
i: 920
end-i: 944
i: 932
end-i: 944
i: 936
end-i: 944
i: 940
end-i: 944
i: 944
end-i: 944
i:944 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;932: r14 <- r9, 0x5\n")
(comment . ";;936: r14 <- 0x1E")
(comment . ";;940 b 3036")
chunklet-i: 944; chunklet-start-i: 944; chunklet-end-i: 948
i: 944
end-i: 948
i: 948
end-i: 948
i:948 HIT CHUNK END
(comment . ";;944: r9 <- 0xE")
chunklet-i: 948; chunklet-start-i: 948; chunklet-end-i: 960
i: 948
end-i: 960
i: 948
end-i: 960
i: 952
end-i: 960
i: 956
end-i: 960
i: 960
end-i: 960
i:960 HIT CHUNK END
(comment . ";;948: r14 <- r9, r7")
(comment . ";;952: r14 <- 0x7")
(comment . ";;956 b 3000")
chunklet-i: 960; chunklet-start-i: 960; chunklet-end-i: 980
i: 960
end-i: 980
i: 964
end-i: 980
i: 968
end-i: 980
i: 972
end-i: 980
i: 976
end-i: 980
i: 980
end-i: 980
i:980 HIT CHUNK END
(comment . ";;960: r13 <- r9, 0x1\n")
(comment . ";;964: r14 <- r13, r1")
(comment . ";;968: r14 <- r14, r8")
(comment . ";;972: r11 <- r14")
(comment . ";;976 b 2980")
chunklet-i: 980; chunklet-start-i: 980; chunklet-end-i: 992
i: 980
end-i: 992
i: 984
end-i: 992
i: 988
end-i: 992
i: 992
end-i: 992
i:992 HIT CHUNK END
(comment . ";;980: r14 <- r11, r13")
(comment . ";;984: r14 <- 0x7")
(comment . ";;988 b 2968")
chunklet-i: 992; chunklet-start-i: 992; chunklet-end-i: 1012
i: 992
end-i: 1012
i: 996
end-i: 1012
i: 1000
end-i: 1012
i: 1004
end-i: 1012
i: 1008
end-i: 1012
i: 1012
end-i: 1012
i:1012 HIT CHUNK END
(comment . ";;992: r14 <- r11, r9")
(comment . ";;996: r10 <- r9, r14")
(comment . ";;1000: r14 <- r4, r7")
(comment . ";;1004: r14 <- 0x7")
(comment . ";;1008 b 2924")
chunklet-i: 1012; chunklet-start-i: 1012; chunklet-end-i: 1024
i: 1012
end-i: 1024
i: 1016
end-i: 1024
i: 1020
end-i: 1024
i: 1024
end-i: 1024
i:1024 HIT CHUNK END
(comment . ";;1012: r14 <- r4, 0x1\n")
(comment . ";;1016: r14 <- 0xF")
(comment . ";;1020 b 2912")
chunklet-i: 1024; chunklet-start-i: 1024; chunklet-end-i: 1032
i: 1024
end-i: 1032
i: 1028
end-i: 1032
i: 1032
end-i: 1032
i:1032 HIT CHUNK END
(comment . ";;1024: r10 <- 0x7")
(comment . ";;1028 b 2904")
chunklet-i: 1032; chunklet-start-i: 1032; chunklet-end-i: 1048
i: 1032
end-i: 1048
i: 1036
end-i: 1048
i: 1040
end-i: 1048
i: 1044
end-i: 1048
i: 1048
end-i: 1048
i:1048 HIT CHUNK END
(comment . ";;1032: r14 <- r14, r1")
(comment . ";;1036: r14 <- r14, r8")
(comment . ";;1040: r10 <- r14")
(comment . ";;1044 b 2888")
chunklet-i: 1048; chunklet-start-i: 1048; chunklet-end-i: 1084
i: 1048
end-i: 1084
i: 1052
end-i: 1084
i: 1056
end-i: 1084
i: 1060
end-i: 1084
i: 1072
end-i: 1084
i: 1076
end-i: 1084
i: 1080
end-i: 1084
i: 1084
end-i: 1084
i:1084 HIT CHUNK END
(comment . ";;1048: r13 <- 0x0")
(comment . ";;1052: r14 <- r10, r9")
(comment . ";;1056: r13 <- r4, r14")
(comment . ";; literal r9")
(comment . ";;1072: r4 <- r9, 0x5\n")
(comment . ";;1076: r4 <- 0x1E")
(comment . ";;1080 b 2700")
chunklet-i: 1084; chunklet-start-i: 1084; chunklet-end-i: 1108
i: 1084
end-i: 1108
i: 1084
end-i: 1108
i: 1096
end-i: 1108
i: 1100
end-i: 1108
i: 1104
end-i: 1108
i: 1108
end-i: 1108
i:1108 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1096: r14 <- r9, 0x5\n")
(comment . ";;1100: r14 <- 0x1E")
(comment . ";;1104 b 2504")
chunklet-i: 1108; chunklet-start-i: 1108; chunklet-end-i: 1112
i: 1108
end-i: 1112
i: 1112
end-i: 1112
i:1112 HIT CHUNK END
(comment . ";;1108: r9 <- 0xE")
chunklet-i: 1112; chunklet-start-i: 1112; chunklet-end-i: 1124
i: 1112
end-i: 1124
i: 1112
end-i: 1124
i: 1116
end-i: 1124
i: 1120
end-i: 1124
i: 1124
end-i: 1124
i:1124 HIT CHUNK END
(comment . ";;1112: r14 <- r9, r7")
(comment . ";;1116: r14 <- 0x7")
(comment . ";;1120 b 2468")
chunklet-i: 1124; chunklet-start-i: 1124; chunklet-end-i: 1144
i: 1124
end-i: 1144
i: 1128
end-i: 1144
i: 1132
end-i: 1144
i: 1136
end-i: 1144
i: 1140
end-i: 1144
i: 1144
end-i: 1144
i:1144 HIT CHUNK END
(comment . ";;1124: r13 <- r9, 0x1\n")
(comment . ";;1128: r14 <- r13, r1")
(comment . ";;1132: r14 <- r14, r8")
(comment . ";;1136: r11 <- r14")
(comment . ";;1140 b 2448")
chunklet-i: 1144; chunklet-start-i: 1144; chunklet-end-i: 1156
i: 1144
end-i: 1156
i: 1148
end-i: 1156
i: 1152
end-i: 1156
i: 1156
end-i: 1156
i:1156 HIT CHUNK END
(comment . ";;1144: r14 <- r11, r13")
(comment . ";;1148: r14 <- 0x7")
(comment . ";;1152 b 2436")
chunklet-i: 1156; chunklet-start-i: 1156; chunklet-end-i: 1176
i: 1156
end-i: 1176
i: 1160
end-i: 1176
i: 1164
end-i: 1176
i: 1168
end-i: 1176
i: 1172
end-i: 1176
i: 1176
end-i: 1176
i:1176 HIT CHUNK END
(comment . ";;1156: r14 <- r11, r9")
(comment . ";;1160: r10 <- r9, r14")
(comment . ";;1164: r14 <- r4, r7")
(comment . ";;1168: r14 <- 0x7")
(comment . ";;1172 b 2392")
chunklet-i: 1176; chunklet-start-i: 1176; chunklet-end-i: 1188
i: 1176
end-i: 1188
i: 1180
end-i: 1188
i: 1184
end-i: 1188
i: 1188
end-i: 1188
i:1188 HIT CHUNK END
(comment . ";;1176: r14 <- r4, 0x1\n")
(comment . ";;1180: r14 <- 0xF")
(comment . ";;1184 b 2380")
chunklet-i: 1188; chunklet-start-i: 1188; chunklet-end-i: 1196
i: 1188
end-i: 1196
i: 1192
end-i: 1196
i: 1196
end-i: 1196
i:1196 HIT CHUNK END
(comment . ";;1188: r10 <- 0x7")
(comment . ";;1192 b 2372")
chunklet-i: 1196; chunklet-start-i: 1196; chunklet-end-i: 1212
i: 1196
end-i: 1212
i: 1200
end-i: 1212
i: 1204
end-i: 1212
i: 1208
end-i: 1212
i: 1212
end-i: 1212
i:1212 HIT CHUNK END
(comment . ";;1196: r14 <- r14, r1")
(comment . ";;1200: r14 <- r14, r8")
(comment . ";;1204: r10 <- r14")
(comment . ";;1208 b 2356")
chunklet-i: 1212; chunklet-start-i: 1212; chunklet-end-i: 1248
i: 1212
end-i: 1248
i: 1216
end-i: 1248
i: 1220
end-i: 1248
i: 1224
end-i: 1248
i: 1236
end-i: 1248
i: 1240
end-i: 1248
i: 1244
end-i: 1248
i: 1248
end-i: 1248
i:1248 HIT CHUNK END
(comment . ";;1212: r13 <- 0x8")
(comment . ";;1216: r14 <- r10, r9")
(comment . ";;1220: r13 <- r4, r14")
(comment . ";; literal r9")
(comment . ";;1236: r14 <- r9, 0x5\n")
(comment . ";;1240: r14 <- 0x1E")
(comment . ";;1244 b 2160")
chunklet-i: 1248; chunklet-start-i: 1248; chunklet-end-i: 1252
i: 1248
end-i: 1252
i: 1252
end-i: 1252
i:1252 HIT CHUNK END
(comment . ";;1248: r9 <- 0xE")
chunklet-i: 1252; chunklet-start-i: 1252; chunklet-end-i: 1264
i: 1252
end-i: 1264
i: 1252
end-i: 1264
i: 1256
end-i: 1264
i: 1260
end-i: 1264
i: 1264
end-i: 1264
i:1264 HIT CHUNK END
(comment . ";;1252: r14 <- r9, r7")
(comment . ";;1256: r14 <- 0x7")
(comment . ";;1260 b 2124")
chunklet-i: 1264; chunklet-start-i: 1264; chunklet-end-i: 1276
i: 1264
end-i: 1276
i: 1268
end-i: 1276
i: 1272
end-i: 1276
i: 1276
end-i: 1276
i:1276 HIT CHUNK END
(comment . ";;1264: r14 <- r9, 0x1\n")
(comment . ";;1268: r14 <- 0xF")
(comment . ";;1272 b 2112")
chunklet-i: 1276; chunklet-start-i: 1276; chunklet-end-i: 1284
i: 1276
end-i: 1284
i: 1280
end-i: 1284
i: 1284
end-i: 1284
i:1284 HIT CHUNK END
(comment . ";;1276: r15 <- 0x7")
(comment . ";;1280 b 2104")
chunklet-i: 1284; chunklet-start-i: 1284; chunklet-end-i: 1300
i: 1284
end-i: 1300
i: 1288
end-i: 1300
i: 1292
end-i: 1300
i: 1296
end-i: 1300
i: 1300
end-i: 1300
i:1300 HIT CHUNK END
(comment . ";;1284: r14 <- r14, r1")
(comment . ";;1288: r14 <- r14, r8")
(comment . ";;1292: r15 <- r14")
(comment . ";;1296 b 2088")
chunklet-i: 1300; chunklet-start-i: 1300; chunklet-end-i: 1316
i: 1300
end-i: 1316
i: 1304
end-i: 1316
i: 1308
end-i: 1316
i: 1312
end-i: 1316
i: 1316
end-i: 1316
i:1316 HIT CHUNK END
(comment . ";;1300: r14 <- r15, r9")
(comment . ";;1304: r11 <- r9, r14")
(comment . ";;1308: r15 <- 0x7")
(comment . ";;1312 b 1928")
chunklet-i: 1316; chunklet-start-i: 1316; chunklet-end-i: 1324
i: 1316
end-i: 1324
i: 1320
end-i: 1324
i: 1324
end-i: 1324
i:1324 HIT CHUNK END
(comment . ";;1316: r4 <- r15, 0x8\n")
(comment . ";;1320 b 1920")
chunklet-i: 1324; chunklet-start-i: 1324; chunklet-end-i: 1328
i: 1324
end-i: 1328
i: 1324
end-i: 1328
i: 1328
end-i: 1328
i:1328 HIT CHUNK END
(comment . ";;1324: r15 <- 0x0")
chunklet-i: 1328; chunklet-start-i: 1328; chunklet-end-i: 1336
i: 1328
end-i: 1336
i: 1328
end-i: 1336
i: 1332
end-i: 1336
i: 1336
end-i: 1336
i:1336 HIT CHUNK END
(comment . ";;1328: r3 <- r3, 0x1\n")
(comment . ";;1332 b 1832")
chunklet-i: 1336; chunklet-start-i: 1336; chunklet-end-i: 1344
i: 1336
end-i: 1344
i: 1336
end-i: 1344
i: 1340
end-i: 1344
i: 1344
end-i: 1344
i:1344 HIT CHUNK END
(comment . ";;1336: r15 <- 0x7")
(comment . ";;1340 b 1728")
chunklet-i: 1344; chunklet-start-i: 1344; chunklet-end-i: 1352
i: 1344
end-i: 1352
i: 1348
end-i: 1352
i: 1352
end-i: 1352
i:1352 HIT CHUNK END
(comment . ";;1344: r15 <- 0x120")
(comment . ";;1348 b 208")
chunklet-i: 1352; chunklet-start-i: 1352; chunklet-end-i: 1408
i: 1352
end-i: 1408
i: 1352
end-i: 1408
i: 1356
end-i: 1408
i: 1360
end-i: 1408
i: 1364
end-i: 1408
i: 1368
end-i: 1408
i: 1372
end-i: 1408
i: 1376
end-i: 1408
i: 1388
end-i: 1408
i: 1392
end-i: 1408
i: 1396
end-i: 1408
i: 1400
end-i: 1408
i: 1404
end-i: 1408
i: 1408
end-i: 1408
at header: 1408
(comment . ";;1352: r9 <- 0xF")
(comment . ";;1356: r10 <- 0x4")
(comment . ";;1360: r11 <- r1, 0x18\n")
(comment . ";;1364: r15 <- r1, 0x10\n")
(comment . ";;1368: r4 <- r1, 0x8\n")
(comment . ";;1372: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;1388: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1396: r15 <- r1, 0x0\n")
(comment . ";;1400: r4 <- 0x2")
(comment . ";;1404: b r5, 13")
chunklet-i: 1408; chunklet-start-i: 1424; chunklet-end-i: 1452
i: 1408
end-i: 1452
at header: 1408
i: 1424
end-i: 1452
i: 1428
end-i: 1452
i: 1432
end-i: 1452
i: 1436
end-i: 1452
i: 1440
end-i: 1452
i: 1444
end-i: 1452
i: 1448
end-i: 1452
i: 1452
end-i: 1452
i:1452 HIT CHUNK END
(comment . ";;1424: r1 <- r1, r0")
(comment . ";;1428: r14 <- 0x4")
(comment . ";;1432: r11 <- r1, 0x18\n")
(comment . ";;1436: r15 <- r1, 0x10\n")
(comment . ";;1440: r4 <- r1, 0x8\n")
(comment . ";;1444: r14 <- 0x6")
(comment . ";;1448 b 108")
chunklet-i: 1452; chunklet-start-i: 1452; chunklet-end-i: 1460
i: 1452
end-i: 1460
i: 1456
end-i: 1460
i: 1460
end-i: 1460
i:1460 HIT CHUNK END
(comment . ";;1452: r15 <- 0x7")
(comment . ";;1456 b 16")
chunklet-i: 1460; chunklet-start-i: 1460; chunklet-end-i: 1468
i: 1460
end-i: 1468
i: 1464
end-i: 1468
i: 1468
end-i: 1468
i:1468 HIT CHUNK END
(comment . ";;1460: r14 <- r15, 0x8\n")
(comment . ";;1464 b 8")
chunklet-i: 1468; chunklet-start-i: 1468; chunklet-end-i: 1476
i: 1468
end-i: 1476
i: 1472
end-i: 1476
i: 1476
end-i: 1476
i:1476 HIT CHUNK END
(comment . ";;1468: r15 <- 0xE")
(comment . ";;1472 b -148")
chunklet-i: 1476; chunklet-start-i: 1476; chunklet-end-i: 1520
i: 1476
end-i: 1520
i: 1476
end-i: 1520
i: 1480
end-i: 1520
i: 1484
end-i: 1520
i: 1488
end-i: 1520
i: 1492
end-i: 1520
i: 1496
end-i: 1520
i: 1500
end-i: 1520
i: 1504
end-i: 1520
i: 1516
end-i: 1520
i: 1520
end-i: 1520
at header: 1520
(comment . ";;1476: r9 <- 0x8")
(comment . ";;1480: r10 <- 0xF")
(comment . ";;1484: r11 <- r1, 0x18\n")
(comment . ";;1488: r4 <- r1, 0x8\n")
(comment . ";;1492: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1500: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1516: b r6")
chunklet-i: 1520; chunklet-start-i: 1536; chunklet-end-i: 1560
i: 1520
end-i: 1560
at header: 1520
i: 1536
end-i: 1560
i: 1540
end-i: 1560
i: 1544
end-i: 1560
i: 1548
end-i: 1560
i: 1552
end-i: 1560
i: 1556
end-i: 1560
i: 1560
end-i: 1560
i:1560 HIT CHUNK END
(comment . ";;1536: r1 <- r1, r0")
(comment . ";;1540: r15 <- 0x4")
(comment . ";;1544: r11 <- r1, 0x18\n")
(comment . ";;1548: r4 <- r1, 0x8\n")
(comment . ";;1556 b -232")
chunklet-i: 1560; chunklet-start-i: 1560; chunklet-end-i: 1584
i: 1560
end-i: 1584
i: 1560
end-i: 1584
i: 1572
end-i: 1584
i: 1576
end-i: 1584
i: 1580
end-i: 1584
i: 1584
end-i: 1584
i:1584 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1572: r4 <- r9, 0x5\n")
(comment . ";;1576: r4 <- 0x1E")
(comment . ";;1580 b 1348")
chunklet-i: 1584; chunklet-start-i: 1584; chunklet-end-i: 1608
i: 1584
end-i: 1608
i: 1584
end-i: 1608
i: 1596
end-i: 1608
i: 1600
end-i: 1608
i: 1604
end-i: 1608
i: 1608
end-i: 1608
i:1608 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1596: r15 <- r9, 0x5\n")
(comment . ";;1600: r15 <- 0x1E")
(comment . ";;1604 b 1168")
chunklet-i: 1608; chunklet-start-i: 1608; chunklet-end-i: 1612
i: 1608
end-i: 1612
i: 1612
end-i: 1612
i:1612 HIT CHUNK END
(comment . ";;1608: r9 <- 0xF")
chunklet-i: 1612; chunklet-start-i: 1612; chunklet-end-i: 1624
i: 1612
end-i: 1624
i: 1612
end-i: 1624
i: 1616
end-i: 1624
i: 1620
end-i: 1624
i: 1624
end-i: 1624
i:1624 HIT CHUNK END
(comment . ";;1612: r15 <- r9, r7")
(comment . ";;1616: r15 <- 0x7")
(comment . ";;1620 b 1132")
chunklet-i: 1624; chunklet-start-i: 1624; chunklet-end-i: 1644
i: 1624
end-i: 1644
i: 1628
end-i: 1644
i: 1632
end-i: 1644
i: 1636
end-i: 1644
i: 1640
end-i: 1644
i: 1644
end-i: 1644
i:1644 HIT CHUNK END
(comment . ";;1624: r14 <- r9, 0x1\n")
(comment . ";;1628: r15 <- r14, r1")
(comment . ";;1632: r15 <- r15, r8")
(comment . ";;1636: r11 <- r15")
(comment . ";;1640 b 1112")
chunklet-i: 1644; chunklet-start-i: 1644; chunklet-end-i: 1656
i: 1644
end-i: 1656
i: 1648
end-i: 1656
i: 1652
end-i: 1656
i: 1656
end-i: 1656
i:1656 HIT CHUNK END
(comment . ";;1644: r15 <- r11, r14")
(comment . ";;1648: r15 <- 0x7")
(comment . ";;1652 b 1100")
chunklet-i: 1656; chunklet-start-i: 1656; chunklet-end-i: 1676
i: 1656
end-i: 1676
i: 1660
end-i: 1676
i: 1664
end-i: 1676
i: 1668
end-i: 1676
i: 1672
end-i: 1676
i: 1676
end-i: 1676
i:1676 HIT CHUNK END
(comment . ";;1656: r15 <- r11, r9")
(comment . ";;1660: r10 <- r9, r15")
(comment . ";;1664: r15 <- r4, r7")
(comment . ";;1668: r15 <- 0x7")
(comment . ";;1672 b 1056")
chunklet-i: 1676; chunklet-start-i: 1676; chunklet-end-i: 1688
i: 1676
end-i: 1688
i: 1680
end-i: 1688
i: 1684
end-i: 1688
i: 1688
end-i: 1688
i:1688 HIT CHUNK END
(comment . ";;1676: r15 <- r4, 0x1\n")
(comment . ";;1680: r15 <- 0xF")
(comment . ";;1684 b 1044")
chunklet-i: 1688; chunklet-start-i: 1688; chunklet-end-i: 1696
i: 1688
end-i: 1696
i: 1692
end-i: 1696
i: 1696
end-i: 1696
i:1696 HIT CHUNK END
(comment . ";;1688: r10 <- 0x7")
(comment . ";;1692 b 1036")
chunklet-i: 1696; chunklet-start-i: 1696; chunklet-end-i: 1712
i: 1696
end-i: 1712
i: 1700
end-i: 1712
i: 1704
end-i: 1712
i: 1708
end-i: 1712
i: 1712
end-i: 1712
i:1712 HIT CHUNK END
(comment . ";;1696: r15 <- r15, r1")
(comment . ";;1700: r15 <- r15, r8")
(comment . ";;1704: r10 <- r15")
(comment . ";;1708 b 1020")
chunklet-i: 1712; chunklet-start-i: 1712; chunklet-end-i: 1748
i: 1712
end-i: 1748
i: 1716
end-i: 1748
i: 1720
end-i: 1748
i: 1724
end-i: 1748
i: 1736
end-i: 1748
i: 1740
end-i: 1748
i: 1744
end-i: 1748
i: 1748
end-i: 1748
i:1748 HIT CHUNK END
(comment . ";;1712: r14 <- 0x8")
(comment . ";;1716: r15 <- r10, r9")
(comment . ";;1720: r14 <- r4, r15")
(comment . ";; literal r9")
(comment . ";;1736: r4 <- r9, 0x5\n")
(comment . ";;1740: r4 <- 0x1E")
(comment . ";;1744 b 848")
chunklet-i: 1748; chunklet-start-i: 1748; chunklet-end-i: 1772
i: 1748
end-i: 1772
i: 1748
end-i: 1772
i: 1760
end-i: 1772
i: 1764
end-i: 1772
i: 1768
end-i: 1772
i: 1772
end-i: 1772
i:1772 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1760: r15 <- r9, 0x5\n")
(comment . ";;1764: r15 <- 0x1E")
(comment . ";;1768 b 668")
chunklet-i: 1772; chunklet-start-i: 1772; chunklet-end-i: 1776
i: 1772
end-i: 1776
i: 1776
end-i: 1776
i:1776 HIT CHUNK END
(comment . ";;1772: r9 <- 0xF")
chunklet-i: 1776; chunklet-start-i: 1776; chunklet-end-i: 1788
i: 1776
end-i: 1788
i: 1776
end-i: 1788
i: 1780
end-i: 1788
i: 1784
end-i: 1788
i: 1788
end-i: 1788
i:1788 HIT CHUNK END
(comment . ";;1776: r15 <- r9, r7")
(comment . ";;1780: r15 <- 0x7")
(comment . ";;1784 b 632")
chunklet-i: 1788; chunklet-start-i: 1788; chunklet-end-i: 1808
i: 1788
end-i: 1808
i: 1792
end-i: 1808
i: 1796
end-i: 1808
i: 1800
end-i: 1808
i: 1804
end-i: 1808
i: 1808
end-i: 1808
i:1808 HIT CHUNK END
(comment . ";;1788: r14 <- r9, 0x1\n")
(comment . ";;1792: r15 <- r14, r1")
(comment . ";;1796: r15 <- r15, r8")
(comment . ";;1800: r11 <- r15")
(comment . ";;1804 b 612")
chunklet-i: 1808; chunklet-start-i: 1808; chunklet-end-i: 1820
i: 1808
end-i: 1820
i: 1812
end-i: 1820
i: 1816
end-i: 1820
i: 1820
end-i: 1820
i:1820 HIT CHUNK END
(comment . ";;1808: r15 <- r11, r14")
(comment . ";;1812: r15 <- 0x7")
(comment . ";;1816 b 600")
chunklet-i: 1820; chunklet-start-i: 1820; chunklet-end-i: 1840
i: 1820
end-i: 1840
i: 1824
end-i: 1840
i: 1828
end-i: 1840
i: 1832
end-i: 1840
i: 1836
end-i: 1840
i: 1840
end-i: 1840
i:1840 HIT CHUNK END
(comment . ";;1820: r15 <- r11, r9")
(comment . ";;1824: r10 <- r9, r15")
(comment . ";;1828: r15 <- r4, r7")
(comment . ";;1832: r15 <- 0x7")
(comment . ";;1836 b 556")
chunklet-i: 1840; chunklet-start-i: 1840; chunklet-end-i: 1852
i: 1840
end-i: 1852
i: 1844
end-i: 1852
i: 1848
end-i: 1852
i: 1852
end-i: 1852
i:1852 HIT CHUNK END
(comment . ";;1840: r15 <- r4, 0x1\n")
(comment . ";;1844: r15 <- 0xF")
(comment . ";;1848 b 544")
chunklet-i: 1852; chunklet-start-i: 1852; chunklet-end-i: 1860
i: 1852
end-i: 1860
i: 1856
end-i: 1860
i: 1860
end-i: 1860
i:1860 HIT CHUNK END
(comment . ";;1852: r10 <- 0x7")
(comment . ";;1856 b 536")
chunklet-i: 1860; chunklet-start-i: 1860; chunklet-end-i: 1876
i: 1860
end-i: 1876
i: 1864
end-i: 1876
i: 1868
end-i: 1876
i: 1872
end-i: 1876
i: 1876
end-i: 1876
i:1876 HIT CHUNK END
(comment . ";;1860: r15 <- r15, r1")
(comment . ";;1864: r15 <- r15, r8")
(comment . ";;1868: r10 <- r15")
(comment . ";;1872 b 520")
chunklet-i: 1876; chunklet-start-i: 1876; chunklet-end-i: 1912
i: 1876
end-i: 1912
i: 1880
end-i: 1912
i: 1884
end-i: 1912
i: 1888
end-i: 1912
i: 1900
end-i: 1912
i: 1904
end-i: 1912
i: 1908
end-i: 1912
i: 1912
end-i: 1912
i:1912 HIT CHUNK END
(comment . ";;1876: r14 <- 0x8")
(comment . ";;1880: r15 <- r10, r9")
(comment . ";;1884: r14 <- r4, r15")
(comment . ";; literal r9")
(comment . ";;1900: r4 <- r9, 0x5\n")
(comment . ";;1904: r4 <- 0x1E")
(comment . ";;1908 b 348")
chunklet-i: 1912; chunklet-start-i: 1912; chunklet-end-i: 1936
i: 1912
end-i: 1936
i: 1912
end-i: 1936
i: 1924
end-i: 1936
i: 1928
end-i: 1936
i: 1932
end-i: 1936
i: 1936
end-i: 1936
i:1936 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;1924: r15 <- r9, 0x5\n")
(comment . ";;1928: r15 <- 0x1E")
(comment . ";;1932 b 168")
chunklet-i: 1936; chunklet-start-i: 1936; chunklet-end-i: 1940
i: 1936
end-i: 1940
i: 1940
end-i: 1940
i:1940 HIT CHUNK END
(comment . ";;1936: r9 <- 0xF")
chunklet-i: 1940; chunklet-start-i: 1940; chunklet-end-i: 1952
i: 1940
end-i: 1952
i: 1940
end-i: 1952
i: 1944
end-i: 1952
i: 1948
end-i: 1952
i: 1952
end-i: 1952
i:1952 HIT CHUNK END
(comment . ";;1940: r15 <- r9, r7")
(comment . ";;1944: r15 <- 0x7")
(comment . ";;1948 b 132")
chunklet-i: 1952; chunklet-start-i: 1952; chunklet-end-i: 1972
i: 1952
end-i: 1972
i: 1956
end-i: 1972
i: 1960
end-i: 1972
i: 1964
end-i: 1972
i: 1968
end-i: 1972
i: 1972
end-i: 1972
i:1972 HIT CHUNK END
(comment . ";;1952: r14 <- r9, 0x1\n")
(comment . ";;1956: r15 <- r14, r1")
(comment . ";;1960: r15 <- r15, r8")
(comment . ";;1964: r11 <- r15")
(comment . ";;1968 b 112")
chunklet-i: 1972; chunklet-start-i: 1972; chunklet-end-i: 1984
i: 1972
end-i: 1984
i: 1976
end-i: 1984
i: 1980
end-i: 1984
i: 1984
end-i: 1984
i:1984 HIT CHUNK END
(comment . ";;1972: r15 <- r11, r14")
(comment . ";;1976: r15 <- 0x7")
(comment . ";;1980 b 100")
chunklet-i: 1984; chunklet-start-i: 1984; chunklet-end-i: 2004
i: 1984
end-i: 2004
i: 1988
end-i: 2004
i: 1992
end-i: 2004
i: 1996
end-i: 2004
i: 2000
end-i: 2004
i: 2004
end-i: 2004
i:2004 HIT CHUNK END
(comment . ";;1984: r15 <- r11, r9")
(comment . ";;1988: r10 <- r9, r15")
(comment . ";;1992: r15 <- r4, r7")
(comment . ";;1996: r15 <- 0x7")
(comment . ";;2000 b 56")
chunklet-i: 2004; chunklet-start-i: 2004; chunklet-end-i: 2016
i: 2004
end-i: 2016
i: 2008
end-i: 2016
i: 2012
end-i: 2016
i: 2016
end-i: 2016
i:2016 HIT CHUNK END
(comment . ";;2004: r15 <- r4, 0x1\n")
(comment . ";;2008: r15 <- 0xF")
(comment . ";;2012 b 44")
chunklet-i: 2016; chunklet-start-i: 2016; chunklet-end-i: 2024
i: 2016
end-i: 2024
i: 2020
end-i: 2024
i: 2024
end-i: 2024
i:2024 HIT CHUNK END
(comment . ";;2016: r10 <- 0x7")
(comment . ";;2020 b 36")
chunklet-i: 2024; chunklet-start-i: 2024; chunklet-end-i: 2040
i: 2024
end-i: 2040
i: 2028
end-i: 2040
i: 2032
end-i: 2040
i: 2036
end-i: 2040
i: 2040
end-i: 2040
i:2040 HIT CHUNK END
(comment . ";;2024: r15 <- r15, r1")
(comment . ";;2028: r15 <- r15, r8")
(comment . ";;2032: r10 <- r15")
(comment . ";;2036 b 20")
chunklet-i: 2040; chunklet-start-i: 2040; chunklet-end-i: 2060
i: 2040
end-i: 2060
i: 2044
end-i: 2060
i: 2048
end-i: 2060
i: 2052
end-i: 2060
i: 2056
end-i: 2060
i: 2060
end-i: 2060
i:2060 HIT CHUNK END
(comment . ";;2040: r14 <- 0x0")
(comment . ";;2044: r15 <- r10, r9")
(comment . ";;2048: r14 <- r4, r15")
(comment . ";;2052: r4 <- 0x6")
(comment . ";;2056: b r1, 0")
chunklet-i: 2060; chunklet-start-i: 2060; chunklet-end-i: 2084
i: 2060
end-i: 2084
i: 2060
end-i: 2084
i: 2064
end-i: 2084
i: 2068
end-i: 2084
i: 2080
end-i: 2084
i: 2084
end-i: 2084
i:2084 HIT CHUNK END
(comment . ";;2060: r9 <- 0x4")
(comment . ";;2064: r11 <- 0x0")
(comment . ";; literal r6")
(comment . ";;2080: b r6")
chunklet-i: 2084; chunklet-start-i: 2084; chunklet-end-i: 2104
i: 2084
end-i: 2104
i: 2084
end-i: 2104
i: 2088
end-i: 2104
i: 2100
end-i: 2104
i: 2104
end-i: 2104
i:2104 HIT CHUNK END
(comment . ";;2084: r10 <- 0xB")
(comment . ";; literal r6")
(comment . ";;2100: b r6")
chunklet-i: 2104; chunklet-start-i: 2104; chunklet-end-i: 2112
i: 2104
end-i: 2112
i: 2104
end-i: 2112
i: 2108
end-i: 2112
i: 2112
end-i: 2112
i:2112 HIT CHUNK END
(comment . ";;2104: r3 <- r3, 0x1\n")
(comment . ";;2108 b 76")
chunklet-i: 2112; chunklet-start-i: 2112; chunklet-end-i: 2152
i: 2112
end-i: 2152
i: 2116
end-i: 2152
i: 2120
end-i: 2152
i: 2124
end-i: 2152
i: 2128
end-i: 2152
i: 2132
end-i: 2152
i: 2136
end-i: 2152
i: 2148
end-i: 2152
i: 2152
end-i: 2152
at header: 2152
(comment . ";;2112: r11 <- r1, 0x18\n")
(comment . ";;2116: r4 <- r1, 0x8\n")
(comment . ";;2120: r9 <- r1, 0x10\n")
(comment . ";;2124: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2132: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2148: b r6")
chunklet-i: 2152; chunklet-start-i: 2168; chunklet-end-i: 2188
i: 2152
end-i: 2188
at header: 2152
i: 2168
end-i: 2188
i: 2172
end-i: 2188
i: 2176
end-i: 2188
i: 2180
end-i: 2188
i: 2184
end-i: 2188
i: 2188
end-i: 2188
i:2188 HIT CHUNK END
(comment . ";;2172: r1 <- r1, r0")
(comment . ";;2176: r11 <- r1, 0x18\n")
(comment . ";;2180: r4 <- r1, 0x8\n")
(comment . ";;2184: r9 <- r1, 0x10\n")
chunklet-i: 2188; chunklet-start-i: 2188; chunklet-end-i: 2224
i: 2188
end-i: 2224
i: 2188
end-i: 2224
i: 2192
end-i: 2224
i: 2196
end-i: 2224
i: 2200
end-i: 2224
i: 2204
end-i: 2224
i: 2208
end-i: 2224
i: 2220
end-i: 2224
i: 2224
end-i: 2224
at header: 2224
(comment . ";;2188: r11 <- r1, 0x18\n")
(comment . ";;2192: r4 <- r1, 0x8\n")
(comment . ";;2196: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2204: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2220: b r6")
chunklet-i: 2224; chunklet-start-i: 2240; chunklet-end-i: 2260
i: 2224
end-i: 2260
at header: 2224
i: 2240
end-i: 2260
i: 2244
end-i: 2260
i: 2248
end-i: 2260
i: 2252
end-i: 2260
i: 2256
end-i: 2260
i: 2260
end-i: 2260
i:2260 HIT CHUNK END
(comment . ";;2240: r1 <- r1, r0")
(comment . ";;2244: r9 <- 0x4")
(comment . ";;2248: r11 <- r1, 0x18\n")
(comment . ";;2252: r4 <- r1, 0x8\n")
(comment . ";;2256 b -320")
chunklet-i: 2260; chunklet-start-i: 2260; chunklet-end-i: 2268
i: 2260
end-i: 2268
i: 2260
end-i: 2268
i: 2264
end-i: 2268
i: 2268
end-i: 2268
i:2268 HIT CHUNK END
(comment . ";;2260: r3 <- r3, 0x1\n")
(comment . ";;2264 b 68")
chunklet-i: 2268; chunklet-start-i: 2268; chunklet-end-i: 2304
i: 2268
end-i: 2304
i: 2272
end-i: 2304
i: 2276
end-i: 2304
i: 2280
end-i: 2304
i: 2284
end-i: 2304
i: 2288
end-i: 2304
i: 2300
end-i: 2304
i: 2304
end-i: 2304
at header: 2304
(comment . ";;2268: r11 <- r1, 0x18\n")
(comment . ";;2272: r9 <- r1, 0x8\n")
(comment . ";;2276: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2284: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2300: b r6")
chunklet-i: 2304; chunklet-start-i: 2320; chunklet-end-i: 2336
i: 2304
end-i: 2336
at header: 2304
i: 2320
end-i: 2336
i: 2324
end-i: 2336
i: 2328
end-i: 2336
i: 2332
end-i: 2336
i: 2336
end-i: 2336
i:2336 HIT CHUNK END
(comment . ";;2324: r1 <- r1, r0")
(comment . ";;2328: r11 <- r1, 0x18\n")
(comment . ";;2332: r9 <- r1, 0x8\n")
chunklet-i: 2336; chunklet-start-i: 2336; chunklet-end-i: 2368
i: 2336
end-i: 2368
i: 2336
end-i: 2368
i: 2340
end-i: 2368
i: 2344
end-i: 2368
i: 2348
end-i: 2368
i: 2352
end-i: 2368
i: 2364
end-i: 2368
i: 2368
end-i: 2368
at header: 2368
(comment . ";;2336: r11 <- r1, 0x18\n")
(comment . ";;2340: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2348: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2364: b r6")
chunklet-i: 2368; chunklet-start-i: 2384; chunklet-end-i: 2396
i: 2368
end-i: 2396
at header: 2368
i: 2384
end-i: 2396
i: 2388
end-i: 2396
i: 2392
end-i: 2396
i: 2396
end-i: 2396
i:2396 HIT CHUNK END
(comment . ";;2384: r1 <- r1, r0")
(comment . ";;2388: r11 <- r1, 0x18\n")
(comment . ";;2392 b -484")
chunklet-i: 2396; chunklet-start-i: 2396; chunklet-end-i: 2420
i: 2396
end-i: 2420
i: 2396
end-i: 2420
i: 2400
end-i: 2420
i: 2404
end-i: 2420
i: 2416
end-i: 2420
i: 2420
end-i: 2420
i:2420 HIT CHUNK END
(comment . ";;2396: r9 <- 0x4")
(comment . ";;2400: r11 <- 0x8")
(comment . ";; literal r6")
(comment . ";;2416: b r6")
chunklet-i: 2420; chunklet-start-i: 2420; chunklet-end-i: 2440
i: 2420
end-i: 2440
i: 2420
end-i: 2440
i: 2424
end-i: 2440
i: 2436
end-i: 2440
i: 2440
end-i: 2440
i:2440 HIT CHUNK END
(comment . ";;2420: r10 <- 0xB")
(comment . ";; literal r6")
(comment . ";;2436: b r6")
chunklet-i: 2440; chunklet-start-i: 2440; chunklet-end-i: 2448
i: 2440
end-i: 2448
i: 2440
end-i: 2448
i: 2444
end-i: 2448
i: 2448
end-i: 2448
i:2448 HIT CHUNK END
(comment . ";;2440: r3 <- r3, 0x1\n")
(comment . ";;2444 b 76")
chunklet-i: 2448; chunklet-start-i: 2448; chunklet-end-i: 2488
i: 2448
end-i: 2488
i: 2452
end-i: 2488
i: 2456
end-i: 2488
i: 2460
end-i: 2488
i: 2464
end-i: 2488
i: 2468
end-i: 2488
i: 2472
end-i: 2488
i: 2484
end-i: 2488
i: 2488
end-i: 2488
at header: 2488
(comment . ";;2448: r11 <- r1, 0x18\n")
(comment . ";;2452: r4 <- r1, 0x8\n")
(comment . ";;2456: r9 <- r1, 0x10\n")
(comment . ";;2460: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2468: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2484: b r6")
chunklet-i: 2488; chunklet-start-i: 2504; chunklet-end-i: 2524
i: 2488
end-i: 2524
at header: 2488
i: 2504
end-i: 2524
i: 2508
end-i: 2524
i: 2512
end-i: 2524
i: 2516
end-i: 2524
i: 2520
end-i: 2524
i: 2524
end-i: 2524
i:2524 HIT CHUNK END
(comment . ";;2508: r1 <- r1, r0")
(comment . ";;2512: r11 <- r1, 0x18\n")
(comment . ";;2516: r4 <- r1, 0x8\n")
(comment . ";;2520: r9 <- r1, 0x10\n")
chunklet-i: 2524; chunklet-start-i: 2524; chunklet-end-i: 2560
i: 2524
end-i: 2560
i: 2524
end-i: 2560
i: 2528
end-i: 2560
i: 2532
end-i: 2560
i: 2536
end-i: 2560
i: 2540
end-i: 2560
i: 2544
end-i: 2560
i: 2556
end-i: 2560
i: 2560
end-i: 2560
at header: 2560
(comment . ";;2524: r11 <- r1, 0x18\n")
(comment . ";;2528: r4 <- r1, 0x8\n")
(comment . ";;2532: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2540: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2556: b r6")
chunklet-i: 2560; chunklet-start-i: 2576; chunklet-end-i: 2596
i: 2560
end-i: 2596
at header: 2560
i: 2576
end-i: 2596
i: 2580
end-i: 2596
i: 2584
end-i: 2596
i: 2588
end-i: 2596
i: 2592
end-i: 2596
i: 2596
end-i: 2596
i:2596 HIT CHUNK END
(comment . ";;2576: r1 <- r1, r0")
(comment . ";;2580: r9 <- 0x4")
(comment . ";;2584: r11 <- r1, 0x18\n")
(comment . ";;2588: r4 <- r1, 0x8\n")
(comment . ";;2592 b -820")
chunklet-i: 2596; chunklet-start-i: 2596; chunklet-end-i: 2604
i: 2596
end-i: 2604
i: 2596
end-i: 2604
i: 2600
end-i: 2604
i: 2604
end-i: 2604
i:2604 HIT CHUNK END
(comment . ";;2596: r3 <- r3, 0x1\n")
(comment . ";;2600 b 68")
chunklet-i: 2604; chunklet-start-i: 2604; chunklet-end-i: 2640
i: 2604
end-i: 2640
i: 2608
end-i: 2640
i: 2612
end-i: 2640
i: 2616
end-i: 2640
i: 2620
end-i: 2640
i: 2624
end-i: 2640
i: 2636
end-i: 2640
i: 2640
end-i: 2640
at header: 2640
(comment . ";;2604: r11 <- r1, 0x18\n")
(comment . ";;2608: r9 <- r1, 0x8\n")
(comment . ";;2612: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2620: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2636: b r6")
chunklet-i: 2640; chunklet-start-i: 2656; chunklet-end-i: 2672
i: 2640
end-i: 2672
at header: 2640
i: 2656
end-i: 2672
i: 2660
end-i: 2672
i: 2664
end-i: 2672
i: 2668
end-i: 2672
i: 2672
end-i: 2672
i:2672 HIT CHUNK END
(comment . ";;2660: r1 <- r1, r0")
(comment . ";;2664: r11 <- r1, 0x18\n")
(comment . ";;2668: r9 <- r1, 0x8\n")
chunklet-i: 2672; chunklet-start-i: 2672; chunklet-end-i: 2704
i: 2672
end-i: 2704
i: 2672
end-i: 2704
i: 2676
end-i: 2704
i: 2680
end-i: 2704
i: 2684
end-i: 2704
i: 2688
end-i: 2704
i: 2700
end-i: 2704
i: 2704
end-i: 2704
at header: 2704
(comment . ";;2672: r11 <- r1, 0x18\n")
(comment . ";;2676: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2684: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2700: b r6")
chunklet-i: 2704; chunklet-start-i: 2720; chunklet-end-i: 2732
i: 2704
end-i: 2732
at header: 2704
i: 2720
end-i: 2732
i: 2724
end-i: 2732
i: 2728
end-i: 2732
i: 2732
end-i: 2732
i:2732 HIT CHUNK END
(comment . ";;2720: r1 <- r1, r0")
(comment . ";;2724: r11 <- r1, 0x18\n")
(comment . ";;2728 b -984")
chunklet-i: 2732; chunklet-start-i: 2732; chunklet-end-i: 2756
i: 2732
end-i: 2756
i: 2732
end-i: 2756
i: 2736
end-i: 2756
i: 2740
end-i: 2756
i: 2752
end-i: 2756
i: 2756
end-i: 2756
i:2756 HIT CHUNK END
(comment . ";;2732: r9 <- 0x4")
(comment . ";;2736: r11 <- 0x8")
(comment . ";; literal r6")
(comment . ";;2752: b r6")
chunklet-i: 2756; chunklet-start-i: 2756; chunklet-end-i: 2776
i: 2756
end-i: 2776
i: 2756
end-i: 2776
i: 2760
end-i: 2776
i: 2772
end-i: 2776
i: 2776
end-i: 2776
i:2776 HIT CHUNK END
(comment . ";;2756: r10 <- 0xB")
(comment . ";; literal r6")
(comment . ";;2772: b r6")
chunklet-i: 2776; chunklet-start-i: 2776; chunklet-end-i: 2784
i: 2776
end-i: 2784
i: 2776
end-i: 2784
i: 2780
end-i: 2784
i: 2784
end-i: 2784
i:2784 HIT CHUNK END
(comment . ";;2776: r3 <- r3, 0x1\n")
(comment . ";;2780 b 76")
chunklet-i: 2784; chunklet-start-i: 2784; chunklet-end-i: 2824
i: 2784
end-i: 2824
i: 2788
end-i: 2824
i: 2792
end-i: 2824
i: 2796
end-i: 2824
i: 2800
end-i: 2824
i: 2804
end-i: 2824
i: 2808
end-i: 2824
i: 2820
end-i: 2824
i: 2824
end-i: 2824
at header: 2824
(comment . ";;2784: r11 <- r1, 0x18\n")
(comment . ";;2788: r4 <- r1, 0x8\n")
(comment . ";;2792: r9 <- r1, 0x10\n")
(comment . ";;2796: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2804: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2820: b r6")
chunklet-i: 2824; chunklet-start-i: 2840; chunklet-end-i: 2860
i: 2824
end-i: 2860
at header: 2824
i: 2840
end-i: 2860
i: 2844
end-i: 2860
i: 2848
end-i: 2860
i: 2852
end-i: 2860
i: 2856
end-i: 2860
i: 2860
end-i: 2860
i:2860 HIT CHUNK END
(comment . ";;2844: r1 <- r1, r0")
(comment . ";;2848: r11 <- r1, 0x18\n")
(comment . ";;2852: r4 <- r1, 0x8\n")
(comment . ";;2856: r9 <- r1, 0x10\n")
chunklet-i: 2860; chunklet-start-i: 2860; chunklet-end-i: 2896
i: 2860
end-i: 2896
i: 2860
end-i: 2896
i: 2864
end-i: 2896
i: 2868
end-i: 2896
i: 2872
end-i: 2896
i: 2876
end-i: 2896
i: 2880
end-i: 2896
i: 2892
end-i: 2896
i: 2896
end-i: 2896
at header: 2896
(comment . ";;2860: r11 <- r1, 0x18\n")
(comment . ";;2864: r4 <- r1, 0x8\n")
(comment . ";;2868: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2876: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2892: b r6")
chunklet-i: 2896; chunklet-start-i: 2912; chunklet-end-i: 2932
i: 2896
end-i: 2932
at header: 2896
i: 2912
end-i: 2932
i: 2916
end-i: 2932
i: 2920
end-i: 2932
i: 2924
end-i: 2932
i: 2928
end-i: 2932
i: 2932
end-i: 2932
i:2932 HIT CHUNK END
(comment . ";;2912: r1 <- r1, r0")
(comment . ";;2916: r9 <- 0x4")
(comment . ";;2920: r11 <- r1, 0x18\n")
(comment . ";;2924: r4 <- r1, 0x8\n")
(comment . ";;2928 b -1320")
chunklet-i: 2932; chunklet-start-i: 2932; chunklet-end-i: 2940
i: 2932
end-i: 2940
i: 2932
end-i: 2940
i: 2936
end-i: 2940
i: 2940
end-i: 2940
i:2940 HIT CHUNK END
(comment . ";;2932: r3 <- r3, 0x1\n")
(comment . ";;2936 b 68")
chunklet-i: 2940; chunklet-start-i: 2940; chunklet-end-i: 2976
i: 2940
end-i: 2976
i: 2944
end-i: 2976
i: 2948
end-i: 2976
i: 2952
end-i: 2976
i: 2956
end-i: 2976
i: 2960
end-i: 2976
i: 2972
end-i: 2976
i: 2976
end-i: 2976
at header: 2976
(comment . ";;2940: r11 <- r1, 0x18\n")
(comment . ";;2944: r9 <- r1, 0x8\n")
(comment . ";;2948: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2956: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2972: b r6")
chunklet-i: 2976; chunklet-start-i: 2992; chunklet-end-i: 3008
i: 2976
end-i: 3008
at header: 2976
i: 2992
end-i: 3008
i: 2996
end-i: 3008
i: 3000
end-i: 3008
i: 3004
end-i: 3008
i: 3008
end-i: 3008
i:3008 HIT CHUNK END
(comment . ";;2996: r1 <- r1, r0")
(comment . ";;3000: r11 <- r1, 0x18\n")
(comment . ";;3004: r9 <- r1, 0x8\n")
chunklet-i: 3008; chunklet-start-i: 3008; chunklet-end-i: 3040
i: 3008
end-i: 3040
i: 3008
end-i: 3040
i: 3012
end-i: 3040
i: 3016
end-i: 3040
i: 3020
end-i: 3040
i: 3024
end-i: 3040
i: 3036
end-i: 3040
i: 3040
end-i: 3040
at header: 3040
(comment . ";;3008: r11 <- r1, 0x18\n")
(comment . ";;3012: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3020: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3036: b r6")
chunklet-i: 3040; chunklet-start-i: 3056; chunklet-end-i: 3072
i: 3040
end-i: 3072
at header: 3040
i: 3056
end-i: 3072
i: 3060
end-i: 3072
i: 3064
end-i: 3072
i: 3068
end-i: 3072
i: 3072
end-i: 3072
i:3072 HIT CHUNK END
(comment . ";;3056: r1 <- r1, r0")
(comment . ";;3060: r11 <- r1, 0x18\n")
(comment . ";;3068 b -1488")
chunklet-i: 3072; chunklet-start-i: 3072; chunklet-end-i: 3120
i: 3072
end-i: 3120
i: 3072
end-i: 3120
i: 3076
end-i: 3120
i: 3080
end-i: 3120
i: 3084
end-i: 3120
i: 3088
end-i: 3120
i: 3092
end-i: 3120
i: 3096
end-i: 3120
i: 3100
end-i: 3120
i: 3104
end-i: 3120
i: 3116
end-i: 3120
i: 3120
end-i: 3120
at header: 3120
(comment . ";;3072: r9 <- 0xF")
(comment . ";;3076: r10 <- 0x120")
(comment . ";;3080: r11 <- r1, 0x18\n")
(comment . ";;3084: r15 <- r1, 0x10\n")
(comment . ";;3088: r4 <- r1, 0x8\n")
(comment . ";;3092: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3100: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3116: b r6")
chunklet-i: 3120; chunklet-start-i: 3136; chunklet-end-i: 3164
i: 3120
end-i: 3164
at header: 3120
i: 3136
end-i: 3164
i: 3140
end-i: 3164
i: 3144
end-i: 3164
i: 3148
end-i: 3164
i: 3152
end-i: 3164
i: 3156
end-i: 3164
i: 3160
end-i: 3164
i: 3164
end-i: 3164
i:3164 HIT CHUNK END
(comment . ";;3136: r1 <- r1, r0")
(comment . ";;3140: r14 <- 0x4")
(comment . ";;3144: r11 <- r1, 0x18\n")
(comment . ";;3148: r15 <- r1, 0x10\n")
(comment . ";;3152: r4 <- r1, 0x8\n")
(comment . ";;3156: r14 <- 0x6")
(comment . ";;3160 b -1812")
chunklet-i: 3164; chunklet-start-i: 3164; chunklet-end-i: 3168
i: 3164
end-i: 3168
i: 3168
end-i: 3168
i:3168 HIT CHUNK END
(comment . ";;3164 b -1608")
chunklet-i: 3168; chunklet-start-i: 3168; chunklet-end-i: 3208
i: 3168
end-i: 3208
i: 3168
end-i: 3208
i: 3172
end-i: 3208
i: 3176
end-i: 3208
i: 3180
end-i: 3208
i: 3184
end-i: 3208
i: 3188
end-i: 3208
i: 3192
end-i: 3208
i: 3204
end-i: 3208
i: 3208
end-i: 3208
at header: 3208
(comment . ";;3168: r11 <- r1, 0x18\n")
(comment . ";;3172: r15 <- r1, 0x10\n")
(comment . ";;3176: r4 <- r1, 0x8\n")
(comment . ";;3180: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3188: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3204: b r6")
chunklet-i: 3208; chunklet-start-i: 3224; chunklet-end-i: 3244
i: 3208
end-i: 3244
at header: 3208
i: 3224
end-i: 3244
i: 3228
end-i: 3244
i: 3232
end-i: 3244
i: 3236
end-i: 3244
i: 3240
end-i: 3244
i: 3244
end-i: 3244
i:3244 HIT CHUNK END
(comment . ";;3224: r1 <- r1, r0")
(comment . ";;3228: r11 <- r1, 0x18\n")
(comment . ";;3232: r15 <- r1, 0x10\n")
(comment . ";;3236: r4 <- r1, 0x8\n")
(comment . ";;3240 b -1908")
chunklet-i: 3244; chunklet-start-i: 3244; chunklet-end-i: 3252
i: 3244
end-i: 3252
i: 3244
end-i: 3252
i: 3248
end-i: 3252
i: 3252
end-i: 3252
i:3252 HIT CHUNK END
(comment . ";;3244: r3 <- r3, 0x1\n")
(comment . ";;3248 b 68")
chunklet-i: 3252; chunklet-start-i: 3252; chunklet-end-i: 3288
i: 3252
end-i: 3288
i: 3256
end-i: 3288
i: 3260
end-i: 3288
i: 3264
end-i: 3288
i: 3268
end-i: 3288
i: 3272
end-i: 3288
i: 3284
end-i: 3288
i: 3288
end-i: 3288
at header: 3288
(comment . ";;3252: r11 <- r1, 0x18\n")
(comment . ";;3256: r15 <- r1, 0x8\n")
(comment . ";;3260: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3268: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3284: b r6")
chunklet-i: 3288; chunklet-start-i: 3304; chunklet-end-i: 3320
i: 3288
end-i: 3320
at header: 3288
i: 3304
end-i: 3320
i: 3308
end-i: 3320
i: 3312
end-i: 3320
i: 3316
end-i: 3320
i: 3320
end-i: 3320
i:3320 HIT CHUNK END
(comment . ";;3308: r1 <- r1, r0")
(comment . ";;3312: r11 <- r1, 0x18\n")
(comment . ";;3316: r15 <- r1, 0x8\n")
chunklet-i: 3320; chunklet-start-i: 3320; chunklet-end-i: 3360
i: 3320
end-i: 3360
i: 3320
end-i: 3360
i: 3324
end-i: 3360
i: 3328
end-i: 3360
i: 3332
end-i: 3360
i: 3336
end-i: 3360
i: 3340
end-i: 3360
i: 3344
end-i: 3360
i: 3356
end-i: 3360
i: 3360
end-i: 3360
at header: 3360
(comment . ";;3320: r9 <- 0x8")
(comment . ";;3324: r10 <- 0xF")
(comment . ";;3328: r11 <- r1, 0x18\n")
(comment . ";;3332: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3340: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3356: b r6")
chunklet-i: 3360; chunklet-start-i: 3376; chunklet-end-i: 3388
i: 3360
end-i: 3388
at header: 3360
i: 3376
end-i: 3388
i: 3380
end-i: 3388
i: 3384
end-i: 3388
i: 3388
end-i: 3388
i:3388 HIT CHUNK END
(comment . ";;3376: r1 <- r1, r0")
(comment . ";;3380: r11 <- r1, 0x18\n")
(comment . ";;3384 b -2064")
chunklet-i: 3388; chunklet-start-i: 3388; chunklet-end-i: 3408
i: 3388
end-i: 3408
i: 3388
end-i: 3408
i: 3392
end-i: 3408
i: 3404
end-i: 3408
i: 3408
end-i: 3408
i:3408 HIT CHUNK END
(comment . ";;3388: r10 <- 0xF")
(comment . ";; literal r6")
(comment . ";;3404: b r6")
chunklet-i: 3408; chunklet-start-i: 3408; chunklet-end-i: 3416
i: 3408
end-i: 3416
i: 3408
end-i: 3416
i: 3412
end-i: 3416
i: 3416
end-i: 3416
i:3416 HIT CHUNK END
(comment . ";;3408: r3 <- r3, 0x1\n")
(comment . ";;3412 b 76")
chunklet-i: 3416; chunklet-start-i: 3416; chunklet-end-i: 3456
i: 3416
end-i: 3456
i: 3420
end-i: 3456
i: 3424
end-i: 3456
i: 3428
end-i: 3456
i: 3432
end-i: 3456
i: 3436
end-i: 3456
i: 3440
end-i: 3456
i: 3452
end-i: 3456
i: 3456
end-i: 3456
at header: 3456
(comment . ";;3416: r11 <- r1, 0x18\n")
(comment . ";;3420: r15 <- r1, 0x8\n")
(comment . ";;3424: r9 <- r1, 0x10\n")
(comment . ";;3428: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3452: b r6")
chunklet-i: 3456; chunklet-start-i: 3472; chunklet-end-i: 3492
i: 3456
end-i: 3492
at header: 3456
i: 3472
end-i: 3492
i: 3476
end-i: 3492
i: 3480
end-i: 3492
i: 3484
end-i: 3492
i: 3488
end-i: 3492
i: 3492
end-i: 3492
i:3492 HIT CHUNK END
(comment . ";;3476: r1 <- r1, r0")
(comment . ";;3480: r11 <- r1, 0x18\n")
(comment . ";;3484: r15 <- r1, 0x8\n")
(comment . ";;3488: r9 <- r1, 0x10\n")
chunklet-i: 3492; chunklet-start-i: 3492; chunklet-end-i: 3528
i: 3492
end-i: 3528
i: 3492
end-i: 3528
i: 3496
end-i: 3528
i: 3500
end-i: 3528
i: 3504
end-i: 3528
i: 3508
end-i: 3528
i: 3512
end-i: 3528
i: 3524
end-i: 3528
i: 3528
end-i: 3528
at header: 3528
(comment . ";;3492: r11 <- r1, 0x18\n")
(comment . ";;3496: r15 <- r1, 0x8\n")
(comment . ";;3500: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3508: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3524: b r6")
chunklet-i: 3528; chunklet-start-i: 3544; chunklet-end-i: 3568
i: 3528
end-i: 3568
at header: 3528
i: 3544
end-i: 3568
i: 3548
end-i: 3568
i: 3552
end-i: 3568
i: 3556
end-i: 3568
i: 3560
end-i: 3568
i: 3564
end-i: 3568
i: 3568
end-i: 3568
i:3568 HIT CHUNK END
(comment . ";;3544: r1 <- r1, r0")
(comment . ";;3548: r9 <- 0x4")
(comment . ";;3552: r11 <- r1, 0x18\n")
(comment . ";;3556: r15 <- r1, 0x8\n")
(comment . ";;3564 b -2316")
chunklet-i: 3568; chunklet-start-i: 3568; chunklet-end-i: 3592
i: 3568
end-i: 3592
i: 3568
end-i: 3592
i: 3572
end-i: 3592
i: 3576
end-i: 3592
i: 3588
end-i: 3592
i: 3592
end-i: 3592
i:3592 HIT CHUNK END
(comment . ";;3568: r9 <- 0x4")
(comment . ";;3572: r11 <- 0x8")
(comment . ";; literal r6")
(comment . ";;3588: b r6")
chunklet-i: 3592; chunklet-start-i: 3592; chunklet-end-i: 3612
i: 3592
end-i: 3612
i: 3592
end-i: 3612
i: 3596
end-i: 3612
i: 3608
end-i: 3612
i: 3612
end-i: 3612
i:3612 HIT CHUNK END
(comment . ";;3592: r10 <- 0xB")
(comment . ";; literal r6")
(comment . ";;3608: b r6")
chunklet-i: 3612; chunklet-start-i: 3612; chunklet-end-i: 3620
i: 3612
end-i: 3620
i: 3612
end-i: 3620
i: 3616
end-i: 3620
i: 3620
end-i: 3620
i:3620 HIT CHUNK END
(comment . ";;3612: r3 <- r3, 0x1\n")
(comment . ";;3616 b 84")
chunklet-i: 3620; chunklet-start-i: 3620; chunklet-end-i: 3664
i: 3620
end-i: 3664
i: 3624
end-i: 3664
i: 3628
end-i: 3664
i: 3632
end-i: 3664
i: 3636
end-i: 3664
i: 3640
end-i: 3664
i: 3644
end-i: 3664
i: 3648
end-i: 3664
i: 3660
end-i: 3664
i: 3664
end-i: 3664
at header: 3664
(comment . ";;3620: r11 <- r1, 0x18\n")
(comment . ";;3624: r15 <- r1, 0x8\n")
(comment . ";;3628: r4 <- r1, 0x10\n")
(comment . ";;3632: r9 <- r1, 0x20\n")
(comment . ";;3636: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;3644: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3660: b r6")
chunklet-i: 3664; chunklet-start-i: 3680; chunklet-end-i: 3704
i: 3664
end-i: 3704
at header: 3664
i: 3680
end-i: 3704
i: 3684
end-i: 3704
i: 3688
end-i: 3704
i: 3692
end-i: 3704
i: 3696
end-i: 3704
i: 3700
end-i: 3704
i: 3704
end-i: 3704
i:3704 HIT CHUNK END
(comment . ";;3684: r1 <- r1, r8")
(comment . ";;3688: r11 <- r1, 0x18\n")
(comment . ";;3692: r15 <- r1, 0x8\n")
(comment . ";;3696: r4 <- r1, 0x10\n")
(comment . ";;3700: r9 <- r1, 0x20\n")
chunklet-i: 3704; chunklet-start-i: 3704; chunklet-end-i: 3744
i: 3704
end-i: 3744
i: 3704
end-i: 3744
i: 3708
end-i: 3744
i: 3712
end-i: 3744
i: 3716
end-i: 3744
i: 3720
end-i: 3744
i: 3724
end-i: 3744
i: 3728
end-i: 3744
i: 3740
end-i: 3744
i: 3744
end-i: 3744
at header: 3744
(comment . ";;3704: r11 <- r1, 0x18\n")
(comment . ";;3708: r15 <- r1, 0x8\n")
(comment . ";;3712: r4 <- r1, 0x10\n")
(comment . ";;3716: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3724: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3740: b r6")
chunklet-i: 3744; chunklet-start-i: 3760; chunklet-end-i: 3784
i: 3744
end-i: 3784
at header: 3744
i: 3760
end-i: 3784
i: 3764
end-i: 3784
i: 3768
end-i: 3784
i: 3772
end-i: 3784
i: 3776
end-i: 3784
i: 3780
end-i: 3784
i: 3784
end-i: 3784
i:3784 HIT CHUNK END
(comment . ";;3760: r1 <- r1, r0")
(comment . ";;3764: r9 <- 0x4")
(comment . ";;3768: r11 <- r1, 0x18\n")
(comment . ";;3772: r15 <- r1, 0x8\n")
(comment . ";;3776: r4 <- r1, 0x10\n")
(comment . ";;3780 b -2672")
chunklet-i: 3784; chunklet-start-i: 3784; chunklet-end-i: 3792
i: 3784
end-i: 3792
i: 3784
end-i: 3792
i: 3788
end-i: 3792
i: 3792
end-i: 3792
i:3792 HIT CHUNK END
(comment . ";;3784: r3 <- r3, 0x1\n")
(comment . ";;3788 b 76")
chunklet-i: 3792; chunklet-start-i: 3792; chunklet-end-i: 3832
i: 3792
end-i: 3832
i: 3796
end-i: 3832
i: 3800
end-i: 3832
i: 3804
end-i: 3832
i: 3808
end-i: 3832
i: 3812
end-i: 3832
i: 3816
end-i: 3832
i: 3828
end-i: 3832
i: 3832
end-i: 3832
at header: 3832
(comment . ";;3792: r11 <- r1, 0x18\n")
(comment . ";;3796: r15 <- r1, 0x8\n")
(comment . ";;3800: r9 <- r1, 0x10\n")
(comment . ";;3804: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3812: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3828: b r6")
chunklet-i: 3832; chunklet-start-i: 3848; chunklet-end-i: 3868
i: 3832
end-i: 3868
at header: 3832
i: 3848
end-i: 3868
i: 3852
end-i: 3868
i: 3856
end-i: 3868
i: 3860
end-i: 3868
i: 3864
end-i: 3868
i: 3868
end-i: 3868
i:3868 HIT CHUNK END
(comment . ";;3852: r1 <- r1, r0")
(comment . ";;3856: r11 <- r1, 0x18\n")
(comment . ";;3860: r15 <- r1, 0x8\n")
(comment . ";;3864: r9 <- r1, 0x10\n")
chunklet-i: 3868; chunklet-start-i: 3868; chunklet-end-i: 3904
i: 3868
end-i: 3904
i: 3868
end-i: 3904
i: 3872
end-i: 3904
i: 3876
end-i: 3904
i: 3880
end-i: 3904
i: 3884
end-i: 3904
i: 3888
end-i: 3904
i: 3900
end-i: 3904
i: 3904
end-i: 3904
at header: 3904
(comment . ";;3868: r11 <- r1, 0x18\n")
(comment . ";;3872: r15 <- r1, 0x8\n")
(comment . ";;3876: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;3884: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;3900: b r6")
chunklet-i: 3904; chunklet-start-i: 3920; chunklet-end-i: 3936
i: 3904
end-i: 3936
at header: 3904
i: 3920
end-i: 3936
i: 3924
end-i: 3936
i: 3928
end-i: 3936
i: 3932
end-i: 3936
i: 3936
end-i: 3936
i:3936 HIT CHUNK END
(comment . ";;3920: r1 <- r1, r0")
(comment . ";;3924: r11 <- r1, 0x18\n")
(comment . ";;3928: r15 <- r1, 0x8\n")
(comment . ";;3932 b -2852")
chunklet-i: 3936; chunklet-start-i: 3936; chunklet-end-i: 3960
i: 3936
end-i: 3960
i: 3936
end-i: 3960
i: 3940
end-i: 3960
i: 3944
end-i: 3960
i: 3956
end-i: 3960
i: 3960
end-i: 3960
i:3960 HIT CHUNK END
(comment . ";;3936: r9 <- 0x4")
(comment . ";;3940: r11 <- 0x0")
(comment . ";; literal r6")
(comment . ";;3956: b r6")
chunklet-i: 3960; chunklet-start-i: 3960; chunklet-end-i: 3980
i: 3960
end-i: 3980
i: 3960
end-i: 3980
i: 3964
end-i: 3980
i: 3976
end-i: 3980
i: 3980
end-i: 3980
i:3980 HIT CHUNK END
(comment . ";;3960: r10 <- 0xB")
(comment . ";; literal r6")
(comment . ";;3976: b r6")
chunklet-i: 3980; chunklet-start-i: 3980; chunklet-end-i: 3988
i: 3980
end-i: 3988
i: 3980
end-i: 3988
i: 3984
end-i: 3988
i: 3988
end-i: 3988
i:3988 HIT CHUNK END
(comment . ";;3980: r3 <- r3, 0x1\n")
(comment . ";;3984 b 84")
chunklet-i: 3988; chunklet-start-i: 3988; chunklet-end-i: 4032
i: 3988
end-i: 4032
i: 3992
end-i: 4032
i: 3996
end-i: 4032
i: 4000
end-i: 4032
i: 4004
end-i: 4032
i: 4008
end-i: 4032
i: 4012
end-i: 4032
i: 4016
end-i: 4032
i: 4028
end-i: 4032
i: 4032
end-i: 4032
at header: 4032
(comment . ";;3988: r11 <- r1, 0x18\n")
(comment . ";;3992: r15 <- r1, 0x8\n")
(comment . ";;3996: r4 <- r1, 0x10\n")
(comment . ";;4000: r9 <- r1, 0x20\n")
(comment . ";;4004: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;4012: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4028: b r6")
chunklet-i: 4032; chunklet-start-i: 4048; chunklet-end-i: 4072
i: 4032
end-i: 4072
at header: 4032
i: 4048
end-i: 4072
i: 4052
end-i: 4072
i: 4056
end-i: 4072
i: 4060
end-i: 4072
i: 4064
end-i: 4072
i: 4068
end-i: 4072
i: 4072
end-i: 4072
i:4072 HIT CHUNK END
(comment . ";;4052: r1 <- r1, r8")
(comment . ";;4056: r11 <- r1, 0x18\n")
(comment . ";;4060: r15 <- r1, 0x8\n")
(comment . ";;4064: r4 <- r1, 0x10\n")
(comment . ";;4068: r9 <- r1, 0x20\n")
chunklet-i: 4072; chunklet-start-i: 4072; chunklet-end-i: 4112
i: 4072
end-i: 4112
i: 4072
end-i: 4112
i: 4076
end-i: 4112
i: 4080
end-i: 4112
i: 4084
end-i: 4112
i: 4088
end-i: 4112
i: 4092
end-i: 4112
i: 4096
end-i: 4112
i: 4108
end-i: 4112
i: 4112
end-i: 4112
at header: 4112
(comment . ";;4072: r11 <- r1, 0x18\n")
(comment . ";;4076: r15 <- r1, 0x8\n")
(comment . ";;4080: r4 <- r1, 0x10\n")
(comment . ";;4084: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4092: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4108: b r6")
chunklet-i: 4112; chunklet-start-i: 4128; chunklet-end-i: 4152
i: 4112
end-i: 4152
at header: 4112
i: 4128
end-i: 4152
i: 4132
end-i: 4152
i: 4136
end-i: 4152
i: 4140
end-i: 4152
i: 4144
end-i: 4152
i: 4148
end-i: 4152
i: 4152
end-i: 4152
i:4152 HIT CHUNK END
(comment . ";;4128: r1 <- r1, r0")
(comment . ";;4132: r9 <- 0x4")
(comment . ";;4136: r11 <- r1, 0x18\n")
(comment . ";;4140: r15 <- r1, 0x8\n")
(comment . ";;4144: r4 <- r1, 0x10\n")
(comment . ";;4148 b -3204")
chunklet-i: 4152; chunklet-start-i: 4152; chunklet-end-i: 4160
i: 4152
end-i: 4160
i: 4152
end-i: 4160
i: 4156
end-i: 4160
i: 4160
end-i: 4160
i:4160 HIT CHUNK END
(comment . ";;4152: r3 <- r3, 0x1\n")
(comment . ";;4156 b 76")
chunklet-i: 4160; chunklet-start-i: 4160; chunklet-end-i: 4200
i: 4160
end-i: 4200
i: 4164
end-i: 4200
i: 4168
end-i: 4200
i: 4172
end-i: 4200
i: 4176
end-i: 4200
i: 4180
end-i: 4200
i: 4184
end-i: 4200
i: 4196
end-i: 4200
i: 4200
end-i: 4200
at header: 4200
(comment . ";;4160: r11 <- r1, 0x18\n")
(comment . ";;4164: r15 <- r1, 0x8\n")
(comment . ";;4168: r9 <- r1, 0x10\n")
(comment . ";;4172: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4180: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4196: b r6")
chunklet-i: 4200; chunklet-start-i: 4216; chunklet-end-i: 4236
i: 4200
end-i: 4236
at header: 4200
i: 4216
end-i: 4236
i: 4220
end-i: 4236
i: 4224
end-i: 4236
i: 4228
end-i: 4236
i: 4232
end-i: 4236
i: 4236
end-i: 4236
i:4236 HIT CHUNK END
(comment . ";;4220: r1 <- r1, r0")
(comment . ";;4224: r11 <- r1, 0x18\n")
(comment . ";;4228: r15 <- r1, 0x8\n")
(comment . ";;4232: r9 <- r1, 0x10\n")
chunklet-i: 4236; chunklet-start-i: 4236; chunklet-end-i: 4272
i: 4236
end-i: 4272
i: 4236
end-i: 4272
i: 4240
end-i: 4272
i: 4244
end-i: 4272
i: 4248
end-i: 4272
i: 4252
end-i: 4272
i: 4256
end-i: 4272
i: 4268
end-i: 4272
i: 4272
end-i: 4272
at header: 4272
(comment . ";;4236: r11 <- r1, 0x18\n")
(comment . ";;4240: r15 <- r1, 0x8\n")
(comment . ";;4244: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4252: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4268: b r6")
chunklet-i: 4272; chunklet-start-i: 4288; chunklet-end-i: 4304
i: 4272
end-i: 4304
at header: 4272
i: 4288
end-i: 4304
i: 4292
end-i: 4304
i: 4296
end-i: 4304
i: 4300
end-i: 4304
i: 4304
end-i: 4304
i:4304 HIT CHUNK END
(comment . ";;4288: r1 <- r1, r0")
(comment . ";;4292: r11 <- r1, 0x18\n")
(comment . ";;4296: r15 <- r1, 0x8\n")
(comment . ";;4300 b -3384")
chunklet-i: 4304; chunklet-start-i: 4304; chunklet-end-i: 4328
i: 4304
end-i: 4328
i: 4304
end-i: 4328
i: 4308
end-i: 4328
i: 4312
end-i: 4328
i: 4324
end-i: 4328
i: 4328
end-i: 4328
i:4328 HIT CHUNK END
(comment . ";;4304: r9 <- 0x4")
(comment . ";;4308: r11 <- 0x0")
(comment . ";; literal r6")
(comment . ";;4324: b r6")
chunklet-i: 4328; chunklet-start-i: 4328; chunklet-end-i: 4348
i: 4328
end-i: 4348
i: 4328
end-i: 4348
i: 4332
end-i: 4348
i: 4344
end-i: 4348
i: 4348
end-i: 4348
i:4348 HIT CHUNK END
(comment . ";;4328: r10 <- 0xB")
(comment . ";; literal r6")
(comment . ";;4344: b r6")
chunklet-i: 4348; chunklet-start-i: 4348; chunklet-end-i: 4356
i: 4348
end-i: 4356
i: 4348
end-i: 4356
i: 4352
end-i: 4356
i: 4356
end-i: 4356
i:4356 HIT CHUNK END
(comment . ";;4348: r3 <- r3, 0x1\n")
(comment . ";;4352 b 84")
chunklet-i: 4356; chunklet-start-i: 4356; chunklet-end-i: 4400
i: 4356
end-i: 4400
i: 4360
end-i: 4400
i: 4364
end-i: 4400
i: 4368
end-i: 4400
i: 4372
end-i: 4400
i: 4376
end-i: 4400
i: 4380
end-i: 4400
i: 4384
end-i: 4400
i: 4396
end-i: 4400
i: 4400
end-i: 4400
at header: 4400
(comment . ";;4356: r11 <- r1, 0x18\n")
(comment . ";;4360: r15 <- r1, 0x8\n")
(comment . ";;4364: r4 <- r1, 0x10\n")
(comment . ";;4368: r9 <- r1, 0x20\n")
(comment . ";;4372: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;4380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4396: b r6")
chunklet-i: 4400; chunklet-start-i: 4416; chunklet-end-i: 4440
i: 4400
end-i: 4440
at header: 4400
i: 4416
end-i: 4440
i: 4420
end-i: 4440
i: 4424
end-i: 4440
i: 4428
end-i: 4440
i: 4432
end-i: 4440
i: 4436
end-i: 4440
i: 4440
end-i: 4440
i:4440 HIT CHUNK END
(comment . ";;4420: r1 <- r1, r8")
(comment . ";;4424: r11 <- r1, 0x18\n")
(comment . ";;4428: r15 <- r1, 0x8\n")
(comment . ";;4432: r4 <- r1, 0x10\n")
(comment . ";;4436: r9 <- r1, 0x20\n")
chunklet-i: 4440; chunklet-start-i: 4440; chunklet-end-i: 4480
i: 4440
end-i: 4480
i: 4440
end-i: 4480
i: 4444
end-i: 4480
i: 4448
end-i: 4480
i: 4452
end-i: 4480
i: 4456
end-i: 4480
i: 4460
end-i: 4480
i: 4464
end-i: 4480
i: 4476
end-i: 4480
i: 4480
end-i: 4480
at header: 4480
(comment . ";;4440: r11 <- r1, 0x18\n")
(comment . ";;4444: r15 <- r1, 0x8\n")
(comment . ";;4448: r4 <- r1, 0x10\n")
(comment . ";;4452: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4460: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4476: b r6")
chunklet-i: 4480; chunklet-start-i: 4496; chunklet-end-i: 4520
i: 4480
end-i: 4520
at header: 4480
i: 4496
end-i: 4520
i: 4500
end-i: 4520
i: 4504
end-i: 4520
i: 4508
end-i: 4520
i: 4512
end-i: 4520
i: 4516
end-i: 4520
i: 4520
end-i: 4520
i:4520 HIT CHUNK END
(comment . ";;4496: r1 <- r1, r0")
(comment . ";;4500: r9 <- 0x4")
(comment . ";;4504: r11 <- r1, 0x18\n")
(comment . ";;4508: r15 <- r1, 0x8\n")
(comment . ";;4512: r4 <- r1, 0x10\n")
(comment . ";;4516 b -3736")
chunklet-i: 4520; chunklet-start-i: 4520; chunklet-end-i: 4528
i: 4520
end-i: 4528
i: 4520
end-i: 4528
i: 4524
end-i: 4528
i: 4528
end-i: 4528
i:4528 HIT CHUNK END
(comment . ";;4520: r3 <- r3, 0x1\n")
(comment . ";;4524 b 76")
chunklet-i: 4528; chunklet-start-i: 4528; chunklet-end-i: 4568
i: 4528
end-i: 4568
i: 4532
end-i: 4568
i: 4536
end-i: 4568
i: 4540
end-i: 4568
i: 4544
end-i: 4568
i: 4548
end-i: 4568
i: 4552
end-i: 4568
i: 4564
end-i: 4568
i: 4568
end-i: 4568
at header: 4568
(comment . ";;4528: r11 <- r1, 0x18\n")
(comment . ";;4532: r15 <- r1, 0x8\n")
(comment . ";;4536: r9 <- r1, 0x10\n")
(comment . ";;4540: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4548: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4564: b r6")
chunklet-i: 4568; chunklet-start-i: 4584; chunklet-end-i: 4604
i: 4568
end-i: 4604
at header: 4568
i: 4584
end-i: 4604
i: 4588
end-i: 4604
i: 4592
end-i: 4604
i: 4596
end-i: 4604
i: 4600
end-i: 4604
i: 4604
end-i: 4604
i:4604 HIT CHUNK END
(comment . ";;4588: r1 <- r1, r0")
(comment . ";;4592: r11 <- r1, 0x18\n")
(comment . ";;4596: r15 <- r1, 0x8\n")
(comment . ";;4600: r9 <- r1, 0x10\n")
chunklet-i: 4604; chunklet-start-i: 4604; chunklet-end-i: 4640
i: 4604
end-i: 4640
i: 4604
end-i: 4640
i: 4608
end-i: 4640
i: 4612
end-i: 4640
i: 4616
end-i: 4640
i: 4620
end-i: 4640
i: 4624
end-i: 4640
i: 4636
end-i: 4640
i: 4640
end-i: 4640
at header: 4640
(comment . ";;4604: r11 <- r1, 0x18\n")
(comment . ";;4608: r15 <- r1, 0x8\n")
(comment . ";;4612: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4620: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4636: b r6")
chunklet-i: 4640; chunklet-start-i: 4656; chunklet-end-i: 4672
i: 4640
end-i: 4672
at header: 4640
i: 4656
end-i: 4672
i: 4660
end-i: 4672
i: 4664
end-i: 4672
i: 4668
end-i: 4672
i: 4672
end-i: 4672
i:4672 HIT CHUNK END
(comment . ";;4656: r1 <- r1, r0")
(comment . ";;4660: r11 <- r1, 0x18\n")
(comment . ";;4664: r15 <- r1, 0x8\n")
(comment . ";;4668 b -3916")
chunklet-i: 4672; chunklet-start-i: 4672; chunklet-end-i: 4684
i: 4672
end-i: 4684
i: 4672
end-i: 4684
i: 4684
end-i: 4684
i:4684 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 4684; chunklet-start-i: 4688; chunklet-end-i: 4692
i: 4684
end-i: 4692
i: 4688
end-i: 4692
i: 4692
end-i: 4692
i:4692 HIT CHUNK END
(comment . ";; instruction 4684 not included")
(comment . ";;4688 b -3960")
chunklet-i: 4692; chunklet-start-i: 4692; chunklet-end-i: 4712
i: 4692
end-i: 4712
i: 4692
end-i: 4712
i: 4696
end-i: 4712
i: 4708
end-i: 4712
i: 4712
end-i: 4712
i:4712 HIT CHUNK END
(comment . ";;4692: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;4708: b r6")
chunklet-i: 4712; chunklet-start-i: 4712; chunklet-end-i: 4732
i: 4712
end-i: 4732
i: 4712
end-i: 4732
i: 4716
end-i: 4732
i: 4728
end-i: 4732
i: 4732
end-i: 4732
i:4732 HIT CHUNK END
(comment . ";;4712: r10 <- 0xB")
(comment . ";; literal r6")
(comment . ";;4728: b r6")
chunklet-i: 4732; chunklet-start-i: 4732; chunklet-end-i: 4740
i: 4732
end-i: 4740
i: 4732
end-i: 4740
i: 4736
end-i: 4740
i: 4740
end-i: 4740
i:4740 HIT CHUNK END
(comment . ";;4732: r3 <- r3, 0x1\n")
(comment . ";;4736 b 84")
chunklet-i: 4740; chunklet-start-i: 4740; chunklet-end-i: 4784
i: 4740
end-i: 4784
i: 4744
end-i: 4784
i: 4748
end-i: 4784
i: 4752
end-i: 4784
i: 4756
end-i: 4784
i: 4760
end-i: 4784
i: 4764
end-i: 4784
i: 4768
end-i: 4784
i: 4780
end-i: 4784
i: 4784
end-i: 4784
at header: 4784
(comment . ";;4740: r11 <- r1, 0x18\n")
(comment . ";;4744: r15 <- r1, 0x8\n")
(comment . ";;4748: r4 <- r1, 0x10\n")
(comment . ";;4752: r9 <- r1, 0x20\n")
(comment . ";;4756: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;4764: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4780: b r6")
chunklet-i: 4784; chunklet-start-i: 4800; chunklet-end-i: 4824
i: 4784
end-i: 4824
at header: 4784
i: 4800
end-i: 4824
i: 4804
end-i: 4824
i: 4808
end-i: 4824
i: 4812
end-i: 4824
i: 4816
end-i: 4824
i: 4820
end-i: 4824
i: 4824
end-i: 4824
i:4824 HIT CHUNK END
(comment . ";;4804: r1 <- r1, r8")
(comment . ";;4808: r11 <- r1, 0x18\n")
(comment . ";;4812: r15 <- r1, 0x8\n")
(comment . ";;4816: r4 <- r1, 0x10\n")
(comment . ";;4820: r9 <- r1, 0x20\n")
chunklet-i: 4824; chunklet-start-i: 4824; chunklet-end-i: 4864
i: 4824
end-i: 4864
i: 4824
end-i: 4864
i: 4828
end-i: 4864
i: 4832
end-i: 4864
i: 4836
end-i: 4864
i: 4840
end-i: 4864
i: 4844
end-i: 4864
i: 4848
end-i: 4864
i: 4860
end-i: 4864
i: 4864
end-i: 4864
at header: 4864
(comment . ";;4824: r11 <- r1, 0x18\n")
(comment . ";;4828: r15 <- r1, 0x8\n")
(comment . ";;4832: r4 <- r1, 0x10\n")
(comment . ";;4836: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4844: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4860: b r6")
chunklet-i: 4864; chunklet-start-i: 4880; chunklet-end-i: 4904
i: 4864
end-i: 4904
at header: 4864
i: 4880
end-i: 4904
i: 4884
end-i: 4904
i: 4888
end-i: 4904
i: 4892
end-i: 4904
i: 4896
end-i: 4904
i: 4900
end-i: 4904
i: 4904
end-i: 4904
i:4904 HIT CHUNK END
(comment . ";;4880: r1 <- r1, r0")
(comment . ";;4884: r9 <- 0x4")
(comment . ";;4888: r11 <- r1, 0x18\n")
(comment . ";;4892: r15 <- r1, 0x8\n")
(comment . ";;4896: r4 <- r1, 0x10\n")
(comment . ";;4900 b -4472")
chunklet-i: 4904; chunklet-start-i: 4904; chunklet-end-i: 4912
i: 4904
end-i: 4912
i: 4904
end-i: 4912
i: 4908
end-i: 4912
i: 4912
end-i: 4912
i:4912 HIT CHUNK END
(comment . ";;4904: r3 <- r3, 0x1\n")
(comment . ";;4908 b 76")
chunklet-i: 4912; chunklet-start-i: 4912; chunklet-end-i: 4952
i: 4912
end-i: 4952
i: 4916
end-i: 4952
i: 4920
end-i: 4952
i: 4924
end-i: 4952
i: 4928
end-i: 4952
i: 4932
end-i: 4952
i: 4936
end-i: 4952
i: 4948
end-i: 4952
i: 4952
end-i: 4952
at header: 4952
(comment . ";;4912: r11 <- r1, 0x18\n")
(comment . ";;4916: r15 <- r1, 0x8\n")
(comment . ";;4920: r9 <- r1, 0x10\n")
(comment . ";;4924: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;4932: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;4948: b r6")
chunklet-i: 4952; chunklet-start-i: 4968; chunklet-end-i: 4988
i: 4952
end-i: 4988
at header: 4952
i: 4968
end-i: 4988
i: 4972
end-i: 4988
i: 4976
end-i: 4988
i: 4980
end-i: 4988
i: 4984
end-i: 4988
i: 4988
end-i: 4988
i:4988 HIT CHUNK END
(comment . ";;4972: r1 <- r1, r0")
(comment . ";;4976: r11 <- r1, 0x18\n")
(comment . ";;4980: r15 <- r1, 0x8\n")
(comment . ";;4984: r9 <- r1, 0x10\n")
chunklet-i: 4988; chunklet-start-i: 4988; chunklet-end-i: 5024
i: 4988
end-i: 5024
i: 4988
end-i: 5024
i: 4992
end-i: 5024
i: 4996
end-i: 5024
i: 5000
end-i: 5024
i: 5004
end-i: 5024
i: 5008
end-i: 5024
i: 5020
end-i: 5024
i: 5024
end-i: 5024
at header: 5024
(comment . ";;4988: r11 <- r1, 0x18\n")
(comment . ";;4992: r15 <- r1, 0x8\n")
(comment . ";;4996: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;5004: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5020: b r6")
chunklet-i: 5024; chunklet-start-i: 5040; chunklet-end-i: 5056
i: 5024
end-i: 5056
at header: 5024
i: 5040
end-i: 5056
i: 5044
end-i: 5056
i: 5048
end-i: 5056
i: 5052
end-i: 5056
i: 5056
end-i: 5056
i:5056 HIT CHUNK END
(comment . ";;5040: r1 <- r1, r0")
(comment . ";;5044: r11 <- r1, 0x18\n")
(comment . ";;5048: r15 <- r1, 0x8\n")
(comment . ";;5052 b -4652")
chunklet-i: 5056; chunklet-start-i: 5056; chunklet-end-i: 5064
i: 5056
end-i: 5064
i: 5056
end-i: 5064
i: 5060
end-i: 5064
i: 5064
end-i: 5064
i:5064 HIT CHUNK END
(comment . ";;5056: r3 <- r3, 0x1\n")
(comment . ";;5060 b 72")
chunklet-i: 5064; chunklet-start-i: 5064; chunklet-end-i: 5104
i: 5064
end-i: 5104
i: 5068
end-i: 5104
i: 5072
end-i: 5104
i: 5076
end-i: 5104
i: 5080
end-i: 5104
i: 5084
end-i: 5104
i: 5088
end-i: 5104
i: 5100
end-i: 5104
i: 5104
end-i: 5104
at header: 5104
(comment . ";;5064: r11 <- r1, 0x18\n")
(comment . ";;5068: r15 <- r1, 0x8\n")
(comment . ";;5072: r10 <- r1, 0x10\n")
(comment . ";;5076: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;5084: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5100: b r6")
chunklet-i: 5104; chunklet-start-i: 5120; chunklet-end-i: 5136
i: 5104
end-i: 5136
at header: 5104
i: 5120
end-i: 5136
i: 5124
end-i: 5136
i: 5128
end-i: 5136
i: 5132
end-i: 5136
i: 5136
end-i: 5136
i:5136 HIT CHUNK END
(comment . ";;5120: r1 <- r1, r0")
(comment . ";;5124: r11 <- r1, 0x18\n")
(comment . ";;5128: r15 <- r1, 0x8\n")
(comment . ";;5132: r10 <- r1, 0x10\n")
chunklet-i: 5136; chunklet-start-i: 5136; chunklet-end-i: 5176
i: 5136
end-i: 5176
i: 5136
end-i: 5176
i: 5140
end-i: 5176
i: 5144
end-i: 5176
i: 5148
end-i: 5176
i: 5152
end-i: 5176
i: 5156
end-i: 5176
i: 5160
end-i: 5176
i: 5172
end-i: 5176
i: 5176
end-i: 5176
at header: 5176
(comment . ";;5136: r9 <- 0x8")
(comment . ";;5140: r11 <- r1, 0x18\n")
(comment . ";;5144: r15 <- r1, 0x8\n")
(comment . ";;5148: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;5156: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5172: b r6")
chunklet-i: 5176; chunklet-start-i: 5192; chunklet-end-i: 5216
i: 5176
end-i: 5216
at header: 5176
i: 5192
end-i: 5216
i: 5196
end-i: 5216
i: 5200
end-i: 5216
i: 5204
end-i: 5216
i: 5208
end-i: 5216
i: 5212
end-i: 5216
i: 5216
end-i: 5216
i:5216 HIT CHUNK END
(comment . ";;5192: r1 <- r1, r0")
(comment . ";;5196: r11 <- r1, 0x18\n")
(comment . ";;5200: r15 <- r1, 0x8\n")
(comment . ";;5204: r4 <- 0x6")
(comment . ";;5212 b -4664")
chunklet-i: 5216; chunklet-start-i: 5216; chunklet-end-i: 5220
i: 5216
end-i: 5220
i: 5220
end-i: 5220
i:5220 HIT CHUNK END
(comment . ";;5216 b -4840")
chunklet-i: 5220; chunklet-start-i: 5220; chunklet-end-i: 5240
i: 5220
end-i: 5240
i: 5220
end-i: 5240
i: 5224
end-i: 5240
i: 5236
end-i: 5240
i: 5240
end-i: 5240
i:5240 HIT CHUNK END
(comment . ";;5220: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;5236: b r6")
chunklet-i: 5240; chunklet-start-i: 5240; chunklet-end-i: 5260
i: 5240
end-i: 5260
i: 5240
end-i: 5260
i: 5244
end-i: 5260
i: 5256
end-i: 5260
i: 5260
end-i: 5260
i:5260 HIT CHUNK END
(comment . ";;5240: r10 <- 0xB")
(comment . ";; literal r6")
(comment . ";;5256: b r6")
chunklet-i: 5260; chunklet-start-i: 5260; chunklet-end-i: 5268
i: 5260
end-i: 5268
i: 5260
end-i: 5268
i: 5264
end-i: 5268
i: 5268
end-i: 5268
i:5268 HIT CHUNK END
(comment . ";;5260: r3 <- r3, 0x1\n")
(comment . ";;5264 b 84")
chunklet-i: 5268; chunklet-start-i: 5268; chunklet-end-i: 5312
i: 5268
end-i: 5312
i: 5272
end-i: 5312
i: 5276
end-i: 5312
i: 5280
end-i: 5312
i: 5284
end-i: 5312
i: 5288
end-i: 5312
i: 5292
end-i: 5312
i: 5296
end-i: 5312
i: 5308
end-i: 5312
i: 5312
end-i: 5312
at header: 5312
(comment . ";;5268: r11 <- r1, 0x18\n")
(comment . ";;5272: r15 <- r1, 0x8\n")
(comment . ";;5276: r4 <- r1, 0x10\n")
(comment . ";;5280: r9 <- r1, 0x20\n")
(comment . ";;5284: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;5292: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5308: b r6")
chunklet-i: 5312; chunklet-start-i: 5328; chunklet-end-i: 5352
i: 5312
end-i: 5352
at header: 5312
i: 5328
end-i: 5352
i: 5332
end-i: 5352
i: 5336
end-i: 5352
i: 5340
end-i: 5352
i: 5344
end-i: 5352
i: 5348
end-i: 5352
i: 5352
end-i: 5352
i:5352 HIT CHUNK END
(comment . ";;5332: r1 <- r1, r8")
(comment . ";;5336: r11 <- r1, 0x18\n")
(comment . ";;5340: r15 <- r1, 0x8\n")
(comment . ";;5344: r4 <- r1, 0x10\n")
(comment . ";;5348: r9 <- r1, 0x20\n")
chunklet-i: 5352; chunklet-start-i: 5352; chunklet-end-i: 5392
i: 5352
end-i: 5392
i: 5352
end-i: 5392
i: 5356
end-i: 5392
i: 5360
end-i: 5392
i: 5364
end-i: 5392
i: 5368
end-i: 5392
i: 5372
end-i: 5392
i: 5376
end-i: 5392
i: 5388
end-i: 5392
i: 5392
end-i: 5392
at header: 5392
(comment . ";;5352: r11 <- r1, 0x18\n")
(comment . ";;5356: r15 <- r1, 0x8\n")
(comment . ";;5360: r4 <- r1, 0x10\n")
(comment . ";;5364: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;5372: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5388: b r6")
chunklet-i: 5392; chunklet-start-i: 5408; chunklet-end-i: 5432
i: 5392
end-i: 5432
at header: 5392
i: 5408
end-i: 5432
i: 5412
end-i: 5432
i: 5416
end-i: 5432
i: 5420
end-i: 5432
i: 5424
end-i: 5432
i: 5428
end-i: 5432
i: 5432
end-i: 5432
i:5432 HIT CHUNK END
(comment . ";;5408: r1 <- r1, r0")
(comment . ";;5412: r9 <- 0x4")
(comment . ";;5416: r11 <- r1, 0x18\n")
(comment . ";;5420: r15 <- r1, 0x8\n")
(comment . ";;5424: r4 <- r1, 0x10\n")
(comment . ";;5428 b -5172")
chunklet-i: 5432; chunklet-start-i: 5432; chunklet-end-i: 5440
i: 5432
end-i: 5440
i: 5432
end-i: 5440
i: 5436
end-i: 5440
i: 5440
end-i: 5440
i:5440 HIT CHUNK END
(comment . ";;5432: r3 <- r3, 0x1\n")
(comment . ";;5436 b 76")
chunklet-i: 5440; chunklet-start-i: 5440; chunklet-end-i: 5480
i: 5440
end-i: 5480
i: 5444
end-i: 5480
i: 5448
end-i: 5480
i: 5452
end-i: 5480
i: 5456
end-i: 5480
i: 5460
end-i: 5480
i: 5464
end-i: 5480
i: 5476
end-i: 5480
i: 5480
end-i: 5480
at header: 5480
(comment . ";;5440: r11 <- r1, 0x18\n")
(comment . ";;5444: r15 <- r1, 0x8\n")
(comment . ";;5448: r9 <- r1, 0x10\n")
(comment . ";;5452: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;5460: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5476: b r6")
chunklet-i: 5480; chunklet-start-i: 5496; chunklet-end-i: 5516
i: 5480
end-i: 5516
at header: 5480
i: 5496
end-i: 5516
i: 5500
end-i: 5516
i: 5504
end-i: 5516
i: 5508
end-i: 5516
i: 5512
end-i: 5516
i: 5516
end-i: 5516
i:5516 HIT CHUNK END
(comment . ";;5500: r1 <- r1, r0")
(comment . ";;5504: r11 <- r1, 0x18\n")
(comment . ";;5508: r15 <- r1, 0x8\n")
(comment . ";;5512: r9 <- r1, 0x10\n")
chunklet-i: 5516; chunklet-start-i: 5516; chunklet-end-i: 5552
i: 5516
end-i: 5552
i: 5516
end-i: 5552
i: 5520
end-i: 5552
i: 5524
end-i: 5552
i: 5528
end-i: 5552
i: 5532
end-i: 5552
i: 5536
end-i: 5552
i: 5548
end-i: 5552
i: 5552
end-i: 5552
at header: 5552
(comment . ";;5516: r11 <- r1, 0x18\n")
(comment . ";;5520: r15 <- r1, 0x8\n")
(comment . ";;5524: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;5532: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5548: b r6")
chunklet-i: 5552; chunklet-start-i: 5568; chunklet-end-i: 5584
i: 5552
end-i: 5584
at header: 5552
i: 5568
end-i: 5584
i: 5572
end-i: 5584
i: 5576
end-i: 5584
i: 5580
end-i: 5584
i: 5584
end-i: 5584
i:5584 HIT CHUNK END
(comment . ";;5568: r1 <- r1, r0")
(comment . ";;5572: r11 <- r1, 0x18\n")
(comment . ";;5576: r15 <- r1, 0x8\n")
(comment . ";;5580 b -5352")
chunklet-i: 5584; chunklet-start-i: 5584; chunklet-end-i: 5592
i: 5584
end-i: 5592
i: 5584
end-i: 5592
i: 5588
end-i: 5592
i: 5592
end-i: 5592
i:5592 HIT CHUNK END
(comment . ";;5584: r3 <- r3, 0x1\n")
(comment . ";;5588 b 72")
chunklet-i: 5592; chunklet-start-i: 5592; chunklet-end-i: 5632
i: 5592
end-i: 5632
i: 5596
end-i: 5632
i: 5600
end-i: 5632
i: 5604
end-i: 5632
i: 5608
end-i: 5632
i: 5612
end-i: 5632
i: 5616
end-i: 5632
i: 5628
end-i: 5632
i: 5632
end-i: 5632
at header: 5632
(comment . ";;5592: r11 <- r1, 0x18\n")
(comment . ";;5596: r15 <- r1, 0x8\n")
(comment . ";;5600: r10 <- r1, 0x10\n")
(comment . ";;5604: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;5612: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5628: b r6")
chunklet-i: 5632; chunklet-start-i: 5648; chunklet-end-i: 5664
i: 5632
end-i: 5664
at header: 5632
i: 5648
end-i: 5664
i: 5652
end-i: 5664
i: 5656
end-i: 5664
i: 5660
end-i: 5664
i: 5664
end-i: 5664
i:5664 HIT CHUNK END
(comment . ";;5648: r1 <- r1, r0")
(comment . ";;5652: r11 <- r1, 0x18\n")
(comment . ";;5656: r15 <- r1, 0x8\n")
(comment . ";;5660: r10 <- r1, 0x10\n")
chunklet-i: 5664; chunklet-start-i: 5664; chunklet-end-i: 5704
i: 5664
end-i: 5704
i: 5664
end-i: 5704
i: 5668
end-i: 5704
i: 5672
end-i: 5704
i: 5676
end-i: 5704
i: 5680
end-i: 5704
i: 5684
end-i: 5704
i: 5688
end-i: 5704
i: 5700
end-i: 5704
i: 5704
end-i: 5704
at header: 5704
(comment . ";;5664: r9 <- 0x8")
(comment . ";;5668: r11 <- r1, 0x18\n")
(comment . ";;5672: r15 <- r1, 0x8\n")
(comment . ";;5676: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;5684: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5700: b r6")
chunklet-i: 5704; chunklet-start-i: 5720; chunklet-end-i: 5744
i: 5704
end-i: 5744
at header: 5704
i: 5720
end-i: 5744
i: 5724
end-i: 5744
i: 5728
end-i: 5744
i: 5732
end-i: 5744
i: 5736
end-i: 5744
i: 5740
end-i: 5744
i: 5744
end-i: 5744
i:5744 HIT CHUNK END
(comment . ";;5720: r1 <- r1, r0")
(comment . ";;5724: r11 <- r1, 0x18\n")
(comment . ";;5728: r15 <- r1, 0x8\n")
(comment . ";;5732: r4 <- 0x6")
(comment . ";;5740 b -5192")
chunklet-i: 5744; chunklet-start-i: 5744; chunklet-end-i: 5748
i: 5744
end-i: 5748
i: 5748
end-i: 5748
i:5748 HIT CHUNK END
(comment . ";;5744 b -5540")
chunklet-i: 5748; chunklet-start-i: 5748; chunklet-end-i: 5768
i: 5748
end-i: 5768
i: 5748
end-i: 5768
i: 5752
end-i: 5768
i: 5764
end-i: 5768
i: 5768
end-i: 5768
i:5768 HIT CHUNK END
(comment . ";;5748: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;5764: b r6")
chunklet-i: 5768; chunklet-start-i: 5768; chunklet-end-i: 5788
i: 5768
end-i: 5788
i: 5768
end-i: 5788
i: 5772
end-i: 5788
i: 5784
end-i: 5788
i: 5788
end-i: 5788
i:5788 HIT CHUNK END
(comment . ";;5768: r10 <- 0xB")
(comment . ";; literal r6")
(comment . ";;5784: b r6")
chunklet-i: 5788; chunklet-start-i: 5788; chunklet-end-i: 5796
i: 5788
end-i: 5796
i: 5788
end-i: 5796
i: 5792
end-i: 5796
i: 5796
end-i: 5796
i:5796 HIT CHUNK END
(comment . ";;5788: r3 <- r3, 0x1\n")
(comment . ";;5792 b 84")
chunklet-i: 5796; chunklet-start-i: 5796; chunklet-end-i: 5840
i: 5796
end-i: 5840
i: 5800
end-i: 5840
i: 5804
end-i: 5840
i: 5808
end-i: 5840
i: 5812
end-i: 5840
i: 5816
end-i: 5840
i: 5820
end-i: 5840
i: 5824
end-i: 5840
i: 5836
end-i: 5840
i: 5840
end-i: 5840
at header: 5840
(comment . ";;5796: r11 <- r1, 0x18\n")
(comment . ";;5800: r15 <- r1, 0x8\n")
(comment . ";;5804: r4 <- r1, 0x10\n")
(comment . ";;5808: r9 <- r1, 0x20\n")
(comment . ";;5812: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;5820: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5836: b r6")
chunklet-i: 5840; chunklet-start-i: 5856; chunklet-end-i: 5880
i: 5840
end-i: 5880
at header: 5840
i: 5856
end-i: 5880
i: 5860
end-i: 5880
i: 5864
end-i: 5880
i: 5868
end-i: 5880
i: 5872
end-i: 5880
i: 5876
end-i: 5880
i: 5880
end-i: 5880
i:5880 HIT CHUNK END
(comment . ";;5860: r1 <- r1, r8")
(comment . ";;5864: r11 <- r1, 0x18\n")
(comment . ";;5868: r15 <- r1, 0x8\n")
(comment . ";;5872: r4 <- r1, 0x10\n")
(comment . ";;5876: r9 <- r1, 0x20\n")
chunklet-i: 5880; chunklet-start-i: 5880; chunklet-end-i: 5920
i: 5880
end-i: 5920
i: 5880
end-i: 5920
i: 5884
end-i: 5920
i: 5888
end-i: 5920
i: 5892
end-i: 5920
i: 5896
end-i: 5920
i: 5900
end-i: 5920
i: 5904
end-i: 5920
i: 5916
end-i: 5920
i: 5920
end-i: 5920
at header: 5920
(comment . ";;5880: r11 <- r1, 0x18\n")
(comment . ";;5884: r15 <- r1, 0x8\n")
(comment . ";;5888: r4 <- r1, 0x10\n")
(comment . ";;5892: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;5900: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;5916: b r6")
chunklet-i: 5920; chunklet-start-i: 5936; chunklet-end-i: 5960
i: 5920
end-i: 5960
at header: 5920
i: 5936
end-i: 5960
i: 5940
end-i: 5960
i: 5944
end-i: 5960
i: 5948
end-i: 5960
i: 5952
end-i: 5960
i: 5956
end-i: 5960
i: 5960
end-i: 5960
i:5960 HIT CHUNK END
(comment . ";;5936: r1 <- r1, r0")
(comment . ";;5940: r9 <- 0x4")
(comment . ";;5944: r11 <- r1, 0x18\n")
(comment . ";;5948: r15 <- r1, 0x8\n")
(comment . ";;5952: r4 <- r1, 0x10\n")
(comment . ";;5956 b -5872")
chunklet-i: 5960; chunklet-start-i: 5960; chunklet-end-i: 5968
i: 5960
end-i: 5968
i: 5960
end-i: 5968
i: 5964
end-i: 5968
i: 5968
end-i: 5968
i:5968 HIT CHUNK END
(comment . ";;5960: r3 <- r3, 0x1\n")
(comment . ";;5964 b 76")
chunklet-i: 5968; chunklet-start-i: 5968; chunklet-end-i: 6008
i: 5968
end-i: 6008
i: 5972
end-i: 6008
i: 5976
end-i: 6008
i: 5980
end-i: 6008
i: 5984
end-i: 6008
i: 5988
end-i: 6008
i: 5992
end-i: 6008
i: 6004
end-i: 6008
i: 6008
end-i: 6008
at header: 6008
(comment . ";;5968: r11 <- r1, 0x18\n")
(comment . ";;5972: r15 <- r1, 0x8\n")
(comment . ";;5976: r9 <- r1, 0x10\n")
(comment . ";;5980: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;5988: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6004: b r6")
chunklet-i: 6008; chunklet-start-i: 6024; chunklet-end-i: 6044
i: 6008
end-i: 6044
at header: 6008
i: 6024
end-i: 6044
i: 6028
end-i: 6044
i: 6032
end-i: 6044
i: 6036
end-i: 6044
i: 6040
end-i: 6044
i: 6044
end-i: 6044
i:6044 HIT CHUNK END
(comment . ";;6028: r1 <- r1, r0")
(comment . ";;6032: r11 <- r1, 0x18\n")
(comment . ";;6036: r15 <- r1, 0x8\n")
(comment . ";;6040: r9 <- r1, 0x10\n")
chunklet-i: 6044; chunklet-start-i: 6044; chunklet-end-i: 6080
i: 6044
end-i: 6080
i: 6044
end-i: 6080
i: 6048
end-i: 6080
i: 6052
end-i: 6080
i: 6056
end-i: 6080
i: 6060
end-i: 6080
i: 6064
end-i: 6080
i: 6076
end-i: 6080
i: 6080
end-i: 6080
at header: 6080
(comment . ";;6044: r11 <- r1, 0x18\n")
(comment . ";;6048: r15 <- r1, 0x8\n")
(comment . ";;6052: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;6060: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6076: b r6")
chunklet-i: 6080; chunklet-start-i: 6096; chunklet-end-i: 6116
i: 6080
end-i: 6116
at header: 6080
i: 6096
end-i: 6116
i: 6100
end-i: 6116
i: 6104
end-i: 6116
i: 6108
end-i: 6116
i: 6112
end-i: 6116
i: 6116
end-i: 6116
i:6116 HIT CHUNK END
(comment . ";;6096: r1 <- r1, r0")
(comment . ";;6100: r11 <- r1, 0x18\n")
(comment . ";;6104: r15 <- r1, 0x8\n")
(comment . ";;6112 b -6056")
chunklet-i: 6116; chunklet-start-i: 6116; chunklet-end-i: 6128
i: 6116
end-i: 6128
i: 6116
end-i: 6128
i: 6120
end-i: 6128
i: 6124
end-i: 6128
i: 6128
end-i: 6128
i:6128 HIT CHUNK END
(comment . ";;6116: r15 <- r0, 0x58\n")
(comment . ";;6120: r1 <- r15")
(comment . ";;6124 b 504")
chunklet-i: 6128; chunklet-start-i: 6128; chunklet-end-i: 6136
i: 6128
end-i: 6136
i: 6128
end-i: 6136
i: 6132
end-i: 6136
i: 6136
end-i: 6136
i:6136 HIT CHUNK END
(comment . ";;6128: r3 <- r3, 0x1\n")
(comment . ";;6132 b 444")
chunklet-i: 6136; chunklet-start-i: 6136; chunklet-end-i: 6172
i: 6136
end-i: 6172
i: 6136
end-i: 6172
i: 6148
end-i: 6172
i: 6160
end-i: 6172
i: 6164
end-i: 6172
i: 6168
end-i: 6172
i: 6172
end-i: 6172
i:6172 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;6160: r14 <- r9, 0x5\n")
(comment . ";;6164: r14 <- 0x1E")
(comment . ";;6168 b 340")
chunklet-i: 6172; chunklet-start-i: 6172; chunklet-end-i: 6176
i: 6172
end-i: 6176
i: 6176
end-i: 6176
i:6176 HIT CHUNK END
(comment . ";;6172: r9 <- 0xE")
chunklet-i: 6176; chunklet-start-i: 6176; chunklet-end-i: 6216
i: 6176
end-i: 6216
i: 6176
end-i: 6216
i: 6180
end-i: 6216
i: 6184
end-i: 6216
i: 6196
end-i: 6216
i: 6200
end-i: 6216
i: 6204
end-i: 6216
i: 6208
end-i: 6216
i: 6212
end-i: 6216
i: 6216
end-i: 6216
at header: 6216
(comment . ";;6176: r15 <- r1, 0x8\n")
(comment . ";;6180: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;6196: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;6204: r15 <- r1, 0x0\n")
(comment . ";;6208: r4 <- 0x1")
(comment . ";;6212: b r5, 13")
chunklet-i: 6216; chunklet-start-i: 6232; chunklet-end-i: 6256
i: 6216
end-i: 6256
at header: 6216
i: 6232
end-i: 6256
i: 6236
end-i: 6256
i: 6240
end-i: 6256
i: 6244
end-i: 6256
i: 6248
end-i: 6256
i: 6252
end-i: 6256
i: 6256
end-i: 6256
i:6256 HIT CHUNK END
(comment . ";;6232: r1 <- r1, r0")
(comment . ";;6236: r15 <- r1, 0x8\n")
(comment . ";;6240: r14 <- r4, r7")
(comment . ";;6244: r14 <- 0x1")
(comment . ";;6252 b 236")
chunklet-i: 6256; chunklet-start-i: 6256; chunklet-end-i: 6284
i: 6256
end-i: 6284
i: 6260
end-i: 6284
i: 6272
end-i: 6284
i: 6276
end-i: 6284
i: 6280
end-i: 6284
i: 6284
end-i: 6284
i:6284 HIT CHUNK END
(comment . ";;6256: r14 <- r4, 0xF\n")
(comment . ";; literal r9")
(comment . ";;6272: r4 <- r9, 0x5\n")
(comment . ";;6276: r4 <- 0x1E")
(comment . ";;6280 b 136")
chunklet-i: 6284; chunklet-start-i: 6284; chunklet-end-i: 6304
i: 6284
end-i: 6304
i: 6284
end-i: 6304
i: 6288
end-i: 6304
i: 6292
end-i: 6304
i: 6296
end-i: 6304
i: 6300
end-i: 6304
i: 6304
end-i: 6304
i:6304 HIT CHUNK END
(comment . ";;6284: r5 <- r2, r9")
(comment . ";;6288: r2 <- r2, r0")
(comment . ";;6292: r13 <- r0, 0x68\n")
(comment . ";;6296: r13 <- r2")
(comment . ";;6300 b 96")
chunklet-i: 6304; chunklet-start-i: 6304; chunklet-end-i: 6328
i: 6304
end-i: 6328
i: 6304
end-i: 6328
i: 6308
end-i: 6328
i: 6312
end-i: 6328
i: 6316
end-i: 6328
i: 6320
end-i: 6328
i: 6324
end-i: 6328
i: 6328
end-i: 6328
i:6328 HIT CHUNK END
(comment . ";;6304: r14 <- r5, 0x7\n")
(comment . ";;6308: r4 <- r5, 0xF\n")
(comment . ";;6312: r14 <- r15, r5")
(comment . ";;6316: r5 <- r14, 0x0\n")
(comment . ";;6320: r5 <- 0x7")
(comment . ";;6324 b 24")
chunklet-i: 6328; chunklet-start-i: 6328; chunklet-end-i: 6340
i: 6328
end-i: 6340
i: 6332
end-i: 6340
i: 6336
end-i: 6340
i: 6340
end-i: 6340
i:6340 HIT CHUNK END
(comment . ";;6328: r7 <- r0, 0x68\n")
(comment . ";;6332: r2 <- r7")
(comment . ";;6336 b 36")
chunklet-i: 6340; chunklet-start-i: 6340; chunklet-end-i: 6352
i: 6340
end-i: 6352
i: 6340
end-i: 6352
i: 6344
end-i: 6352
i: 6348
end-i: 6352
i: 6352
end-i: 6352
i:6352 HIT CHUNK END
(comment . ";;6340: r7 <- r7, r8")
(comment . ";;6344: r7 <- r0, 0x68\n")
(comment . ";;6348: r14 <- r7, 0x0\n")
chunklet-i: 6352; chunklet-start-i: 6352; chunklet-end-i: 6376
i: 6352
end-i: 6376
i: 6352
end-i: 6376
i: 6364
end-i: 6376
i: 6368
end-i: 6376
i: 6372
end-i: 6376
i: 6376
end-i: 6376
i:6376 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;6364: r14 <- r15, 0xD\n")
(comment . ";;6368: r4 <- 0xE")
(comment . ";;6372: b r1, 0")
chunklet-i: 6376; chunklet-start-i: 6376; chunklet-end-i: 6388
i: 6376
end-i: 6388
i: 6376
end-i: 6388
i: 6388
end-i: 6388
i:6388 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 6388; chunklet-start-i: 6392; chunklet-end-i: 6400
i: 6388
end-i: 6400
i: 6392
end-i: 6400
i: 6396
end-i: 6400
i: 6400
end-i: 6400
i:6400 HIT CHUNK END
(comment . ";; instruction 6388 not included")
(comment . ";;6392: r7 <- r0, 0x68\n")
(comment . ";;6396 b -60")
chunklet-i: 6400; chunklet-start-i: 6400; chunklet-end-i: 6412
i: 6400
end-i: 6412
i: 6400
end-i: 6412
i: 6412
end-i: 6412
i:6412 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 6412; chunklet-start-i: 6416; chunklet-end-i: 6420
i: 6412
end-i: 6420
i: 6416
end-i: 6420
i: 6420
end-i: 6420
i:6420 HIT CHUNK END
(comment . ";; instruction 6412 not included")
(comment . ";;6416 b -116")
chunklet-i: 6420; chunklet-start-i: 6420; chunklet-end-i: 6456
i: 6420
end-i: 6456
i: 6420
end-i: 6456
i: 6424
end-i: 6456
i: 6428
end-i: 6456
i: 6432
end-i: 6456
i: 6436
end-i: 6456
i: 6440
end-i: 6456
i: 6452
end-i: 6456
i: 6456
end-i: 6456
at header: 6456
(comment . ";;6420: r15 <- r1, 0x8\n")
(comment . ";;6424: r14 <- r1, 0x10\n")
(comment . ";;6428: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;6436: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6452: b r6")
chunklet-i: 6456; chunklet-start-i: 6472; chunklet-end-i: 6492
i: 6456
end-i: 6492
at header: 6456
i: 6472
end-i: 6492
i: 6476
end-i: 6492
i: 6480
end-i: 6492
i: 6484
end-i: 6492
i: 6488
end-i: 6492
i: 6492
end-i: 6492
i:6492 HIT CHUNK END
(comment . ";;6472: r1 <- r1, r8")
(comment . ";;6476: r15 <- r1, 0x8\n")
(comment . ";;6480: r14 <- r1, 0x10\n")
(comment . ";;6488 b -208")
chunklet-i: 6492; chunklet-start-i: 6492; chunklet-end-i: 6512
i: 6492
end-i: 6512
i: 6492
end-i: 6512
i: 6496
end-i: 6512
i: 6508
end-i: 6512
i: 6512
end-i: 6512
i:6512 HIT CHUNK END
(comment . ";;6492: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;6508: b r6")
chunklet-i: 6512; chunklet-start-i: 6512; chunklet-end-i: 6544
i: 6512
end-i: 6544
i: 6512
end-i: 6544
i: 6516
end-i: 6544
i: 6520
end-i: 6544
i: 6524
end-i: 6544
i: 6528
end-i: 6544
i: 6540
end-i: 6544
i: 6544
end-i: 6544
at header: 6544
(comment . ";;6512: r15 <- r1, 0x8\n")
(comment . ";;6516: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;6524: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6540: b r6")
chunklet-i: 6544; chunklet-start-i: 6560; chunklet-end-i: 6580
i: 6544
end-i: 6580
at header: 6544
i: 6560
end-i: 6580
i: 6564
end-i: 6580
i: 6568
end-i: 6580
i: 6572
end-i: 6580
i: 6576
end-i: 6580
i: 6580
end-i: 6580
i:6580 HIT CHUNK END
(comment . ";;6560: r1 <- r1, r0")
(comment . ";;6564: r9 <- 0x4")
(comment . ";;6568: r15 <- r1, 0x8\n")
(comment . ";;6576 b -404")
chunklet-i: 6580; chunklet-start-i: 6580; chunklet-end-i: 6608
i: 6580
end-i: 6608
i: 6580
end-i: 6608
i: 6584
end-i: 6608
i: 6588
end-i: 6608
i: 6592
end-i: 6608
i: 6604
end-i: 6608
i: 6608
end-i: 6608
at header: 6608
(comment . ";;6580: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;6588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6604: b r6")
chunklet-i: 6608; chunklet-start-i: 6624; chunklet-end-i: 6632
i: 6608
end-i: 6632
at header: 6608
i: 6624
end-i: 6632
i: 6628
end-i: 6632
i: 6632
end-i: 6632
i:6632 HIT CHUNK END
(comment . ";;6624: r1 <- r1, r8")
(comment . ";;6628 b -496")
chunklet-i: 6632; chunklet-start-i: 6632; chunklet-end-i: 6644
i: 6632
end-i: 6644
i: 6632
end-i: 6644
i: 6644
end-i: 6644
i:6644 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 6644; chunklet-start-i: 6648; chunklet-end-i: 6652
i: 6644
end-i: 6652
i: 6648
end-i: 6652
i: 6652
end-i: 6652
i:6652 HIT CHUNK END
(comment . ";; instruction 6644 not included")
(comment . ";;6648 b -524")
chunklet-i: 6652; chunklet-start-i: 6652; chunklet-end-i: 6660
i: 6652
end-i: 6660
i: 6652
end-i: 6660
i: 6656
end-i: 6660
i: 6660
end-i: 6660
i:6660 HIT CHUNK END
(comment . ";;6652: r3 <- r3, 0x1\n")
(comment . ";;6656 b 64")
chunklet-i: 6660; chunklet-start-i: 6660; chunklet-end-i: 6696
i: 6660
end-i: 6696
i: 6664
end-i: 6696
i: 6668
end-i: 6696
i: 6672
end-i: 6696
i: 6676
end-i: 6696
i: 6680
end-i: 6696
i: 6692
end-i: 6696
i: 6696
end-i: 6696
at header: 6696
(comment . ";;6660: r11 <- r1, 0x18\n")
(comment . ";;6664: r15 <- r1, 0x8\n")
(comment . ";;6668: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;6676: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6692: b r6")
chunklet-i: 6696; chunklet-start-i: 6712; chunklet-end-i: 6724
i: 6696
end-i: 6724
at header: 6696
i: 6712
end-i: 6724
i: 6716
end-i: 6724
i: 6720
end-i: 6724
i: 6724
end-i: 6724
i:6724 HIT CHUNK END
(comment . ";;6712: r1 <- r1, r0")
(comment . ";;6716: r11 <- r1, 0x18\n")
(comment . ";;6720: r15 <- r1, 0x8\n")
chunklet-i: 6724; chunklet-start-i: 6724; chunklet-end-i: 6768
i: 6724
end-i: 6768
i: 6724
end-i: 6768
i: 6728
end-i: 6768
i: 6732
end-i: 6768
i: 6736
end-i: 6768
i: 6740
end-i: 6768
i: 6744
end-i: 6768
i: 6748
end-i: 6768
i: 6752
end-i: 6768
i: 6764
end-i: 6768
i: 6768
end-i: 6768
at header: 6768
(comment . ";;6724: r9 <- 0xF")
(comment . ";;6728: r10 <- 0x70")
(comment . ";;6732: r11 <- r1, 0x18\n")
(comment . ";;6736: r15 <- r1, 0x8\n")
(comment . ";;6740: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;6748: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;6764: b r6")
chunklet-i: 6768; chunklet-start-i: 6784; chunklet-end-i: 6804
i: 6768
end-i: 6804
at header: 6768
i: 6784
end-i: 6804
i: 6788
end-i: 6804
i: 6792
end-i: 6804
i: 6796
end-i: 6804
i: 6800
end-i: 6804
i: 6804
end-i: 6804
i:6804 HIT CHUNK END
(comment . ";;6784: r1 <- r1, r0")
(comment . ";;6788: r11 <- r1, 0x18\n")
(comment . ";;6792: r15 <- r1, 0x8\n")
(comment . ";;6796: r4 <- 0x6")
(comment . ";;6800 b -6768")
chunklet-i: 6804; chunklet-start-i: 6804; chunklet-end-i: 6808
i: 6804
end-i: 6808
i: 6808
end-i: 6808
i:6808 HIT CHUNK END
(comment . ";;6804 b -692")
chunklet-i: 6808; chunklet-start-i: 6808; chunklet-end-i: 6824
i: 6808
end-i: 6824
i: 6808
end-i: 6824
i: 6820
end-i: 6824
i: 6824
end-i: 6824
i:6824 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;6820: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: test
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 32
instruction range for chunk: 32 104
instruction range for chunk: 120 148
instruction range for chunk: 148 152
instruction range for chunk: 152 164
instruction range for chunk: 164 172
instruction range for chunk: 172 188
instruction range for chunk: 188 216
instruction range for chunk: 232 244
instruction range for chunk: 244 256
instruction range for chunk: 260 264
instruction range for chunk: 264 280
instruction range for chunk: 280 296
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r3 <- r3, 0x1\n")
(comment . ";;8 b 268")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r4 <- 0x2")
(comment . ";;16 b 244")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;20: r15 <- r0, 0x58\n")
(comment . ";;24: r1 <- r15")
(comment . ";;28 b 212")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 104
i: 32
end-i: 104
i: 32
end-i: 104
i: 44
end-i: 104
i: 48
end-i: 104
i: 52
end-i: 104
i: 64
end-i: 104
i: 68
end-i: 104
i: 72
end-i: 104
i: 84
end-i: 104
i: 88
end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
at header: 104
(comment . ";; literal r15")
(comment . ";;44: r14 <- 0x26")
(comment . ";;48: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;64: r14 <- r15, 0xD\n")
(comment . ";;68: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;84: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;92: r15 <- r1, 0x0\n")
(comment . ";;96: r4 <- 0x2")
(comment . ";;100: b r5, 13")
chunklet-i: 104; chunklet-start-i: 120; chunklet-end-i: 148
i: 104
end-i: 148
at header: 104
i: 120
end-i: 148
i: 124
end-i: 148
i: 136
end-i: 148
i: 140
end-i: 148
i: 144
end-i: 148
i: 148
end-i: 148
i:148 HIT CHUNK END
(comment . ";;120: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";;136: r15 <- r9, 0x5\n")
(comment . ";;140: r15 <- 0x1E")
(comment . ";;144 b 40")
chunklet-i: 148; chunklet-start-i: 148; chunklet-end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;148: r9 <- 0xF")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 164
i: 152
end-i: 164
i: 152
end-i: 164
i: 156
end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;152: r15 <- r9, r7")
(comment . ";;156: r15 <- 0x1")
(comment . ";;160 b 8")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 172
i: 164
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";;164: r4 <- r9, 0x7\n")
(comment . ";;168: b r1, 0")
chunklet-i: 172; chunklet-start-i: 172; chunklet-end-i: 188
i: 172
end-i: 188
i: 172
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;184: b r6")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 216
i: 188
end-i: 216
i: 188
end-i: 216
i: 192
end-i: 216
i: 196
end-i: 216
i: 200
end-i: 216
i: 212
end-i: 216
i: 216
end-i: 216
at header: 216
(comment . ";;188: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;196: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;212: b r6")
chunklet-i: 216; chunklet-start-i: 232; chunklet-end-i: 244
i: 216
end-i: 244
at header: 216
i: 232
end-i: 244
i: 236
end-i: 244
i: 240
end-i: 244
i: 244
end-i: 244
i:244 HIT CHUNK END
(comment . ";;232: r1 <- r1, r8")
(comment . ";;236: r9 <- 0x4")
(comment . ";;240 b -92")
chunklet-i: 244; chunklet-start-i: 244; chunklet-end-i: 256
i: 244
end-i: 256
i: 244
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 256; chunklet-start-i: 260; chunklet-end-i: 264
i: 256
end-i: 264
i: 260
end-i: 264
i: 264
end-i: 264
i:264 HIT CHUNK END
(comment . ";; instruction 256 not included")
(comment . ";;260 b -232")
chunklet-i: 264; chunklet-start-i: 264; chunklet-end-i: 280
i: 264
end-i: 280
i: 264
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;276: b r6")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 296
i: 280
end-i: 296
i: 280
end-i: 296
i: 292
end-i: 296
i: 296
end-i: 296
i:296 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;292: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 44
instruction range for chunk: 44 60
instruction range for chunk: 60 76
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 52")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x1")
(comment . ";;12 b 28")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;16: r10 <- r8, 0xB\n")
(comment . ";; literal r5")
(comment . ";;32: r8 <- r5, 0x5\n")
(comment . ";;36: r4 <- 0x2")
(comment . ";;40: b r5, 13")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 60
i: 44
end-i: 60
i: 44
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;56: b r6")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 76
i: 60
end-i: 76
i: 60
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;72: b r6")
name: ???
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 32
instruction range for chunk: 32 80
instruction range for chunk: 96 160
instruction range for chunk: 176 216
instruction range for chunk: 216 228
instruction range for chunk: 232 236
instruction range for chunk: 236 252
instruction range for chunk: 252 268
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r3 <- r3, 0x1\n")
(comment . ";;8 b 240")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r4 <- 0x0")
(comment . ";;16 b 216")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;20: r15 <- r0, 0x58\n")
(comment . ";;24: r1 <- r15")
(comment . ";;28 b 184")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 80
i: 32
end-i: 80
i: 32
end-i: 80
i: 36
end-i: 80
i: 40
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 60
end-i: 80
i: 64
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
at header: 80
(comment . ";;32: r9 <- r8, 0x1B\n")
(comment . ";;36: r10 <- r8, 0xB\n")
(comment . ";;40: r8 <- r1, 0x8\n")
(comment . ";;44: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;60: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";;72: r4 <- 0x2")
(comment . ";;76: b r5, 13")
chunklet-i: 80; chunklet-start-i: 96; chunklet-end-i: 160
i: 80
end-i: 160
at header: 80
i: 96
end-i: 160
i: 100
end-i: 160
i: 104
end-i: 160
i: 108
end-i: 160
i: 112
end-i: 160
i: 116
end-i: 160
i: 120
end-i: 160
i: 124
end-i: 160
i: 128
end-i: 160
i: 140
end-i: 160
i: 144
end-i: 160
i: 148
end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
at header: 160
(comment . ";;96: r1 <- r1, r0")
(comment . ";;100: r8 <- r1, 0x8\n")
(comment . ";;104: r15 <- 0x4")
(comment . ";;108: r9 <- r8, 0x1B\n")
(comment . ";;112: r10 <- r8, 0x13\n")
(comment . ";;116: r15 <- r1, 0x10\n")
(comment . ";;120: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;140: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;148: r15 <- r1, 0x0\n")
(comment . ";;152: r4 <- 0x2")
(comment . ";;156: b r5, 13")
chunklet-i: 160; chunklet-start-i: 176; chunklet-end-i: 216
i: 160
end-i: 216
at header: 160
i: 176
end-i: 216
i: 180
end-i: 216
i: 184
end-i: 216
i: 188
end-i: 216
i: 192
end-i: 216
i: 204
end-i: 216
i: 208
end-i: 216
i: 212
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";;176: r1 <- r1, r8")
(comment . ";;180: r15 <- r1, 0x10\n")
(comment . ";;184: r9 <- 0x4")
(comment . ";;188: r10 <- 0xF")
(comment . ";; literal r5")
(comment . ";;204: r8 <- r5, 0x5\n")
(comment . ";;208: r4 <- 0x2")
(comment . ";;212: b r5, 13")
chunklet-i: 216; chunklet-start-i: 216; chunklet-end-i: 228
i: 216
end-i: 228
i: 216
end-i: 228
i: 228
end-i: 228
i:228 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 228; chunklet-start-i: 232; chunklet-end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";; instruction 228 not included")
(comment . ";;232 b -204")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 252
i: 236
end-i: 252
i: 236
end-i: 252
i: 248
end-i: 252
i: 252
end-i: 252
i:252 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;248: b r6")
chunklet-i: 252; chunklet-start-i: 252; chunklet-end-i: 268
i: 252
end-i: 268
i: 252
end-i: 268
i: 264
end-i: 268
i: 268
end-i: 268
i:268 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;264: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 32
instruction range for chunk: 32 36
instruction range for chunk: 36 60
instruction range for chunk: 60 88
instruction range for chunk: 104 116
instruction range for chunk: 116 144
instruction range for chunk: 160 168
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 108")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 32
i: 8
end-i: 32
i: 8
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;20: r15 <- r9, 0x5\n")
(comment . ";;24: r15 <- 0x1E")
(comment . ";;28 b 28")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: r9 <- 0xF")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r5")
(comment . ";;48: r8 <- r5, 0x5\n")
(comment . ";;52: r4 <- 0x1")
(comment . ";;56: b r5, 13")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 88
i: 60
end-i: 88
i: 60
end-i: 88
i: 64
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";;60: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;84: b r6")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 116
i: 88
end-i: 116
at header: 88
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r1 <- r1, r8")
(comment . ";;108: r9 <- 0x4")
(comment . ";;112 b -80")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 144
i: 116
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 168
i: 144
end-i: 168
at header: 144
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164 b -160")
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_triangl0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
wat2wasm -r -o em-pb64l/c/pbchunk_triangl0.wasm pbchunk-out/pbchunk_triangl0.wat
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_triangl0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
emcc -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -o em-pb64l/bin/pb64l/scheme.html em-pb64l/boot/pb64l/main.o em-pb64l/boot/pb64l/libkernel.a em-pb64l/lz4/lib/liblz4.a --preload-file em-pb64l/boot/pb64l/petite.boot'@'petite.boot --preload-file em-pb64l/boot/pb64l/scheme.boot'@'scheme.boot --preload-file pbchunk-out/triangl.boot'@'triangl.boot -s EXIT_RUNTIME=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_ZLIB=1
: em-pb64l/bin/pb64l/scheme.html
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./triangl.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running triangl:22:1:50

real	1m30.811s
user	1m29.886s
sys	0m0.644s

Testing browse under Wasm PBChunk
Compiling...
COMPILING /tmp/larcenous/browse.scm
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

> compiling /tmp/larcenous/browse.scm with output to /tmp/larcenous/browse.so
> > 
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/scheme.boot...opened
version and machine type check
trying /usr/local/lib/csv9.9.9-pre-release.16/pb64l/petite.boot...opened
version and machine type check
boots:  (/tmp/larcenous/browse.boot)
dest-dir: pbchunk-out
arch: pb64l
funcs: ()Convert "/tmp/larcenous/browse.boot"
wasm-pbchunk-convert-file
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 96
instruction range for chunk: 112 192
instruction range for chunk: 208 288
instruction range for chunk: 304 384
instruction range for chunk: 400 480
instruction range for chunk: 496 576
instruction range for chunk: 592 672
instruction range for chunk: 688 768
instruction range for chunk: 784 864
instruction range for chunk: 880 960
instruction range for chunk: 976 1056
instruction range for chunk: 1072 1152
instruction range for chunk: 1168 1248
instruction range for chunk: 1264 1344
instruction range for chunk: 1360 1440
instruction range for chunk: 1456 1536
instruction range for chunk: 1552 1632
instruction range for chunk: 1648 1728
instruction range for chunk: 1744 1824
instruction range for chunk: 1840 1908
instruction range for chunk: 1908 1936
instruction range for chunk: 1952 1960
instruction range for chunk: 1960 1972
instruction range for chunk: 1976 1980
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 1944")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 1884")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 96
i: 24
end-i: 96
i: 24
end-i: 96
i: 36
end-i: 96
i: 48
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x3")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 192
i: 96
end-i: 192
at header: 96
i: 112
end-i: 192
i: 116
end-i: 192
i: 120
end-i: 192
i: 132
end-i: 192
i: 144
end-i: 192
i: 156
end-i: 192
i: 160
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;116: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;172: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;180: r15 <- r1, 0x0\n")
(comment . ";;184: r4 <- 0x3")
(comment . ";;188: b r5, 13")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 288
i: 192
end-i: 288
at header: 192
i: 208
end-i: 288
i: 212
end-i: 288
i: 216
end-i: 288
i: 228
end-i: 288
i: 240
end-i: 288
i: 252
end-i: 288
i: 256
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;212: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;252: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;268: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;276: r15 <- r1, 0x0\n")
(comment . ";;280: r4 <- 0x3")
(comment . ";;284: b r5, 13")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 384
i: 288
end-i: 384
at header: 288
i: 304
end-i: 384
i: 308
end-i: 384
i: 312
end-i: 384
i: 324
end-i: 384
i: 336
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
at header: 384
(comment . ";;308: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;364: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;372: r15 <- r1, 0x0\n")
(comment . ";;376: r4 <- 0x3")
(comment . ";;380: b r5, 13")
chunklet-i: 384; chunklet-start-i: 400; chunklet-end-i: 480
i: 384
end-i: 480
at header: 384
i: 400
end-i: 480
i: 404
end-i: 480
i: 408
end-i: 480
i: 420
end-i: 480
i: 432
end-i: 480
i: 444
end-i: 480
i: 448
end-i: 480
i: 460
end-i: 480
i: 464
end-i: 480
i: 468
end-i: 480
i: 472
end-i: 480
i: 476
end-i: 480
i: 480
end-i: 480
at header: 480
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;444: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;460: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;468: r15 <- r1, 0x0\n")
(comment . ";;472: r4 <- 0x3")
(comment . ";;476: b r5, 13")
chunklet-i: 480; chunklet-start-i: 496; chunklet-end-i: 576
i: 480
end-i: 576
at header: 480
i: 496
end-i: 576
i: 500
end-i: 576
i: 504
end-i: 576
i: 516
end-i: 576
i: 528
end-i: 576
i: 540
end-i: 576
i: 544
end-i: 576
i: 556
end-i: 576
i: 560
end-i: 576
i: 564
end-i: 576
i: 568
end-i: 576
i: 572
end-i: 576
i: 576
end-i: 576
at header: 576
(comment . ";;500: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;540: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;556: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;564: r15 <- r1, 0x0\n")
(comment . ";;568: r4 <- 0x3")
(comment . ";;572: b r5, 13")
chunklet-i: 576; chunklet-start-i: 592; chunklet-end-i: 672
i: 576
end-i: 672
at header: 576
i: 592
end-i: 672
i: 596
end-i: 672
i: 600
end-i: 672
i: 612
end-i: 672
i: 624
end-i: 672
i: 636
end-i: 672
i: 640
end-i: 672
i: 652
end-i: 672
i: 656
end-i: 672
i: 660
end-i: 672
i: 664
end-i: 672
i: 668
end-i: 672
i: 672
end-i: 672
at header: 672
(comment . ";;596: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;636: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;652: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;660: r15 <- r1, 0x0\n")
(comment . ";;664: r4 <- 0x3")
(comment . ";;668: b r5, 13")
chunklet-i: 672; chunklet-start-i: 688; chunklet-end-i: 768
i: 672
end-i: 768
at header: 672
i: 688
end-i: 768
i: 692
end-i: 768
i: 696
end-i: 768
i: 708
end-i: 768
i: 720
end-i: 768
i: 732
end-i: 768
i: 736
end-i: 768
i: 748
end-i: 768
i: 752
end-i: 768
i: 756
end-i: 768
i: 760
end-i: 768
i: 764
end-i: 768
i: 768
end-i: 768
at header: 768
(comment . ";;692: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;732: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;748: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;756: r15 <- r1, 0x0\n")
(comment . ";;760: r4 <- 0x3")
(comment . ";;764: b r5, 13")
chunklet-i: 768; chunklet-start-i: 784; chunklet-end-i: 864
i: 768
end-i: 864
at header: 768
i: 784
end-i: 864
i: 788
end-i: 864
i: 792
end-i: 864
i: 804
end-i: 864
i: 816
end-i: 864
i: 828
end-i: 864
i: 832
end-i: 864
i: 844
end-i: 864
i: 848
end-i: 864
i: 852
end-i: 864
i: 856
end-i: 864
i: 860
end-i: 864
i: 864
end-i: 864
at header: 864
(comment . ";;788: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;828: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;844: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;852: r15 <- r1, 0x0\n")
(comment . ";;856: r4 <- 0x3")
(comment . ";;860: b r5, 13")
chunklet-i: 864; chunklet-start-i: 880; chunklet-end-i: 960
i: 864
end-i: 960
at header: 864
i: 880
end-i: 960
i: 884
end-i: 960
i: 888
end-i: 960
i: 900
end-i: 960
i: 912
end-i: 960
i: 924
end-i: 960
i: 928
end-i: 960
i: 940
end-i: 960
i: 944
end-i: 960
i: 948
end-i: 960
i: 952
end-i: 960
i: 956
end-i: 960
i: 960
end-i: 960
at header: 960
(comment . ";;884: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;924: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;940: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;948: r15 <- r1, 0x0\n")
(comment . ";;952: r4 <- 0x3")
(comment . ";;956: b r5, 13")
chunklet-i: 960; chunklet-start-i: 976; chunklet-end-i: 1056
i: 960
end-i: 1056
at header: 960
i: 976
end-i: 1056
i: 980
end-i: 1056
i: 984
end-i: 1056
i: 996
end-i: 1056
i: 1008
end-i: 1056
i: 1020
end-i: 1056
i: 1024
end-i: 1056
i: 1036
end-i: 1056
i: 1040
end-i: 1056
i: 1044
end-i: 1056
i: 1048
end-i: 1056
i: 1052
end-i: 1056
i: 1056
end-i: 1056
at header: 1056
(comment . ";;980: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;1020: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1036: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1044: r15 <- r1, 0x0\n")
(comment . ";;1048: r4 <- 0x3")
(comment . ";;1052: b r5, 13")
chunklet-i: 1056; chunklet-start-i: 1072; chunklet-end-i: 1152
i: 1056
end-i: 1152
at header: 1056
i: 1072
end-i: 1152
i: 1076
end-i: 1152
i: 1080
end-i: 1152
i: 1092
end-i: 1152
i: 1104
end-i: 1152
i: 1116
end-i: 1152
i: 1120
end-i: 1152
i: 1132
end-i: 1152
i: 1136
end-i: 1152
i: 1140
end-i: 1152
i: 1144
end-i: 1152
i: 1148
end-i: 1152
i: 1152
end-i: 1152
at header: 1152
(comment . ";;1076: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;1116: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1132: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1140: r15 <- r1, 0x0\n")
(comment . ";;1144: r4 <- 0x3")
(comment . ";;1148: b r5, 13")
chunklet-i: 1152; chunklet-start-i: 1168; chunklet-end-i: 1248
i: 1152
end-i: 1248
at header: 1152
i: 1168
end-i: 1248
i: 1172
end-i: 1248
i: 1176
end-i: 1248
i: 1188
end-i: 1248
i: 1200
end-i: 1248
i: 1212
end-i: 1248
i: 1216
end-i: 1248
i: 1228
end-i: 1248
i: 1232
end-i: 1248
i: 1236
end-i: 1248
i: 1240
end-i: 1248
i: 1244
end-i: 1248
i: 1248
end-i: 1248
at header: 1248
(comment . ";;1172: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;1212: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1228: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1236: r15 <- r1, 0x0\n")
(comment . ";;1240: r4 <- 0x3")
(comment . ";;1244: b r5, 13")
chunklet-i: 1248; chunklet-start-i: 1264; chunklet-end-i: 1344
i: 1248
end-i: 1344
at header: 1248
i: 1264
end-i: 1344
i: 1268
end-i: 1344
i: 1272
end-i: 1344
i: 1284
end-i: 1344
i: 1296
end-i: 1344
i: 1308
end-i: 1344
i: 1312
end-i: 1344
i: 1324
end-i: 1344
i: 1328
end-i: 1344
i: 1332
end-i: 1344
i: 1336
end-i: 1344
i: 1340
end-i: 1344
i: 1344
end-i: 1344
at header: 1344
(comment . ";;1268: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;1308: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1324: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1332: r15 <- r1, 0x0\n")
(comment . ";;1336: r4 <- 0x3")
(comment . ";;1340: b r5, 13")
chunklet-i: 1344; chunklet-start-i: 1360; chunklet-end-i: 1440
i: 1344
end-i: 1440
at header: 1344
i: 1360
end-i: 1440
i: 1364
end-i: 1440
i: 1368
end-i: 1440
i: 1380
end-i: 1440
i: 1392
end-i: 1440
i: 1404
end-i: 1440
i: 1408
end-i: 1440
i: 1420
end-i: 1440
i: 1424
end-i: 1440
i: 1428
end-i: 1440
i: 1432
end-i: 1440
i: 1436
end-i: 1440
i: 1440
end-i: 1440
at header: 1440
(comment . ";;1364: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;1404: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1420: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1428: r15 <- r1, 0x0\n")
(comment . ";;1432: r4 <- 0x3")
(comment . ";;1436: b r5, 13")
chunklet-i: 1440; chunklet-start-i: 1456; chunklet-end-i: 1536
i: 1440
end-i: 1536
at header: 1440
i: 1456
end-i: 1536
i: 1460
end-i: 1536
i: 1464
end-i: 1536
i: 1476
end-i: 1536
i: 1488
end-i: 1536
i: 1500
end-i: 1536
i: 1504
end-i: 1536
i: 1516
end-i: 1536
i: 1520
end-i: 1536
i: 1524
end-i: 1536
i: 1528
end-i: 1536
i: 1532
end-i: 1536
i: 1536
end-i: 1536
at header: 1536
(comment . ";;1460: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;1500: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1516: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1524: r15 <- r1, 0x0\n")
(comment . ";;1528: r4 <- 0x3")
(comment . ";;1532: b r5, 13")
chunklet-i: 1536; chunklet-start-i: 1552; chunklet-end-i: 1632
i: 1536
end-i: 1632
at header: 1536
i: 1552
end-i: 1632
i: 1556
end-i: 1632
i: 1560
end-i: 1632
i: 1572
end-i: 1632
i: 1584
end-i: 1632
i: 1596
end-i: 1632
i: 1600
end-i: 1632
i: 1612
end-i: 1632
i: 1616
end-i: 1632
i: 1620
end-i: 1632
i: 1624
end-i: 1632
i: 1628
end-i: 1632
i: 1632
end-i: 1632
at header: 1632
(comment . ";;1556: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;1596: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1612: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1620: r15 <- r1, 0x0\n")
(comment . ";;1624: r4 <- 0x3")
(comment . ";;1628: b r5, 13")
chunklet-i: 1632; chunklet-start-i: 1648; chunklet-end-i: 1728
i: 1632
end-i: 1728
at header: 1632
i: 1648
end-i: 1728
i: 1652
end-i: 1728
i: 1656
end-i: 1728
i: 1668
end-i: 1728
i: 1680
end-i: 1728
i: 1692
end-i: 1728
i: 1696
end-i: 1728
i: 1708
end-i: 1728
i: 1712
end-i: 1728
i: 1716
end-i: 1728
i: 1720
end-i: 1728
i: 1724
end-i: 1728
i: 1728
end-i: 1728
at header: 1728
(comment . ";;1652: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;1692: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1708: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1716: r15 <- r1, 0x0\n")
(comment . ";;1720: r4 <- 0x3")
(comment . ";;1724: b r5, 13")
chunklet-i: 1728; chunklet-start-i: 1744; chunklet-end-i: 1824
i: 1728
end-i: 1824
at header: 1728
i: 1744
end-i: 1824
i: 1748
end-i: 1824
i: 1752
end-i: 1824
i: 1764
end-i: 1824
i: 1776
end-i: 1824
i: 1788
end-i: 1824
i: 1792
end-i: 1824
i: 1804
end-i: 1824
i: 1808
end-i: 1824
i: 1812
end-i: 1824
i: 1816
end-i: 1824
i: 1820
end-i: 1824
i: 1824
end-i: 1824
at header: 1824
(comment . ";;1748: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";;1788: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1804: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1812: r15 <- r1, 0x0\n")
(comment . ";;1816: r4 <- 0x3")
(comment . ";;1820: b r5, 13")
chunklet-i: 1824; chunklet-start-i: 1840; chunklet-end-i: 1908
i: 1824
end-i: 1908
at header: 1824
i: 1840
end-i: 1908
i: 1844
end-i: 1908
i: 1848
end-i: 1908
i: 1860
end-i: 1908
i: 1872
end-i: 1908
i: 1884
end-i: 1908
i: 1896
end-i: 1908
i: 1900
end-i: 1908
i: 1904
end-i: 1908
i: 1908
end-i: 1908
i:1908 HIT CHUNK END
(comment . ";;1844: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;1896: r8 <- r5, 0x5\n")
(comment . ";;1900: r4 <- 0x3")
(comment . ";;1904: b r5, 13")
chunklet-i: 1908; chunklet-start-i: 1908; chunklet-end-i: 1936
i: 1908
end-i: 1936
i: 1908
end-i: 1936
i: 1912
end-i: 1936
i: 1916
end-i: 1936
i: 1920
end-i: 1936
i: 1932
end-i: 1936
i: 1936
end-i: 1936
at header: 1936
(comment . ";;1908: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1916: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1932: b r6")
chunklet-i: 1936; chunklet-start-i: 1952; chunklet-end-i: 1960
i: 1936
end-i: 1960
at header: 1936
i: 1952
end-i: 1960
i: 1956
end-i: 1960
i: 1960
end-i: 1960
i:1960 HIT CHUNK END
(comment . ";;1952: r1 <- r1, r8")
(comment . ";;1956 b -1936")
chunklet-i: 1960; chunklet-start-i: 1960; chunklet-end-i: 1972
i: 1960
end-i: 1972
i: 1960
end-i: 1972
i: 1972
end-i: 1972
i:1972 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 1972; chunklet-start-i: 1976; chunklet-end-i: 1980
i: 1972
end-i: 1980
i: 1976
end-i: 1980
i: 1980
end-i: 1980
i:1980 HIT CHUNK END
(comment . ";; instruction 1972 not included")
(comment . ";;1976 b -1964")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: lookup
instruction range for chunk: 0 8
instruction range for chunk: 8 12
instruction range for chunk: 12 20
instruction range for chunk: 20 32
instruction range for chunk: 32 48
instruction range for chunk: 48 60
instruction range for chunk: 60 68
instruction range for chunk: 68 76
instruction range for chunk: 76 112
instruction range for chunk: 128 144
instruction range for chunk: 144 152
instruction range for chunk: 152 168
instruction range for chunk: 168 188
instruction range for chunk: 188 196
instruction range for chunk: 196 212
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x2")
(comment . ";;4 b 188")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;8: r15 <- 0x9")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r10 <- 0x26")
(comment . ";;16 b 168")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;20: r14 <- r10, r7")
(comment . ";;24: r14 <- 0x1")
(comment . ";;28 b 136")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 48
i: 32
end-i: 48
i: 36
end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;32: r9 <- r10, 0x7\n")
(comment . ";;36: r14 <- r9, r7")
(comment . ";;40: r14 <- 0x1")
(comment . ";;44 b 104")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;48: r14 <- r9, 0x7\n")
(comment . ";;52: r14 <- r15")
(comment . ";;56 b 84")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";;60: r3 <- r3, 0x1\n")
(comment . ";;64 b 8")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 76
i: 68
end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;68: r10 <- r10, 0xF\n")
(comment . ";;72 b -64")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 112
i: 76
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 84
end-i: 112
i: 88
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;76: r15 <- r1, 0x8\n")
(comment . ";;80: r10 <- r1, 0x10\n")
(comment . ";;84: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;92: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;108: b r6")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 144
i: 112
end-i: 144
at header: 112
i: 128
end-i: 144
i: 132
end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
i:144 HIT CHUNK END
(comment . ";;128: r1 <- r1, r8")
(comment . ";;132: r15 <- r1, 0x8\n")
(comment . ";;136: r10 <- r1, 0x10\n")
(comment . ";;140 b -76")
chunklet-i: 144; chunklet-start-i: 144; chunklet-end-i: 152
i: 144
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;144: r4 <- 0x9")
(comment . ";;148: b r1, 0")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 168
i: 152
end-i: 168
i: 152
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;164: b r6")
chunklet-i: 168; chunklet-start-i: 168; chunklet-end-i: 188
i: 168
end-i: 188
i: 168
end-i: 188
i: 172
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";;168: r9 <- 0xA")
(comment . ";; literal r6")
(comment . ";;184: b r6")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 196
i: 188
end-i: 196
i: 188
end-i: 196
i: 192
end-i: 196
i: 196
end-i: 196
i:196 HIT CHUNK END
(comment . ";;188: r4 <- 0x6")
(comment . ";;192: b r1, 0")
chunklet-i: 196; chunklet-start-i: 196; chunklet-end-i: 212
i: 196
end-i: 212
i: 196
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;208: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x26")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: get
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 36
instruction range for chunk: 36 60
instruction range for chunk: 60 104
instruction range for chunk: 120 136
instruction range for chunk: 136 144
instruction range for chunk: 144 156
instruction range for chunk: 156 200
instruction range for chunk: 216 232
instruction range for chunk: 232 240
instruction range for chunk: 240 252
instruction range for chunk: 252 260
instruction range for chunk: 260 280
instruction range for chunk: 280 300
instruction range for chunk: 300 336
instruction range for chunk: 352 372
instruction range for chunk: 372 384
instruction range for chunk: 388 392
instruction range for chunk: 392 408
instruction range for chunk: 408 424
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 400")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x2")
(comment . ";;12 b 376")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 36
i: 16
end-i: 36
i: 20
end-i: 36
i: 24
end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;16: r14 <- 0x9")
(comment . ";;20: r15 <- 0xA")
(comment . ";;24: r13 <- r0, 0x58\n")
(comment . ";;28: r1 <- r13")
(comment . ";;32 b 336")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;48: r10 <- r9, 0x5\n")
(comment . ";;52: r10 <- 0x1E")
(comment . ";;56 b 240")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 104
i: 60
end-i: 104
i: 60
end-i: 104
i: 64
end-i: 104
i: 68
end-i: 104
i: 72
end-i: 104
i: 84
end-i: 104
i: 88
end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
at header: 104
(comment . ";;60: r9 <- 0xE")
(comment . ";;64: r15 <- r1, 0x10\n")
(comment . ";;68: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;84: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;92: r15 <- r1, 0x0\n")
(comment . ";;96: r4 <- 0x2")
(comment . ";;100: b r5, 13")
chunklet-i: 104; chunklet-start-i: 120; chunklet-end-i: 136
i: 104
end-i: 136
at header: 104
i: 120
end-i: 136
i: 124
end-i: 136
i: 128
end-i: 136
i: 132
end-i: 136
i: 136
end-i: 136
i:136 HIT CHUNK END
(comment . ";;120: r1 <- r1, r8")
(comment . ";;124: r15 <- r1, 0x10\n")
(comment . ";;128: r4 <- 0x6")
(comment . ";;132 b 8")
chunklet-i: 136; chunklet-start-i: 136; chunklet-end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
i:144 HIT CHUNK END
(comment . ";;136: r4 <- 0x6")
(comment . ";;140: b r1, 0")
chunklet-i: 144; chunklet-start-i: 144; chunklet-end-i: 156
i: 144
end-i: 156
i: 144
end-i: 156
i: 148
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";;144: r14 <- r4, r7")
(comment . ";;148: r14 <- 0x1")
(comment . ";;152 b 124")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 200
i: 156
end-i: 200
i: 160
end-i: 200
i: 164
end-i: 200
i: 168
end-i: 200
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
at header: 200
(comment . ";;156: r10 <- r4, 0xF\n")
(comment . ";;160: r9 <- 0xF")
(comment . ";;164: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;180: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;188: r15 <- r1, 0x0\n")
(comment . ";;192: r4 <- 0x2")
(comment . ";;196: b r5, 13")
chunklet-i: 200; chunklet-start-i: 216; chunklet-end-i: 232
i: 200
end-i: 232
at header: 200
i: 216
end-i: 232
i: 220
end-i: 232
i: 224
end-i: 232
i: 228
end-i: 232
i: 232
end-i: 232
i:232 HIT CHUNK END
(comment . ";;216: r1 <- r1, r8")
(comment . ";;220: r4 <- 0x6")
(comment . ";;228 b 8")
chunklet-i: 232; chunklet-start-i: 232; chunklet-end-i: 240
i: 232
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
i:240 HIT CHUNK END
(comment . ";;232: r4 <- 0x6")
(comment . ";;236: b r1, 0")
chunklet-i: 240; chunklet-start-i: 240; chunklet-end-i: 252
i: 240
end-i: 252
i: 240
end-i: 252
i: 244
end-i: 252
i: 248
end-i: 252
i: 252
end-i: 252
i:252 HIT CHUNK END
(comment . ";;240: r15 <- r4, r7")
(comment . ";;244: r15 <- 0x1")
(comment . ";;248 b 8")
chunklet-i: 252; chunklet-start-i: 252; chunklet-end-i: 260
i: 252
end-i: 260
i: 256
end-i: 260
i: 260
end-i: 260
i:260 HIT CHUNK END
(comment . ";;252: r4 <- r4, 0xF\n")
(comment . ";;256: b r1, 0")
chunklet-i: 260; chunklet-start-i: 260; chunklet-end-i: 280
i: 260
end-i: 280
i: 260
end-i: 280
i: 264
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
i:280 HIT CHUNK END
(comment . ";;260: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;276: b r6")
chunklet-i: 280; chunklet-start-i: 280; chunklet-end-i: 300
i: 280
end-i: 300
i: 280
end-i: 300
i: 284
end-i: 300
i: 296
end-i: 300
i: 300
end-i: 300
i:300 HIT CHUNK END
(comment . ";;280: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;296: b r6")
chunklet-i: 300; chunklet-start-i: 300; chunklet-end-i: 336
i: 300
end-i: 336
i: 300
end-i: 336
i: 304
end-i: 336
i: 308
end-i: 336
i: 312
end-i: 336
i: 316
end-i: 336
i: 320
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
at header: 336
(comment . ";;300: r14 <- r1, 0x8\n")
(comment . ";;304: r15 <- r1, 0x10\n")
(comment . ";;308: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;316: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;332: b r6")
chunklet-i: 336; chunklet-start-i: 352; chunklet-end-i: 372
i: 336
end-i: 372
at header: 336
i: 352
end-i: 372
i: 356
end-i: 372
i: 360
end-i: 372
i: 364
end-i: 372
i: 368
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";;352: r1 <- r1, r8")
(comment . ";;356: r10 <- 0x4")
(comment . ";;360: r14 <- r1, 0x8\n")
(comment . ";;364: r15 <- r1, 0x10\n")
(comment . ";;368 b -312")
chunklet-i: 372; chunklet-start-i: 372; chunklet-end-i: 384
i: 372
end-i: 384
i: 372
end-i: 384
i: 384
end-i: 384
i:384 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 384; chunklet-start-i: 388; chunklet-end-i: 392
i: 384
end-i: 392
i: 388
end-i: 392
i: 392
end-i: 392
i:392 HIT CHUNK END
(comment . ";; instruction 384 not included")
(comment . ";;388 b -356")
chunklet-i: 392; chunklet-start-i: 392; chunklet-end-i: 408
i: 392
end-i: 408
i: 392
end-i: 408
i: 404
end-i: 408
i: 408
end-i: 408
i:408 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;404: b r6")
chunklet-i: 408; chunklet-start-i: 408; chunklet-end-i: 424
i: 408
end-i: 424
i: 408
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;420: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: put
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 36
instruction range for chunk: 36 60
instruction range for chunk: 60 112
instruction range for chunk: 128 152
instruction range for chunk: 152 184
instruction range for chunk: 184 216
instruction range for chunk: 216 268
instruction range for chunk: 268 288
instruction range for chunk: 288 312
instruction range for chunk: 312 324
instruction range for chunk: 324 336
instruction range for chunk: 336 360
instruction range for chunk: 360 372
instruction range for chunk: 376 384
instruction range for chunk: 384 396
instruction range for chunk: 400 404
instruction range for chunk: 404 440
instruction range for chunk: 456 476
instruction range for chunk: 476 488
instruction range for chunk: 492 496
instruction range for chunk: 496 508
instruction range for chunk: 512 516
instruction range for chunk: 516 528
instruction range for chunk: 528 584
instruction range for chunk: 600 632
instruction range for chunk: 632 652
instruction range for chunk: 652 688
instruction range for chunk: 688 712
instruction range for chunk: 712 728
instruction range for chunk: 728 736
instruction range for chunk: 736 748
instruction range for chunk: 748 768
instruction range for chunk: 768 780
instruction range for chunk: 784 792
instruction range for chunk: 792 812
instruction range for chunk: 812 824
instruction range for chunk: 828 832
instruction range for chunk: 832 844
instruction range for chunk: 848 852
instruction range for chunk: 852 864
instruction range for chunk: 864 880
instruction range for chunk: 880 888
instruction range for chunk: 888 900
instruction range for chunk: 900 920
instruction range for chunk: 920 932
instruction range for chunk: 936 944
instruction range for chunk: 944 964
instruction range for chunk: 964 984
instruction range for chunk: 984 1024
instruction range for chunk: 1040 1064
instruction range for chunk: 1064 1076
instruction range for chunk: 1080 1084
instruction range for chunk: 1084 1100
instruction range for chunk: 1100 1116
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 1092")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x3")
(comment . ";;12 b 1068")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 36
i: 16
end-i: 36
i: 20
end-i: 36
i: 24
end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;16: r15 <- 0x9")
(comment . ";;20: r14 <- 0xA")
(comment . ";;24: r13 <- r0, 0x58\n")
(comment . ";;28: r1 <- r13")
(comment . ";;32 b 1028")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;48: r10 <- r9, 0x5\n")
(comment . ";;52: r10 <- 0x1E")
(comment . ";;56 b 924")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 112
i: 60
end-i: 112
i: 60
end-i: 112
i: 64
end-i: 112
i: 68
end-i: 112
i: 72
end-i: 112
i: 76
end-i: 112
i: 80
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
at header: 112
(comment . ";;60: r9 <- 0xF")
(comment . ";;64: r15 <- r1, 0x8\n")
(comment . ";;68: r14 <- r1, 0x10\n")
(comment . ";;72: r11 <- r1, 0x18\n")
(comment . ";;76: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;92: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;100: r15 <- r1, 0x0\n")
(comment . ";;104: r4 <- 0x2")
(comment . ";;108: b r5, 13")
chunklet-i: 112; chunklet-start-i: 128; chunklet-end-i: 152
i: 112
end-i: 152
at header: 112
i: 128
end-i: 152
i: 132
end-i: 152
i: 136
end-i: 152
i: 140
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;128: r1 <- r1, r0")
(comment . ";;132: r15 <- r1, 0x8\n")
(comment . ";;136: r14 <- r1, 0x10\n")
(comment . ";;140: r11 <- r1, 0x18\n")
(comment . ";;144: r4 <- 0x6")
(comment . ";;148 b 364")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 184
i: 152
end-i: 184
i: 164
end-i: 184
i: 168
end-i: 184
i: 172
end-i: 184
i: 176
end-i: 184
i: 180
end-i: 184
i: 184
end-i: 184
i:184 HIT CHUNK END
(comment . ";; literal r13")
(comment . ";;164: r5 <- r2, r9")
(comment . ";;168: r2 <- r2, r0")
(comment . ";;172: r12 <- r0, 0x68\n")
(comment . ";;176: r12 <- r2")
(comment . ";;180 b 312")
chunklet-i: 184; chunklet-start-i: 184; chunklet-end-i: 216
i: 184
end-i: 216
i: 184
end-i: 216
i: 188
end-i: 216
i: 192
end-i: 216
i: 196
end-i: 216
i: 200
end-i: 216
i: 204
end-i: 216
i: 208
end-i: 216
i: 212
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";;184: r14 <- r5, 0x7\n")
(comment . ";;188: r11 <- r5, 0xF\n")
(comment . ";;192: r14 <- 0x5")
(comment . ";;196: r5 <- r2, r9")
(comment . ";;200: r2 <- r2, r0")
(comment . ";;204: r12 <- r0, 0x68\n")
(comment . ";;208: r12 <- r2")
(comment . ";;212 b 260")
chunklet-i: 216; chunklet-start-i: 216; chunklet-end-i: 268
i: 216
end-i: 268
i: 216
end-i: 268
i: 220
end-i: 268
i: 224
end-i: 268
i: 228
end-i: 268
i: 232
end-i: 268
i: 236
end-i: 268
i: 240
end-i: 268
i: 244
end-i: 268
i: 256
end-i: 268
i: 260
end-i: 268
i: 264
end-i: 268
i: 268
end-i: 268
i:268 HIT CHUNK END
(comment . ";;216: r15 <- r5, 0x7\n")
(comment . ";;220: r15 <- r5, r0")
(comment . ";;224: r15 <- r5, 0xF\n")
(comment . ";;228: r14 <- r5, 0x17\n")
(comment . ";;232: r15 <- 0x26")
(comment . ";;236: r15 <- r5, 0x1F\n")
(comment . ";;240: r15 <- 0x5")
(comment . ";; literal r9")
(comment . ";;256: r4 <- r9, 0x5\n")
(comment . ";;260: r4 <- 0x1E")
(comment . ";;264 b 136")
chunklet-i: 268; chunklet-start-i: 268; chunklet-end-i: 288
i: 268
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 276
end-i: 288
i: 280
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
i:288 HIT CHUNK END
(comment . ";;268: r5 <- r2, r9")
(comment . ";;272: r2 <- r2, r0")
(comment . ";;276: r14 <- r0, 0x68\n")
(comment . ";;280: r14 <- r2")
(comment . ";;284 b 96")
chunklet-i: 288; chunklet-start-i: 288; chunklet-end-i: 312
i: 288
end-i: 312
i: 288
end-i: 312
i: 292
end-i: 312
i: 296
end-i: 312
i: 300
end-i: 312
i: 304
end-i: 312
i: 308
end-i: 312
i: 312
end-i: 312
i:312 HIT CHUNK END
(comment . ";;288: r15 <- r5, 0x7\n")
(comment . ";;292: r4 <- r5, 0xF\n")
(comment . ";;296: r15 <- r13, r5")
(comment . ";;300: r5 <- r15, 0x0\n")
(comment . ";;304: r5 <- 0x7")
(comment . ";;308 b 24")
chunklet-i: 312; chunklet-start-i: 312; chunklet-end-i: 324
i: 312
end-i: 324
i: 316
end-i: 324
i: 320
end-i: 324
i: 324
end-i: 324
i:324 HIT CHUNK END
(comment . ";;312: r7 <- r0, 0x68\n")
(comment . ";;316: r2 <- r7")
(comment . ";;320 b 36")
chunklet-i: 324; chunklet-start-i: 324; chunklet-end-i: 336
i: 324
end-i: 336
i: 324
end-i: 336
i: 328
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
i:336 HIT CHUNK END
(comment . ";;324: r7 <- r7, r8")
(comment . ";;328: r7 <- r0, 0x68\n")
(comment . ";;332: r15 <- r7, 0x0\n")
chunklet-i: 336; chunklet-start-i: 336; chunklet-end-i: 360
i: 336
end-i: 360
i: 336
end-i: 360
i: 348
end-i: 360
i: 352
end-i: 360
i: 356
end-i: 360
i: 360
end-i: 360
i:360 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;348: r15 <- r13, 0xD\n")
(comment . ";;352: r4 <- 0x2E")
(comment . ";;356: b r1, 0")
chunklet-i: 360; chunklet-start-i: 360; chunklet-end-i: 372
i: 360
end-i: 372
i: 360
end-i: 372
i: 372
end-i: 372
i:372 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 372; chunklet-start-i: 376; chunklet-end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
i:384 HIT CHUNK END
(comment . ";; instruction 372 not included")
(comment . ";;376: r7 <- r0, 0x68\n")
(comment . ";;380 b -60")
chunklet-i: 384; chunklet-start-i: 384; chunklet-end-i: 396
i: 384
end-i: 396
i: 384
end-i: 396
i: 396
end-i: 396
i:396 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 396; chunklet-start-i: 400; chunklet-end-i: 404
i: 396
end-i: 404
i: 400
end-i: 404
i: 404
end-i: 404
i:404 HIT CHUNK END
(comment . ";; instruction 396 not included")
(comment . ";;400 b -116")
chunklet-i: 404; chunklet-start-i: 404; chunklet-end-i: 440
i: 404
end-i: 440
i: 404
end-i: 440
i: 408
end-i: 440
i: 412
end-i: 440
i: 416
end-i: 440
i: 420
end-i: 440
i: 424
end-i: 440
i: 436
end-i: 440
i: 440
end-i: 440
at header: 440
(comment . ";;404: r13 <- r1, 0x20\n")
(comment . ";;408: r15 <- r1, 0x8\n")
(comment . ";;412: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;420: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;436: b r6")
chunklet-i: 440; chunklet-start-i: 456; chunklet-end-i: 476
i: 440
end-i: 476
at header: 440
i: 456
end-i: 476
i: 460
end-i: 476
i: 464
end-i: 476
i: 468
end-i: 476
i: 472
end-i: 476
i: 476
end-i: 476
i:476 HIT CHUNK END
(comment . ";;456: r1 <- r1, r8")
(comment . ";;460: r13 <- r1, 0x20\n")
(comment . ";;464: r15 <- r1, 0x8\n")
(comment . ";;472 b -208")
chunklet-i: 476; chunklet-start-i: 476; chunklet-end-i: 488
i: 476
end-i: 488
i: 476
end-i: 488
i: 488
end-i: 488
i:488 HIT CHUNK END
(comment . ";; literal r12")
chunklet-i: 488; chunklet-start-i: 492; chunklet-end-i: 496
i: 488
end-i: 496
i: 492
end-i: 496
i: 496
end-i: 496
i:496 HIT CHUNK END
(comment . ";; instruction 488 not included")
(comment . ";;492 b -280")
chunklet-i: 496; chunklet-start-i: 496; chunklet-end-i: 508
i: 496
end-i: 508
i: 496
end-i: 508
i: 508
end-i: 508
i:508 HIT CHUNK END
(comment . ";; literal r12")
chunklet-i: 508; chunklet-start-i: 512; chunklet-end-i: 516
i: 508
end-i: 516
i: 512
end-i: 516
i: 516
end-i: 516
i:516 HIT CHUNK END
(comment . ";; instruction 508 not included")
(comment . ";;512 b -332")
chunklet-i: 516; chunklet-start-i: 516; chunklet-end-i: 528
i: 516
end-i: 528
i: 516
end-i: 528
i: 520
end-i: 528
i: 524
end-i: 528
i: 528
end-i: 528
i:528 HIT CHUNK END
(comment . ";;516: r15 <- r4, r7")
(comment . ";;520: r15 <- 0x1")
(comment . ";;524 b 436")
chunklet-i: 528; chunklet-start-i: 528; chunklet-end-i: 584
i: 528
end-i: 584
i: 532
end-i: 584
i: 536
end-i: 584
i: 540
end-i: 584
i: 544
end-i: 584
i: 548
end-i: 584
i: 552
end-i: 584
i: 564
end-i: 584
i: 568
end-i: 584
i: 572
end-i: 584
i: 576
end-i: 584
i: 580
end-i: 584
i: 584
end-i: 584
at header: 584
(comment . ";;528: r10 <- r4, 0xF\n")
(comment . ";;532: r9 <- 0xE")
(comment . ";;536: r14 <- r1, 0x10\n")
(comment . ";;540: r11 <- r1, 0x18\n")
(comment . ";;544: r4 <- r1, 0x20\n")
(comment . ";;548: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;564: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;572: r15 <- r1, 0x0\n")
(comment . ";;576: r4 <- 0x2")
(comment . ";;580: b r5, 13")
chunklet-i: 584; chunklet-start-i: 600; chunklet-end-i: 632
i: 584
end-i: 632
at header: 584
i: 600
end-i: 632
i: 604
end-i: 632
i: 608
end-i: 632
i: 612
end-i: 632
i: 616
end-i: 632
i: 620
end-i: 632
i: 624
end-i: 632
i: 628
end-i: 632
i: 632
end-i: 632
i:632 HIT CHUNK END
(comment . ";;600: r1 <- r1, r8")
(comment . ";;604: r9 <- 0x4")
(comment . ";;608: r14 <- r1, 0x10\n")
(comment . ";;612: r11 <- r1, 0x18\n")
(comment . ";;616: r4 <- r1, 0x20\n")
(comment . ";;620: r9 <- 0x6")
(comment . ";;628 b 220")
chunklet-i: 632; chunklet-start-i: 632; chunklet-end-i: 652
i: 632
end-i: 652
i: 636
end-i: 652
i: 640
end-i: 652
i: 644
end-i: 652
i: 648
end-i: 652
i: 652
end-i: 652
i:652 HIT CHUNK END
(comment . ";;632: r5 <- r2, r9")
(comment . ";;636: r2 <- r2, r0")
(comment . ";;640: r15 <- r0, 0x68\n")
(comment . ";;644: r15 <- r2")
(comment . ";;648 b 180")
chunklet-i: 652; chunklet-start-i: 652; chunklet-end-i: 688
i: 652
end-i: 688
i: 652
end-i: 688
i: 656
end-i: 688
i: 660
end-i: 688
i: 664
end-i: 688
i: 668
end-i: 688
i: 672
end-i: 688
i: 676
end-i: 688
i: 680
end-i: 688
i: 684
end-i: 688
i: 688
end-i: 688
i:688 HIT CHUNK END
(comment . ";;652: r14 <- r5, 0x7\n")
(comment . ";;656: r11 <- r5, 0xF\n")
(comment . ";;660: r15 <- 0x5")
(comment . ";;664: r14 <- r4, 0xF\n")
(comment . ";;668: r5 <- r2, r9")
(comment . ";;672: r2 <- r2, r0")
(comment . ";;676: r13 <- r0, 0x68\n")
(comment . ";;680: r13 <- r2")
(comment . ";;684 b 124")
chunklet-i: 688; chunklet-start-i: 688; chunklet-end-i: 712
i: 688
end-i: 712
i: 688
end-i: 712
i: 692
end-i: 712
i: 696
end-i: 712
i: 700
end-i: 712
i: 704
end-i: 712
i: 708
end-i: 712
i: 712
end-i: 712
i:712 HIT CHUNK END
(comment . ";;688: r10 <- 0x5")
(comment . ";;692: r15 <- r10, 0x7\n")
(comment . ";;696: r14 <- r10, 0xF\n")
(comment . ";;700: r15 <- r4, r7")
(comment . ";;704: r15 <- 0x1")
(comment . ";;708 b 80")
chunklet-i: 712; chunklet-start-i: 712; chunklet-end-i: 728
i: 712
end-i: 728
i: 716
end-i: 728
i: 720
end-i: 728
i: 724
end-i: 728
i: 728
end-i: 728
i:728 HIT CHUNK END
(comment . ";;712: r15 <- r4, r15")
(comment . ";;716: r10 <- r15, 0x0\n")
(comment . ";;720: r10 <- 0x7")
(comment . ";;724 b 8")
chunklet-i: 728; chunklet-start-i: 728; chunklet-end-i: 736
i: 728
end-i: 736
i: 732
end-i: 736
i: 736
end-i: 736
i:736 HIT CHUNK END
(comment . ";;728: r4 <- 0x2E")
(comment . ";;732: b r1, 0")
chunklet-i: 736; chunklet-start-i: 736; chunklet-end-i: 748
i: 736
end-i: 748
i: 736
end-i: 748
i: 740
end-i: 748
i: 744
end-i: 748
i: 748
end-i: 748
i:748 HIT CHUNK END
(comment . ";;736: r7 <- r0, 0x68\n")
(comment . ";;740: r2 <- r7")
(comment . ";;744 b 20")
chunklet-i: 748; chunklet-start-i: 748; chunklet-end-i: 768
i: 748
end-i: 768
i: 748
end-i: 768
i: 752
end-i: 768
i: 756
end-i: 768
i: 760
end-i: 768
i: 764
end-i: 768
i: 768
end-i: 768
i:768 HIT CHUNK END
(comment . ";;748: r7 <- r7, r8")
(comment . ";;752: r7 <- r0, 0x68\n")
(comment . ";;756: r15 <- r7, 0x0\n")
(comment . ";;760: r4 <- 0x2E")
(comment . ";;764: b r1, 0")
chunklet-i: 768; chunklet-start-i: 768; chunklet-end-i: 780
i: 768
end-i: 780
i: 768
end-i: 780
i: 780
end-i: 780
i:780 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 780; chunklet-start-i: 784; chunklet-end-i: 792
i: 780
end-i: 792
i: 784
end-i: 792
i: 788
end-i: 792
i: 792
end-i: 792
i:792 HIT CHUNK END
(comment . ";; instruction 780 not included")
(comment . ";;784: r7 <- r0, 0x68\n")
(comment . ";;788 b -44")
chunklet-i: 792; chunklet-start-i: 792; chunklet-end-i: 812
i: 792
end-i: 812
i: 792
end-i: 812
i: 796
end-i: 812
i: 808
end-i: 812
i: 812
end-i: 812
i:812 HIT CHUNK END
(comment . ";;792: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;808: b r6")
chunklet-i: 812; chunklet-start-i: 812; chunklet-end-i: 824
i: 812
end-i: 824
i: 812
end-i: 824
i: 824
end-i: 824
i:824 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 824; chunklet-start-i: 828; chunklet-end-i: 832
i: 824
end-i: 832
i: 828
end-i: 832
i: 832
end-i: 832
i:832 HIT CHUNK END
(comment . ";; instruction 824 not included")
(comment . ";;828 b -144")
chunklet-i: 832; chunklet-start-i: 832; chunklet-end-i: 844
i: 832
end-i: 844
i: 832
end-i: 844
i: 844
end-i: 844
i:844 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 844; chunklet-start-i: 848; chunklet-end-i: 852
i: 844
end-i: 852
i: 848
end-i: 852
i: 852
end-i: 852
i:852 HIT CHUNK END
(comment . ";; instruction 844 not included")
(comment . ";;848 b -200")
chunklet-i: 852; chunklet-start-i: 852; chunklet-end-i: 864
i: 852
end-i: 864
i: 852
end-i: 864
i: 856
end-i: 864
i: 860
end-i: 864
i: 864
end-i: 864
i:864 HIT CHUNK END
(comment . ";;852: r15 <- r9, r7")
(comment . ";;856: r15 <- 0x1")
(comment . ";;860 b 80")
chunklet-i: 864; chunklet-start-i: 864; chunklet-end-i: 880
i: 864
end-i: 880
i: 868
end-i: 880
i: 872
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
i:880 HIT CHUNK END
(comment . ";;864: r15 <- r9, r15")
(comment . ";;868: r11 <- r15, 0x0\n")
(comment . ";;872: r11 <- 0x7")
(comment . ";;876 b 8")
chunklet-i: 880; chunklet-start-i: 880; chunklet-end-i: 888
i: 880
end-i: 888
i: 884
end-i: 888
i: 888
end-i: 888
i:888 HIT CHUNK END
(comment . ";;880: r4 <- 0x2E")
(comment . ";;884: b r1, 0")
chunklet-i: 888; chunklet-start-i: 888; chunklet-end-i: 900
i: 888
end-i: 900
i: 888
end-i: 900
i: 892
end-i: 900
i: 896
end-i: 900
i: 900
end-i: 900
i:900 HIT CHUNK END
(comment . ";;888: r7 <- r0, 0x68\n")
(comment . ";;892: r2 <- r7")
(comment . ";;896 b 20")
chunklet-i: 900; chunklet-start-i: 900; chunklet-end-i: 920
i: 900
end-i: 920
i: 900
end-i: 920
i: 904
end-i: 920
i: 908
end-i: 920
i: 912
end-i: 920
i: 916
end-i: 920
i: 920
end-i: 920
i:920 HIT CHUNK END
(comment . ";;900: r7 <- r7, r8")
(comment . ";;904: r7 <- r0, 0x68\n")
(comment . ";;908: r15 <- r7, 0x0\n")
(comment . ";;912: r4 <- 0x2E")
(comment . ";;916: b r1, 0")
chunklet-i: 920; chunklet-start-i: 920; chunklet-end-i: 932
i: 920
end-i: 932
i: 920
end-i: 932
i: 932
end-i: 932
i:932 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 932; chunklet-start-i: 936; chunklet-end-i: 944
i: 932
end-i: 944
i: 936
end-i: 944
i: 940
end-i: 944
i: 944
end-i: 944
i:944 HIT CHUNK END
(comment . ";; instruction 932 not included")
(comment . ";;936: r7 <- r0, 0x68\n")
(comment . ";;940 b -44")
chunklet-i: 944; chunklet-start-i: 944; chunklet-end-i: 964
i: 944
end-i: 964
i: 944
end-i: 964
i: 948
end-i: 964
i: 960
end-i: 964
i: 964
end-i: 964
i:964 HIT CHUNK END
(comment . ";;944: r10 <- 0xB")
(comment . ";; literal r6")
(comment . ";;960: b r6")
chunklet-i: 964; chunklet-start-i: 964; chunklet-end-i: 984
i: 964
end-i: 984
i: 964
end-i: 984
i: 968
end-i: 984
i: 980
end-i: 984
i: 984
end-i: 984
i:984 HIT CHUNK END
(comment . ";;964: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;980: b r6")
chunklet-i: 984; chunklet-start-i: 984; chunklet-end-i: 1024
i: 984
end-i: 1024
i: 984
end-i: 1024
i: 988
end-i: 1024
i: 992
end-i: 1024
i: 996
end-i: 1024
i: 1000
end-i: 1024
i: 1004
end-i: 1024
i: 1008
end-i: 1024
i: 1020
end-i: 1024
i: 1024
end-i: 1024
at header: 1024
(comment . ";;984: r15 <- r1, 0x8\n")
(comment . ";;988: r14 <- r1, 0x10\n")
(comment . ";;992: r11 <- r1, 0x18\n")
(comment . ";;996: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1004: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1020: b r6")
chunklet-i: 1024; chunklet-start-i: 1040; chunklet-end-i: 1064
i: 1024
end-i: 1064
at header: 1024
i: 1040
end-i: 1064
i: 1044
end-i: 1064
i: 1048
end-i: 1064
i: 1052
end-i: 1064
i: 1056
end-i: 1064
i: 1060
end-i: 1064
i: 1064
end-i: 1064
i:1064 HIT CHUNK END
(comment . ";;1040: r1 <- r1, r0")
(comment . ";;1044: r10 <- 0x4")
(comment . ";;1048: r15 <- r1, 0x8\n")
(comment . ";;1052: r14 <- r1, 0x10\n")
(comment . ";;1056: r11 <- r1, 0x18\n")
(comment . ";;1060 b -1004")
chunklet-i: 1064; chunklet-start-i: 1064; chunklet-end-i: 1076
i: 1064
end-i: 1076
i: 1064
end-i: 1076
i: 1076
end-i: 1076
i:1076 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 1076; chunklet-start-i: 1080; chunklet-end-i: 1084
i: 1076
end-i: 1084
i: 1080
end-i: 1084
i: 1084
end-i: 1084
i:1084 HIT CHUNK END
(comment . ";; instruction 1076 not included")
(comment . ";;1080 b -1048")
chunklet-i: 1084; chunklet-start-i: 1084; chunklet-end-i: 1100
i: 1084
end-i: 1100
i: 1084
end-i: 1100
i: 1096
end-i: 1100
i: 1100
end-i: 1100
i:1100 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;1096: b r6")
chunklet-i: 1100; chunklet-start-i: 1100; chunklet-end-i: 1116
i: 1100
end-i: 1116
i: 1100
end-i: 1116
i: 1112
end-i: 1116
i: 1116
end-i: 1116
i:1116 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;1112: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0x0")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: generate-symbol
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 64
instruction range for chunk: 64 72
instruction range for chunk: 72 80
instruction range for chunk: 80 96
instruction range for chunk: 96 108
instruction range for chunk: 108 120
instruction range for chunk: 120 160
instruction range for chunk: 160 164
instruction range for chunk: 164 200
instruction range for chunk: 216 248
instruction range for chunk: 248 252
instruction range for chunk: 252 280
instruction range for chunk: 296 308
instruction range for chunk: 308 320
instruction range for chunk: 324 332
instruction range for chunk: 332 368
instruction range for chunk: 384 400
instruction range for chunk: 400 432
instruction range for chunk: 448 464
instruction range for chunk: 464 476
instruction range for chunk: 480 484
instruction range for chunk: 484 500
instruction range for chunk: 500 516
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 492")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 468")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 436")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 64
i: 28
end-i: 64
i: 28
end-i: 64
i: 40
end-i: 64
i: 52
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;52: r10 <- r9, 0x5\n")
(comment . ";;56: r10 <- 0x1E")
(comment . ";;60 b 336")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r10 <- 0x7")
(comment . ";;68 b 260")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;72: r4 <- r10, 0x8\n")
(comment . ";;76 b 252")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 96
i: 80
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
i:96 HIT CHUNK END
(comment . ";;80: r14 <- r15, r5")
(comment . ";;84: r4 <- r14, 0x0\n")
(comment . ";;88: r4 <- 0x7")
(comment . ";;92 b 24")
chunklet-i: 96; chunklet-start-i: 96; chunklet-end-i: 108
i: 96
end-i: 108
i: 100
end-i: 108
i: 104
end-i: 108
i: 108
end-i: 108
i:108 HIT CHUNK END
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100: r2 <- r7")
(comment . ";;104 b 200")
chunklet-i: 108; chunklet-start-i: 108; chunklet-end-i: 120
i: 108
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;108: r7 <- r7, r8")
(comment . ";;112: r7 <- r0, 0x68\n")
(comment . ";;116: r14 <- r7, 0x0\n")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 160
i: 120
end-i: 160
i: 120
end-i: 160
i: 132
end-i: 160
i: 136
end-i: 160
i: 148
end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;132: r14 <- r15, 0xD\n")
(comment . ";; literal r9")
(comment . ";;148: r15 <- r9, 0x5\n")
(comment . ";;152: r15 <- 0x1E")
(comment . ";;156 b 92")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 164
i: 160
end-i: 164
i: 164
end-i: 164
i:164 HIT CHUNK END
(comment . ";;160: r9 <- 0xF")
chunklet-i: 164; chunklet-start-i: 164; chunklet-end-i: 200
i: 164
end-i: 200
i: 164
end-i: 200
i: 168
end-i: 200
i: 180
end-i: 200
i: 184
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
at header: 200
(comment . ";;164: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;180: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;188: r15 <- r1, 0x0\n")
(comment . ";;192: r4 <- 0x1")
(comment . ";;196: b r5, 13")
chunklet-i: 200; chunklet-start-i: 216; chunklet-end-i: 248
i: 200
end-i: 248
at header: 200
i: 216
end-i: 248
i: 220
end-i: 248
i: 224
end-i: 248
i: 236
end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;216: r1 <- r1, r8")
(comment . ";;220: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;236: r8 <- r5, 0x5\n")
(comment . ";;240: r4 <- 0x1")
(comment . ";;244: b r5, 13")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 252
i: 248
end-i: 252
i: 252
end-i: 252
i:252 HIT CHUNK END
chunklet-i: 252; chunklet-start-i: 252; chunklet-end-i: 280
i: 252
end-i: 280
i: 252
end-i: 280
i: 256
end-i: 280
i: 260
end-i: 280
i: 264
end-i: 280
i: 276
end-i: 280
i: 280
end-i: 280
at header: 280
(comment . ";;252: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;260: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;276: b r6")
chunklet-i: 280; chunklet-start-i: 296; chunklet-end-i: 308
i: 280
end-i: 308
at header: 280
i: 296
end-i: 308
i: 300
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";;296: r1 <- r1, r8")
(comment . ";;300: r9 <- 0x4")
(comment . ";;304 b -144")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 320
i: 308
end-i: 320
i: 308
end-i: 320
i: 320
end-i: 320
i:320 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 320; chunklet-start-i: 324; chunklet-end-i: 332
i: 320
end-i: 332
i: 324
end-i: 332
i: 328
end-i: 332
i: 332
end-i: 332
i:332 HIT CHUNK END
(comment . ";; instruction 320 not included")
(comment . ";;324: r7 <- r0, 0x68\n")
(comment . ";;328 b -224")
chunklet-i: 332; chunklet-start-i: 332; chunklet-end-i: 368
i: 332
end-i: 368
i: 332
end-i: 368
i: 336
end-i: 368
i: 340
end-i: 368
i: 344
end-i: 368
i: 348
end-i: 368
i: 352
end-i: 368
i: 364
end-i: 368
i: 368
end-i: 368
at header: 368
(comment . ";;332: r9 <- 0x8")
(comment . ";;336: r15 <- r1, 0x8\n")
(comment . ";;340: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;348: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;364: b r6")
chunklet-i: 368; chunklet-start-i: 384; chunklet-end-i: 400
i: 368
end-i: 400
at header: 368
i: 384
end-i: 400
i: 388
end-i: 400
i: 392
end-i: 400
i: 396
end-i: 400
i: 400
end-i: 400
i:400 HIT CHUNK END
(comment . ";;384: r1 <- r1, r0")
(comment . ";;388: r15 <- r1, 0x8\n")
(comment . ";;396 b -320")
chunklet-i: 400; chunklet-start-i: 400; chunklet-end-i: 432
i: 400
end-i: 432
i: 400
end-i: 432
i: 404
end-i: 432
i: 408
end-i: 432
i: 412
end-i: 432
i: 416
end-i: 432
i: 428
end-i: 432
i: 432
end-i: 432
at header: 432
(comment . ";;400: r15 <- r1, 0x8\n")
(comment . ";;404: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;412: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;428: b r6")
chunklet-i: 432; chunklet-start-i: 448; chunklet-end-i: 464
i: 432
end-i: 464
at header: 432
i: 448
end-i: 464
i: 452
end-i: 464
i: 456
end-i: 464
i: 460
end-i: 464
i: 464
end-i: 464
i:464 HIT CHUNK END
(comment . ";;448: r1 <- r1, r0")
(comment . ";;452: r10 <- 0x4")
(comment . ";;456: r15 <- r1, 0x8\n")
(comment . ";;460 b -400")
chunklet-i: 464; chunklet-start-i: 464; chunklet-end-i: 476
i: 464
end-i: 476
i: 464
end-i: 476
i: 476
end-i: 476
i:476 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 476; chunklet-start-i: 480; chunklet-end-i: 484
i: 476
end-i: 484
i: 480
end-i: 484
i: 484
end-i: 484
i:484 HIT CHUNK END
(comment . ";; instruction 476 not included")
(comment . ";;480 b -456")
chunklet-i: 484; chunklet-start-i: 484; chunklet-end-i: 500
i: 484
end-i: 500
i: 484
end-i: 500
i: 496
end-i: 500
i: 500
end-i: 500
i:500 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;496: b r6")
chunklet-i: 500; chunklet-start-i: 500; chunklet-end-i: 516
i: 500
end-i: 516
i: 500
end-i: 516
i: 512
end-i: 516
i: 516
end-i: 516
i:516 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;512: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: append-to-tail!
instruction range for chunk: 0 12
instruction range for chunk: 12 20
instruction range for chunk: 20 28
instruction range for chunk: 28 40
instruction range for chunk: 40 48
instruction range for chunk: 48 60
instruction range for chunk: 60 68
instruction range for chunk: 68 80
instruction range for chunk: 80 92
instruction range for chunk: 92 112
instruction range for chunk: 112 152
instruction range for chunk: 168 188
instruction range for chunk: 188 200
instruction range for chunk: 200 216
instruction range for chunk: 216 228
instruction range for chunk: 228 240
instruction range for chunk: 240 248
instruction range for chunk: 248 260
instruction range for chunk: 264 272
instruction range for chunk: 272 292
instruction range for chunk: 292 308
instruction range for chunk: 308 324
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x2")
(comment . ";;8 b 296")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 20
i: 12
end-i: 20
i: 16
end-i: 20
i: 20
end-i: 20
i:20 HIT CHUNK END
(comment . ";;12: r9 <- 0x26")
(comment . ";;16 b 8")
chunklet-i: 20; chunklet-start-i: 20; chunklet-end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;20: r4 <- 0xA")
(comment . ";;24: b r1, 0")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 40
i: 28
end-i: 40
i: 28
end-i: 40
i: 32
end-i: 40
i: 36
end-i: 40
i: 40
end-i: 40
i:40 HIT CHUNK END
(comment . ";;28: r15 <- r9, r7")
(comment . ";;32: r15 <- 0x1")
(comment . ";;36 b 252")
chunklet-i: 40; chunklet-start-i: 40; chunklet-end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;40: r13 <- r9, 0xF\n")
(comment . ";;44: r15 <- 0x9")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 60
i: 48
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;48: r14 <- 0xD")
(comment . ";;52: r14 <- 0x26")
(comment . ";;56 b 128")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";;60: r3 <- r3, 0x1\n")
(comment . ";;64 b 44")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 80
i: 68
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;68: r15 <- r14, r7")
(comment . ";;72: r15 <- 0x1")
(comment . ";;76 b 12")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;80: r13 <- r14, 0xF\n")
(comment . ";;84: r15 <- 0xE")
(comment . ";;88 b -44")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 112
i: 92
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
i:112 HIT CHUNK END
(comment . ";;92: r9 <- 0xE")
(comment . ";; literal r6")
(comment . ";;108: b r6")
chunklet-i: 112; chunklet-start-i: 112; chunklet-end-i: 152
i: 112
end-i: 152
i: 112
end-i: 152
i: 116
end-i: 152
i: 120
end-i: 152
i: 124
end-i: 152
i: 128
end-i: 152
i: 132
end-i: 152
i: 136
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
at header: 152
(comment . ";;112: r9 <- r1, 0x8\n")
(comment . ";;116: r10 <- r1, 0x10\n")
(comment . ";;120: r14 <- r1, 0x18\n")
(comment . ";;124: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;132: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;148: b r6")
chunklet-i: 152; chunklet-start-i: 168; chunklet-end-i: 188
i: 152
end-i: 188
at header: 152
i: 168
end-i: 188
i: 172
end-i: 188
i: 176
end-i: 188
i: 180
end-i: 188
i: 184
end-i: 188
i: 188
end-i: 188
i:188 HIT CHUNK END
(comment . ";;168: r1 <- r1, r0")
(comment . ";;172: r9 <- r1, 0x8\n")
(comment . ";;176: r10 <- r1, 0x10\n")
(comment . ";;180: r14 <- r1, 0x18\n")
(comment . ";;184 b -120")
chunklet-i: 188; chunklet-start-i: 188; chunklet-end-i: 200
i: 188
end-i: 200
i: 188
end-i: 200
i: 192
end-i: 200
i: 196
end-i: 200
i: 200
end-i: 200
i:200 HIT CHUNK END
(comment . ";;188: r14 <- r15, r7")
(comment . ";;192: r14 <- 0x1")
(comment . ";;196 b 72")
chunklet-i: 200; chunklet-start-i: 200; chunklet-end-i: 216
i: 200
end-i: 216
i: 204
end-i: 216
i: 208
end-i: 216
i: 212
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";;200: r15 <- r15, r15")
(comment . ";;204: r10 <- r15, 0x0\n")
(comment . ";;208: r10 <- 0x7")
(comment . ";;212 b 24")
chunklet-i: 216; chunklet-start-i: 216; chunklet-end-i: 228
i: 216
end-i: 228
i: 220
end-i: 228
i: 224
end-i: 228
i: 228
end-i: 228
i:228 HIT CHUNK END
(comment . ";;216: r7 <- r0, 0x68\n")
(comment . ";;220: r2 <- r7")
(comment . ";;224 b 20")
chunklet-i: 228; chunklet-start-i: 228; chunklet-end-i: 240
i: 228
end-i: 240
i: 228
end-i: 240
i: 232
end-i: 240
i: 236
end-i: 240
i: 240
end-i: 240
i:240 HIT CHUNK END
(comment . ";;228: r7 <- r7, r8")
(comment . ";;232: r7 <- r0, 0x68\n")
(comment . ";;236: r15 <- r7, 0x0\n")
chunklet-i: 240; chunklet-start-i: 240; chunklet-end-i: 248
i: 240
end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";;240: r4 <- 0x9")
(comment . ";;244: b r1, 0")
chunklet-i: 248; chunklet-start-i: 248; chunklet-end-i: 260
i: 248
end-i: 260
i: 248
end-i: 260
i: 260
end-i: 260
i:260 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 260; chunklet-start-i: 264; chunklet-end-i: 272
i: 260
end-i: 272
i: 264
end-i: 272
i: 268
end-i: 272
i: 272
end-i: 272
i:272 HIT CHUNK END
(comment . ";; instruction 260 not included")
(comment . ";;264: r7 <- r0, 0x68\n")
(comment . ";;268 b -44")
chunklet-i: 272; chunklet-start-i: 272; chunklet-end-i: 292
i: 272
end-i: 292
i: 272
end-i: 292
i: 276
end-i: 292
i: 288
end-i: 292
i: 292
end-i: 292
i:292 HIT CHUNK END
(comment . ";;272: r9 <- 0xF")
(comment . ";; literal r6")
(comment . ";;288: b r6")
chunklet-i: 292; chunklet-start-i: 292; chunklet-end-i: 308
i: 292
end-i: 308
i: 292
end-i: 308
i: 304
end-i: 308
i: 308
end-i: 308
i:308 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;304: b r6")
chunklet-i: 308; chunklet-start-i: 308; chunklet-end-i: 324
i: 308
end-i: 324
i: 308
end-i: 324
i: 320
end-i: 324
i: 324
end-i: 324
i:324 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;320: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: tree-copy
instruction range for chunk: 0 8
instruction range for chunk: 8 24
instruction range for chunk: 24 32
instruction range for chunk: 32 44
instruction range for chunk: 44 52
instruction range for chunk: 52 96
instruction range for chunk: 112 168
instruction range for chunk: 184 220
instruction range for chunk: 220 236
instruction range for chunk: 236 248
instruction range for chunk: 252 256
instruction range for chunk: 256 288
instruction range for chunk: 304 316
instruction range for chunk: 316 328
instruction range for chunk: 332 336
instruction range for chunk: 336 352
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 328")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 24
i: 8
end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;8: r15 <- 0x9")
(comment . ";;12: r14 <- r15, r7")
(comment . ";;16: r14 <- 0x1")
(comment . ";;20 b 8")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;24: r4 <- 0xF")
(comment . ";;28: b r1, 0")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 44
i: 32
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;32: r14 <- r0, 0x58\n")
(comment . ";;36: r1 <- r14")
(comment . ";;40 b 272")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r3 <- r3, 0x1\n")
(comment . ";;48 b 204")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 96
i: 52
end-i: 96
i: 52
end-i: 96
i: 56
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;52: r9 <- r15, 0x7\n")
(comment . ";;56: r15 <- r1, 0x8\n")
(comment . ";;60: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x1")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 168
i: 96
end-i: 168
at header: 96
i: 112
end-i: 168
i: 116
end-i: 168
i: 120
end-i: 168
i: 124
end-i: 168
i: 128
end-i: 168
i: 132
end-i: 168
i: 136
end-i: 168
i: 148
end-i: 168
i: 152
end-i: 168
i: 156
end-i: 168
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
at header: 168
(comment . ";;112: r1 <- r1, r0")
(comment . ";;116: r15 <- r1, 0x8\n")
(comment . ";;120: r14 <- 0x4")
(comment . ";;124: r9 <- r15, 0xF\n")
(comment . ";;128: r14 <- r1, 0x10\n")
(comment . ";;132: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;148: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;156: r15 <- r1, 0x0\n")
(comment . ";;160: r4 <- 0x1")
(comment . ";;164: b r5, 13")
chunklet-i: 168; chunklet-start-i: 184; chunklet-end-i: 220
i: 168
end-i: 220
at header: 168
i: 184
end-i: 220
i: 188
end-i: 220
i: 192
end-i: 220
i: 196
end-i: 220
i: 200
end-i: 220
i: 204
end-i: 220
i: 208
end-i: 220
i: 212
end-i: 220
i: 216
end-i: 220
i: 220
end-i: 220
i:220 HIT CHUNK END
(comment . ";;184: r1 <- r1, r8")
(comment . ";;188: r14 <- r1, 0x10\n")
(comment . ";;192: r15 <- 0x4")
(comment . ";;196: r5 <- r2, r9")
(comment . ";;200: r2 <- r2, r0")
(comment . ";;204: r13 <- r0, 0x68\n")
(comment . ";;208: r13 <- r2")
(comment . ";;216 b 16")
chunklet-i: 220; chunklet-start-i: 220; chunklet-end-i: 236
i: 220
end-i: 236
i: 220
end-i: 236
i: 224
end-i: 236
i: 228
end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";;220: r4 <- 0x5")
(comment . ";;224: r14 <- r4, 0x7\n")
(comment . ";;228: r15 <- r4, 0xF\n")
(comment . ";;232: b r1, 0")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 248
i: 236
end-i: 248
i: 236
end-i: 248
i: 248
end-i: 248
i:248 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 248; chunklet-start-i: 252; chunklet-end-i: 256
i: 248
end-i: 256
i: 252
end-i: 256
i: 256
end-i: 256
i:256 HIT CHUNK END
(comment . ";; instruction 248 not included")
(comment . ";;252 b -36")
chunklet-i: 256; chunklet-start-i: 256; chunklet-end-i: 288
i: 256
end-i: 288
i: 256
end-i: 288
i: 260
end-i: 288
i: 264
end-i: 288
i: 268
end-i: 288
i: 272
end-i: 288
i: 284
end-i: 288
i: 288
end-i: 288
at header: 288
(comment . ";;256: r15 <- r1, 0x8\n")
(comment . ";;260: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;268: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;284: b r6")
chunklet-i: 288; chunklet-start-i: 304; chunklet-end-i: 316
i: 288
end-i: 316
at header: 288
i: 304
end-i: 316
i: 308
end-i: 316
i: 312
end-i: 316
i: 316
end-i: 316
i:316 HIT CHUNK END
(comment . ";;304: r1 <- r1, r0")
(comment . ";;308: r15 <- r1, 0x8\n")
(comment . ";;312 b -264")
chunklet-i: 316; chunklet-start-i: 316; chunklet-end-i: 328
i: 316
end-i: 328
i: 316
end-i: 328
i: 328
end-i: 328
i:328 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 328; chunklet-start-i: 332; chunklet-end-i: 336
i: 328
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
i:336 HIT CHUNK END
(comment . ";; instruction 328 not included")
(comment . ";;332 b -292")
chunklet-i: 336; chunklet-start-i: 336; chunklet-end-i: 352
i: 336
end-i: 352
i: 336
end-i: 352
i: 348
end-i: 352
i: 352
end-i: 352
i:352 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;348: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- 0xA8")
(comment . ";;16: r14 <- r15, 0x5\n")
(comment . ";; literal r14")
(comment . ";;32: r14 <- r15, 0xD\n")
(comment . ";;36: r4 <- 0x2E")
(comment . ";;40: b r1, 0")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: init
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 44
instruction range for chunk: 44 80
instruction range for chunk: 96 112
instruction range for chunk: 112 124
instruction range for chunk: 124 136
instruction range for chunk: 136 144
instruction range for chunk: 144 152
instruction range for chunk: 152 184
instruction range for chunk: 200 216
instruction range for chunk: 216 228
instruction range for chunk: 228 252
instruction range for chunk: 252 264
instruction range for chunk: 264 276
instruction range for chunk: 276 320
instruction range for chunk: 336 348
instruction range for chunk: 348 384
instruction range for chunk: 384 412
instruction range for chunk: 412 424
instruction range for chunk: 424 432
instruction range for chunk: 432 460
instruction range for chunk: 460 492
instruction range for chunk: 492 504
instruction range for chunk: 504 516
instruction range for chunk: 516 520
instruction range for chunk: 520 528
instruction range for chunk: 528 536
instruction range for chunk: 536 544
instruction range for chunk: 544 584
instruction range for chunk: 600 664
instruction range for chunk: 680 700
instruction range for chunk: 700 708
instruction range for chunk: 708 716
instruction range for chunk: 716 752
instruction range for chunk: 768 776
instruction range for chunk: 776 808
instruction range for chunk: 824 840
instruction range for chunk: 840 848
instruction range for chunk: 848 880
instruction range for chunk: 896 908
instruction range for chunk: 908 944
instruction range for chunk: 960 980
instruction range for chunk: 980 992
instruction range for chunk: 992 1016
instruction range for chunk: 1016 1040
instruction range for chunk: 1040 1048
instruction range for chunk: 1048 1056
instruction range for chunk: 1056 1068
instruction range for chunk: 1068 1096
instruction range for chunk: 1096 1120
instruction range for chunk: 1120 1132
instruction range for chunk: 1132 1144
instruction range for chunk: 1144 1160
instruction range for chunk: 1160 1168
instruction range for chunk: 1168 1176
instruction range for chunk: 1176 1216
instruction range for chunk: 1232 1256
instruction range for chunk: 1256 1268
instruction range for chunk: 1272 1280
instruction range for chunk: 1280 1292
instruction range for chunk: 1296 1300
instruction range for chunk: 1300 1320
instruction range for chunk: 1320 1360
instruction range for chunk: 1376 1400
instruction range for chunk: 1400 1408
instruction range for chunk: 1408 1448
instruction range for chunk: 1464 1480
instruction range for chunk: 1480 1520
instruction range for chunk: 1536 1560
instruction range for chunk: 1560 1616
instruction range for chunk: 1632 1656
instruction range for chunk: 1656 1672
instruction range for chunk: 1672 1680
instruction range for chunk: 1680 1688
instruction range for chunk: 1688 1696
instruction range for chunk: 1696 1736
instruction range for chunk: 1752 1816
instruction range for chunk: 1832 1852
instruction range for chunk: 1852 1860
instruction range for chunk: 1860 1868
instruction range for chunk: 1868 1904
instruction range for chunk: 1920 1928
instruction range for chunk: 1928 1960
instruction range for chunk: 1976 1992
instruction range for chunk: 1992 2000
instruction range for chunk: 2000 2032
instruction range for chunk: 2048 2060
instruction range for chunk: 2060 2096
instruction range for chunk: 2112 2136
instruction range for chunk: 2136 2184
instruction range for chunk: 2200 2216
instruction range for chunk: 2216 2228
instruction range for chunk: 2228 2240
instruction range for chunk: 2240 2252
instruction range for chunk: 2252 2264
instruction range for chunk: 2264 2276
instruction range for chunk: 2276 2320
instruction range for chunk: 2336 2360
instruction range for chunk: 2360 2400
instruction range for chunk: 2416 2436
instruction range for chunk: 2436 2472
instruction range for chunk: 2488 2508
instruction range for chunk: 2508 2516
instruction range for chunk: 2516 2552
instruction range for chunk: 2568 2580
instruction range for chunk: 2580 2592
instruction range for chunk: 2596 2600
instruction range for chunk: 2600 2612
instruction range for chunk: 2616 2624
instruction range for chunk: 2624 2636
instruction range for chunk: 2640 2644
instruction range for chunk: 2644 2672
instruction range for chunk: 2688 2700
instruction range for chunk: 2700 2708
instruction range for chunk: 2708 2736
instruction range for chunk: 2752 2756
instruction range for chunk: 2756 2792
instruction range for chunk: 2808 2820
instruction range for chunk: 2820 2832
instruction range for chunk: 2832 2844
instruction range for chunk: 2848 2852
instruction range for chunk: 2852 2864
instruction range for chunk: 2868 2876
instruction range for chunk: 2876 2896
instruction range for chunk: 2896 2912
instruction range for chunk: 2912 2924
instruction range for chunk: 2928 2932
instruction range for chunk: 2932 2948
instruction range for chunk: 2948 2964
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 2940")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x4")
(comment . ";;12 b 2916")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 24
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;16: r9 <- r1, 0x28\n")
(comment . ";;20: r10 <- r1, 0x10\n")
(comment . ";;24: r11 <- r1, 0x30\n")
(comment . ";;28: r9 <- r1, 0x8\n")
(comment . ";;32: r15 <- r0, 0x58\n")
(comment . ";;36: r1 <- r15")
(comment . ";;40 b 2868")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 60
end-i: 80
i: 64
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
at header: 80
(comment . ";;44: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;60: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";;72: r4 <- 0x1")
(comment . ";;76: b r5, 13")
chunklet-i: 80; chunklet-start-i: 96; chunklet-end-i: 112
i: 80
end-i: 112
at header: 80
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
i:112 HIT CHUNK END
(comment . ";;96: r1 <- r1, r8")
(comment . ";;100: r4 <- r1, 0x18\n")
(comment . ";;104: r9 <- r1, 0x18\n")
chunklet-i: 112; chunklet-start-i: 112; chunklet-end-i: 124
i: 112
end-i: 124
i: 112
end-i: 124
i: 116
end-i: 124
i: 120
end-i: 124
i: 124
end-i: 124
i:124 HIT CHUNK END
(comment . ";;112: r15 <- r9, r7")
(comment . ";;116: r15 <- 0x1")
(comment . ";;120 b 2772")
chunklet-i: 124; chunklet-start-i: 124; chunklet-end-i: 136
i: 124
end-i: 136
i: 128
end-i: 136
i: 132
end-i: 136
i: 136
end-i: 136
i:136 HIT CHUNK END
(comment . ";;124: r15 <- r9, 0xF\n")
(comment . ";;128: r15 <- 0x26")
(comment . ";;132 b 80")
chunklet-i: 136; chunklet-start-i: 136; chunklet-end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
i:144 HIT CHUNK END
(comment . ";;136: r3 <- r3, 0x1\n")
(comment . ";;140 b 8")
chunklet-i: 144; chunklet-start-i: 144; chunklet-end-i: 152
i: 144
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;144: r9 <- r9, 0xF\n")
(comment . ";;148 b -40")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 184
i: 152
end-i: 184
i: 152
end-i: 184
i: 156
end-i: 184
i: 160
end-i: 184
i: 164
end-i: 184
i: 168
end-i: 184
i: 180
end-i: 184
i: 184
end-i: 184
at header: 184
(comment . ";;152: r9 <- r1, 0x8\n")
(comment . ";;156: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;164: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;180: b r6")
chunklet-i: 184; chunklet-start-i: 200; chunklet-end-i: 216
i: 184
end-i: 216
at header: 184
i: 200
end-i: 216
i: 204
end-i: 216
i: 208
end-i: 216
i: 212
end-i: 216
i: 216
end-i: 216
i:216 HIT CHUNK END
(comment . ";;204: r1 <- r1, r8")
(comment . ";;208: r9 <- r1, 0x8\n")
(comment . ";;212 b -72")
chunklet-i: 216; chunklet-start-i: 216; chunklet-end-i: 228
i: 216
end-i: 228
i: 216
end-i: 228
i: 220
end-i: 228
i: 224
end-i: 228
i: 228
end-i: 228
i:228 HIT CHUNK END
(comment . ";;216: r15 <- r9, r7")
(comment . ";;220: r15 <- 0x1")
(comment . ";;224 b 2648")
chunklet-i: 228; chunklet-start-i: 228; chunklet-end-i: 252
i: 228
end-i: 252
i: 232
end-i: 252
i: 236
end-i: 252
i: 240
end-i: 252
i: 244
end-i: 252
i: 248
end-i: 252
i: 252
end-i: 252
i:252 HIT CHUNK END
(comment . ";;228: r15 <- r9, r15")
(comment . ";;232: r14 <- r1, 0x18\n")
(comment . ";;236: r14 <- r15, 0x0\n")
(comment . ";;240: r14 <- r1, 0x18\n")
(comment . ";;244: r14 <- 0x7")
(comment . ";;248 b 24")
chunklet-i: 252; chunklet-start-i: 252; chunklet-end-i: 264
i: 252
end-i: 264
i: 256
end-i: 264
i: 260
end-i: 264
i: 264
end-i: 264
i:264 HIT CHUNK END
(comment . ";;252: r7 <- r0, 0x68\n")
(comment . ";;256: r2 <- r7")
(comment . ";;260 b 2588")
chunklet-i: 264; chunklet-start-i: 264; chunklet-end-i: 276
i: 264
end-i: 276
i: 264
end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";;264: r7 <- r7, r8")
(comment . ";;268: r7 <- r0, 0x68\n")
(comment . ";;272: r15 <- r7, 0x0\n")
chunklet-i: 276; chunklet-start-i: 276; chunklet-end-i: 320
i: 276
end-i: 320
i: 276
end-i: 320
i: 280
end-i: 320
i: 284
end-i: 320
i: 288
end-i: 320
i: 300
end-i: 320
i: 304
end-i: 320
i: 308
end-i: 320
i: 312
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
at header: 320
(comment . ";;276: r15 <- 0x26")
(comment . ";;280: r15 <- r1, 0x38\n")
(comment . ";;284: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;300: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;308: r15 <- r1, 0x0\n")
(comment . ";;312: r4 <- 0x0")
(comment . ";;316: b r5, 13")
chunklet-i: 320; chunklet-start-i: 336; chunklet-end-i: 348
i: 320
end-i: 348
at header: 320
i: 336
end-i: 348
i: 340
end-i: 348
i: 344
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";;336: r1 <- r1, r0")
(comment . ";;340: r15 <- r1, 0x10\n")
(comment . ";;344: r9 <- r1, 0x28\n")
chunklet-i: 348; chunklet-start-i: 348; chunklet-end-i: 384
i: 348
end-i: 384
i: 348
end-i: 384
i: 352
end-i: 384
i: 356
end-i: 384
i: 360
end-i: 384
i: 364
end-i: 384
i: 368
end-i: 384
i: 372
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
i:384 HIT CHUNK END
(comment . ";;348: r14 <- r1, 0x38\n")
(comment . ";;352: r4 <- r1, 0x20\n")
(comment . ";;356: r15 <- r1, 0x28\n")
(comment . ";;360: r9 <- r1, 0x40\n")
(comment . ";;364: r5 <- r2, r9")
(comment . ";;368: r2 <- r2, r0")
(comment . ";;372: r15 <- r0, 0x68\n")
(comment . ";;376: r15 <- r2")
(comment . ";;380 b 2448")
chunklet-i: 384; chunklet-start-i: 384; chunklet-end-i: 412
i: 384
end-i: 412
i: 384
end-i: 412
i: 388
end-i: 412
i: 392
end-i: 412
i: 396
end-i: 412
i: 400
end-i: 412
i: 404
end-i: 412
i: 408
end-i: 412
i: 412
end-i: 412
i:412 HIT CHUNK END
(comment . ";;384: r14 <- r5, 0x7\n")
(comment . ";;388: r15 <- 0x1E")
(comment . ";;392: r15 <- r5, 0xF\n")
(comment . ";;396: r5 <- r1, 0x38\n")
(comment . ";;400: r15 <- r1, 0x40\n")
(comment . ";;404: r15 <- 0x0")
(comment . ";;408 b 2408")
chunklet-i: 412; chunklet-start-i: 412; chunklet-end-i: 424
i: 412
end-i: 424
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;412: r15 <- r1, 0x40\n")
(comment . ";;416: r15 <- 0x7")
(comment . ";;420 b 2276")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 432
i: 424
end-i: 432
i: 424
end-i: 432
i: 428
end-i: 432
i: 432
end-i: 432
i:432 HIT CHUNK END
(comment . ";;424: r3 <- r3, 0x1\n")
(comment . ";;428 b 2212")
chunklet-i: 432; chunklet-start-i: 432; chunklet-end-i: 460
i: 432
end-i: 460
i: 432
end-i: 460
i: 436
end-i: 460
i: 440
end-i: 460
i: 444
end-i: 460
i: 448
end-i: 460
i: 452
end-i: 460
i: 456
end-i: 460
i: 460
end-i: 460
i:460 HIT CHUNK END
(comment . ";;432: r15 <- r1, 0x38\n")
(comment . ";;436: r15 <- r15, 0x7\n")
(comment . ";;440: r5 <- r2, r9")
(comment . ";;444: r2 <- r2, r0")
(comment . ";;448: r14 <- r0, 0x68\n")
(comment . ";;452: r14 <- r2")
(comment . ";;456 b 2164")
chunklet-i: 460; chunklet-start-i: 460; chunklet-end-i: 492
i: 460
end-i: 492
i: 460
end-i: 492
i: 464
end-i: 492
i: 468
end-i: 492
i: 472
end-i: 492
i: 476
end-i: 492
i: 480
end-i: 492
i: 484
end-i: 492
i: 488
end-i: 492
i: 492
end-i: 492
i:492 HIT CHUNK END
(comment . ";;460: r14 <- r1, 0x20\n")
(comment . ";;464: r14 <- r5, 0x7\n")
(comment . ";;468: r15 <- r5, 0xF\n")
(comment . ";;472: r15 <- r1, 0x38\n")
(comment . ";;476: r15 <- r15, r7")
(comment . ";;480: r5 <- r15, 0x0\n")
(comment . ";;484: r5 <- 0x7")
(comment . ";;488 b 24")
chunklet-i: 492; chunklet-start-i: 492; chunklet-end-i: 504
i: 492
end-i: 504
i: 496
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
i:504 HIT CHUNK END
(comment . ";;492: r7 <- r0, 0x68\n")
(comment . ";;496: r2 <- r7")
(comment . ";;500 b 2096")
chunklet-i: 504; chunklet-start-i: 504; chunklet-end-i: 516
i: 504
end-i: 516
i: 504
end-i: 516
i: 508
end-i: 516
i: 512
end-i: 516
i: 516
end-i: 516
i:516 HIT CHUNK END
(comment . ";;504: r7 <- r7, r8")
(comment . ";;508: r7 <- r0, 0x68\n")
(comment . ";;512: r15 <- r7, 0x0\n")
chunklet-i: 516; chunklet-start-i: 516; chunklet-end-i: 520
i: 516
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;516: r4 <- r1, 0x28\n")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 528
i: 520
end-i: 528
i: 520
end-i: 528
i: 524
end-i: 528
i: 528
end-i: 528
i:528 HIT CHUNK END
(comment . ";;520: r4 <- 0x0")
(comment . ";;524 b 452")
chunklet-i: 528; chunklet-start-i: 528; chunklet-end-i: 536
i: 528
end-i: 536
i: 532
end-i: 536
i: 536
end-i: 536
i:536 HIT CHUNK END
(comment . ";;528: r4 <- 0x7")
(comment . ";;532 b 304")
chunklet-i: 536; chunklet-start-i: 536; chunklet-end-i: 544
i: 536
end-i: 544
i: 536
end-i: 544
i: 540
end-i: 544
i: 544
end-i: 544
i:544 HIT CHUNK END
(comment . ";;536: r3 <- r3, 0x1\n")
(comment . ";;540 b 232")
chunklet-i: 544; chunklet-start-i: 544; chunklet-end-i: 584
i: 544
end-i: 584
i: 544
end-i: 584
i: 548
end-i: 584
i: 552
end-i: 584
i: 564
end-i: 584
i: 568
end-i: 584
i: 572
end-i: 584
i: 576
end-i: 584
i: 580
end-i: 584
i: 584
end-i: 584
at header: 584
(comment . ";;544: r4 <- r1, 0x8\n")
(comment . ";;548: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;564: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;572: r15 <- r1, 0x0\n")
(comment . ";;576: r4 <- 0x0")
(comment . ";;580: b r5, 13")
chunklet-i: 584; chunklet-start-i: 600; chunklet-end-i: 664
i: 584
end-i: 664
at header: 584
i: 600
end-i: 664
i: 604
end-i: 664
i: 608
end-i: 664
i: 612
end-i: 664
i: 616
end-i: 664
i: 620
end-i: 664
i: 624
end-i: 664
i: 628
end-i: 664
i: 632
end-i: 664
i: 644
end-i: 664
i: 648
end-i: 664
i: 652
end-i: 664
i: 656
end-i: 664
i: 660
end-i: 664
i: 664
end-i: 664
at header: 664
(comment . ";;600: r1 <- r1, r8")
(comment . ";;604: r10 <- 0x4")
(comment . ";;608: r4 <- r1, 0x8\n")
(comment . ";;612: r9 <- r1, 0x20\n")
(comment . ";;616: r11 <- 0x6")
(comment . ";;620: r4 <- r1, 0x8\n")
(comment . ";;624: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;644: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;652: r15 <- r1, 0x0\n")
(comment . ";;656: r4 <- 0x3")
(comment . ";;660: b r5, 13")
chunklet-i: 664; chunklet-start-i: 680; chunklet-end-i: 700
i: 664
end-i: 700
at header: 664
i: 680
end-i: 700
i: 684
end-i: 700
i: 688
end-i: 700
i: 692
end-i: 700
i: 696
end-i: 700
i: 700
end-i: 700
i:700 HIT CHUNK END
(comment . ";;684: r1 <- r1, r8")
(comment . ";;688: r4 <- r1, 0x8\n")
(comment . ";;692: r4 <- 0x7")
(comment . ";;696 b 16")
chunklet-i: 700; chunklet-start-i: 700; chunklet-end-i: 708
i: 700
end-i: 708
i: 704
end-i: 708
i: 708
end-i: 708
i:708 HIT CHUNK END
(comment . ";;700: r15 <- r4, 0x8\n")
(comment . ";;704 b 8")
chunklet-i: 708; chunklet-start-i: 708; chunklet-end-i: 716
i: 708
end-i: 716
i: 712
end-i: 716
i: 716
end-i: 716
i:716 HIT CHUNK END
(comment . ";;708: r4 <- 0xF")
(comment . ";;712 b -196")
chunklet-i: 716; chunklet-start-i: 716; chunklet-end-i: 752
i: 716
end-i: 752
i: 716
end-i: 752
i: 720
end-i: 752
i: 724
end-i: 752
i: 728
end-i: 752
i: 732
end-i: 752
i: 736
end-i: 752
i: 748
end-i: 752
i: 752
end-i: 752
at header: 752
(comment . ";;716: r9 <- 0x4")
(comment . ";;720: r10 <- 0x8")
(comment . ";;724: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;732: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;748: b r6")
chunklet-i: 752; chunklet-start-i: 768; chunklet-end-i: 776
i: 752
end-i: 776
at header: 752
i: 768
end-i: 776
i: 772
end-i: 776
i: 776
end-i: 776
i:776 HIT CHUNK END
(comment . ";;768: r1 <- r1, r8")
(comment . ";;772 b -256")
chunklet-i: 776; chunklet-start-i: 776; chunklet-end-i: 808
i: 776
end-i: 808
i: 776
end-i: 808
i: 780
end-i: 808
i: 784
end-i: 808
i: 788
end-i: 808
i: 792
end-i: 808
i: 804
end-i: 808
i: 808
end-i: 808
at header: 808
(comment . ";;776: r4 <- r1, 0x8\n")
(comment . ";;780: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;788: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;804: b r6")
chunklet-i: 808; chunklet-start-i: 824; chunklet-end-i: 840
i: 808
end-i: 840
at header: 808
i: 824
end-i: 840
i: 828
end-i: 840
i: 832
end-i: 840
i: 836
end-i: 840
i: 840
end-i: 840
i:840 HIT CHUNK END
(comment . ";;828: r1 <- r1, r8")
(comment . ";;832: r4 <- r1, 0x8\n")
(comment . ";;836 b -296")
chunklet-i: 840; chunklet-start-i: 840; chunklet-end-i: 848
i: 840
end-i: 848
i: 840
end-i: 848
i: 844
end-i: 848
i: 848
end-i: 848
i:848 HIT CHUNK END
(comment . ";;840: r3 <- r3, 0x1\n")
(comment . ";;844 b 60")
chunklet-i: 848; chunklet-start-i: 848; chunklet-end-i: 880
i: 848
end-i: 880
i: 852
end-i: 880
i: 856
end-i: 880
i: 860
end-i: 880
i: 864
end-i: 880
i: 876
end-i: 880
i: 880
end-i: 880
at header: 880
(comment . ";;848: r4 <- r1, 0x8\n")
(comment . ";;852: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;860: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;876: b r6")
chunklet-i: 880; chunklet-start-i: 896; chunklet-end-i: 908
i: 880
end-i: 908
at header: 880
i: 896
end-i: 908
i: 900
end-i: 908
i: 904
end-i: 908
i: 908
end-i: 908
i:908 HIT CHUNK END
(comment . ";;900: r1 <- r1, r8")
(comment . ";;904: r4 <- r1, 0x8\n")
chunklet-i: 908; chunklet-start-i: 908; chunklet-end-i: 944
i: 908
end-i: 944
i: 908
end-i: 944
i: 912
end-i: 944
i: 916
end-i: 944
i: 920
end-i: 944
i: 924
end-i: 944
i: 928
end-i: 944
i: 940
end-i: 944
i: 944
end-i: 944
at header: 944
(comment . ";;908: r9 <- 0x4")
(comment . ";;912: r4 <- r1, 0x8\n")
(comment . ";;916: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;924: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;940: b r6")
chunklet-i: 944; chunklet-start-i: 960; chunklet-end-i: 980
i: 944
end-i: 980
at header: 944
i: 960
end-i: 980
i: 964
end-i: 980
i: 968
end-i: 980
i: 972
end-i: 980
i: 976
end-i: 980
i: 980
end-i: 980
i:980 HIT CHUNK END
(comment . ";;960: r1 <- r1, r8")
(comment . ";;964: r15 <- 0x4")
(comment . ";;968: r4 <- r1, 0x8\n")
(comment . ";;972: r15 <- 0x6")
(comment . ";;976 b -444")
chunklet-i: 980; chunklet-start-i: 980; chunklet-end-i: 992
i: 980
end-i: 992
i: 980
end-i: 992
i: 984
end-i: 992
i: 988
end-i: 992
i: 992
end-i: 992
i:992 HIT CHUNK END
(comment . ";;980: r9 <- r1, 0x30\n")
(comment . ";;984: r4 <- r1, 0x18\n")
(comment . ";;988: r14 <- 0x26")
chunklet-i: 992; chunklet-start-i: 992; chunklet-end-i: 1016
i: 992
end-i: 1016
i: 992
end-i: 1016
i: 996
end-i: 1016
i: 1000
end-i: 1016
i: 1004
end-i: 1016
i: 1008
end-i: 1016
i: 1012
end-i: 1016
i: 1016
end-i: 1016
i:1016 HIT CHUNK END
(comment . ";;992: r10 <- 0x4")
(comment . ";;996: r5 <- r2, r9")
(comment . ";;1000: r2 <- r2, r0")
(comment . ";;1004: r15 <- r0, 0x68\n")
(comment . ";;1008: r15 <- r2")
(comment . ";;1012 b 1564")
chunklet-i: 1016; chunklet-start-i: 1016; chunklet-end-i: 1040
i: 1016
end-i: 1040
i: 1016
end-i: 1040
i: 1020
end-i: 1040
i: 1024
end-i: 1040
i: 1028
end-i: 1040
i: 1032
end-i: 1040
i: 1036
end-i: 1040
i: 1040
end-i: 1040
i:1040 HIT CHUNK END
(comment . ";;1016: r15 <- 0x5")
(comment . ";;1020: r14 <- r15, 0x7\n")
(comment . ";;1024: r14 <- 0x1E")
(comment . ";;1028: r14 <- r15, 0xF\n")
(comment . ";;1032: r9 <- 0x0")
(comment . ";;1036 b 520")
chunklet-i: 1040; chunklet-start-i: 1040; chunklet-end-i: 1048
i: 1040
end-i: 1048
i: 1044
end-i: 1048
i: 1048
end-i: 1048
i:1048 HIT CHUNK END
(comment . ";;1040: r9 <- 0x7")
(comment . ";;1044 b 352")
chunklet-i: 1048; chunklet-start-i: 1048; chunklet-end-i: 1056
i: 1048
end-i: 1056
i: 1048
end-i: 1056
i: 1052
end-i: 1056
i: 1056
end-i: 1056
i:1056 HIT CHUNK END
(comment . ";;1048: r3 <- r3, 0x1\n")
(comment . ";;1052 b 264")
chunklet-i: 1056; chunklet-start-i: 1056; chunklet-end-i: 1068
i: 1056
end-i: 1068
i: 1056
end-i: 1068
i: 1060
end-i: 1068
i: 1064
end-i: 1068
i: 1068
end-i: 1068
i:1068 HIT CHUNK END
(comment . ";;1056: r14 <- r10, r7")
(comment . ";;1060: r14 <- 0x1")
(comment . ";;1064 b 232")
chunklet-i: 1068; chunklet-start-i: 1068; chunklet-end-i: 1096
i: 1068
end-i: 1096
i: 1072
end-i: 1096
i: 1076
end-i: 1096
i: 1080
end-i: 1096
i: 1084
end-i: 1096
i: 1088
end-i: 1096
i: 1092
end-i: 1096
i: 1096
end-i: 1096
i:1096 HIT CHUNK END
(comment . ";;1068: r14 <- r10, 0x7\n")
(comment . ";;1072: r13 <- r15, 0x7\n")
(comment . ";;1076: r5 <- r2, r9")
(comment . ";;1080: r2 <- r2, r0")
(comment . ";;1084: r12 <- r0, 0x68\n")
(comment . ";;1088: r12 <- r2")
(comment . ";;1092 b 184")
chunklet-i: 1096; chunklet-start-i: 1096; chunklet-end-i: 1120
i: 1096
end-i: 1120
i: 1096
end-i: 1120
i: 1100
end-i: 1120
i: 1104
end-i: 1120
i: 1108
end-i: 1120
i: 1112
end-i: 1120
i: 1116
end-i: 1120
i: 1120
end-i: 1120
i:1120 HIT CHUNK END
(comment . ";;1096: r14 <- r5, 0x7\n")
(comment . ";;1100: r13 <- r5, 0xF\n")
(comment . ";;1104: r14 <- r15, r7")
(comment . ";;1108: r5 <- r14, 0x0\n")
(comment . ";;1112: r5 <- 0x7")
(comment . ";;1116 b 24")
chunklet-i: 1120; chunklet-start-i: 1120; chunklet-end-i: 1132
i: 1120
end-i: 1132
i: 1124
end-i: 1132
i: 1128
end-i: 1132
i: 1132
end-i: 1132
i:1132 HIT CHUNK END
(comment . ";;1120: r7 <- r0, 0x68\n")
(comment . ";;1124: r2 <- r7")
(comment . ";;1128 b 124")
chunklet-i: 1132; chunklet-start-i: 1132; chunklet-end-i: 1144
i: 1132
end-i: 1144
i: 1132
end-i: 1144
i: 1136
end-i: 1144
i: 1140
end-i: 1144
i: 1144
end-i: 1144
i:1144 HIT CHUNK END
(comment . ";;1132: r7 <- r7, r8")
(comment . ";;1136: r7 <- r0, 0x68\n")
(comment . ";;1140: r14 <- r7, 0x0\n")
chunklet-i: 1144; chunklet-start-i: 1144; chunklet-end-i: 1160
i: 1144
end-i: 1160
i: 1144
end-i: 1160
i: 1148
end-i: 1160
i: 1152
end-i: 1160
i: 1156
end-i: 1160
i: 1160
end-i: 1160
i:1160 HIT CHUNK END
(comment . ";;1144: r14 <- r15, 0x7\n")
(comment . ";;1148: r4 <- r10, 0xF\n")
(comment . ";;1152: r9 <- 0x7")
(comment . ";;1156 b 16")
chunklet-i: 1160; chunklet-start-i: 1160; chunklet-end-i: 1168
i: 1160
end-i: 1168
i: 1164
end-i: 1168
i: 1168
end-i: 1168
i:1168 HIT CHUNK END
(comment . ";;1160: r15 <- r9, 0x8\n")
(comment . ";;1164 b 8")
chunklet-i: 1168; chunklet-start-i: 1168; chunklet-end-i: 1176
i: 1168
end-i: 1176
i: 1172
end-i: 1176
i: 1176
end-i: 1176
i:1176 HIT CHUNK END
(comment . ";;1168: r9 <- 0xF")
(comment . ";;1172 b -184")
chunklet-i: 1176; chunklet-start-i: 1176; chunklet-end-i: 1216
i: 1176
end-i: 1216
i: 1176
end-i: 1216
i: 1180
end-i: 1216
i: 1184
end-i: 1216
i: 1188
end-i: 1216
i: 1192
end-i: 1216
i: 1196
end-i: 1216
i: 1200
end-i: 1216
i: 1212
end-i: 1216
i: 1216
end-i: 1216
at header: 1216
(comment . ";;1176: r10 <- 0x8")
(comment . ";;1180: r4 <- r1, 0x8\n")
(comment . ";;1184: r14 <- r1, 0x48\n")
(comment . ";;1188: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1196: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1212: b r6")
chunklet-i: 1216; chunklet-start-i: 1232; chunklet-end-i: 1256
i: 1216
end-i: 1256
at header: 1216
i: 1232
end-i: 1256
i: 1236
end-i: 1256
i: 1240
end-i: 1256
i: 1244
end-i: 1256
i: 1248
end-i: 1256
i: 1252
end-i: 1256
i: 1256
end-i: 1256
i:1256 HIT CHUNK END
(comment . ";;1232: r1 <- r1, r0")
(comment . ";;1236: r9 <- 0x4")
(comment . ";;1240: r4 <- r1, 0x8\n")
(comment . ";;1244: r14 <- r1, 0x48\n")
(comment . ";;1252 b -264")
chunklet-i: 1256; chunklet-start-i: 1256; chunklet-end-i: 1268
i: 1256
end-i: 1268
i: 1256
end-i: 1268
i: 1268
end-i: 1268
i:1268 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 1268; chunklet-start-i: 1272; chunklet-end-i: 1280
i: 1268
end-i: 1280
i: 1272
end-i: 1280
i: 1276
end-i: 1280
i: 1280
end-i: 1280
i:1280 HIT CHUNK END
(comment . ";; instruction 1268 not included")
(comment . ";;1272: r7 <- r0, 0x68\n")
(comment . ";;1276 b -148")
chunklet-i: 1280; chunklet-start-i: 1280; chunklet-end-i: 1292
i: 1280
end-i: 1292
i: 1280
end-i: 1292
i: 1292
end-i: 1292
i:1292 HIT CHUNK END
(comment . ";; literal r12")
chunklet-i: 1292; chunklet-start-i: 1296; chunklet-end-i: 1300
i: 1292
end-i: 1300
i: 1296
end-i: 1300
i: 1300
end-i: 1300
i:1300 HIT CHUNK END
(comment . ";; instruction 1292 not included")
(comment . ";;1296 b -204")
chunklet-i: 1300; chunklet-start-i: 1300; chunklet-end-i: 1320
i: 1300
end-i: 1320
i: 1300
end-i: 1320
i: 1304
end-i: 1320
i: 1316
end-i: 1320
i: 1320
end-i: 1320
i:1320 HIT CHUNK END
(comment . ";;1300: r9 <- 0xA")
(comment . ";; literal r6")
(comment . ";;1316: b r6")
chunklet-i: 1320; chunklet-start-i: 1320; chunklet-end-i: 1360
i: 1320
end-i: 1360
i: 1320
end-i: 1360
i: 1324
end-i: 1360
i: 1328
end-i: 1360
i: 1332
end-i: 1360
i: 1336
end-i: 1360
i: 1340
end-i: 1360
i: 1344
end-i: 1360
i: 1356
end-i: 1360
i: 1360
end-i: 1360
at header: 1360
(comment . ";;1320: r9 <- r1, 0x50\n")
(comment . ";;1324: r10 <- r1, 0x8\n")
(comment . ";;1328: r15 <- r1, 0x48\n")
(comment . ";;1332: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1340: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1356: b r6")
chunklet-i: 1360; chunklet-start-i: 1376; chunklet-end-i: 1400
i: 1360
end-i: 1400
at header: 1360
i: 1376
end-i: 1400
i: 1380
end-i: 1400
i: 1384
end-i: 1400
i: 1388
end-i: 1400
i: 1392
end-i: 1400
i: 1396
end-i: 1400
i: 1400
end-i: 1400
i:1400 HIT CHUNK END
(comment . ";;1380: r1 <- r1, r8")
(comment . ";;1384: r9 <- r1, 0x50\n")
(comment . ";;1388: r10 <- r1, 0x8\n")
(comment . ";;1392: r15 <- r1, 0x48\n")
(comment . ";;1396 b -344")
chunklet-i: 1400; chunklet-start-i: 1400; chunklet-end-i: 1408
i: 1400
end-i: 1408
i: 1400
end-i: 1408
i: 1404
end-i: 1408
i: 1408
end-i: 1408
i:1408 HIT CHUNK END
(comment . ";;1400: r3 <- r3, 0x1\n")
(comment . ";;1404 b 72")
chunklet-i: 1408; chunklet-start-i: 1408; chunklet-end-i: 1448
i: 1408
end-i: 1448
i: 1412
end-i: 1448
i: 1416
end-i: 1448
i: 1420
end-i: 1448
i: 1424
end-i: 1448
i: 1428
end-i: 1448
i: 1432
end-i: 1448
i: 1444
end-i: 1448
i: 1448
end-i: 1448
at header: 1448
(comment . ";;1408: r9 <- r1, 0x50\n")
(comment . ";;1412: r10 <- r1, 0x8\n")
(comment . ";;1416: r15 <- r1, 0x48\n")
(comment . ";;1420: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1428: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1444: b r6")
chunklet-i: 1448; chunklet-start-i: 1464; chunklet-end-i: 1480
i: 1448
end-i: 1480
at header: 1448
i: 1464
end-i: 1480
i: 1468
end-i: 1480
i: 1472
end-i: 1480
i: 1476
end-i: 1480
i: 1480
end-i: 1480
i:1480 HIT CHUNK END
(comment . ";;1464: r1 <- r1, r8")
(comment . ";;1468: r9 <- r1, 0x50\n")
(comment . ";;1472: r10 <- r1, 0x8\n")
(comment . ";;1476: r15 <- r1, 0x48\n")
chunklet-i: 1480; chunklet-start-i: 1480; chunklet-end-i: 1520
i: 1480
end-i: 1520
i: 1480
end-i: 1520
i: 1484
end-i: 1520
i: 1488
end-i: 1520
i: 1492
end-i: 1520
i: 1496
end-i: 1520
i: 1500
end-i: 1520
i: 1504
end-i: 1520
i: 1516
end-i: 1520
i: 1520
end-i: 1520
at header: 1520
(comment . ";;1480: r9 <- r1, 0x50\n")
(comment . ";;1484: r10 <- r1, 0x8\n")
(comment . ";;1488: r15 <- r1, 0x48\n")
(comment . ";;1492: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1500: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1516: b r6")
chunklet-i: 1520; chunklet-start-i: 1536; chunklet-end-i: 1560
i: 1520
end-i: 1560
at header: 1520
i: 1536
end-i: 1560
i: 1540
end-i: 1560
i: 1544
end-i: 1560
i: 1548
end-i: 1560
i: 1552
end-i: 1560
i: 1556
end-i: 1560
i: 1560
end-i: 1560
i:1560 HIT CHUNK END
(comment . ";;1536: r1 <- r1, r8")
(comment . ";;1540: r9 <- r1, 0x50\n")
(comment . ";;1544: r10 <- r1, 0x8\n")
(comment . ";;1548: r15 <- r1, 0x48\n")
(comment . ";;1552: r4 <- 0x6")
(comment . ";;1556 b -512")
chunklet-i: 1560; chunklet-start-i: 1560; chunklet-end-i: 1616
i: 1560
end-i: 1616
i: 1560
end-i: 1616
i: 1564
end-i: 1616
i: 1568
end-i: 1616
i: 1580
end-i: 1616
i: 1584
end-i: 1616
i: 1596
end-i: 1616
i: 1600
end-i: 1616
i: 1604
end-i: 1616
i: 1608
end-i: 1616
i: 1612
end-i: 1616
i: 1616
end-i: 1616
at header: 1616
(comment . ";;1560: r11 <- r15, 0x7\n")
(comment . ";;1564: r9 <- r1, 0x20\n")
(comment . ";; literal r10")
(comment . ";;1580: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1596: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1604: r15 <- r1, 0x0\n")
(comment . ";;1608: r4 <- 0x3")
(comment . ";;1612: b r5, 13")
chunklet-i: 1616; chunklet-start-i: 1632; chunklet-end-i: 1656
i: 1616
end-i: 1656
at header: 1616
i: 1632
end-i: 1656
i: 1636
end-i: 1656
i: 1640
end-i: 1656
i: 1644
end-i: 1656
i: 1648
end-i: 1656
i: 1652
end-i: 1656
i: 1656
end-i: 1656
i:1656 HIT CHUNK END
(comment . ";;1632: r1 <- r1, r8")
(comment . ";;1636: r14 <- r1, 0x10\n")
(comment . ";;1640: r15 <- r1, 0x28\n")
(comment . ";;1644: r15 <- r14, r15")
(comment . ";;1648: r15 <- 0x7")
(comment . ";;1652 b 860")
chunklet-i: 1656; chunklet-start-i: 1656; chunklet-end-i: 1672
i: 1656
end-i: 1672
i: 1660
end-i: 1672
i: 1664
end-i: 1672
i: 1668
end-i: 1672
i: 1672
end-i: 1672
i:1672 HIT CHUNK END
(comment . ";;1656: r14 <- r1, 0x10\n")
(comment . ";;1660: r15 <- r1, 0x28\n")
(comment . ";;1664: r4 <- r14, r15")
(comment . ";;1668 b 844")
chunklet-i: 1672; chunklet-start-i: 1672; chunklet-end-i: 1680
i: 1672
end-i: 1680
i: 1672
end-i: 1680
i: 1676
end-i: 1680
i: 1680
end-i: 1680
i:1680 HIT CHUNK END
(comment . ";;1672: r4 <- 0x0")
(comment . ";;1676 b 456")
chunklet-i: 1680; chunklet-start-i: 1680; chunklet-end-i: 1688
i: 1680
end-i: 1688
i: 1684
end-i: 1688
i: 1688
end-i: 1688
i:1688 HIT CHUNK END
(comment . ";;1680: r4 <- 0x7")
(comment . ";;1684 b 304")
chunklet-i: 1688; chunklet-start-i: 1688; chunklet-end-i: 1696
i: 1688
end-i: 1696
i: 1688
end-i: 1696
i: 1692
end-i: 1696
i: 1696
end-i: 1696
i:1696 HIT CHUNK END
(comment . ";;1688: r3 <- r3, 0x1\n")
(comment . ";;1692 b 232")
chunklet-i: 1696; chunklet-start-i: 1696; chunklet-end-i: 1736
i: 1696
end-i: 1736
i: 1696
end-i: 1736
i: 1700
end-i: 1736
i: 1704
end-i: 1736
i: 1716
end-i: 1736
i: 1720
end-i: 1736
i: 1724
end-i: 1736
i: 1728
end-i: 1736
i: 1732
end-i: 1736
i: 1736
end-i: 1736
at header: 1736
(comment . ";;1696: r4 <- r1, 0x8\n")
(comment . ";;1700: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1716: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1724: r15 <- r1, 0x0\n")
(comment . ";;1728: r4 <- 0x0")
(comment . ";;1732: b r5, 13")
chunklet-i: 1736; chunklet-start-i: 1752; chunklet-end-i: 1816
i: 1736
end-i: 1816
at header: 1736
i: 1752
end-i: 1816
i: 1756
end-i: 1816
i: 1760
end-i: 1816
i: 1764
end-i: 1816
i: 1768
end-i: 1816
i: 1772
end-i: 1816
i: 1776
end-i: 1816
i: 1780
end-i: 1816
i: 1784
end-i: 1816
i: 1796
end-i: 1816
i: 1800
end-i: 1816
i: 1804
end-i: 1816
i: 1808
end-i: 1816
i: 1812
end-i: 1816
i: 1816
end-i: 1816
at header: 1816
(comment . ";;1752: r1 <- r1, r8")
(comment . ";;1756: r10 <- 0x4")
(comment . ";;1760: r4 <- r1, 0x8\n")
(comment . ";;1764: r9 <- r1, 0x20\n")
(comment . ";;1768: r11 <- 0x6")
(comment . ";;1772: r4 <- r1, 0x8\n")
(comment . ";;1776: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1796: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1804: r15 <- r1, 0x0\n")
(comment . ";;1808: r4 <- 0x3")
(comment . ";;1812: b r5, 13")
chunklet-i: 1816; chunklet-start-i: 1832; chunklet-end-i: 1852
i: 1816
end-i: 1852
at header: 1816
i: 1832
end-i: 1852
i: 1836
end-i: 1852
i: 1840
end-i: 1852
i: 1844
end-i: 1852
i: 1848
end-i: 1852
i: 1852
end-i: 1852
i:1852 HIT CHUNK END
(comment . ";;1836: r1 <- r1, r8")
(comment . ";;1840: r4 <- r1, 0x8\n")
(comment . ";;1844: r4 <- 0x7")
(comment . ";;1848 b 16")
chunklet-i: 1852; chunklet-start-i: 1852; chunklet-end-i: 1860
i: 1852
end-i: 1860
i: 1856
end-i: 1860
i: 1860
end-i: 1860
i:1860 HIT CHUNK END
(comment . ";;1852: r15 <- r4, 0x8\n")
(comment . ";;1856 b 8")
chunklet-i: 1860; chunklet-start-i: 1860; chunklet-end-i: 1868
i: 1860
end-i: 1868
i: 1864
end-i: 1868
i: 1868
end-i: 1868
i:1868 HIT CHUNK END
(comment . ";;1860: r4 <- 0xF")
(comment . ";;1864 b -196")
chunklet-i: 1868; chunklet-start-i: 1868; chunklet-end-i: 1904
i: 1868
end-i: 1904
i: 1868
end-i: 1904
i: 1872
end-i: 1904
i: 1876
end-i: 1904
i: 1880
end-i: 1904
i: 1884
end-i: 1904
i: 1888
end-i: 1904
i: 1900
end-i: 1904
i: 1904
end-i: 1904
at header: 1904
(comment . ";;1868: r9 <- 0x4")
(comment . ";;1872: r10 <- 0x8")
(comment . ";;1876: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1884: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1900: b r6")
chunklet-i: 1904; chunklet-start-i: 1920; chunklet-end-i: 1928
i: 1904
end-i: 1928
at header: 1904
i: 1920
end-i: 1928
i: 1924
end-i: 1928
i: 1928
end-i: 1928
i:1928 HIT CHUNK END
(comment . ";;1920: r1 <- r1, r8")
(comment . ";;1924 b -256")
chunklet-i: 1928; chunklet-start-i: 1928; chunklet-end-i: 1960
i: 1928
end-i: 1960
i: 1928
end-i: 1960
i: 1932
end-i: 1960
i: 1936
end-i: 1960
i: 1940
end-i: 1960
i: 1944
end-i: 1960
i: 1956
end-i: 1960
i: 1960
end-i: 1960
at header: 1960
(comment . ";;1928: r4 <- r1, 0x8\n")
(comment . ";;1932: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1940: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1956: b r6")
chunklet-i: 1960; chunklet-start-i: 1976; chunklet-end-i: 1992
i: 1960
end-i: 1992
at header: 1960
i: 1976
end-i: 1992
i: 1980
end-i: 1992
i: 1984
end-i: 1992
i: 1988
end-i: 1992
i: 1992
end-i: 1992
i:1992 HIT CHUNK END
(comment . ";;1980: r1 <- r1, r8")
(comment . ";;1984: r4 <- r1, 0x8\n")
(comment . ";;1988 b -296")
chunklet-i: 1992; chunklet-start-i: 1992; chunklet-end-i: 2000
i: 1992
end-i: 2000
i: 1992
end-i: 2000
i: 1996
end-i: 2000
i: 2000
end-i: 2000
i:2000 HIT CHUNK END
(comment . ";;1992: r3 <- r3, 0x1\n")
(comment . ";;1996 b 60")
chunklet-i: 2000; chunklet-start-i: 2000; chunklet-end-i: 2032
i: 2000
end-i: 2032
i: 2004
end-i: 2032
i: 2008
end-i: 2032
i: 2012
end-i: 2032
i: 2016
end-i: 2032
i: 2028
end-i: 2032
i: 2032
end-i: 2032
at header: 2032
(comment . ";;2000: r4 <- r1, 0x8\n")
(comment . ";;2004: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2012: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2028: b r6")
chunklet-i: 2032; chunklet-start-i: 2048; chunklet-end-i: 2060
i: 2032
end-i: 2060
at header: 2032
i: 2048
end-i: 2060
i: 2052
end-i: 2060
i: 2056
end-i: 2060
i: 2060
end-i: 2060
i:2060 HIT CHUNK END
(comment . ";;2052: r1 <- r1, r8")
(comment . ";;2056: r4 <- r1, 0x8\n")
chunklet-i: 2060; chunklet-start-i: 2060; chunklet-end-i: 2096
i: 2060
end-i: 2096
i: 2060
end-i: 2096
i: 2064
end-i: 2096
i: 2068
end-i: 2096
i: 2072
end-i: 2096
i: 2076
end-i: 2096
i: 2080
end-i: 2096
i: 2092
end-i: 2096
i: 2096
end-i: 2096
at header: 2096
(comment . ";;2060: r9 <- 0x4")
(comment . ";;2064: r4 <- r1, 0x8\n")
(comment . ";;2068: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2076: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2092: b r6")
chunklet-i: 2096; chunklet-start-i: 2112; chunklet-end-i: 2136
i: 2096
end-i: 2136
at header: 2096
i: 2112
end-i: 2136
i: 2116
end-i: 2136
i: 2120
end-i: 2136
i: 2124
end-i: 2136
i: 2128
end-i: 2136
i: 2132
end-i: 2136
i: 2136
end-i: 2136
i:2136 HIT CHUNK END
(comment . ";;2112: r1 <- r1, r8")
(comment . ";;2116: r15 <- 0x4")
(comment . ";;2120: r4 <- r1, 0x8\n")
(comment . ";;2124: r15 <- 0x6")
(comment . ";;2132 b -448")
chunklet-i: 2136; chunklet-start-i: 2136; chunklet-end-i: 2184
i: 2136
end-i: 2184
i: 2136
end-i: 2184
i: 2140
end-i: 2184
i: 2144
end-i: 2184
i: 2148
end-i: 2184
i: 2152
end-i: 2184
i: 2164
end-i: 2184
i: 2168
end-i: 2184
i: 2172
end-i: 2184
i: 2176
end-i: 2184
i: 2180
end-i: 2184
i: 2184
end-i: 2184
at header: 2184
(comment . ";;2136: r15 <- r1, 0x38\n")
(comment . ";;2140: r15 <- r15, 0x7\n")
(comment . ";;2144: r15 <- r1, 0x38\n")
(comment . ";;2148: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;2164: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;2172: r15 <- r1, 0x0\n")
(comment . ";;2176: r4 <- 0x0")
(comment . ";;2180: b r5, 13")
chunklet-i: 2184; chunklet-start-i: 2200; chunklet-end-i: 2216
i: 2184
end-i: 2216
at header: 2184
i: 2200
end-i: 2216
i: 2204
end-i: 2216
i: 2208
end-i: 2216
i: 2212
end-i: 2216
i: 2216
end-i: 2216
i:2216 HIT CHUNK END
(comment . ";;2200: r1 <- r1, r8")
(comment . ";;2204: r15 <- r1, 0x28\n")
(comment . ";;2208: r15 <- 0x0")
(comment . ";;2212 b 292")
chunklet-i: 2216; chunklet-start-i: 2216; chunklet-end-i: 2228
i: 2216
end-i: 2228
i: 2220
end-i: 2228
i: 2224
end-i: 2228
i: 2228
end-i: 2228
i:2228 HIT CHUNK END
(comment . ";;2216: r15 <- r1, 0x28\n")
(comment . ";;2220: r15 <- 0x7")
(comment . ";;2224 b 208")
chunklet-i: 2228; chunklet-start-i: 2228; chunklet-end-i: 2240
i: 2228
end-i: 2240
i: 2228
end-i: 2240
i: 2232
end-i: 2240
i: 2236
end-i: 2240
i: 2240
end-i: 2240
i:2240 HIT CHUNK END
(comment . ";;2228: r15 <- r1, 0x28\n")
(comment . ";;2232: r15 <- 0x7")
(comment . ";;2236 b 120")
chunklet-i: 2240; chunklet-start-i: 2240; chunklet-end-i: 2252
i: 2240
end-i: 2252
i: 2244
end-i: 2252
i: 2248
end-i: 2252
i: 2252
end-i: 2252
i:2252 HIT CHUNK END
(comment . ";;2240: r15 <- r1, 0x28\n")
(comment . ";;2244: r15 <- r15, 0x8\n")
(comment . ";;2248 b 108")
chunklet-i: 2252; chunklet-start-i: 2252; chunklet-end-i: 2264
i: 2252
end-i: 2264
i: 2252
end-i: 2264
i: 2256
end-i: 2264
i: 2260
end-i: 2264
i: 2264
end-i: 2264
i:2264 HIT CHUNK END
(comment . ";;2252: r14 <- r1, 0x40\n")
(comment . ";;2256: r14 <- 0x7")
(comment . ";;2260 b 12")
chunklet-i: 2264; chunklet-start-i: 2264; chunklet-end-i: 2276
i: 2264
end-i: 2276
i: 2268
end-i: 2276
i: 2272
end-i: 2276
i: 2276
end-i: 2276
i:2276 HIT CHUNK END
(comment . ";;2264: r14 <- r1, 0x40\n")
(comment . ";;2268: r9 <- r14, 0x8\n")
(comment . ";;2272 b -1928")
chunklet-i: 2276; chunklet-start-i: 2276; chunklet-end-i: 2320
i: 2276
end-i: 2320
i: 2276
end-i: 2320
i: 2280
end-i: 2320
i: 2284
end-i: 2320
i: 2288
end-i: 2320
i: 2292
end-i: 2320
i: 2296
end-i: 2320
i: 2300
end-i: 2320
i: 2304
end-i: 2320
i: 2316
end-i: 2320
i: 2320
end-i: 2320
at header: 2320
(comment . ";;2276: r9 <- r1, 0x40\n")
(comment . ";;2280: r10 <- 0x8")
(comment . ";;2284: r15 <- r1, 0x8\n")
(comment . ";;2288: r4 <- r1, 0x20\n")
(comment . ";;2292: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;2300: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2316: b r6")
chunklet-i: 2320; chunklet-start-i: 2336; chunklet-end-i: 2360
i: 2320
end-i: 2360
at header: 2320
i: 2336
end-i: 2360
i: 2340
end-i: 2360
i: 2344
end-i: 2360
i: 2348
end-i: 2360
i: 2352
end-i: 2360
i: 2356
end-i: 2360
i: 2360
end-i: 2360
i:2360 HIT CHUNK END
(comment . ";;2336: r1 <- r1, r0")
(comment . ";;2340: r9 <- 0x4")
(comment . ";;2344: r15 <- r1, 0x8\n")
(comment . ";;2348: r4 <- r1, 0x20\n")
(comment . ";;2356 b -2012")
chunklet-i: 2360; chunklet-start-i: 2360; chunklet-end-i: 2400
i: 2360
end-i: 2400
i: 2360
end-i: 2400
i: 2364
end-i: 2400
i: 2368
end-i: 2400
i: 2372
end-i: 2400
i: 2376
end-i: 2400
i: 2380
end-i: 2400
i: 2384
end-i: 2400
i: 2396
end-i: 2400
i: 2400
end-i: 2400
at header: 2400
(comment . ";;2360: r9 <- r1, 0x28\n")
(comment . ";;2364: r10 <- 0x8")
(comment . ";;2368: r4 <- r1, 0x20\n")
(comment . ";;2372: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2380: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2396: b r6")
chunklet-i: 2400; chunklet-start-i: 2416; chunklet-end-i: 2436
i: 2400
end-i: 2436
at header: 2400
i: 2416
end-i: 2436
i: 2420
end-i: 2436
i: 2424
end-i: 2436
i: 2428
end-i: 2436
i: 2432
end-i: 2436
i: 2436
end-i: 2436
i:2436 HIT CHUNK END
(comment . ";;2416: r1 <- r1, r8")
(comment . ";;2420: r9 <- 0x4")
(comment . ";;2424: r4 <- r1, 0x20\n")
(comment . ";;2428: r15 <- 0x9")
(comment . ";;2432 b -184")
chunklet-i: 2436; chunklet-start-i: 2436; chunklet-end-i: 2472
i: 2436
end-i: 2472
i: 2436
end-i: 2472
i: 2440
end-i: 2472
i: 2444
end-i: 2472
i: 2448
end-i: 2472
i: 2452
end-i: 2472
i: 2456
end-i: 2472
i: 2468
end-i: 2472
i: 2472
end-i: 2472
at header: 2472
(comment . ";;2436: r9 <- r1, 0x28\n")
(comment . ";;2440: r4 <- r1, 0x20\n")
(comment . ";;2444: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2452: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2468: b r6")
chunklet-i: 2472; chunklet-start-i: 2488; chunklet-end-i: 2508
i: 2472
end-i: 2508
at header: 2472
i: 2488
end-i: 2508
i: 2492
end-i: 2508
i: 2496
end-i: 2508
i: 2500
end-i: 2508
i: 2504
end-i: 2508
i: 2508
end-i: 2508
i:2508 HIT CHUNK END
(comment . ";;2488: r1 <- r1, r8")
(comment . ";;2492: r15 <- 0x4")
(comment . ";;2496: r4 <- r1, 0x20\n")
(comment . ";;2500: r15 <- 0x6")
(comment . ";;2504 b -280")
chunklet-i: 2508; chunklet-start-i: 2508; chunklet-end-i: 2516
i: 2508
end-i: 2516
i: 2508
end-i: 2516
i: 2512
end-i: 2516
i: 2516
end-i: 2516
i:2516 HIT CHUNK END
(comment . ";;2508: r15 <- r1, 0x10\n")
(comment . ";;2512 b -264")
chunklet-i: 2516; chunklet-start-i: 2516; chunklet-end-i: 2552
i: 2516
end-i: 2552
i: 2516
end-i: 2552
i: 2520
end-i: 2552
i: 2524
end-i: 2552
i: 2528
end-i: 2552
i: 2532
end-i: 2552
i: 2536
end-i: 2552
i: 2548
end-i: 2552
i: 2552
end-i: 2552
at header: 2552
(comment . ";;2516: r9 <- r1, 0x10\n")
(comment . ";;2520: r10 <- r1, 0x28\n")
(comment . ";;2524: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2532: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2548: b r6")
chunklet-i: 2552; chunklet-start-i: 2568; chunklet-end-i: 2580
i: 2552
end-i: 2580
at header: 2552
i: 2568
end-i: 2580
i: 2572
end-i: 2580
i: 2576
end-i: 2580
i: 2580
end-i: 2580
i:2580 HIT CHUNK END
(comment . ";;2568: r1 <- r1, r8")
(comment . ";;2576 b -908")
chunklet-i: 2580; chunklet-start-i: 2580; chunklet-end-i: 2592
i: 2580
end-i: 2592
i: 2580
end-i: 2592
i: 2592
end-i: 2592
i:2592 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 2592; chunklet-start-i: 2596; chunklet-end-i: 2600
i: 2592
end-i: 2600
i: 2596
end-i: 2600
i: 2600
end-i: 2600
i:2600 HIT CHUNK END
(comment . ";; instruction 2592 not included")
(comment . ";;2596 b -1584")
chunklet-i: 2600; chunklet-start-i: 2600; chunklet-end-i: 2612
i: 2600
end-i: 2612
i: 2600
end-i: 2612
i: 2612
end-i: 2612
i:2612 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 2612; chunklet-start-i: 2616; chunklet-end-i: 2624
i: 2612
end-i: 2624
i: 2616
end-i: 2624
i: 2620
end-i: 2624
i: 2624
end-i: 2624
i:2624 HIT CHUNK END
(comment . ";; instruction 2612 not included")
(comment . ";;2616: r7 <- r0, 0x68\n")
(comment . ";;2620 b -2120")
chunklet-i: 2624; chunklet-start-i: 2624; chunklet-end-i: 2636
i: 2624
end-i: 2636
i: 2624
end-i: 2636
i: 2636
end-i: 2636
i:2636 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 2636; chunklet-start-i: 2640; chunklet-end-i: 2644
i: 2636
end-i: 2644
i: 2640
end-i: 2644
i: 2644
end-i: 2644
i:2644 HIT CHUNK END
(comment . ";; instruction 2636 not included")
(comment . ";;2640 b -2184")
chunklet-i: 2644; chunklet-start-i: 2644; chunklet-end-i: 2672
i: 2644
end-i: 2672
i: 2644
end-i: 2672
i: 2648
end-i: 2672
i: 2652
end-i: 2672
i: 2656
end-i: 2672
i: 2668
end-i: 2672
i: 2672
end-i: 2672
at header: 2672
(comment . ";;2644: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2652: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2668: b r6")
chunklet-i: 2672; chunklet-start-i: 2688; chunklet-end-i: 2700
i: 2672
end-i: 2700
at header: 2672
i: 2688
end-i: 2700
i: 2692
end-i: 2700
i: 2696
end-i: 2700
i: 2700
end-i: 2700
i:2700 HIT CHUNK END
(comment . ";;2692: r1 <- r1, r8")
(comment . ";;2696 b -2268")
chunklet-i: 2700; chunklet-start-i: 2700; chunklet-end-i: 2708
i: 2700
end-i: 2708
i: 2700
end-i: 2708
i: 2704
end-i: 2708
i: 2708
end-i: 2708
i:2708 HIT CHUNK END
(comment . ";;2700: r3 <- r3, 0x1\n")
(comment . ";;2704 b 48")
chunklet-i: 2708; chunklet-start-i: 2708; chunklet-end-i: 2736
i: 2708
end-i: 2736
i: 2712
end-i: 2736
i: 2716
end-i: 2736
i: 2720
end-i: 2736
i: 2732
end-i: 2736
i: 2736
end-i: 2736
at header: 2736
(comment . ";;2708: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2716: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2732: b r6")
chunklet-i: 2736; chunklet-start-i: 2752; chunklet-end-i: 2756
i: 2736
end-i: 2756
at header: 2736
i: 2752
end-i: 2756
i: 2756
end-i: 2756
i:2756 HIT CHUNK END
(comment . ";;2752: r1 <- r1, r8")
chunklet-i: 2756; chunklet-start-i: 2756; chunklet-end-i: 2792
i: 2756
end-i: 2792
i: 2756
end-i: 2792
i: 2760
end-i: 2792
i: 2764
end-i: 2792
i: 2768
end-i: 2792
i: 2772
end-i: 2792
i: 2776
end-i: 2792
i: 2788
end-i: 2792
i: 2792
end-i: 2792
at header: 2792
(comment . ";;2756: r9 <- r1, 0x40\n")
(comment . ";;2760: r10 <- 0x0")
(comment . ";;2764: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2772: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2788: b r6")
chunklet-i: 2792; chunklet-start-i: 2808; chunklet-end-i: 2820
i: 2792
end-i: 2820
at header: 2792
i: 2808
end-i: 2820
i: 2812
end-i: 2820
i: 2816
end-i: 2820
i: 2820
end-i: 2820
i:2820 HIT CHUNK END
(comment . ";;2808: r1 <- r1, r8")
(comment . ";;2812: r4 <- 0x6")
(comment . ";;2816 b -2396")
chunklet-i: 2820; chunklet-start-i: 2820; chunklet-end-i: 2832
i: 2820
end-i: 2832
i: 2820
end-i: 2832
i: 2824
end-i: 2832
i: 2828
end-i: 2832
i: 2832
end-i: 2832
i:2832 HIT CHUNK END
(comment . ";;2820: r15 <- r1, 0x38\n")
(comment . ";;2824: r4 <- r15, 0x7\n")
(comment . ";;2828: b r1, 0")
chunklet-i: 2832; chunklet-start-i: 2832; chunklet-end-i: 2844
i: 2832
end-i: 2844
i: 2832
end-i: 2844
i: 2844
end-i: 2844
i:2844 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 2844; chunklet-start-i: 2848; chunklet-end-i: 2852
i: 2844
end-i: 2852
i: 2848
end-i: 2852
i: 2852
end-i: 2852
i:2852 HIT CHUNK END
(comment . ";; instruction 2844 not included")
(comment . ";;2848 b -2468")
chunklet-i: 2852; chunklet-start-i: 2852; chunklet-end-i: 2864
i: 2852
end-i: 2864
i: 2852
end-i: 2864
i: 2864
end-i: 2864
i:2864 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 2864; chunklet-start-i: 2868; chunklet-end-i: 2876
i: 2864
end-i: 2876
i: 2868
end-i: 2876
i: 2872
end-i: 2876
i: 2876
end-i: 2876
i:2876 HIT CHUNK END
(comment . ";; instruction 2864 not included")
(comment . ";;2868: r7 <- r0, 0x68\n")
(comment . ";;2872 b -2612")
chunklet-i: 2876; chunklet-start-i: 2876; chunklet-end-i: 2896
i: 2876
end-i: 2896
i: 2876
end-i: 2896
i: 2880
end-i: 2896
i: 2892
end-i: 2896
i: 2896
end-i: 2896
i:2896 HIT CHUNK END
(comment . ";;2876: r10 <- r1, 0x18\n")
(comment . ";; literal r6")
(comment . ";;2892: b r6")
chunklet-i: 2896; chunklet-start-i: 2896; chunklet-end-i: 2912
i: 2896
end-i: 2912
i: 2896
end-i: 2912
i: 2908
end-i: 2912
i: 2912
end-i: 2912
i:2912 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;2908: b r6")
chunklet-i: 2912; chunklet-start-i: 2912; chunklet-end-i: 2924
i: 2912
end-i: 2924
i: 2912
end-i: 2924
i: 2924
end-i: 2924
i:2924 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 2924; chunklet-start-i: 2928; chunklet-end-i: 2932
i: 2924
end-i: 2932
i: 2928
end-i: 2932
i: 2932
end-i: 2932
i:2932 HIT CHUNK END
(comment . ";; instruction 2924 not included")
(comment . ";;2928 b -2888")
chunklet-i: 2932; chunklet-start-i: 2932; chunklet-end-i: 2948
i: 2932
end-i: 2948
i: 2932
end-i: 2948
i: 2944
end-i: 2948
i: 2948
end-i: 2948
i:2948 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;2944: b r6")
chunklet-i: 2948; chunklet-start-i: 2948; chunklet-end-i: 2964
i: 2948
end-i: 2964
i: 2948
end-i: 2964
i: 2960
end-i: 2964
i: 2964
end-i: 2964
i:2964 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;2960: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: browse-random
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 64
instruction range for chunk: 64 72
instruction range for chunk: 72 84
instruction range for chunk: 84 128
instruction range for chunk: 144 168
instruction range for chunk: 168 180
instruction range for chunk: 180 192
instruction range for chunk: 192 232
instruction range for chunk: 232 236
instruction range for chunk: 236 252
instruction range for chunk: 252 264
instruction range for chunk: 268 276
instruction range for chunk: 276 312
instruction range for chunk: 328 344
instruction range for chunk: 344 376
instruction range for chunk: 392 408
instruction range for chunk: 408 420
instruction range for chunk: 424 428
instruction range for chunk: 428 444
instruction range for chunk: 444 460
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 436")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 412")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 380")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 64
i: 28
end-i: 64
i: 28
end-i: 64
i: 40
end-i: 64
i: 52
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";; literal r9")
(comment . ";;52: r10 <- r9, 0x5\n")
(comment . ";;56: r10 <- 0x1E")
(comment . ";;60 b 280")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 72
i: 64
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
i:72 HIT CHUNK END
(comment . ";;64: r10 <- 0x7")
(comment . ";;68 b 204")
chunklet-i: 72; chunklet-start-i: 72; chunklet-end-i: 84
i: 72
end-i: 84
i: 76
end-i: 84
i: 80
end-i: 84
i: 84
end-i: 84
i:84 HIT CHUNK END
(comment . ";;72: r14 <- r10, r3")
(comment . ";;76: r9 <- r14, 0x88\n")
(comment . ";;80 b 192")
chunklet-i: 84; chunklet-start-i: 84; chunklet-end-i: 128
i: 84
end-i: 128
i: 84
end-i: 128
i: 88
end-i: 128
i: 92
end-i: 128
i: 96
end-i: 128
i: 108
end-i: 128
i: 112
end-i: 128
i: 116
end-i: 128
i: 120
end-i: 128
i: 124
end-i: 128
i: 128
end-i: 128
at header: 128
(comment . ";;84: r10 <- 0x7D8")
(comment . ";;88: r15 <- r1, 0x8\n")
(comment . ";;92: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;116: r15 <- r1, 0x0\n")
(comment . ";;120: r4 <- 0x2")
(comment . ";;124: b r5, 13")
chunklet-i: 128; chunklet-start-i: 144; chunklet-end-i: 168
i: 128
end-i: 168
at header: 128
i: 144
end-i: 168
i: 148
end-i: 168
i: 152
end-i: 168
i: 156
end-i: 168
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;144: r1 <- r1, r0")
(comment . ";;148: r15 <- r1, 0x8\n")
(comment . ";;152: r14 <- r15, r5")
(comment . ";;156: r4 <- r14, 0x0\n")
(comment . ";;160: r4 <- 0x7")
(comment . ";;164 b 24")
chunklet-i: 168; chunklet-start-i: 168; chunklet-end-i: 180
i: 168
end-i: 180
i: 172
end-i: 180
i: 176
end-i: 180
i: 180
end-i: 180
i:180 HIT CHUNK END
(comment . ";;168: r7 <- r0, 0x68\n")
(comment . ";;172: r2 <- r7")
(comment . ";;176 b 72")
chunklet-i: 180; chunklet-start-i: 180; chunklet-end-i: 192
i: 180
end-i: 192
i: 180
end-i: 192
i: 184
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
i:192 HIT CHUNK END
(comment . ";;180: r7 <- r7, r8")
(comment . ";;184: r7 <- r0, 0x68\n")
(comment . ";;188: r14 <- r7, 0x0\n")
chunklet-i: 192; chunklet-start-i: 192; chunklet-end-i: 232
i: 192
end-i: 232
i: 192
end-i: 232
i: 204
end-i: 232
i: 208
end-i: 232
i: 220
end-i: 232
i: 224
end-i: 232
i: 228
end-i: 232
i: 232
end-i: 232
i:232 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;204: r14 <- r15, 0xD\n")
(comment . ";; literal r9")
(comment . ";;220: r4 <- r9, 0x5\n")
(comment . ";;224: r4 <- 0x1E")
(comment . ";;228 b 4")
chunklet-i: 232; chunklet-start-i: 232; chunklet-end-i: 236
i: 232
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";;232: b r1, 0")
chunklet-i: 236; chunklet-start-i: 236; chunklet-end-i: 252
i: 236
end-i: 252
i: 236
end-i: 252
i: 248
end-i: 252
i: 252
end-i: 252
i:252 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;248: b r6")
chunklet-i: 252; chunklet-start-i: 252; chunklet-end-i: 264
i: 252
end-i: 264
i: 252
end-i: 264
i: 264
end-i: 264
i:264 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 264; chunklet-start-i: 268; chunklet-end-i: 276
i: 264
end-i: 276
i: 268
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";; instruction 264 not included")
(comment . ";;268: r7 <- r0, 0x68\n")
(comment . ";;272 b -96")
chunklet-i: 276; chunklet-start-i: 276; chunklet-end-i: 312
i: 276
end-i: 312
i: 276
end-i: 312
i: 280
end-i: 312
i: 284
end-i: 312
i: 288
end-i: 312
i: 292
end-i: 312
i: 296
end-i: 312
i: 308
end-i: 312
i: 312
end-i: 312
at header: 312
(comment . ";;276: r9 <- 0x88")
(comment . ";;280: r15 <- r1, 0x8\n")
(comment . ";;284: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;292: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;308: b r6")
chunklet-i: 312; chunklet-start-i: 328; chunklet-end-i: 344
i: 312
end-i: 344
at header: 312
i: 328
end-i: 344
i: 332
end-i: 344
i: 336
end-i: 344
i: 340
end-i: 344
i: 344
end-i: 344
i:344 HIT CHUNK END
(comment . ";;328: r1 <- r1, r0")
(comment . ";;332: r9 <- 0x4")
(comment . ";;336: r15 <- r1, 0x8\n")
(comment . ";;340 b -260")
chunklet-i: 344; chunklet-start-i: 344; chunklet-end-i: 376
i: 344
end-i: 376
i: 344
end-i: 376
i: 348
end-i: 376
i: 352
end-i: 376
i: 356
end-i: 376
i: 360
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
at header: 376
(comment . ";;344: r15 <- r1, 0x8\n")
(comment . ";;348: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;356: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;372: b r6")
chunklet-i: 376; chunklet-start-i: 392; chunklet-end-i: 408
i: 376
end-i: 408
at header: 376
i: 392
end-i: 408
i: 396
end-i: 408
i: 400
end-i: 408
i: 404
end-i: 408
i: 408
end-i: 408
i:408 HIT CHUNK END
(comment . ";;392: r1 <- r1, r0")
(comment . ";;396: r10 <- 0x4")
(comment . ";;400: r15 <- r1, 0x8\n")
(comment . ";;404 b -344")
chunklet-i: 408; chunklet-start-i: 408; chunklet-end-i: 420
i: 408
end-i: 420
i: 408
end-i: 420
i: 420
end-i: 420
i:420 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 420; chunklet-start-i: 424; chunklet-end-i: 428
i: 420
end-i: 428
i: 424
end-i: 428
i: 428
end-i: 428
i:428 HIT CHUNK END
(comment . ";; instruction 420 not included")
(comment . ";;424 b -400")
chunklet-i: 428; chunklet-start-i: 428; chunklet-end-i: 444
i: 428
end-i: 444
i: 428
end-i: 444
i: 440
end-i: 444
i: 444
end-i: 444
i:444 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;440: b r6")
chunklet-i: 444; chunklet-start-i: 444; chunklet-end-i: 460
i: 444
end-i: 460
i: 444
end-i: 460
i: 456
end-i: 460
i: 460
end-i: 460
i:460 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;456: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: randomize
instruction range for chunk: 0 12
instruction range for chunk: 12 24
instruction range for chunk: 24 44
instruction range for chunk: 44 64
instruction range for chunk: 64 84
instruction range for chunk: 84 112
instruction range for chunk: 112 120
instruction range for chunk: 120 168
instruction range for chunk: 184 248
instruction range for chunk: 264 328
instruction range for chunk: 344 368
instruction range for chunk: 368 376
instruction range for chunk: 376 384
instruction range for chunk: 384 396
instruction range for chunk: 396 404
instruction range for chunk: 404 412
instruction range for chunk: 412 424
instruction range for chunk: 424 436
instruction range for chunk: 436 444
instruction range for chunk: 444 488
instruction range for chunk: 504 528
instruction range for chunk: 528 548
instruction range for chunk: 548 592
instruction range for chunk: 608 632
instruction range for chunk: 632 644
instruction range for chunk: 644 660
instruction range for chunk: 660 688
instruction range for chunk: 688 712
instruction range for chunk: 712 724
instruction range for chunk: 724 736
instruction range for chunk: 736 748
instruction range for chunk: 748 764
instruction range for chunk: 764 780
instruction range for chunk: 780 796
instruction range for chunk: 796 808
instruction range for chunk: 808 820
instruction range for chunk: 820 828
instruction range for chunk: 828 840
instruction range for chunk: 844 852
instruction range for chunk: 852 872
instruction range for chunk: 872 892
instruction range for chunk: 892 904
instruction range for chunk: 908 916
instruction range for chunk: 916 928
instruction range for chunk: 932 936
instruction range for chunk: 936 956
instruction range for chunk: 956 964
instruction range for chunk: 964 1008
instruction range for chunk: 1024 1048
instruction range for chunk: 1048 1096
instruction range for chunk: 1112 1140
instruction range for chunk: 1140 1144
instruction range for chunk: 1144 1184
instruction range for chunk: 1200 1228
instruction range for chunk: 1228 1244
instruction range for chunk: 1244 1272
instruction range for chunk: 1272 1296
instruction range for chunk: 1296 1308
instruction range for chunk: 1308 1320
instruction range for chunk: 1320 1336
instruction range for chunk: 1336 1356
instruction range for chunk: 1356 1368
instruction range for chunk: 1368 1384
instruction range for chunk: 1384 1396
instruction range for chunk: 1400 1408
instruction range for chunk: 1408 1424
instruction range for chunk: 1424 1436
instruction range for chunk: 1440 1448
instruction range for chunk: 1448 1460
instruction range for chunk: 1464 1468
instruction range for chunk: 1468 1484
instruction range for chunk: 1484 1520
instruction range for chunk: 1536 1552
instruction range for chunk: 1552 1560
instruction range for chunk: 1560 1572
instruction range for chunk: 1576 1580
instruction range for chunk: 1580 1592
instruction range for chunk: 1596 1600
instruction range for chunk: 1600 1612
instruction range for chunk: 1616 1620
instruction range for chunk: 1620 1636
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x1")
(comment . ";;8 b 1608")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;12: r15 <- r0, 0x58\n")
(comment . ";;16: r1 <- r15")
(comment . ";;20 b 1576")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 44
i: 24
end-i: 44
i: 24
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;24: r5 <- r2, r9")
(comment . ";;28: r2 <- r2, r0")
(comment . ";;32: r15 <- r0, 0x68\n")
(comment . ";;36: r15 <- r2")
(comment . ";;40 b 1536")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 64
i: 44
end-i: 64
i: 44
end-i: 64
i: 48
end-i: 64
i: 52
end-i: 64
i: 56
end-i: 64
i: 60
end-i: 64
i: 64
end-i: 64
i:64 HIT CHUNK END
(comment . ";;44: r14 <- 0x5")
(comment . ";;48: r9 <- r14, 0x7\n")
(comment . ";;52: r15 <- 0x1E")
(comment . ";;56: r15 <- r14, 0xF\n")
(comment . ";;60: r15 <- 0x26")
chunklet-i: 64; chunklet-start-i: 64; chunklet-end-i: 84
i: 64
end-i: 84
i: 64
end-i: 84
i: 68
end-i: 84
i: 72
end-i: 84
i: 76
end-i: 84
i: 80
end-i: 84
i: 84
end-i: 84
i:84 HIT CHUNK END
(comment . ";;64: r5 <- r2, r9")
(comment . ";;68: r2 <- r2, r0")
(comment . ";;72: r13 <- r0, 0x68\n")
(comment . ";;76: r13 <- r2")
(comment . ";;80 b 1476")
chunklet-i: 84; chunklet-start-i: 84; chunklet-end-i: 112
i: 84
end-i: 112
i: 84
end-i: 112
i: 88
end-i: 112
i: 92
end-i: 112
i: 96
end-i: 112
i: 100
end-i: 112
i: 104
end-i: 112
i: 108
end-i: 112
i: 112
end-i: 112
i:112 HIT CHUNK END
(comment . ";;84: r13 <- 0x5")
(comment . ";;88: r15 <- r13, 0x7\n")
(comment . ";;92: r15 <- 0x1E")
(comment . ";;96: r15 <- r13, 0xF\n")
(comment . ";;100: r15 <- r14, 0x7\n")
(comment . ";;104: r15 <- 0x26")
(comment . ";;108 b 1440")
chunklet-i: 112; chunklet-start-i: 112; chunklet-end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r3 <- r3, 0x1\n")
(comment . ";;116 b 1364")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 168
i: 120
end-i: 168
i: 120
end-i: 168
i: 124
end-i: 168
i: 128
end-i: 168
i: 132
end-i: 168
i: 136
end-i: 168
i: 148
end-i: 168
i: 152
end-i: 168
i: 156
end-i: 168
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
at header: 168
(comment . ";;120: r9 <- r14, 0x7\n")
(comment . ";;124: r14 <- r1, 0x10\n")
(comment . ";;128: r13 <- r1, 0x18\n")
(comment . ";;132: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;148: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;156: r15 <- r1, 0x0\n")
(comment . ";;160: r4 <- 0x1")
(comment . ";;164: b r5, 13")
chunklet-i: 168; chunklet-start-i: 184; chunklet-end-i: 248
i: 168
end-i: 248
at header: 168
i: 184
end-i: 248
i: 188
end-i: 248
i: 192
end-i: 248
i: 196
end-i: 248
i: 200
end-i: 248
i: 204
end-i: 248
i: 208
end-i: 248
i: 212
end-i: 248
i: 216
end-i: 248
i: 228
end-i: 248
i: 232
end-i: 248
i: 236
end-i: 248
i: 240
end-i: 248
i: 244
end-i: 248
i: 248
end-i: 248
at header: 248
(comment . ";;184: r1 <- r1, r0")
(comment . ";;188: r14 <- r1, 0x10\n")
(comment . ";;192: r13 <- r1, 0x18\n")
(comment . ";;196: r10 <- 0x4")
(comment . ";;200: r14 <- r1, 0x10\n")
(comment . ";;204: r13 <- r1, 0x18\n")
(comment . ";;208: r10 <- r1, 0x8\n")
(comment . ";;212: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;228: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;236: r15 <- r1, 0x0\n")
(comment . ";;240: r4 <- 0x0")
(comment . ";;244: b r5, 13")
chunklet-i: 248; chunklet-start-i: 264; chunklet-end-i: 328
i: 248
end-i: 328
at header: 248
i: 264
end-i: 328
i: 268
end-i: 328
i: 272
end-i: 328
i: 276
end-i: 328
i: 280
end-i: 328
i: 284
end-i: 328
i: 288
end-i: 328
i: 292
end-i: 328
i: 296
end-i: 328
i: 308
end-i: 328
i: 312
end-i: 328
i: 316
end-i: 328
i: 320
end-i: 328
i: 324
end-i: 328
i: 328
end-i: 328
at header: 328
(comment . ";;264: r1 <- r1, r0")
(comment . ";;268: r14 <- r1, 0x10\n")
(comment . ";;272: r13 <- r1, 0x18\n")
(comment . ";;276: r10 <- r1, 0x8\n")
(comment . ";;280: r9 <- 0x4")
(comment . ";;284: r14 <- r1, 0x10\n")
(comment . ";;288: r13 <- r1, 0x18\n")
(comment . ";;292: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;308: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;316: r15 <- r1, 0x0\n")
(comment . ";;320: r4 <- 0x2")
(comment . ";;324: b r5, 13")
chunklet-i: 328; chunklet-start-i: 344; chunklet-end-i: 368
i: 328
end-i: 368
at header: 328
i: 344
end-i: 368
i: 348
end-i: 368
i: 352
end-i: 368
i: 356
end-i: 368
i: 360
end-i: 368
i: 364
end-i: 368
i: 368
end-i: 368
i:368 HIT CHUNK END
(comment . ";;344: r1 <- r1, r0")
(comment . ";;348: r9 <- 0x4")
(comment . ";;352: r14 <- r1, 0x10\n")
(comment . ";;356: r13 <- r1, 0x18\n")
(comment . ";;360: r9 <- 0x0")
(comment . ";;364 b 860")
chunklet-i: 368; chunklet-start-i: 368; chunklet-end-i: 376
i: 368
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
i:376 HIT CHUNK END
(comment . ";;368: r9 <- 0x7")
(comment . ";;372 b 768")
chunklet-i: 376; chunklet-start-i: 376; chunklet-end-i: 384
i: 376
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
i:384 HIT CHUNK END
(comment . ";;376: r15 <- r14, 0x7\n")
(comment . ";;380: r4 <- 0x9")
chunklet-i: 384; chunklet-start-i: 384; chunklet-end-i: 396
i: 384
end-i: 396
i: 384
end-i: 396
i: 388
end-i: 396
i: 392
end-i: 396
i: 396
end-i: 396
i:396 HIT CHUNK END
(comment . ";;384: r9 <- 0x4")
(comment . ";;388: r9 <- 0x7")
(comment . ";;392 b 560")
chunklet-i: 396; chunklet-start-i: 396; chunklet-end-i: 404
i: 396
end-i: 404
i: 400
end-i: 404
i: 404
end-i: 404
i:404 HIT CHUNK END
(comment . ";;396: r9 <- 0x8")
(comment . ";;400 b 228")
chunklet-i: 404; chunklet-start-i: 404; chunklet-end-i: 412
i: 404
end-i: 412
i: 404
end-i: 412
i: 408
end-i: 412
i: 412
end-i: 412
i:412 HIT CHUNK END
(comment . ";;404: r3 <- r3, 0x1\n")
(comment . ";;408 b 136")
chunklet-i: 412; chunklet-start-i: 412; chunklet-end-i: 424
i: 412
end-i: 424
i: 412
end-i: 424
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;412: r12 <- r15, r7")
(comment . ";;416: r12 <- 0x1")
(comment . ";;420 b 104")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 436
i: 424
end-i: 436
i: 428
end-i: 436
i: 432
end-i: 436
i: 436
end-i: 436
i:436 HIT CHUNK END
(comment . ";;424: r15 <- r15, 0xF\n")
(comment . ";;428: r9 <- 0x7")
(comment . ";;432 b 8")
chunklet-i: 436; chunklet-start-i: 436; chunklet-end-i: 444
i: 436
end-i: 444
i: 440
end-i: 444
i: 444
end-i: 444
i:444 HIT CHUNK END
(comment . ";;436: r4 <- r9, 0x8\n")
(comment . ";;440 b -60")
chunklet-i: 444; chunklet-start-i: 444; chunklet-end-i: 488
i: 444
end-i: 488
i: 444
end-i: 488
i: 448
end-i: 488
i: 452
end-i: 488
i: 456
end-i: 488
i: 460
end-i: 488
i: 464
end-i: 488
i: 468
end-i: 488
i: 472
end-i: 488
i: 484
end-i: 488
i: 488
end-i: 488
at header: 488
(comment . ";;444: r10 <- 0x8")
(comment . ";;448: r14 <- r1, 0x10\n")
(comment . ";;452: r13 <- r1, 0x18\n")
(comment . ";;456: r15 <- r1, 0x8\n")
(comment . ";;460: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;468: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;484: b r6")
chunklet-i: 488; chunklet-start-i: 504; chunklet-end-i: 528
i: 488
end-i: 528
at header: 488
i: 504
end-i: 528
i: 508
end-i: 528
i: 512
end-i: 528
i: 516
end-i: 528
i: 520
end-i: 528
i: 524
end-i: 528
i: 528
end-i: 528
i:528 HIT CHUNK END
(comment . ";;504: r1 <- r1, r0")
(comment . ";;508: r14 <- r1, 0x10\n")
(comment . ";;512: r13 <- r1, 0x18\n")
(comment . ";;516: r15 <- r1, 0x8\n")
(comment . ";;524 b -144")
chunklet-i: 528; chunklet-start-i: 528; chunklet-end-i: 548
i: 528
end-i: 548
i: 528
end-i: 548
i: 532
end-i: 548
i: 544
end-i: 548
i: 548
end-i: 548
i:548 HIT CHUNK END
(comment . ";;528: r9 <- 0xF")
(comment . ";; literal r6")
(comment . ";;544: b r6")
chunklet-i: 548; chunklet-start-i: 548; chunklet-end-i: 592
i: 548
end-i: 592
i: 548
end-i: 592
i: 552
end-i: 592
i: 556
end-i: 592
i: 560
end-i: 592
i: 564
end-i: 592
i: 568
end-i: 592
i: 572
end-i: 592
i: 576
end-i: 592
i: 588
end-i: 592
i: 592
end-i: 592
at header: 592
(comment . ";;548: r14 <- r1, 0x10\n")
(comment . ";;552: r13 <- r1, 0x18\n")
(comment . ";;556: r9 <- r1, 0x20\n")
(comment . ";;560: r15 <- r1, 0x8\n")
(comment . ";;564: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;572: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;588: b r6")
chunklet-i: 592; chunklet-start-i: 608; chunklet-end-i: 632
i: 592
end-i: 632
at header: 592
i: 608
end-i: 632
i: 612
end-i: 632
i: 616
end-i: 632
i: 620
end-i: 632
i: 624
end-i: 632
i: 628
end-i: 632
i: 632
end-i: 632
i:632 HIT CHUNK END
(comment . ";;608: r1 <- r1, r8")
(comment . ";;612: r14 <- r1, 0x10\n")
(comment . ";;616: r13 <- r1, 0x18\n")
(comment . ";;620: r9 <- r1, 0x20\n")
(comment . ";;624: r15 <- r1, 0x8\n")
(comment . ";;628 b -220")
chunklet-i: 632; chunklet-start-i: 632; chunklet-end-i: 644
i: 632
end-i: 644
i: 632
end-i: 644
i: 636
end-i: 644
i: 640
end-i: 644
i: 644
end-i: 644
i:644 HIT CHUNK END
(comment . ";;632: r12 <- r15, r7")
(comment . ";;636: r12 <- 0x1")
(comment . ";;640 b 292")
chunklet-i: 644; chunklet-start-i: 644; chunklet-end-i: 660
i: 644
end-i: 660
i: 648
end-i: 660
i: 652
end-i: 660
i: 656
end-i: 660
i: 660
end-i: 660
i:660 HIT CHUNK END
(comment . ";;644: r12 <- r15, 0xF\n")
(comment . ";;648: r11 <- r12, r7")
(comment . ";;652: r11 <- 0x1")
(comment . ";;656 b 276")
chunklet-i: 660; chunklet-start-i: 660; chunklet-end-i: 688
i: 660
end-i: 688
i: 664
end-i: 688
i: 668
end-i: 688
i: 672
end-i: 688
i: 676
end-i: 688
i: 680
end-i: 688
i: 684
end-i: 688
i: 688
end-i: 688
i:688 HIT CHUNK END
(comment . ";;660: r12 <- r12, 0x7\n")
(comment . ";;664: r11 <- r13, 0x7\n")
(comment . ";;668: r5 <- r2, r9")
(comment . ";;672: r2 <- r2, r0")
(comment . ";;676: r10 <- r0, 0x68\n")
(comment . ";;680: r10 <- r2")
(comment . ";;684 b 228")
chunklet-i: 688; chunklet-start-i: 688; chunklet-end-i: 712
i: 688
end-i: 712
i: 688
end-i: 712
i: 692
end-i: 712
i: 696
end-i: 712
i: 700
end-i: 712
i: 704
end-i: 712
i: 708
end-i: 712
i: 712
end-i: 712
i:712 HIT CHUNK END
(comment . ";;688: r12 <- r5, 0x7\n")
(comment . ";;692: r11 <- r5, 0xF\n")
(comment . ";;696: r12 <- r13, r7")
(comment . ";;700: r5 <- r12, 0x0\n")
(comment . ";;704: r5 <- 0x7")
(comment . ";;708 b 24")
chunklet-i: 712; chunklet-start-i: 712; chunklet-end-i: 724
i: 712
end-i: 724
i: 716
end-i: 724
i: 720
end-i: 724
i: 724
end-i: 724
i:724 HIT CHUNK END
(comment . ";;712: r7 <- r0, 0x68\n")
(comment . ";;716: r2 <- r7")
(comment . ";;720 b 168")
chunklet-i: 724; chunklet-start-i: 724; chunklet-end-i: 736
i: 724
end-i: 736
i: 724
end-i: 736
i: 728
end-i: 736
i: 732
end-i: 736
i: 736
end-i: 736
i:736 HIT CHUNK END
(comment . ";;724: r7 <- r7, r8")
(comment . ";;728: r7 <- r0, 0x68\n")
(comment . ";;732: r12 <- r7, 0x0\n")
chunklet-i: 736; chunklet-start-i: 736; chunklet-end-i: 748
i: 736
end-i: 748
i: 736
end-i: 748
i: 740
end-i: 748
i: 744
end-i: 748
i: 748
end-i: 748
i:748 HIT CHUNK END
(comment . ";;736: r12 <- r15, r7")
(comment . ";;740: r12 <- 0x1")
(comment . ";;744 b 124")
chunklet-i: 748; chunklet-start-i: 748; chunklet-end-i: 764
i: 748
end-i: 764
i: 752
end-i: 764
i: 756
end-i: 764
i: 760
end-i: 764
i: 764
end-i: 764
i:764 HIT CHUNK END
(comment . ";;748: r12 <- r15, 0xF\n")
(comment . ";;752: r11 <- r12, r7")
(comment . ";;756: r11 <- 0x1")
(comment . ";;760 b 108")
chunklet-i: 764; chunklet-start-i: 764; chunklet-end-i: 780
i: 764
end-i: 780
i: 768
end-i: 780
i: 772
end-i: 780
i: 776
end-i: 780
i: 780
end-i: 780
i:780 HIT CHUNK END
(comment . ";;764: r10 <- r12, 0xF\n")
(comment . ";;768: r12 <- r15, r7")
(comment . ";;772: r12 <- 0x1")
(comment . ";;776 b 72")
chunklet-i: 780; chunklet-start-i: 780; chunklet-end-i: 796
i: 780
end-i: 796
i: 784
end-i: 796
i: 788
end-i: 796
i: 792
end-i: 796
i: 796
end-i: 796
i:796 HIT CHUNK END
(comment . ";;780: r15 <- r15, r15")
(comment . ";;784: r10 <- r15, 0x0\n")
(comment . ";;788: r10 <- 0x7")
(comment . ";;792 b 24")
chunklet-i: 796; chunklet-start-i: 796; chunklet-end-i: 808
i: 796
end-i: 808
i: 800
end-i: 808
i: 804
end-i: 808
i: 808
end-i: 808
i:808 HIT CHUNK END
(comment . ";;796: r7 <- r0, 0x68\n")
(comment . ";;800: r2 <- r7")
(comment . ";;804 b 20")
chunklet-i: 808; chunklet-start-i: 808; chunklet-end-i: 820
i: 808
end-i: 820
i: 808
end-i: 820
i: 812
end-i: 820
i: 816
end-i: 820
i: 820
end-i: 820
i:820 HIT CHUNK END
(comment . ";;808: r7 <- r7, r8")
(comment . ";;812: r7 <- r0, 0x68\n")
(comment . ";;816: r15 <- r7, 0x0\n")
chunklet-i: 820; chunklet-start-i: 820; chunklet-end-i: 828
i: 820
end-i: 828
i: 820
end-i: 828
i: 824
end-i: 828
i: 828
end-i: 828
i:828 HIT CHUNK END
(comment . ";;820: r15 <- r13, 0x7\n")
(comment . ";;824 b -764")
chunklet-i: 828; chunklet-start-i: 828; chunklet-end-i: 840
i: 828
end-i: 840
i: 828
end-i: 840
i: 840
end-i: 840
i:840 HIT CHUNK END
(comment . ";; literal r12")
chunklet-i: 840; chunklet-start-i: 844; chunklet-end-i: 852
i: 840
end-i: 852
i: 844
end-i: 852
i: 848
end-i: 852
i: 852
end-i: 852
i:852 HIT CHUNK END
(comment . ";; instruction 840 not included")
(comment . ";;844: r7 <- r0, 0x68\n")
(comment . ";;848 b -44")
chunklet-i: 852; chunklet-start-i: 852; chunklet-end-i: 872
i: 852
end-i: 872
i: 852
end-i: 872
i: 856
end-i: 872
i: 868
end-i: 872
i: 872
end-i: 872
i:872 HIT CHUNK END
(comment . ";;852: r9 <- 0xF")
(comment . ";; literal r6")
(comment . ";;868: b r6")
chunklet-i: 872; chunklet-start-i: 872; chunklet-end-i: 892
i: 872
end-i: 892
i: 872
end-i: 892
i: 876
end-i: 892
i: 888
end-i: 892
i: 892
end-i: 892
i:892 HIT CHUNK END
(comment . ";;872: r9 <- 0xF")
(comment . ";; literal r6")
(comment . ";;888: b r6")
chunklet-i: 892; chunklet-start-i: 892; chunklet-end-i: 904
i: 892
end-i: 904
i: 892
end-i: 904
i: 904
end-i: 904
i:904 HIT CHUNK END
(comment . ";; literal r11")
chunklet-i: 904; chunklet-start-i: 908; chunklet-end-i: 916
i: 904
end-i: 916
i: 908
end-i: 916
i: 912
end-i: 916
i: 916
end-i: 916
i:916 HIT CHUNK END
(comment . ";; instruction 904 not included")
(comment . ";;908: r7 <- r0, 0x68\n")
(comment . ";;912 b -192")
chunklet-i: 916; chunklet-start-i: 916; chunklet-end-i: 928
i: 916
end-i: 928
i: 916
end-i: 928
i: 928
end-i: 928
i:928 HIT CHUNK END
(comment . ";; literal r10")
chunklet-i: 928; chunklet-start-i: 932; chunklet-end-i: 936
i: 928
end-i: 936
i: 932
end-i: 936
i: 936
end-i: 936
i:936 HIT CHUNK END
(comment . ";; instruction 928 not included")
(comment . ";;932 b -248")
chunklet-i: 936; chunklet-start-i: 936; chunklet-end-i: 956
i: 936
end-i: 956
i: 936
end-i: 956
i: 940
end-i: 956
i: 952
end-i: 956
i: 956
end-i: 956
i:956 HIT CHUNK END
(comment . ";;936: r9 <- 0xF")
(comment . ";; literal r6")
(comment . ";;952: b r6")
chunklet-i: 956; chunklet-start-i: 956; chunklet-end-i: 964
i: 956
end-i: 964
i: 956
end-i: 964
i: 960
end-i: 964
i: 964
end-i: 964
i:964 HIT CHUNK END
(comment . ";;956: r3 <- r3, 0x1\n")
(comment . ";;960 b 84")
chunklet-i: 964; chunklet-start-i: 964; chunklet-end-i: 1008
i: 964
end-i: 1008
i: 968
end-i: 1008
i: 972
end-i: 1008
i: 976
end-i: 1008
i: 980
end-i: 1008
i: 984
end-i: 1008
i: 988
end-i: 1008
i: 992
end-i: 1008
i: 1004
end-i: 1008
i: 1008
end-i: 1008
at header: 1008
(comment . ";;964: r14 <- r1, 0x10\n")
(comment . ";;968: r13 <- r1, 0x18\n")
(comment . ";;972: r9 <- r1, 0x20\n")
(comment . ";;976: r15 <- r1, 0x8\n")
(comment . ";;980: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;988: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1004: b r6")
chunklet-i: 1008; chunklet-start-i: 1024; chunklet-end-i: 1048
i: 1008
end-i: 1048
at header: 1008
i: 1024
end-i: 1048
i: 1028
end-i: 1048
i: 1032
end-i: 1048
i: 1036
end-i: 1048
i: 1040
end-i: 1048
i: 1044
end-i: 1048
i: 1048
end-i: 1048
i:1048 HIT CHUNK END
(comment . ";;1028: r1 <- r1, r8")
(comment . ";;1032: r14 <- r1, 0x10\n")
(comment . ";;1036: r13 <- r1, 0x18\n")
(comment . ";;1040: r9 <- r1, 0x20\n")
(comment . ";;1044: r15 <- r1, 0x8\n")
chunklet-i: 1048; chunklet-start-i: 1048; chunklet-end-i: 1096
i: 1048
end-i: 1096
i: 1048
end-i: 1096
i: 1052
end-i: 1096
i: 1056
end-i: 1096
i: 1060
end-i: 1096
i: 1064
end-i: 1096
i: 1068
end-i: 1096
i: 1072
end-i: 1096
i: 1076
end-i: 1096
i: 1080
end-i: 1096
i: 1092
end-i: 1096
i: 1096
end-i: 1096
at header: 1096
(comment . ";;1048: r10 <- 0x8")
(comment . ";;1052: r14 <- r1, 0x10\n")
(comment . ";;1056: r13 <- r1, 0x18\n")
(comment . ";;1060: r9 <- r1, 0x20\n")
(comment . ";;1064: r15 <- r1, 0x8\n")
(comment . ";;1068: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1076: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1092: b r6")
chunklet-i: 1096; chunklet-start-i: 1112; chunklet-end-i: 1140
i: 1096
end-i: 1140
at header: 1096
i: 1112
end-i: 1140
i: 1116
end-i: 1140
i: 1120
end-i: 1140
i: 1124
end-i: 1140
i: 1128
end-i: 1140
i: 1132
end-i: 1140
i: 1136
end-i: 1140
i: 1140
end-i: 1140
i:1140 HIT CHUNK END
(comment . ";;1112: r1 <- r1, r8")
(comment . ";;1116: r14 <- r1, 0x10\n")
(comment . ";;1120: r13 <- r1, 0x18\n")
(comment . ";;1124: r9 <- r1, 0x20\n")
(comment . ";;1128: r15 <- r1, 0x8\n")
(comment . ";;1132: r4 <- 0x6")
(comment . ";;1136 b -736")
chunklet-i: 1140; chunklet-start-i: 1140; chunklet-end-i: 1144
i: 1140
end-i: 1144
i: 1144
end-i: 1144
i:1144 HIT CHUNK END
(comment . ";;1140 b -512")
chunklet-i: 1144; chunklet-start-i: 1144; chunklet-end-i: 1184
i: 1144
end-i: 1184
i: 1144
end-i: 1184
i: 1148
end-i: 1184
i: 1152
end-i: 1184
i: 1156
end-i: 1184
i: 1160
end-i: 1184
i: 1164
end-i: 1184
i: 1168
end-i: 1184
i: 1180
end-i: 1184
i: 1184
end-i: 1184
at header: 1184
(comment . ";;1144: r14 <- r1, 0x10\n")
(comment . ";;1148: r13 <- r1, 0x18\n")
(comment . ";;1152: r9 <- r1, 0x20\n")
(comment . ";;1156: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1164: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1180: b r6")
chunklet-i: 1184; chunklet-start-i: 1200; chunklet-end-i: 1228
i: 1184
end-i: 1228
at header: 1184
i: 1200
end-i: 1228
i: 1204
end-i: 1228
i: 1208
end-i: 1228
i: 1212
end-i: 1228
i: 1216
end-i: 1228
i: 1220
end-i: 1228
i: 1224
end-i: 1228
i: 1228
end-i: 1228
i:1228 HIT CHUNK END
(comment . ";;1200: r1 <- r1, r8")
(comment . ";;1204: r14 <- r1, 0x10\n")
(comment . ";;1208: r13 <- r1, 0x18\n")
(comment . ";;1212: r9 <- r1, 0x20\n")
(comment . ";;1216: r4 <- 0x6")
(comment . ";;1224 b -852")
chunklet-i: 1228; chunklet-start-i: 1228; chunklet-end-i: 1244
i: 1228
end-i: 1244
i: 1228
end-i: 1244
i: 1232
end-i: 1244
i: 1236
end-i: 1244
i: 1240
end-i: 1244
i: 1244
end-i: 1244
i:1244 HIT CHUNK END
(comment . ";;1228: r9 <- r14, 0x7\n")
(comment . ";;1232: r15 <- r9, r7")
(comment . ";;1236: r15 <- 0x1")
(comment . ";;1240 b 224")
chunklet-i: 1244; chunklet-start-i: 1244; chunklet-end-i: 1272
i: 1244
end-i: 1272
i: 1248
end-i: 1272
i: 1252
end-i: 1272
i: 1256
end-i: 1272
i: 1260
end-i: 1272
i: 1264
end-i: 1272
i: 1268
end-i: 1272
i: 1272
end-i: 1272
i:1272 HIT CHUNK END
(comment . ";;1244: r15 <- r9, 0x7\n")
(comment . ";;1248: r12 <- r13, 0x7\n")
(comment . ";;1252: r5 <- r2, r9")
(comment . ";;1256: r2 <- r2, r0")
(comment . ";;1260: r11 <- r0, 0x68\n")
(comment . ";;1264: r11 <- r2")
(comment . ";;1268 b 176")
chunklet-i: 1272; chunklet-start-i: 1272; chunklet-end-i: 1296
i: 1272
end-i: 1296
i: 1272
end-i: 1296
i: 1276
end-i: 1296
i: 1280
end-i: 1296
i: 1284
end-i: 1296
i: 1288
end-i: 1296
i: 1292
end-i: 1296
i: 1296
end-i: 1296
i:1296 HIT CHUNK END
(comment . ";;1272: r15 <- r5, 0x7\n")
(comment . ";;1276: r12 <- r5, 0xF\n")
(comment . ";;1280: r15 <- r13, r7")
(comment . ";;1284: r5 <- r15, 0x0\n")
(comment . ";;1288: r5 <- 0x7")
(comment . ";;1292 b 24")
chunklet-i: 1296; chunklet-start-i: 1296; chunklet-end-i: 1308
i: 1296
end-i: 1308
i: 1300
end-i: 1308
i: 1304
end-i: 1308
i: 1308
end-i: 1308
i:1308 HIT CHUNK END
(comment . ";;1296: r7 <- r0, 0x68\n")
(comment . ";;1300: r2 <- r7")
(comment . ";;1304 b 116")
chunklet-i: 1308; chunklet-start-i: 1308; chunklet-end-i: 1320
i: 1308
end-i: 1320
i: 1308
end-i: 1320
i: 1312
end-i: 1320
i: 1316
end-i: 1320
i: 1320
end-i: 1320
i:1320 HIT CHUNK END
(comment . ";;1308: r7 <- r7, r8")
(comment . ";;1312: r7 <- r0, 0x68\n")
(comment . ";;1316: r15 <- r7, 0x0\n")
chunklet-i: 1320; chunklet-start-i: 1320; chunklet-end-i: 1336
i: 1320
end-i: 1336
i: 1320
end-i: 1336
i: 1324
end-i: 1336
i: 1328
end-i: 1336
i: 1332
end-i: 1336
i: 1336
end-i: 1336
i:1336 HIT CHUNK END
(comment . ";;1320: r9 <- r14, 0x7\n")
(comment . ";;1324: r15 <- r9, r7")
(comment . ";;1328: r15 <- 0x1")
(comment . ";;1332 b 72")
chunklet-i: 1336; chunklet-start-i: 1336; chunklet-end-i: 1356
i: 1336
end-i: 1356
i: 1340
end-i: 1356
i: 1344
end-i: 1356
i: 1348
end-i: 1356
i: 1352
end-i: 1356
i: 1356
end-i: 1356
i:1356 HIT CHUNK END
(comment . ";;1336: r15 <- r9, 0xF\n")
(comment . ";;1340: r12 <- r14, r7")
(comment . ";;1344: r15 <- r12, 0x0\n")
(comment . ";;1348: r15 <- 0x7")
(comment . ";;1352 b -536")
chunklet-i: 1356; chunklet-start-i: 1356; chunklet-end-i: 1368
i: 1356
end-i: 1368
i: 1360
end-i: 1368
i: 1364
end-i: 1368
i: 1368
end-i: 1368
i:1368 HIT CHUNK END
(comment . ";;1356: r7 <- r0, 0x68\n")
(comment . ";;1360: r2 <- r7")
(comment . ";;1364 b 16")
chunklet-i: 1368; chunklet-start-i: 1368; chunklet-end-i: 1384
i: 1368
end-i: 1384
i: 1368
end-i: 1384
i: 1372
end-i: 1384
i: 1376
end-i: 1384
i: 1380
end-i: 1384
i: 1384
end-i: 1384
i:1384 HIT CHUNK END
(comment . ";;1368: r7 <- r7, r8")
(comment . ";;1372: r7 <- r0, 0x68\n")
(comment . ";;1376: r12 <- r7, 0x0\n")
(comment . ";;1380 b -564")
chunklet-i: 1384; chunklet-start-i: 1384; chunklet-end-i: 1396
i: 1384
end-i: 1396
i: 1384
end-i: 1396
i: 1396
end-i: 1396
i:1396 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 1396; chunklet-start-i: 1400; chunklet-end-i: 1408
i: 1396
end-i: 1408
i: 1400
end-i: 1408
i: 1404
end-i: 1408
i: 1408
end-i: 1408
i:1408 HIT CHUNK END
(comment . ";; instruction 1396 not included")
(comment . ";;1400: r7 <- r0, 0x68\n")
(comment . ";;1404 b -40")
chunklet-i: 1408; chunklet-start-i: 1408; chunklet-end-i: 1424
i: 1408
end-i: 1424
i: 1408
end-i: 1424
i: 1420
end-i: 1424
i: 1424
end-i: 1424
i:1424 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;1420: b r6")
chunklet-i: 1424; chunklet-start-i: 1424; chunklet-end-i: 1436
i: 1424
end-i: 1436
i: 1424
end-i: 1436
i: 1436
end-i: 1436
i:1436 HIT CHUNK END
(comment . ";; literal r12")
chunklet-i: 1436; chunklet-start-i: 1440; chunklet-end-i: 1448
i: 1436
end-i: 1448
i: 1440
end-i: 1448
i: 1444
end-i: 1448
i: 1448
end-i: 1448
i:1448 HIT CHUNK END
(comment . ";; instruction 1436 not included")
(comment . ";;1440: r7 <- r0, 0x68\n")
(comment . ";;1444 b -140")
chunklet-i: 1448; chunklet-start-i: 1448; chunklet-end-i: 1460
i: 1448
end-i: 1460
i: 1448
end-i: 1460
i: 1460
end-i: 1460
i:1460 HIT CHUNK END
(comment . ";; literal r11")
chunklet-i: 1460; chunklet-start-i: 1464; chunklet-end-i: 1468
i: 1460
end-i: 1468
i: 1464
end-i: 1468
i: 1468
end-i: 1468
i:1468 HIT CHUNK END
(comment . ";; instruction 1460 not included")
(comment . ";;1464 b -196")
chunklet-i: 1468; chunklet-start-i: 1468; chunklet-end-i: 1484
i: 1468
end-i: 1484
i: 1468
end-i: 1484
i: 1480
end-i: 1484
i: 1484
end-i: 1484
i:1484 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;1480: b r6")
chunklet-i: 1484; chunklet-start-i: 1484; chunklet-end-i: 1520
i: 1484
end-i: 1520
i: 1484
end-i: 1520
i: 1488
end-i: 1520
i: 1492
end-i: 1520
i: 1496
end-i: 1520
i: 1500
end-i: 1520
i: 1504
end-i: 1520
i: 1516
end-i: 1520
i: 1520
end-i: 1520
at header: 1520
(comment . ";;1484: r14 <- r1, 0x10\n")
(comment . ";;1488: r13 <- r1, 0x18\n")
(comment . ";;1492: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;1500: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1516: b r6")
chunklet-i: 1520; chunklet-start-i: 1536; chunklet-end-i: 1552
i: 1520
end-i: 1552
at header: 1520
i: 1536
end-i: 1552
i: 1540
end-i: 1552
i: 1544
end-i: 1552
i: 1548
end-i: 1552
i: 1552
end-i: 1552
i:1552 HIT CHUNK END
(comment . ";;1536: r1 <- r1, r0")
(comment . ";;1540: r14 <- r1, 0x10\n")
(comment . ";;1544: r13 <- r1, 0x18\n")
(comment . ";;1548 b -1432")
chunklet-i: 1552; chunklet-start-i: 1552; chunklet-end-i: 1560
i: 1552
end-i: 1560
i: 1552
end-i: 1560
i: 1556
end-i: 1560
i: 1560
end-i: 1560
i:1560 HIT CHUNK END
(comment . ";;1552: r4 <- r13, 0x7\n")
(comment . ";;1556: b r1, 0")
chunklet-i: 1560; chunklet-start-i: 1560; chunklet-end-i: 1572
i: 1560
end-i: 1572
i: 1560
end-i: 1572
i: 1572
end-i: 1572
i:1572 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 1572; chunklet-start-i: 1576; chunklet-end-i: 1580
i: 1572
end-i: 1580
i: 1576
end-i: 1580
i: 1580
end-i: 1580
i:1580 HIT CHUNK END
(comment . ";; instruction 1572 not included")
(comment . ";;1576 b -1496")
chunklet-i: 1580; chunklet-start-i: 1580; chunklet-end-i: 1592
i: 1580
end-i: 1592
i: 1580
end-i: 1592
i: 1592
end-i: 1592
i:1592 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 1592; chunklet-start-i: 1596; chunklet-end-i: 1600
i: 1592
end-i: 1600
i: 1596
end-i: 1600
i: 1600
end-i: 1600
i:1600 HIT CHUNK END
(comment . ";; instruction 1592 not included")
(comment . ";;1596 b -1556")
chunklet-i: 1600; chunklet-start-i: 1600; chunklet-end-i: 1612
i: 1600
end-i: 1612
i: 1600
end-i: 1612
i: 1612
end-i: 1612
i:1612 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 1612; chunklet-start-i: 1616; chunklet-end-i: 1620
i: 1612
end-i: 1620
i: 1616
end-i: 1620
i: 1620
end-i: 1620
i:1620 HIT CHUNK END
(comment . ";; instruction 1612 not included")
(comment . ";;1616 b -1596")
chunklet-i: 1620; chunklet-start-i: 1620; chunklet-end-i: 1636
i: 1620
end-i: 1636
i: 1620
end-i: 1636
i: 1632
end-i: 1636
i: 1636
end-i: 1636
i:1636 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;1632: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: my-match
instruction range for chunk: 0 12
instruction range for chunk: 12 36
instruction range for chunk: 36 44
instruction range for chunk: 44 52
instruction range for chunk: 52 60
instruction range for chunk: 60 68
instruction range for chunk: 68 76
instruction range for chunk: 76 92
instruction range for chunk: 92 120
instruction range for chunk: 120 132
instruction range for chunk: 132 152
instruction range for chunk: 152 160
instruction range for chunk: 160 172
instruction range for chunk: 172 212
instruction range for chunk: 212 232
instruction range for chunk: 232 264
instruction range for chunk: 280 292
instruction range for chunk: 292 320
instruction range for chunk: 320 340
instruction range for chunk: 340 356
instruction range for chunk: 356 364
instruction range for chunk: 364 376
instruction range for chunk: 376 384
instruction range for chunk: 384 440
instruction range for chunk: 456 472
instruction range for chunk: 472 480
instruction range for chunk: 480 520
instruction range for chunk: 520 552
instruction range for chunk: 568 584
instruction range for chunk: 584 596
instruction range for chunk: 600 604
instruction range for chunk: 604 616
instruction range for chunk: 616 624
instruction range for chunk: 624 672
instruction range for chunk: 688 712
instruction range for chunk: 712 728
instruction range for chunk: 728 736
instruction range for chunk: 736 748
instruction range for chunk: 748 800
instruction range for chunk: 816 836
instruction range for chunk: 836 868
instruction range for chunk: 868 900
instruction range for chunk: 900 952
instruction range for chunk: 952 964
instruction range for chunk: 968 972
instruction range for chunk: 972 984
instruction range for chunk: 988 992
instruction range for chunk: 992 1004
instruction range for chunk: 1004 1036
instruction range for chunk: 1036 1080
instruction range for chunk: 1080 1092
instruction range for chunk: 1096 1100
instruction range for chunk: 1100 1120
instruction range for chunk: 1120 1168
instruction range for chunk: 1184 1208
instruction range for chunk: 1208 1224
instruction range for chunk: 1224 1232
instruction range for chunk: 1232 1244
instruction range for chunk: 1244 1296
instruction range for chunk: 1312 1332
instruction range for chunk: 1332 1356
instruction range for chunk: 1356 1376
instruction range for chunk: 1376 1384
instruction range for chunk: 1384 1396
instruction range for chunk: 1396 1424
instruction range for chunk: 1424 1456
instruction range for chunk: 1456 1528
instruction range for chunk: 1544 1572
instruction range for chunk: 1572 1580
instruction range for chunk: 1580 1584
instruction range for chunk: 1584 1596
instruction range for chunk: 1596 1608
instruction range for chunk: 1608 1612
instruction range for chunk: 1612 1632
instruction range for chunk: 1632 1696
instruction range for chunk: 1712 1728
instruction range for chunk: 1728 1740
instruction range for chunk: 1744 1748
instruction range for chunk: 1748 1760
instruction range for chunk: 1760 1768
instruction range for chunk: 1768 1788
instruction range for chunk: 1788 1808
instruction range for chunk: 1808 1820
instruction range for chunk: 1820 1828
instruction range for chunk: 1828 1848
instruction range for chunk: 1848 1856
instruction range for chunk: 1856 1864
instruction range for chunk: 1864 1872
instruction range for chunk: 1872 1884
instruction range for chunk: 1888 1892
instruction range for chunk: 1892 1904
instruction range for chunk: 1908 1912
instruction range for chunk: 1912 1952
instruction range for chunk: 1968 1988
instruction range for chunk: 1988 2000
instruction range for chunk: 2004 2008
instruction range for chunk: 2008 2020
instruction range for chunk: 2020 2072
instruction range for chunk: 2088 2132
instruction range for chunk: 2132 2152
instruction range for chunk: 2152 2160
instruction range for chunk: 2160 2184
instruction range for chunk: 2184 2208
instruction range for chunk: 2208 2240
instruction range for chunk: 2256 2272
instruction range for chunk: 2272 2284
instruction range for chunk: 2288 2292
instruction range for chunk: 2292 2304
instruction range for chunk: 2304 2312
instruction range for chunk: 2312 2368
instruction range for chunk: 2384 2400
instruction range for chunk: 2400 2456
instruction range for chunk: 2472 2492
instruction range for chunk: 2492 2528
instruction range for chunk: 2528 2532
instruction range for chunk: 2532 2536
instruction range for chunk: 2536 2568
instruction range for chunk: 2584 2596
instruction range for chunk: 2596 2608
instruction range for chunk: 2612 2616
instruction range for chunk: 2616 2636
instruction range for chunk: 2636 2656
instruction range for chunk: 2656 2672
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 12
i: 0
end-i: 12
i: 4
end-i: 12
i: 8
end-i: 12
i: 12
end-i: 12
i:12 HIT CHUNK END
(comment . ";;4: r4 <- 0x3")
(comment . ";;8 b 2644")
chunklet-i: 12; chunklet-start-i: 12; chunklet-end-i: 36
i: 12
end-i: 36
i: 16
end-i: 36
i: 20
end-i: 36
i: 24
end-i: 36
i: 28
end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;12: r9 <- r1, 0x28\n")
(comment . ";;16: r15 <- 0xA")
(comment . ";;20: r11 <- r1, 0x30\n")
(comment . ";;24: r14 <- r1, 0x28\n")
(comment . ";;28: r14 <- 0x26")
(comment . ";;32 b 24")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;36: r15 <- 0x26")
(comment . ";;40 b 8")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 52
i: 44
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;44: r4 <- 0xE")
(comment . ";;48: b r1, 0")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r4 <- 0x6")
(comment . ";;56: b r1, 0")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 68
i: 60
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";;60: r15 <- 0x26")
(comment . ";;64 b 8")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 76
i: 68
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";;68: r4 <- 0x26")
(comment . ";;72: b r1, 0")
chunklet-i: 76; chunklet-start-i: 76; chunklet-end-i: 92
i: 76
end-i: 92
i: 76
end-i: 92
i: 80
end-i: 92
i: 84
end-i: 92
i: 88
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";;76: r14 <- r1, 0x28\n")
(comment . ";;80: r14 <- r14, r7")
(comment . ";;84: r14 <- 0x1")
(comment . ";;88 b 2544")
chunklet-i: 92; chunklet-start-i: 92; chunklet-end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 100
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;92: r14 <- r1, 0x28\n")
(comment . ";;96: r14 <- r14, 0x7\n")
(comment . ";; literal r13")
(comment . ";;112: r14 <- r13")
(comment . ";;116 b 32")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 124
end-i: 132
i: 128
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";;120: r14 <- r15, r7")
(comment . ";;124: r14 <- 0x1")
(comment . ";;128 b 2484")
chunklet-i: 132; chunklet-start-i: 132; chunklet-end-i: 152
i: 132
end-i: 152
i: 136
end-i: 152
i: 140
end-i: 152
i: 144
end-i: 152
i: 148
end-i: 152
i: 152
end-i: 152
i:152 HIT CHUNK END
(comment . ";;132: r14 <- r15, 0x7\n")
(comment . ";;136: r13 <- r1, 0x28\n")
(comment . ";;140: r13 <- r13, 0x7\n")
(comment . ";;144: r13 <- r14")
(comment . ";;148 b 140")
chunklet-i: 152; chunklet-start-i: 152; chunklet-end-i: 160
i: 152
end-i: 160
i: 152
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";;152: r3 <- r3, 0x1\n")
(comment . ";;156 b 72")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 172
i: 160
end-i: 172
i: 160
end-i: 172
i: 164
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";;160: r14 <- r15, r7")
(comment . ";;164: r14 <- 0x1")
(comment . ";;168 b 40")
chunklet-i: 172; chunklet-start-i: 172; chunklet-end-i: 212
i: 172
end-i: 212
i: 176
end-i: 212
i: 180
end-i: 212
i: 184
end-i: 212
i: 188
end-i: 212
i: 200
end-i: 212
i: 204
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";;172: r10 <- r15, 0xF\n")
(comment . ";;176: r15 <- r1, 0x28\n")
(comment . ";;180: r9 <- r15, 0xF\n")
(comment . ";;184: r11 <- r1, 0x30\n")
(comment . ";; literal r5")
(comment . ";;200: r8 <- r5, 0x5\n")
(comment . ";;204: r4 <- 0x3")
(comment . ";;208: b r5, 13")
chunklet-i: 212; chunklet-start-i: 212; chunklet-end-i: 232
i: 212
end-i: 232
i: 212
end-i: 232
i: 216
end-i: 232
i: 228
end-i: 232
i: 232
end-i: 232
i:232 HIT CHUNK END
(comment . ";;212: r9 <- 0xF")
(comment . ";; literal r6")
(comment . ";;228: b r6")
chunklet-i: 232; chunklet-start-i: 232; chunklet-end-i: 264
i: 232
end-i: 264
i: 232
end-i: 264
i: 236
end-i: 264
i: 240
end-i: 264
i: 244
end-i: 264
i: 248
end-i: 264
i: 260
end-i: 264
i: 264
end-i: 264
at header: 264
(comment . ";;232: r15 <- r1, 0x8\n")
(comment . ";;236: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;244: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;260: b r6")
chunklet-i: 264; chunklet-start-i: 280; chunklet-end-i: 292
i: 264
end-i: 292
at header: 264
i: 280
end-i: 292
i: 284
end-i: 292
i: 288
end-i: 292
i: 292
end-i: 292
i:292 HIT CHUNK END
(comment . ";;280: r1 <- r1, r8")
(comment . ";;284: r15 <- r1, 0x8\n")
(comment . ";;288 b -132")
chunklet-i: 292; chunklet-start-i: 292; chunklet-end-i: 320
i: 292
end-i: 320
i: 292
end-i: 320
i: 296
end-i: 320
i: 300
end-i: 320
i: 312
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
i:320 HIT CHUNK END
(comment . ";;292: r14 <- r1, 0x28\n")
(comment . ";;296: r13 <- r14, 0x7\n")
(comment . ";; literal r14")
(comment . ";;312: r13 <- r14")
(comment . ";;316 b 1972")
chunklet-i: 320; chunklet-start-i: 320; chunklet-end-i: 340
i: 320
end-i: 340
i: 324
end-i: 340
i: 328
end-i: 340
i: 332
end-i: 340
i: 336
end-i: 340
i: 340
end-i: 340
i:340 HIT CHUNK END
(comment . ";;320: r14 <- r1, 0x28\n")
(comment . ";;324: r14 <- r14, 0x7\n")
(comment . ";;328: r14 <- r14, r7")
(comment . ";;332: r14 <- 0x1")
(comment . ";;336 b 264")
chunklet-i: 340; chunklet-start-i: 340; chunklet-end-i: 356
i: 340
end-i: 356
i: 344
end-i: 356
i: 348
end-i: 356
i: 352
end-i: 356
i: 356
end-i: 356
i:356 HIT CHUNK END
(comment . ";;340: r14 <- r15, 0x7\n")
(comment . ";;344: r14 <- r14, r7")
(comment . ";;348: r14 <- 0x1")
(comment . ";;352 b 8")
chunklet-i: 356; chunklet-start-i: 356; chunklet-end-i: 364
i: 356
end-i: 364
i: 360
end-i: 364
i: 364
end-i: 364
i:364 HIT CHUNK END
(comment . ";;356: r4 <- 0x6")
(comment . ";;360: b r1, 0")
chunklet-i: 364; chunklet-start-i: 364; chunklet-end-i: 376
i: 364
end-i: 376
i: 364
end-i: 376
i: 368
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
i:376 HIT CHUNK END
(comment . ";;364: r14 <- r0, 0x58\n")
(comment . ";;368: r1 <- r14")
(comment . ";;372 b 208")
chunklet-i: 376; chunklet-start-i: 376; chunklet-end-i: 384
i: 376
end-i: 384
i: 376
end-i: 384
i: 380
end-i: 384
i: 384
end-i: 384
i:384 HIT CHUNK END
(comment . ";;376: r3 <- r3, 0x1\n")
(comment . ";;380 b 136")
chunklet-i: 384; chunklet-start-i: 384; chunklet-end-i: 440
i: 384
end-i: 440
i: 384
end-i: 440
i: 388
end-i: 440
i: 392
end-i: 440
i: 396
end-i: 440
i: 400
end-i: 440
i: 404
end-i: 440
i: 408
end-i: 440
i: 420
end-i: 440
i: 424
end-i: 440
i: 428
end-i: 440
i: 432
end-i: 440
i: 436
end-i: 440
i: 440
end-i: 440
at header: 440
(comment . ";;384: r14 <- r1, 0x28\n")
(comment . ";;388: r9 <- r14, 0x7\n")
(comment . ";;392: r10 <- r15, 0x7\n")
(comment . ";;396: r11 <- r1, 0x30\n")
(comment . ";;400: r15 <- r1, 0x8\n")
(comment . ";;404: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;420: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;428: r15 <- r1, 0x0\n")
(comment . ";;432: r4 <- 0x3")
(comment . ";;436: b r5, 13")
chunklet-i: 440; chunklet-start-i: 456; chunklet-end-i: 472
i: 440
end-i: 472
at header: 440
i: 456
end-i: 472
i: 460
end-i: 472
i: 464
end-i: 472
i: 468
end-i: 472
i: 472
end-i: 472
i:472 HIT CHUNK END
(comment . ";;456: r1 <- r1, r8")
(comment . ";;460: r15 <- r1, 0x8\n")
(comment . ";;464: r4 <- 0x6")
(comment . ";;468 b 8")
chunklet-i: 472; chunklet-start-i: 472; chunklet-end-i: 480
i: 472
end-i: 480
i: 476
end-i: 480
i: 480
end-i: 480
i:480 HIT CHUNK END
(comment . ";;472: r4 <- 0x6")
(comment . ";;476: b r1, 0")
chunklet-i: 480; chunklet-start-i: 480; chunklet-end-i: 520
i: 480
end-i: 520
i: 480
end-i: 520
i: 484
end-i: 520
i: 488
end-i: 520
i: 492
end-i: 520
i: 496
end-i: 520
i: 508
end-i: 520
i: 512
end-i: 520
i: 516
end-i: 520
i: 520
end-i: 520
i:520 HIT CHUNK END
(comment . ";;480: r14 <- r1, 0x28\n")
(comment . ";;484: r9 <- r14, 0xF\n")
(comment . ";;488: r10 <- r15, 0xF\n")
(comment . ";;492: r11 <- r1, 0x30\n")
(comment . ";; literal r5")
(comment . ";;508: r8 <- r5, 0x5\n")
(comment . ";;512: r4 <- 0x3")
(comment . ";;516: b r5, 13")
chunklet-i: 520; chunklet-start-i: 520; chunklet-end-i: 552
i: 520
end-i: 552
i: 520
end-i: 552
i: 524
end-i: 552
i: 528
end-i: 552
i: 532
end-i: 552
i: 536
end-i: 552
i: 548
end-i: 552
i: 552
end-i: 552
at header: 552
(comment . ";;520: r15 <- r1, 0x8\n")
(comment . ";;524: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;532: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;548: b r6")
chunklet-i: 552; chunklet-start-i: 568; chunklet-end-i: 584
i: 552
end-i: 584
at header: 552
i: 568
end-i: 584
i: 572
end-i: 584
i: 576
end-i: 584
i: 580
end-i: 584
i: 584
end-i: 584
i:584 HIT CHUNK END
(comment . ";;572: r1 <- r1, r8")
(comment . ";;576: r15 <- r1, 0x8\n")
(comment . ";;580 b -200")
chunklet-i: 584; chunklet-start-i: 584; chunklet-end-i: 596
i: 584
end-i: 596
i: 584
end-i: 596
i: 596
end-i: 596
i:596 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 596; chunklet-start-i: 600; chunklet-end-i: 604
i: 596
end-i: 604
i: 600
end-i: 604
i: 604
end-i: 604
i:604 HIT CHUNK END
(comment . ";; instruction 596 not included")
(comment . ";;600 b -228")
chunklet-i: 604; chunklet-start-i: 604; chunklet-end-i: 616
i: 604
end-i: 616
i: 604
end-i: 616
i: 608
end-i: 616
i: 612
end-i: 616
i: 616
end-i: 616
i:616 HIT CHUNK END
(comment . ";;604: r14 <- r0, 0x58\n")
(comment . ";;608: r1 <- r14")
(comment . ";;612 b 1656")
chunklet-i: 616; chunklet-start-i: 616; chunklet-end-i: 624
i: 616
end-i: 624
i: 616
end-i: 624
i: 620
end-i: 624
i: 624
end-i: 624
i:624 HIT CHUNK END
(comment . ";;616: r3 <- r3, 0x1\n")
(comment . ";;620 b 1584")
chunklet-i: 624; chunklet-start-i: 624; chunklet-end-i: 672
i: 624
end-i: 672
i: 624
end-i: 672
i: 628
end-i: 672
i: 632
end-i: 672
i: 636
end-i: 672
i: 640
end-i: 672
i: 652
end-i: 672
i: 656
end-i: 672
i: 660
end-i: 672
i: 664
end-i: 672
i: 668
end-i: 672
i: 672
end-i: 672
at header: 672
(comment . ";;624: r14 <- r1, 0x28\n")
(comment . ";;628: r9 <- r14, 0x7\n")
(comment . ";;632: r15 <- r1, 0x8\n")
(comment . ";;636: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;652: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;660: r15 <- r1, 0x0\n")
(comment . ";;664: r4 <- 0x1")
(comment . ";;668: b r5, 13")
chunklet-i: 672; chunklet-start-i: 688; chunklet-end-i: 712
i: 672
end-i: 712
at header: 672
i: 688
end-i: 712
i: 692
end-i: 712
i: 696
end-i: 712
i: 700
end-i: 712
i: 704
end-i: 712
i: 708
end-i: 712
i: 712
end-i: 712
i:712 HIT CHUNK END
(comment . ";;688: r1 <- r1, r8")
(comment . ";;692: r15 <- r1, 0x8\n")
(comment . ";;696: r14 <- r4, r7")
(comment . ";;700: r14 <- 0x7")
(comment . ";;708 b 1472")
chunklet-i: 712; chunklet-start-i: 712; chunklet-end-i: 728
i: 712
end-i: 728
i: 716
end-i: 728
i: 720
end-i: 728
i: 724
end-i: 728
i: 728
end-i: 728
i:728 HIT CHUNK END
(comment . ";;712: r14 <- r4, 0x1\n")
(comment . ";;716: r13 <- r14, r7")
(comment . ";;720: r13 <- 0x2")
(comment . ";;724 b 1456")
chunklet-i: 728; chunklet-start-i: 728; chunklet-end-i: 736
i: 728
end-i: 736
i: 732
end-i: 736
i: 736
end-i: 736
i:736 HIT CHUNK END
(comment . ";;728: r14 <- 0xA")
(comment . ";;732 b 1448")
chunklet-i: 736; chunklet-start-i: 736; chunklet-end-i: 748
i: 736
end-i: 748
i: 740
end-i: 748
i: 744
end-i: 748
i: 748
end-i: 748
i:748 HIT CHUNK END
(comment . ";;736: r14 <- r4, 0x9\n")
(comment . ";;740: r14 <- 0x3F16")
(comment . ";;744 b 372")
chunklet-i: 748; chunklet-start-i: 748; chunklet-end-i: 800
i: 748
end-i: 800
i: 752
end-i: 800
i: 756
end-i: 800
i: 760
end-i: 800
i: 764
end-i: 800
i: 768
end-i: 800
i: 780
end-i: 800
i: 784
end-i: 800
i: 788
end-i: 800
i: 792
end-i: 800
i: 796
end-i: 800
i: 800
end-i: 800
at header: 800
(comment . ";;748: r14 <- r1, 0x28\n")
(comment . ";;752: r9 <- r14, 0x7\n")
(comment . ";;756: r10 <- r1, 0x30\n")
(comment . ";;760: r15 <- r1, 0x8\n")
(comment . ";;764: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;780: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;788: r15 <- r1, 0x0\n")
(comment . ";;792: r4 <- 0x2")
(comment . ";;796: b r5, 13")
chunklet-i: 800; chunklet-start-i: 816; chunklet-end-i: 836
i: 800
end-i: 836
at header: 800
i: 816
end-i: 836
i: 820
end-i: 836
i: 824
end-i: 836
i: 828
end-i: 836
i: 832
end-i: 836
i: 836
end-i: 836
i:836 HIT CHUNK END
(comment . ";;816: r1 <- r1, r8")
(comment . ";;820: r15 <- r1, 0x8\n")
(comment . ";;824: r4 <- 0x6")
(comment . ";;832 b 156")
chunklet-i: 836; chunklet-start-i: 836; chunklet-end-i: 868
i: 836
end-i: 868
i: 840
end-i: 868
i: 844
end-i: 868
i: 848
end-i: 868
i: 852
end-i: 868
i: 856
end-i: 868
i: 860
end-i: 868
i: 864
end-i: 868
i: 868
end-i: 868
i:868 HIT CHUNK END
(comment . ";;836: r14 <- r1, 0x28\n")
(comment . ";;840: r14 <- r14, 0x7\n")
(comment . ";;844: r13 <- r15, 0x7\n")
(comment . ";;848: r5 <- r2, r9")
(comment . ";;852: r2 <- r2, r0")
(comment . ";;856: r12 <- r0, 0x68\n")
(comment . ";;860: r12 <- r2")
(comment . ";;864 b 104")
chunklet-i: 868; chunklet-start-i: 868; chunklet-end-i: 900
i: 868
end-i: 900
i: 868
end-i: 900
i: 872
end-i: 900
i: 876
end-i: 900
i: 880
end-i: 900
i: 884
end-i: 900
i: 888
end-i: 900
i: 892
end-i: 900
i: 896
end-i: 900
i: 900
end-i: 900
i:900 HIT CHUNK END
(comment . ";;868: r14 <- r5, 0x7\n")
(comment . ";;872: r13 <- r5, 0xF\n")
(comment . ";;876: r14 <- 0x5")
(comment . ";;880: r5 <- r2, r9")
(comment . ";;884: r2 <- r2, r0")
(comment . ";;888: r13 <- r0, 0x68\n")
(comment . ";;892: r13 <- r2")
(comment . ";;896 b 52")
chunklet-i: 900; chunklet-start-i: 900; chunklet-end-i: 952
i: 900
end-i: 952
i: 900
end-i: 952
i: 904
end-i: 952
i: 908
end-i: 952
i: 912
end-i: 952
i: 916
end-i: 952
i: 920
end-i: 952
i: 924
end-i: 952
i: 928
end-i: 952
i: 940
end-i: 952
i: 944
end-i: 952
i: 948
end-i: 952
i: 952
end-i: 952
i:952 HIT CHUNK END
(comment . ";;900: r11 <- 0x5")
(comment . ";;904: r14 <- r11, 0x7\n")
(comment . ";;908: r14 <- r1, 0x30\n")
(comment . ";;912: r14 <- r11, 0xF\n")
(comment . ";;916: r14 <- r1, 0x28\n")
(comment . ";;920: r9 <- r14, 0xF\n")
(comment . ";;924: r10 <- r15, 0xF\n")
(comment . ";; literal r5")
(comment . ";;940: r8 <- r5, 0x5\n")
(comment . ";;944: r4 <- 0x3")
(comment . ";;948: b r5, 13")
chunklet-i: 952; chunklet-start-i: 952; chunklet-end-i: 964
i: 952
end-i: 964
i: 952
end-i: 964
i: 964
end-i: 964
i:964 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 964; chunklet-start-i: 968; chunklet-end-i: 972
i: 964
end-i: 972
i: 968
end-i: 972
i: 972
end-i: 972
i:972 HIT CHUNK END
(comment . ";; instruction 964 not included")
(comment . ";;968 b -72")
chunklet-i: 972; chunklet-start-i: 972; chunklet-end-i: 984
i: 972
end-i: 984
i: 972
end-i: 984
i: 984
end-i: 984
i:984 HIT CHUNK END
(comment . ";; literal r12")
chunklet-i: 984; chunklet-start-i: 988; chunklet-end-i: 992
i: 984
end-i: 992
i: 988
end-i: 992
i: 992
end-i: 992
i:992 HIT CHUNK END
(comment . ";; instruction 984 not included")
(comment . ";;988 b -124")
chunklet-i: 992; chunklet-start-i: 992; chunklet-end-i: 1004
i: 992
end-i: 1004
i: 992
end-i: 1004
i: 996
end-i: 1004
i: 1000
end-i: 1004
i: 1004
end-i: 1004
i:1004 HIT CHUNK END
(comment . ";;992: r14 <- r4, r7")
(comment . ";;996: r14 <- 0x1")
(comment . ";;1000 b 96")
chunklet-i: 1004; chunklet-start-i: 1004; chunklet-end-i: 1036
i: 1004
end-i: 1036
i: 1008
end-i: 1036
i: 1012
end-i: 1036
i: 1016
end-i: 1036
i: 1020
end-i: 1036
i: 1024
end-i: 1036
i: 1028
end-i: 1036
i: 1032
end-i: 1036
i: 1036
end-i: 1036
i:1036 HIT CHUNK END
(comment . ";;1004: r14 <- r4, 0xF\n")
(comment . ";;1008: r13 <- r1, 0x28\n")
(comment . ";;1012: r13 <- r13, 0xF\n")
(comment . ";;1016: r5 <- r2, r9")
(comment . ";;1020: r2 <- r2, r0")
(comment . ";;1024: r12 <- r0, 0x68\n")
(comment . ";;1028: r12 <- r2")
(comment . ";;1032 b 44")
chunklet-i: 1036; chunklet-start-i: 1036; chunklet-end-i: 1080
i: 1036
end-i: 1080
i: 1036
end-i: 1080
i: 1040
end-i: 1080
i: 1044
end-i: 1080
i: 1048
end-i: 1080
i: 1052
end-i: 1080
i: 1056
end-i: 1080
i: 1068
end-i: 1080
i: 1072
end-i: 1080
i: 1076
end-i: 1080
i: 1080
end-i: 1080
i:1080 HIT CHUNK END
(comment . ";;1036: r9 <- 0x5")
(comment . ";;1040: r14 <- r9, 0x7\n")
(comment . ";;1044: r13 <- r9, 0xF\n")
(comment . ";;1048: r10 <- 0xF")
(comment . ";;1052: r11 <- r1, 0x30\n")
(comment . ";; literal r5")
(comment . ";;1068: r8 <- r5, 0x5\n")
(comment . ";;1072: r4 <- 0x3")
(comment . ";;1076: b r5, 13")
chunklet-i: 1080; chunklet-start-i: 1080; chunklet-end-i: 1092
i: 1080
end-i: 1092
i: 1080
end-i: 1092
i: 1092
end-i: 1092
i:1092 HIT CHUNK END
(comment . ";; literal r12")
chunklet-i: 1092; chunklet-start-i: 1096; chunklet-end-i: 1100
i: 1092
end-i: 1100
i: 1096
end-i: 1100
i: 1100
end-i: 1100
i:1100 HIT CHUNK END
(comment . ";; instruction 1092 not included")
(comment . ";;1096 b -64")
chunklet-i: 1100; chunklet-start-i: 1100; chunklet-end-i: 1120
i: 1100
end-i: 1120
i: 1100
end-i: 1120
i: 1104
end-i: 1120
i: 1116
end-i: 1120
i: 1120
end-i: 1120
i:1120 HIT CHUNK END
(comment . ";;1100: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;1116: b r6")
chunklet-i: 1120; chunklet-start-i: 1120; chunklet-end-i: 1168
i: 1120
end-i: 1168
i: 1120
end-i: 1168
i: 1124
end-i: 1168
i: 1128
end-i: 1168
i: 1132
end-i: 1168
i: 1136
end-i: 1168
i: 1148
end-i: 1168
i: 1152
end-i: 1168
i: 1156
end-i: 1168
i: 1160
end-i: 1168
i: 1164
end-i: 1168
i: 1168
end-i: 1168
at header: 1168
(comment . ";;1120: r14 <- r1, 0x28\n")
(comment . ";;1124: r9 <- r14, 0x7\n")
(comment . ";;1128: r15 <- r1, 0x8\n")
(comment . ";;1132: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1148: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1156: r15 <- r1, 0x0\n")
(comment . ";;1160: r4 <- 0x1")
(comment . ";;1164: b r5, 13")
chunklet-i: 1168; chunklet-start-i: 1184; chunklet-end-i: 1208
i: 1168
end-i: 1208
at header: 1168
i: 1184
end-i: 1208
i: 1188
end-i: 1208
i: 1192
end-i: 1208
i: 1196
end-i: 1208
i: 1200
end-i: 1208
i: 1204
end-i: 1208
i: 1208
end-i: 1208
i:1208 HIT CHUNK END
(comment . ";;1184: r1 <- r1, r8")
(comment . ";;1188: r15 <- r1, 0x8\n")
(comment . ";;1192: r14 <- r4, r7")
(comment . ";;1196: r14 <- 0x7")
(comment . ";;1204 b 952")
chunklet-i: 1208; chunklet-start-i: 1208; chunklet-end-i: 1224
i: 1208
end-i: 1224
i: 1212
end-i: 1224
i: 1216
end-i: 1224
i: 1220
end-i: 1224
i: 1224
end-i: 1224
i:1224 HIT CHUNK END
(comment . ";;1208: r14 <- r4, 0x1\n")
(comment . ";;1212: r13 <- r14, r7")
(comment . ";;1216: r13 <- 0x2")
(comment . ";;1220 b 936")
chunklet-i: 1224; chunklet-start-i: 1224; chunklet-end-i: 1232
i: 1224
end-i: 1232
i: 1228
end-i: 1232
i: 1232
end-i: 1232
i:1232 HIT CHUNK END
(comment . ";;1224: r14 <- 0xA")
(comment . ";;1228 b 928")
chunklet-i: 1232; chunklet-start-i: 1232; chunklet-end-i: 1244
i: 1232
end-i: 1244
i: 1236
end-i: 1244
i: 1240
end-i: 1244
i: 1244
end-i: 1244
i:1244 HIT CHUNK END
(comment . ";;1232: r14 <- r4, 0x9\n")
(comment . ";;1236: r14 <- 0x2A16")
(comment . ";;1240 b 908")
chunklet-i: 1244; chunklet-start-i: 1244; chunklet-end-i: 1296
i: 1244
end-i: 1296
i: 1248
end-i: 1296
i: 1252
end-i: 1296
i: 1256
end-i: 1296
i: 1260
end-i: 1296
i: 1264
end-i: 1296
i: 1276
end-i: 1296
i: 1280
end-i: 1296
i: 1284
end-i: 1296
i: 1288
end-i: 1296
i: 1292
end-i: 1296
i: 1296
end-i: 1296
at header: 1296
(comment . ";;1244: r14 <- r1, 0x28\n")
(comment . ";;1248: r9 <- r14, 0x7\n")
(comment . ";;1252: r10 <- r1, 0x30\n")
(comment . ";;1256: r15 <- r1, 0x8\n")
(comment . ";;1260: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1276: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1284: r15 <- r1, 0x0\n")
(comment . ";;1288: r4 <- 0x2")
(comment . ";;1292: b r5, 13")
chunklet-i: 1296; chunklet-start-i: 1312; chunklet-end-i: 1332
i: 1296
end-i: 1332
at header: 1296
i: 1312
end-i: 1332
i: 1316
end-i: 1332
i: 1320
end-i: 1332
i: 1324
end-i: 1332
i: 1328
end-i: 1332
i: 1332
end-i: 1332
i:1332 HIT CHUNK END
(comment . ";;1312: r1 <- r1, r8")
(comment . ";;1316: r15 <- r1, 0x8\n")
(comment . ";;1320: r4 <- 0x6")
(comment . ";;1328 b 676")
chunklet-i: 1332; chunklet-start-i: 1332; chunklet-end-i: 1356
i: 1332
end-i: 1356
i: 1336
end-i: 1356
i: 1340
end-i: 1356
i: 1344
end-i: 1356
i: 1348
end-i: 1356
i: 1352
end-i: 1356
i: 1356
end-i: 1356
i:1356 HIT CHUNK END
(comment . ";;1332: r14 <- 0xF")
(comment . ";;1336: r5 <- r2, r9")
(comment . ";;1340: r2 <- r2, r0")
(comment . ";;1344: r13 <- r0, 0x68\n")
(comment . ";;1348: r13 <- r2")
(comment . ";;1352 b 632")
chunklet-i: 1356; chunklet-start-i: 1356; chunklet-end-i: 1376
i: 1356
end-i: 1376
i: 1356
end-i: 1376
i: 1360
end-i: 1376
i: 1364
end-i: 1376
i: 1368
end-i: 1376
i: 1372
end-i: 1376
i: 1376
end-i: 1376
i:1376 HIT CHUNK END
(comment . ";;1356: r13 <- 0x26")
(comment . ";;1360: r13 <- r5, 0x7\n")
(comment . ";;1364: r15 <- r5, 0xF\n")
(comment . ";;1368: r15 <- 0x5")
(comment . ";;1372: r4 <- 0x26")
chunklet-i: 1376; chunklet-start-i: 1376; chunklet-end-i: 1384
i: 1376
end-i: 1384
i: 1376
end-i: 1384
i: 1380
end-i: 1384
i: 1384
end-i: 1384
i:1384 HIT CHUNK END
(comment . ";;1376: r3 <- r3, 0x1\n")
(comment . ";;1380 b 528")
chunklet-i: 1384; chunklet-start-i: 1384; chunklet-end-i: 1396
i: 1384
end-i: 1396
i: 1384
end-i: 1396
i: 1388
end-i: 1396
i: 1392
end-i: 1396
i: 1396
end-i: 1396
i:1396 HIT CHUNK END
(comment . ";;1384: r10 <- 0xE")
(comment . ";;1388: r15 <- 0x26")
(comment . ";;1392 b 452")
chunklet-i: 1396; chunklet-start-i: 1396; chunklet-end-i: 1424
i: 1396
end-i: 1424
i: 1400
end-i: 1424
i: 1404
end-i: 1424
i: 1408
end-i: 1424
i: 1412
end-i: 1424
i: 1416
end-i: 1424
i: 1420
end-i: 1424
i: 1424
end-i: 1424
i:1424 HIT CHUNK END
(comment . ";;1396: r14 <- r1, 0x28\n")
(comment . ";;1400: r14 <- r14, 0x7\n")
(comment . ";;1404: r5 <- r2, r9")
(comment . ";;1408: r2 <- r2, r0")
(comment . ";;1412: r13 <- r0, 0x68\n")
(comment . ";;1416: r13 <- r2")
(comment . ";;1420 b 468")
chunklet-i: 1424; chunklet-start-i: 1424; chunklet-end-i: 1456
i: 1424
end-i: 1456
i: 1424
end-i: 1456
i: 1428
end-i: 1456
i: 1432
end-i: 1456
i: 1436
end-i: 1456
i: 1440
end-i: 1456
i: 1444
end-i: 1456
i: 1448
end-i: 1456
i: 1452
end-i: 1456
i: 1456
end-i: 1456
i:1456 HIT CHUNK END
(comment . ";;1424: r14 <- r5, 0x7\n")
(comment . ";;1428: r4 <- r5, 0xF\n")
(comment . ";;1432: r14 <- 0x5")
(comment . ";;1436: r5 <- r2, r9")
(comment . ";;1440: r2 <- r2, r0")
(comment . ";;1444: r13 <- r0, 0x68\n")
(comment . ";;1448: r13 <- r2")
(comment . ";;1452 b 416")
chunklet-i: 1456; chunklet-start-i: 1456; chunklet-end-i: 1528
i: 1456
end-i: 1528
i: 1456
end-i: 1528
i: 1460
end-i: 1528
i: 1464
end-i: 1528
i: 1468
end-i: 1528
i: 1472
end-i: 1528
i: 1476
end-i: 1528
i: 1480
end-i: 1528
i: 1484
end-i: 1528
i: 1488
end-i: 1528
i: 1492
end-i: 1528
i: 1496
end-i: 1528
i: 1508
end-i: 1528
i: 1512
end-i: 1528
i: 1516
end-i: 1528
i: 1520
end-i: 1528
i: 1524
end-i: 1528
i: 1528
end-i: 1528
at header: 1528
(comment . ";;1456: r11 <- 0x5")
(comment . ";;1460: r14 <- r11, 0x7\n")
(comment . ";;1464: r14 <- r1, 0x30\n")
(comment . ";;1468: r14 <- r11, 0xF\n")
(comment . ";;1472: r14 <- r1, 0x28\n")
(comment . ";;1476: r9 <- r14, 0xF\n")
(comment . ";;1480: r4 <- r1, 0x10\n")
(comment . ";;1484: r15 <- r1, 0x18\n")
(comment . ";;1488: r10 <- r1, 0x20\n")
(comment . ";;1492: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1508: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1516: r15 <- r1, 0x0\n")
(comment . ";;1520: r4 <- 0x3")
(comment . ";;1524: b r5, 13")
chunklet-i: 1528; chunklet-start-i: 1544; chunklet-end-i: 1572
i: 1528
end-i: 1572
at header: 1528
i: 1544
end-i: 1572
i: 1548
end-i: 1572
i: 1552
end-i: 1572
i: 1556
end-i: 1572
i: 1560
end-i: 1572
i: 1564
end-i: 1572
i: 1568
end-i: 1572
i: 1572
end-i: 1572
i:1572 HIT CHUNK END
(comment . ";;1544: r1 <- r1, r8")
(comment . ";;1548: r14 <- 0x4")
(comment . ";;1552: r4 <- r1, 0x10\n")
(comment . ";;1556: r15 <- r1, 0x18\n")
(comment . ";;1560: r10 <- r1, 0x20\n")
(comment . ";;1564: r14 <- 0x6")
(comment . ";;1568 b 276")
chunklet-i: 1572; chunklet-start-i: 1572; chunklet-end-i: 1580
i: 1572
end-i: 1580
i: 1576
end-i: 1580
i: 1580
end-i: 1580
i:1580 HIT CHUNK END
(comment . ";;1572: r10 <- 0x26")
(comment . ";;1576 b 228")
chunklet-i: 1580; chunklet-start-i: 1580; chunklet-end-i: 1584
i: 1580
end-i: 1584
i: 1584
end-i: 1584
i:1584 HIT CHUNK END
(comment . ";;1580: r14 <- 0x26")
chunklet-i: 1584; chunklet-start-i: 1584; chunklet-end-i: 1596
i: 1584
end-i: 1596
i: 1584
end-i: 1596
i: 1588
end-i: 1596
i: 1592
end-i: 1596
i: 1596
end-i: 1596
i:1596 HIT CHUNK END
(comment . ";;1584: r13 <- r15, r7")
(comment . ";;1588: r13 <- 0x1")
(comment . ";;1592 b 192")
chunklet-i: 1596; chunklet-start-i: 1596; chunklet-end-i: 1608
i: 1596
end-i: 1608
i: 1600
end-i: 1608
i: 1604
end-i: 1608
i: 1608
end-i: 1608
i:1608 HIT CHUNK END
(comment . ";;1596: r15 <- r15, 0xF\n")
(comment . ";;1600: r10 <- 0x26")
(comment . ";;1604 b 140")
chunklet-i: 1608; chunklet-start-i: 1608; chunklet-end-i: 1612
i: 1608
end-i: 1612
i: 1612
end-i: 1612
i:1612 HIT CHUNK END
(comment . ";;1608: r13 <- 0x26")
chunklet-i: 1612; chunklet-start-i: 1612; chunklet-end-i: 1632
i: 1612
end-i: 1632
i: 1612
end-i: 1632
i: 1616
end-i: 1632
i: 1620
end-i: 1632
i: 1624
end-i: 1632
i: 1628
end-i: 1632
i: 1632
end-i: 1632
i:1632 HIT CHUNK END
(comment . ";;1612: r5 <- r2, r9")
(comment . ";;1616: r2 <- r2, r0")
(comment . ";;1620: r12 <- r0, 0x68\n")
(comment . ";;1624: r12 <- r2")
(comment . ";;1628 b 96")
chunklet-i: 1632; chunklet-start-i: 1632; chunklet-end-i: 1696
i: 1632
end-i: 1696
i: 1632
end-i: 1696
i: 1636
end-i: 1696
i: 1640
end-i: 1696
i: 1644
end-i: 1696
i: 1648
end-i: 1696
i: 1652
end-i: 1696
i: 1656
end-i: 1696
i: 1660
end-i: 1696
i: 1664
end-i: 1696
i: 1676
end-i: 1696
i: 1680
end-i: 1696
i: 1684
end-i: 1696
i: 1688
end-i: 1696
i: 1692
end-i: 1696
i: 1696
end-i: 1696
at header: 1696
(comment . ";;1632: r10 <- 0x5")
(comment . ";;1636: r13 <- r10, 0x7\n")
(comment . ";;1640: r13 <- 0x26")
(comment . ";;1644: r13 <- r10, 0xF\n")
(comment . ";;1648: r9 <- 0x4")
(comment . ";;1652: r15 <- r1, 0x18\n")
(comment . ";;1656: r14 <- r1, 0x8\n")
(comment . ";;1660: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;1676: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;1684: r15 <- r1, 0x0\n")
(comment . ";;1688: r4 <- 0x2")
(comment . ";;1692: b r5, 13")
chunklet-i: 1696; chunklet-start-i: 1712; chunklet-end-i: 1728
i: 1696
end-i: 1728
at header: 1696
i: 1712
end-i: 1728
i: 1716
end-i: 1728
i: 1720
end-i: 1728
i: 1724
end-i: 1728
i: 1728
end-i: 1728
i:1728 HIT CHUNK END
(comment . ";;1712: r1 <- r1, r8")
(comment . ";;1716: r15 <- r1, 0x18\n")
(comment . ";;1720: r14 <- r1, 0x8\n")
(comment . ";;1724 b -352")
chunklet-i: 1728; chunklet-start-i: 1728; chunklet-end-i: 1740
i: 1728
end-i: 1740
i: 1728
end-i: 1740
i: 1740
end-i: 1740
i:1740 HIT CHUNK END
(comment . ";; literal r12")
chunklet-i: 1740; chunklet-start-i: 1744; chunklet-end-i: 1748
i: 1740
end-i: 1748
i: 1744
end-i: 1748
i: 1748
end-i: 1748
i:1748 HIT CHUNK END
(comment . ";; instruction 1740 not included")
(comment . ";;1744 b -116")
chunklet-i: 1748; chunklet-start-i: 1748; chunklet-end-i: 1760
i: 1748
end-i: 1760
i: 1748
end-i: 1760
i: 1752
end-i: 1760
i: 1756
end-i: 1760
i: 1760
end-i: 1760
i:1760 HIT CHUNK END
(comment . ";;1748: r13 <- r10, r7")
(comment . ";;1752: r13 <- 0x1")
(comment . ";;1756 b 8")
chunklet-i: 1760; chunklet-start-i: 1760; chunklet-end-i: 1768
i: 1760
end-i: 1768
i: 1764
end-i: 1768
i: 1768
end-i: 1768
i:1768 HIT CHUNK END
(comment . ";;1760: r13 <- r10, 0x7\n")
(comment . ";;1764 b -156")
chunklet-i: 1768; chunklet-start-i: 1768; chunklet-end-i: 1788
i: 1768
end-i: 1788
i: 1768
end-i: 1788
i: 1772
end-i: 1788
i: 1784
end-i: 1788
i: 1788
end-i: 1788
i:1788 HIT CHUNK END
(comment . ";;1768: r9 <- 0xA")
(comment . ";; literal r6")
(comment . ";;1784: b r6")
chunklet-i: 1788; chunklet-start-i: 1788; chunklet-end-i: 1808
i: 1788
end-i: 1808
i: 1788
end-i: 1808
i: 1792
end-i: 1808
i: 1804
end-i: 1808
i: 1808
end-i: 1808
i:1808 HIT CHUNK END
(comment . ";;1788: r9 <- 0xF")
(comment . ";; literal r6")
(comment . ";;1804: b r6")
chunklet-i: 1808; chunklet-start-i: 1808; chunklet-end-i: 1820
i: 1808
end-i: 1820
i: 1808
end-i: 1820
i: 1812
end-i: 1820
i: 1816
end-i: 1820
i: 1820
end-i: 1820
i:1820 HIT CHUNK END
(comment . ";;1808: r14 <- r10, r7")
(comment . ";;1812: r14 <- 0x1")
(comment . ";;1816 b 8")
chunklet-i: 1820; chunklet-start-i: 1820; chunklet-end-i: 1828
i: 1820
end-i: 1828
i: 1824
end-i: 1828
i: 1828
end-i: 1828
i:1828 HIT CHUNK END
(comment . ";;1820: r14 <- r10, 0xF\n")
(comment . ";;1824 b -244")
chunklet-i: 1828; chunklet-start-i: 1828; chunklet-end-i: 1848
i: 1828
end-i: 1848
i: 1828
end-i: 1848
i: 1832
end-i: 1848
i: 1844
end-i: 1848
i: 1848
end-i: 1848
i:1848 HIT CHUNK END
(comment . ";;1828: r9 <- 0xA")
(comment . ";; literal r6")
(comment . ";;1844: b r6")
chunklet-i: 1848; chunklet-start-i: 1848; chunklet-end-i: 1856
i: 1848
end-i: 1856
i: 1848
end-i: 1856
i: 1852
end-i: 1856
i: 1856
end-i: 1856
i:1856 HIT CHUNK END
(comment . ";;1848: r15 <- 0x26")
(comment . ";;1852 b 8")
chunklet-i: 1856; chunklet-start-i: 1856; chunklet-end-i: 1864
i: 1856
end-i: 1864
i: 1860
end-i: 1864
i: 1864
end-i: 1864
i:1864 HIT CHUNK END
(comment . ";;1856: r4 <- 0x6")
(comment . ";;1860: b r1, 0")
chunklet-i: 1864; chunklet-start-i: 1864; chunklet-end-i: 1872
i: 1864
end-i: 1872
i: 1864
end-i: 1872
i: 1868
end-i: 1872
i: 1872
end-i: 1872
i:1872 HIT CHUNK END
(comment . ";;1864: r4 <- 0xE")
(comment . ";;1868: b r1, 0")
chunklet-i: 1872; chunklet-start-i: 1872; chunklet-end-i: 1884
i: 1872
end-i: 1884
i: 1872
end-i: 1884
i: 1884
end-i: 1884
i:1884 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 1884; chunklet-start-i: 1888; chunklet-end-i: 1892
i: 1884
end-i: 1892
i: 1888
end-i: 1892
i: 1892
end-i: 1892
i:1892 HIT CHUNK END
(comment . ";; instruction 1884 not included")
(comment . ";;1888 b -436")
chunklet-i: 1892; chunklet-start-i: 1892; chunklet-end-i: 1904
i: 1892
end-i: 1904
i: 1892
end-i: 1904
i: 1904
end-i: 1904
i:1904 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 1904; chunklet-start-i: 1908; chunklet-end-i: 1912
i: 1904
end-i: 1912
i: 1908
end-i: 1912
i: 1912
end-i: 1912
i:1912 HIT CHUNK END
(comment . ";; instruction 1904 not included")
(comment . ";;1908 b -488")
chunklet-i: 1912; chunklet-start-i: 1912; chunklet-end-i: 1952
i: 1912
end-i: 1952
i: 1912
end-i: 1952
i: 1916
end-i: 1952
i: 1920
end-i: 1952
i: 1924
end-i: 1952
i: 1928
end-i: 1952
i: 1932
end-i: 1952
i: 1936
end-i: 1952
i: 1948
end-i: 1952
i: 1952
end-i: 1952
at header: 1952
(comment . ";;1912: r4 <- r1, 0x10\n")
(comment . ";;1916: r15 <- r1, 0x18\n")
(comment . ";;1920: r14 <- r1, 0x8\n")
(comment . ";;1924: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;1932: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;1948: b r6")
chunklet-i: 1952; chunklet-start-i: 1968; chunklet-end-i: 1988
i: 1952
end-i: 1988
at header: 1952
i: 1968
end-i: 1988
i: 1972
end-i: 1988
i: 1976
end-i: 1988
i: 1980
end-i: 1988
i: 1984
end-i: 1988
i: 1988
end-i: 1988
i:1988 HIT CHUNK END
(comment . ";;1968: r1 <- r1, r8")
(comment . ";;1972: r4 <- r1, 0x10\n")
(comment . ";;1976: r15 <- r1, 0x18\n")
(comment . ";;1980: r14 <- r1, 0x8\n")
(comment . ";;1984 b -604")
chunklet-i: 1988; chunklet-start-i: 1988; chunklet-end-i: 2000
i: 1988
end-i: 2000
i: 1988
end-i: 2000
i: 2000
end-i: 2000
i:2000 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 2000; chunklet-start-i: 2004; chunklet-end-i: 2008
i: 2000
end-i: 2008
i: 2004
end-i: 2008
i: 2008
end-i: 2008
i:2008 HIT CHUNK END
(comment . ";; instruction 2000 not included")
(comment . ";;2004 b -652")
chunklet-i: 2008; chunklet-start-i: 2008; chunklet-end-i: 2020
i: 2008
end-i: 2020
i: 2008
end-i: 2020
i: 2012
end-i: 2020
i: 2016
end-i: 2020
i: 2020
end-i: 2020
i:2020 HIT CHUNK END
(comment . ";;2008: r14 <- r4, r7")
(comment . ";;2012: r14 <- 0x1")
(comment . ";;2016 b 112")
chunklet-i: 2020; chunklet-start-i: 2020; chunklet-end-i: 2072
i: 2020
end-i: 2072
i: 2024
end-i: 2072
i: 2028
end-i: 2072
i: 2032
end-i: 2072
i: 2036
end-i: 2072
i: 2040
end-i: 2072
i: 2052
end-i: 2072
i: 2056
end-i: 2072
i: 2060
end-i: 2072
i: 2064
end-i: 2072
i: 2068
end-i: 2072
i: 2072
end-i: 2072
at header: 2072
(comment . ";;2020: r9 <- r4, 0xF\n")
(comment . ";;2024: r14 <- r1, 0x28\n")
(comment . ";;2028: r10 <- r14, 0xF\n")
(comment . ";;2032: r15 <- r1, 0x8\n")
(comment . ";;2036: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;2052: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;2060: r15 <- r1, 0x0\n")
(comment . ";;2064: r4 <- 0x2")
(comment . ";;2068: b r5, 13")
chunklet-i: 2072; chunklet-start-i: 2088; chunklet-end-i: 2132
i: 2072
end-i: 2132
at header: 2072
i: 2088
end-i: 2132
i: 2092
end-i: 2132
i: 2096
end-i: 2132
i: 2100
end-i: 2132
i: 2104
end-i: 2132
i: 2108
end-i: 2132
i: 2120
end-i: 2132
i: 2124
end-i: 2132
i: 2128
end-i: 2132
i: 2132
end-i: 2132
i:2132 HIT CHUNK END
(comment . ";;2088: r1 <- r1, r8")
(comment . ";;2092: r15 <- r1, 0x8\n")
(comment . ";;2096: r9 <- 0x4")
(comment . ";;2100: r10 <- 0xF")
(comment . ";;2104: r11 <- r1, 0x30\n")
(comment . ";; literal r5")
(comment . ";;2120: r8 <- r5, 0x5\n")
(comment . ";;2124: r4 <- 0x3")
(comment . ";;2128: b r5, 13")
chunklet-i: 2132; chunklet-start-i: 2132; chunklet-end-i: 2152
i: 2132
end-i: 2152
i: 2132
end-i: 2152
i: 2136
end-i: 2152
i: 2148
end-i: 2152
i: 2152
end-i: 2152
i:2152 HIT CHUNK END
(comment . ";;2132: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;2148: b r6")
chunklet-i: 2152; chunklet-start-i: 2152; chunklet-end-i: 2160
i: 2152
end-i: 2160
i: 2152
end-i: 2160
i: 2156
end-i: 2160
i: 2160
end-i: 2160
i:2160 HIT CHUNK END
(comment . ";;2152: r4 <- 0x6")
(comment . ";;2156: b r1, 0")
chunklet-i: 2160; chunklet-start-i: 2160; chunklet-end-i: 2184
i: 2160
end-i: 2184
i: 2160
end-i: 2184
i: 2164
end-i: 2184
i: 2168
end-i: 2184
i: 2180
end-i: 2184
i: 2184
end-i: 2184
i:2184 HIT CHUNK END
(comment . ";;2160: r9 <- 0x4")
(comment . ";;2164: r10 <- 0x0")
(comment . ";; literal r6")
(comment . ";;2180: b r6")
chunklet-i: 2184; chunklet-start-i: 2184; chunklet-end-i: 2208
i: 2184
end-i: 2208
i: 2184
end-i: 2208
i: 2188
end-i: 2208
i: 2192
end-i: 2208
i: 2204
end-i: 2208
i: 2208
end-i: 2208
i:2208 HIT CHUNK END
(comment . ";;2184: r9 <- 0x4")
(comment . ";;2188: r10 <- 0x0")
(comment . ";; literal r6")
(comment . ";;2204: b r6")
chunklet-i: 2208; chunklet-start-i: 2208; chunklet-end-i: 2240
i: 2208
end-i: 2240
i: 2208
end-i: 2240
i: 2212
end-i: 2240
i: 2216
end-i: 2240
i: 2220
end-i: 2240
i: 2224
end-i: 2240
i: 2236
end-i: 2240
i: 2240
end-i: 2240
at header: 2240
(comment . ";;2208: r15 <- r1, 0x8\n")
(comment . ";;2212: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2220: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2236: b r6")
chunklet-i: 2240; chunklet-start-i: 2256; chunklet-end-i: 2272
i: 2240
end-i: 2272
at header: 2240
i: 2256
end-i: 2272
i: 2260
end-i: 2272
i: 2264
end-i: 2272
i: 2268
end-i: 2272
i: 2272
end-i: 2272
i:2272 HIT CHUNK END
(comment . ";;2260: r1 <- r1, r8")
(comment . ";;2264: r15 <- r1, 0x8\n")
(comment . ";;2268 b -1648")
chunklet-i: 2272; chunklet-start-i: 2272; chunklet-end-i: 2284
i: 2272
end-i: 2284
i: 2272
end-i: 2284
i: 2284
end-i: 2284
i:2284 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 2284; chunklet-start-i: 2288; chunklet-end-i: 2292
i: 2284
end-i: 2292
i: 2288
end-i: 2292
i: 2292
end-i: 2292
i:2292 HIT CHUNK END
(comment . ";; instruction 2284 not included")
(comment . ";;2288 b -1676")
chunklet-i: 2292; chunklet-start-i: 2292; chunklet-end-i: 2304
i: 2292
end-i: 2304
i: 2292
end-i: 2304
i: 2296
end-i: 2304
i: 2300
end-i: 2304
i: 2304
end-i: 2304
i:2304 HIT CHUNK END
(comment . ";;2292: r14 <- r0, 0x58\n")
(comment . ";;2296: r1 <- r14")
(comment . ";;2300 b 292")
chunklet-i: 2304; chunklet-start-i: 2304; chunklet-end-i: 2312
i: 2304
end-i: 2312
i: 2304
end-i: 2312
i: 2308
end-i: 2312
i: 2312
end-i: 2312
i:2312 HIT CHUNK END
(comment . ";;2304: r3 <- r3, 0x1\n")
(comment . ";;2308 b 224")
chunklet-i: 2312; chunklet-start-i: 2312; chunklet-end-i: 2368
i: 2312
end-i: 2368
i: 2312
end-i: 2368
i: 2316
end-i: 2368
i: 2320
end-i: 2368
i: 2324
end-i: 2368
i: 2328
end-i: 2368
i: 2332
end-i: 2368
i: 2336
end-i: 2368
i: 2348
end-i: 2368
i: 2352
end-i: 2368
i: 2356
end-i: 2368
i: 2360
end-i: 2368
i: 2364
end-i: 2368
i: 2368
end-i: 2368
at header: 2368
(comment . ";;2312: r14 <- r1, 0x28\n")
(comment . ";;2316: r9 <- r14, 0xF\n")
(comment . ";;2320: r10 <- 0xF")
(comment . ";;2324: r11 <- r1, 0x30\n")
(comment . ";;2328: r15 <- r1, 0x8\n")
(comment . ";;2332: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;2348: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;2356: r15 <- r1, 0x0\n")
(comment . ";;2360: r4 <- 0x3")
(comment . ";;2364: b r5, 13")
chunklet-i: 2368; chunklet-start-i: 2384; chunklet-end-i: 2400
i: 2368
end-i: 2400
at header: 2368
i: 2384
end-i: 2400
i: 2388
end-i: 2400
i: 2392
end-i: 2400
i: 2396
end-i: 2400
i: 2400
end-i: 2400
i:2400 HIT CHUNK END
(comment . ";;2384: r1 <- r1, r8")
(comment . ";;2388: r15 <- r1, 0x8\n")
(comment . ";;2392: r4 <- 0x6")
(comment . ";;2396 b 132")
chunklet-i: 2400; chunklet-start-i: 2400; chunklet-end-i: 2456
i: 2400
end-i: 2456
i: 2404
end-i: 2456
i: 2408
end-i: 2456
i: 2412
end-i: 2456
i: 2416
end-i: 2456
i: 2420
end-i: 2456
i: 2424
end-i: 2456
i: 2436
end-i: 2456
i: 2440
end-i: 2456
i: 2444
end-i: 2456
i: 2448
end-i: 2456
i: 2452
end-i: 2456
i: 2456
end-i: 2456
at header: 2456
(comment . ";;2400: r14 <- r1, 0x28\n")
(comment . ";;2404: r9 <- r14, 0xF\n")
(comment . ";;2408: r10 <- r15, 0xF\n")
(comment . ";;2412: r11 <- r1, 0x30\n")
(comment . ";;2416: r15 <- r1, 0x8\n")
(comment . ";;2420: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;2436: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;2444: r15 <- r1, 0x0\n")
(comment . ";;2448: r4 <- 0x3")
(comment . ";;2452: b r5, 13")
chunklet-i: 2456; chunklet-start-i: 2472; chunklet-end-i: 2492
i: 2456
end-i: 2492
at header: 2456
i: 2472
end-i: 2492
i: 2476
end-i: 2492
i: 2480
end-i: 2492
i: 2484
end-i: 2492
i: 2488
end-i: 2492
i: 2492
end-i: 2492
i:2492 HIT CHUNK END
(comment . ";;2472: r1 <- r1, r8")
(comment . ";;2476: r15 <- r1, 0x8\n")
(comment . ";;2480: r4 <- 0x6")
(comment . ";;2488 b 36")
chunklet-i: 2492; chunklet-start-i: 2492; chunklet-end-i: 2528
i: 2492
end-i: 2528
i: 2496
end-i: 2528
i: 2500
end-i: 2528
i: 2504
end-i: 2528
i: 2516
end-i: 2528
i: 2520
end-i: 2528
i: 2524
end-i: 2528
i: 2528
end-i: 2528
i:2528 HIT CHUNK END
(comment . ";;2492: r9 <- r1, 0x28\n")
(comment . ";;2496: r10 <- r15, 0xF\n")
(comment . ";;2500: r11 <- r1, 0x30\n")
(comment . ";; literal r5")
(comment . ";;2516: r8 <- r5, 0x5\n")
(comment . ";;2520: r4 <- 0x3")
(comment . ";;2524: b r5, 13")
chunklet-i: 2528; chunklet-start-i: 2528; chunklet-end-i: 2532
i: 2528
end-i: 2532
i: 2528
end-i: 2532
i: 2532
end-i: 2532
i:2532 HIT CHUNK END
(comment . ";;2528: b r1, 0")
chunklet-i: 2532; chunklet-start-i: 2532; chunklet-end-i: 2536
i: 2532
end-i: 2536
i: 2532
end-i: 2536
i: 2536
end-i: 2536
i:2536 HIT CHUNK END
(comment . ";;2532: b r1, 0")
chunklet-i: 2536; chunklet-start-i: 2536; chunklet-end-i: 2568
i: 2536
end-i: 2568
i: 2536
end-i: 2568
i: 2540
end-i: 2568
i: 2544
end-i: 2568
i: 2548
end-i: 2568
i: 2552
end-i: 2568
i: 2564
end-i: 2568
i: 2568
end-i: 2568
at header: 2568
(comment . ";;2536: r15 <- r1, 0x8\n")
(comment . ";;2540: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;2548: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;2564: b r6")
chunklet-i: 2568; chunklet-start-i: 2584; chunklet-end-i: 2596
i: 2568
end-i: 2596
at header: 2568
i: 2584
end-i: 2596
i: 2588
end-i: 2596
i: 2592
end-i: 2596
i: 2596
end-i: 2596
i:2596 HIT CHUNK END
(comment . ";;2584: r1 <- r1, r8")
(comment . ";;2588: r15 <- r1, 0x8\n")
(comment . ";;2592 b -284")
chunklet-i: 2596; chunklet-start-i: 2596; chunklet-end-i: 2608
i: 2596
end-i: 2608
i: 2596
end-i: 2608
i: 2608
end-i: 2608
i:2608 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 2608; chunklet-start-i: 2612; chunklet-end-i: 2616
i: 2608
end-i: 2616
i: 2612
end-i: 2616
i: 2616
end-i: 2616
i:2616 HIT CHUNK END
(comment . ";; instruction 2608 not included")
(comment . ";;2612 b -312")
chunklet-i: 2616; chunklet-start-i: 2616; chunklet-end-i: 2636
i: 2616
end-i: 2636
i: 2616
end-i: 2636
i: 2620
end-i: 2636
i: 2632
end-i: 2636
i: 2636
end-i: 2636
i:2636 HIT CHUNK END
(comment . ";;2616: r9 <- 0xF")
(comment . ";; literal r6")
(comment . ";;2632: b r6")
chunklet-i: 2636; chunklet-start-i: 2636; chunklet-end-i: 2656
i: 2636
end-i: 2656
i: 2636
end-i: 2656
i: 2640
end-i: 2656
i: 2652
end-i: 2656
i: 2656
end-i: 2656
i:2656 HIT CHUNK END
(comment . ";;2636: r9 <- r1, 0x28\n")
(comment . ";; literal r6")
(comment . ";;2652: b r6")
chunklet-i: 2656; chunklet-start-i: 2656; chunklet-end-i: 2672
i: 2656
end-i: 2672
i: 2656
end-i: 2672
i: 2668
end-i: 2672
i: 2672
end-i: 2672
i:2672 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;2668: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 16
instruction range for chunk: 16 24
instruction range for chunk: 24 104
instruction range for chunk: 120 168
instruction range for chunk: 184 208
instruction range for chunk: 208 220
instruction range for chunk: 220 232
instruction range for chunk: 232 260
instruction range for chunk: 260 272
instruction range for chunk: 276 284
instruction range for chunk: 284 312
instruction range for chunk: 328 336
instruction range for chunk: 336 348
instruction range for chunk: 352 356
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 16
i: 0
end-i: 16
i: 4
end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;4: r15 <- r0, 0x58\n")
(comment . ";;8: r1 <- r15")
(comment . ";;12 b 320")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 24
i: 16
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;16: r3 <- r3, 0x1\n")
(comment . ";;20 b 260")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 104
i: 24
end-i: 104
i: 24
end-i: 104
i: 36
end-i: 104
i: 40
end-i: 104
i: 52
end-i: 104
i: 56
end-i: 104
i: 60
end-i: 104
i: 64
end-i: 104
i: 68
end-i: 104
i: 72
end-i: 104
i: 84
end-i: 104
i: 88
end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
at header: 104
(comment . ";; literal r15")
(comment . ";;36: r15 <- r1, 0x8\n")
(comment . ";; literal r15")
(comment . ";;52: r15 <- r1, 0x18\n")
(comment . ";;56: r9 <- 0x320")
(comment . ";;60: r10 <- 0x50")
(comment . ";;64: r11 <- 0x20")
(comment . ";;68: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;84: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;92: r15 <- r1, 0x0\n")
(comment . ";;96: r4 <- 0x4")
(comment . ";;100: b r5, 13")
chunklet-i: 104; chunklet-start-i: 120; chunklet-end-i: 168
i: 104
end-i: 168
at header: 104
i: 120
end-i: 168
i: 124
end-i: 168
i: 128
end-i: 168
i: 132
end-i: 168
i: 136
end-i: 168
i: 148
end-i: 168
i: 152
end-i: 168
i: 156
end-i: 168
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
at header: 168
(comment . ";;120: r1 <- r1, r0")
(comment . ";;124: r9 <- 0x4")
(comment . ";;128: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;148: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;156: r15 <- r1, 0x0\n")
(comment . ";;160: r4 <- 0x1")
(comment . ";;164: b r5, 13")
chunklet-i: 168; chunklet-start-i: 184; chunklet-end-i: 208
i: 168
end-i: 208
at header: 168
i: 184
end-i: 208
i: 188
end-i: 208
i: 192
end-i: 208
i: 196
end-i: 208
i: 200
end-i: 208
i: 204
end-i: 208
i: 208
end-i: 208
i:208 HIT CHUNK END
(comment . ";;184: r1 <- r1, r0")
(comment . ";;188: r15 <- r1, 0x8\n")
(comment . ";;192: r15 <- r15, r5")
(comment . ";;196: r4 <- r15, 0x0\n")
(comment . ";;200: r4 <- 0x7")
(comment . ";;204 b 24")
chunklet-i: 208; chunklet-start-i: 208; chunklet-end-i: 220
i: 208
end-i: 220
i: 212
end-i: 220
i: 216
end-i: 220
i: 220
end-i: 220
i:220 HIT CHUNK END
(comment . ";;208: r7 <- r0, 0x68\n")
(comment . ";;212: r2 <- r7")
(comment . ";;216 b 40")
chunklet-i: 220; chunklet-start-i: 220; chunklet-end-i: 232
i: 220
end-i: 232
i: 220
end-i: 232
i: 224
end-i: 232
i: 228
end-i: 232
i: 232
end-i: 232
i:232 HIT CHUNK END
(comment . ";;220: r7 <- r7, r8")
(comment . ";;224: r7 <- r0, 0x68\n")
(comment . ";;228: r15 <- r7, 0x0\n")
chunklet-i: 232; chunklet-start-i: 232; chunklet-end-i: 260
i: 232
end-i: 260
i: 232
end-i: 260
i: 244
end-i: 260
i: 248
end-i: 260
i: 252
end-i: 260
i: 256
end-i: 260
i: 260
end-i: 260
i:260 HIT CHUNK END
(comment . ";; literal r14")
(comment . ";;244: r15 <- r1, 0x8\n")
(comment . ";;248: r14 <- r15, 0xD\n")
(comment . ";;252: r4 <- 0x2E")
(comment . ";;256: b r1, 0")
chunklet-i: 260; chunklet-start-i: 260; chunklet-end-i: 272
i: 260
end-i: 272
i: 260
end-i: 272
i: 272
end-i: 272
i:272 HIT CHUNK END
(comment . ";; literal r14")
chunklet-i: 272; chunklet-start-i: 276; chunklet-end-i: 284
i: 272
end-i: 284
i: 276
end-i: 284
i: 280
end-i: 284
i: 284
end-i: 284
i:284 HIT CHUNK END
(comment . ";; instruction 272 not included")
(comment . ";;276: r7 <- r0, 0x68\n")
(comment . ";;280 b -64")
chunklet-i: 284; chunklet-start-i: 284; chunklet-end-i: 312
i: 284
end-i: 312
i: 284
end-i: 312
i: 288
end-i: 312
i: 292
end-i: 312
i: 296
end-i: 312
i: 308
end-i: 312
i: 312
end-i: 312
at header: 312
(comment . ";;284: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;292: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;308: b r6")
chunklet-i: 312; chunklet-start-i: 328; chunklet-end-i: 336
i: 312
end-i: 336
at header: 312
i: 328
end-i: 336
i: 332
end-i: 336
i: 336
end-i: 336
i:336 HIT CHUNK END
(comment . ";;328: r1 <- r1, r8")
(comment . ";;332 b -312")
chunklet-i: 336; chunklet-start-i: 336; chunklet-end-i: 348
i: 336
end-i: 348
i: 336
end-i: 348
i: 348
end-i: 348
i:348 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 348; chunklet-start-i: 352; chunklet-end-i: 356
i: 348
end-i: 356
i: 352
end-i: 356
i: 356
end-i: 356
i:356 HIT CHUNK END
(comment . ";; instruction 348 not included")
(comment . ";;352 b -340")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: browse
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
instruction range for chunk: 32 56
instruction range for chunk: 56 60
instruction range for chunk: 60 96
instruction range for chunk: 112 140
instruction range for chunk: 140 144
instruction range for chunk: 144 160
instruction range for chunk: 160 192
instruction range for chunk: 208 224
instruction range for chunk: 224 236
instruction range for chunk: 240 244
instruction range for chunk: 244 260
instruction range for chunk: 260 276
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 252")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x1")
(comment . ";;12 b 228")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";;16: r10 <- 0x9")
(comment . ";;20: r15 <- r0, 0x58\n")
(comment . ";;24: r1 <- r15")
(comment . ";;28 b 192")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 56
i: 32
end-i: 56
i: 32
end-i: 56
i: 44
end-i: 56
i: 48
end-i: 56
i: 52
end-i: 56
i: 56
end-i: 56
i:56 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;44: r15 <- r9, 0x5\n")
(comment . ";;48: r15 <- 0x1E")
(comment . ";;52 b 104")
chunklet-i: 56; chunklet-start-i: 56; chunklet-end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;56: r9 <- 0xF")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 96
i: 60
end-i: 96
i: 60
end-i: 96
i: 64
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 84
end-i: 96
i: 88
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;60: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;76: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;84: r15 <- r1, 0x0\n")
(comment . ";;88: r4 <- 0x2")
(comment . ";;92: b r5, 13")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 140
i: 96
end-i: 140
at header: 96
i: 112
end-i: 140
i: 116
end-i: 140
i: 128
end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";; literal r9")
(comment . ";;128: r4 <- r9, 0x5\n")
(comment . ";;132: r4 <- 0x1E")
(comment . ";;136 b 4")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
i:144 HIT CHUNK END
(comment . ";;140: b r1, 0")
chunklet-i: 144; chunklet-start-i: 144; chunklet-end-i: 160
i: 144
end-i: 160
i: 144
end-i: 160
i: 156
end-i: 160
i: 160
end-i: 160
i:160 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;156: b r6")
chunklet-i: 160; chunklet-start-i: 160; chunklet-end-i: 192
i: 160
end-i: 192
i: 160
end-i: 192
i: 164
end-i: 192
i: 168
end-i: 192
i: 172
end-i: 192
i: 176
end-i: 192
i: 188
end-i: 192
i: 192
end-i: 192
at header: 192
(comment . ";;160: r10 <- r1, 0x8\n")
(comment . ";;164: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;172: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;188: b r6")
chunklet-i: 192; chunklet-start-i: 208; chunklet-end-i: 224
i: 192
end-i: 224
at header: 192
i: 208
end-i: 224
i: 212
end-i: 224
i: 216
end-i: 224
i: 220
end-i: 224
i: 224
end-i: 224
i:224 HIT CHUNK END
(comment . ";;208: r1 <- r1, r0")
(comment . ";;212: r9 <- 0x4")
(comment . ";;216: r10 <- r1, 0x8\n")
(comment . ";;220 b -164")
chunklet-i: 224; chunklet-start-i: 224; chunklet-end-i: 236
i: 224
end-i: 236
i: 224
end-i: 236
i: 236
end-i: 236
i:236 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 236; chunklet-start-i: 240; chunklet-end-i: 244
i: 236
end-i: 244
i: 240
end-i: 244
i: 244
end-i: 244
i:244 HIT CHUNK END
(comment . ";; instruction 236 not included")
(comment . ";;240 b -212")
chunklet-i: 244; chunklet-start-i: 244; chunklet-end-i: 260
i: 244
end-i: 260
i: 244
end-i: 260
i: 256
end-i: 260
i: 260
end-i: 260
i:260 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;256: b r6")
chunklet-i: 260; chunklet-start-i: 260; chunklet-end-i: 276
i: 260
end-i: 276
i: 260
end-i: 276
i: 272
end-i: 276
i: 276
end-i: 276
i:276 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;272: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: investigate
instruction range for chunk: 0 8
instruction range for chunk: 8 24
instruction range for chunk: 24 40
instruction range for chunk: 40 48
instruction range for chunk: 48 52
instruction range for chunk: 52 60
instruction range for chunk: 60 68
instruction range for chunk: 68 84
instruction range for chunk: 84 144
instruction range for chunk: 160 168
instruction range for chunk: 168 176
instruction range for chunk: 176 184
instruction range for chunk: 184 196
instruction range for chunk: 196 212
instruction range for chunk: 212 264
instruction range for chunk: 280 300
instruction range for chunk: 300 320
instruction range for chunk: 320 340
instruction range for chunk: 340 376
instruction range for chunk: 392 412
instruction range for chunk: 412 424
instruction range for chunk: 424 432
instruction range for chunk: 432 452
instruction range for chunk: 452 472
instruction range for chunk: 472 504
instruction range for chunk: 520 532
instruction range for chunk: 532 548
instruction range for chunk: 548 560
instruction range for chunk: 560 580
instruction range for chunk: 580 608
instruction range for chunk: 624 632
instruction range for chunk: 632 640
instruction range for chunk: 640 652
instruction range for chunk: 656 660
instruction range for chunk: 660 676
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x2")
(comment . ";;4 b 652")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 24
i: 8
end-i: 24
i: 12
end-i: 24
i: 16
end-i: 24
i: 20
end-i: 24
i: 24
end-i: 24
i:24 HIT CHUNK END
(comment . ";;8: r10 <- r1, 0x8\n")
(comment . ";;12: r15 <- r0, 0x58\n")
(comment . ";;16: r1 <- r15")
(comment . ";;20 b 616")
chunklet-i: 24; chunklet-start-i: 24; chunklet-end-i: 40
i: 24
end-i: 40
i: 24
end-i: 40
i: 28
end-i: 40
i: 32
end-i: 40
i: 36
end-i: 40
i: 40
end-i: 40
i:40 HIT CHUNK END
(comment . ";;24: r9 <- r1, 0x10\n")
(comment . ";;28: r15 <- r1, 0x10\n")
(comment . ";;32: r15 <- 0x26")
(comment . ";;36 b 592")
chunklet-i: 40; chunklet-start-i: 40; chunklet-end-i: 48
i: 40
end-i: 48
i: 44
end-i: 48
i: 48
end-i: 48
i:48 HIT CHUNK END
(comment . ";;40: r3 <- r3, 0x1\n")
(comment . ";;44 b 532")
chunklet-i: 48; chunklet-start-i: 48; chunklet-end-i: 52
i: 48
end-i: 52
i: 48
end-i: 52
i: 52
end-i: 52
i:52 HIT CHUNK END
(comment . ";;48: r15 <- r1, 0x8\n")
chunklet-i: 52; chunklet-start-i: 52; chunklet-end-i: 60
i: 52
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";;52: r15 <- 0x26")
(comment . ";;56 b 472")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";;60: r3 <- r3, 0x1\n")
(comment . ";;64 b 404")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 84
i: 68
end-i: 84
i: 68
end-i: 84
i: 72
end-i: 84
i: 76
end-i: 84
i: 80
end-i: 84
i: 84
end-i: 84
i:84 HIT CHUNK END
(comment . ";;68: r14 <- r1, 0x10\n")
(comment . ";;72: r14 <- r14, r7")
(comment . ";;76: r14 <- 0x1")
(comment . ";;80 b 368")
chunklet-i: 84; chunklet-start-i: 84; chunklet-end-i: 144
i: 84
end-i: 144
i: 88
end-i: 144
i: 92
end-i: 144
i: 104
end-i: 144
i: 108
end-i: 144
i: 112
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 132
end-i: 144
i: 136
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;84: r14 <- r1, 0x10\n")
(comment . ";;88: r9 <- r14, 0x7\n")
(comment . ";; literal r10")
(comment . ";;104: r15 <- r1, 0x18\n")
(comment . ";;108: r1 <- r1, r0")
(comment . ";; literal r5")
(comment . ";;124: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;132: r15 <- r1, 0x0\n")
(comment . ";;136: r4 <- 0x2")
(comment . ";;140: b r5, 13")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 168
i: 144
end-i: 168
at header: 144
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;160: r1 <- r1, r0")
(comment . ";;164: r15 <- r1, 0x18\n")
chunklet-i: 168; chunklet-start-i: 168; chunklet-end-i: 176
i: 168
end-i: 176
i: 168
end-i: 176
i: 172
end-i: 176
i: 176
end-i: 176
i:176 HIT CHUNK END
(comment . ";;168: r4 <- 0x26")
(comment . ";;172 b 236")
chunklet-i: 176; chunklet-start-i: 176; chunklet-end-i: 184
i: 176
end-i: 184
i: 180
end-i: 184
i: 184
end-i: 184
i:184 HIT CHUNK END
(comment . ";;176: r3 <- r3, 0x1\n")
(comment . ";;180 b 156")
chunklet-i: 184; chunklet-start-i: 184; chunklet-end-i: 196
i: 184
end-i: 196
i: 184
end-i: 196
i: 188
end-i: 196
i: 192
end-i: 196
i: 196
end-i: 196
i:196 HIT CHUNK END
(comment . ";;184: r14 <- r4, r7")
(comment . ";;188: r14 <- 0x1")
(comment . ";;192 b 124")
chunklet-i: 196; chunklet-start-i: 196; chunklet-end-i: 212
i: 196
end-i: 212
i: 200
end-i: 212
i: 204
end-i: 212
i: 208
end-i: 212
i: 212
end-i: 212
i:212 HIT CHUNK END
(comment . ";;196: r10 <- r4, 0x7\n")
(comment . ";;200: r14 <- r15, r7")
(comment . ";;204: r14 <- 0x1")
(comment . ";;208 b 88")
chunklet-i: 212; chunklet-start-i: 212; chunklet-end-i: 264
i: 212
end-i: 264
i: 216
end-i: 264
i: 220
end-i: 264
i: 224
end-i: 264
i: 228
end-i: 264
i: 232
end-i: 264
i: 244
end-i: 264
i: 248
end-i: 264
i: 252
end-i: 264
i: 256
end-i: 264
i: 260
end-i: 264
i: 264
end-i: 264
at header: 264
(comment . ";;212: r9 <- r15, 0x7\n")
(comment . ";;216: r11 <- 0x26")
(comment . ";;220: r15 <- r1, 0x18\n")
(comment . ";;224: r4 <- r1, 0x20\n")
(comment . ";;228: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;244: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;252: r15 <- r1, 0x0\n")
(comment . ";;256: r4 <- 0x3")
(comment . ";;260: b r5, 13")
chunklet-i: 264; chunklet-start-i: 280; chunklet-end-i: 300
i: 264
end-i: 300
at header: 264
i: 280
end-i: 300
i: 284
end-i: 300
i: 288
end-i: 300
i: 292
end-i: 300
i: 296
end-i: 300
i: 300
end-i: 300
i:300 HIT CHUNK END
(comment . ";;280: r1 <- r1, r8")
(comment . ";;284: r15 <- r1, 0x18\n")
(comment . ";;288: r4 <- r1, 0x20\n")
(comment . ";;292: r4 <- r4, 0xF\n")
(comment . ";;296 b -132")
chunklet-i: 300; chunklet-start-i: 300; chunklet-end-i: 320
i: 300
end-i: 320
i: 300
end-i: 320
i: 304
end-i: 320
i: 316
end-i: 320
i: 320
end-i: 320
i:320 HIT CHUNK END
(comment . ";;300: r9 <- 0xF")
(comment . ";; literal r6")
(comment . ";;316: b r6")
chunklet-i: 320; chunklet-start-i: 320; chunklet-end-i: 340
i: 320
end-i: 340
i: 320
end-i: 340
i: 324
end-i: 340
i: 336
end-i: 340
i: 340
end-i: 340
i:340 HIT CHUNK END
(comment . ";;320: r9 <- 0x4")
(comment . ";; literal r6")
(comment . ";;336: b r6")
chunklet-i: 340; chunklet-start-i: 340; chunklet-end-i: 376
i: 340
end-i: 376
i: 340
end-i: 376
i: 344
end-i: 376
i: 348
end-i: 376
i: 352
end-i: 376
i: 356
end-i: 376
i: 360
end-i: 376
i: 372
end-i: 376
i: 376
end-i: 376
at header: 376
(comment . ";;340: r15 <- r1, 0x18\n")
(comment . ";;344: r4 <- r1, 0x20\n")
(comment . ";;348: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;356: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;372: b r6")
chunklet-i: 376; chunklet-start-i: 392; chunklet-end-i: 412
i: 376
end-i: 412
at header: 376
i: 392
end-i: 412
i: 396
end-i: 412
i: 400
end-i: 412
i: 404
end-i: 412
i: 408
end-i: 412
i: 412
end-i: 412
i:412 HIT CHUNK END
(comment . ";;396: r1 <- r1, r8")
(comment . ";;400: r15 <- r1, 0x18\n")
(comment . ";;404: r4 <- r1, 0x20\n")
(comment . ";;408 b -228")
chunklet-i: 412; chunklet-start-i: 412; chunklet-end-i: 424
i: 412
end-i: 424
i: 412
end-i: 424
i: 416
end-i: 424
i: 420
end-i: 424
i: 424
end-i: 424
i:424 HIT CHUNK END
(comment . ";;412: r14 <- r15, r7")
(comment . ";;416: r14 <- 0x1")
(comment . ";;420 b 8")
chunklet-i: 424; chunklet-start-i: 424; chunklet-end-i: 432
i: 424
end-i: 432
i: 428
end-i: 432
i: 432
end-i: 432
i:432 HIT CHUNK END
(comment . ";;424: r15 <- r15, 0xF\n")
(comment . ";;428 b -380")
chunklet-i: 432; chunklet-start-i: 432; chunklet-end-i: 452
i: 432
end-i: 452
i: 432
end-i: 452
i: 436
end-i: 452
i: 448
end-i: 452
i: 452
end-i: 452
i:452 HIT CHUNK END
(comment . ";;432: r9 <- 0xF")
(comment . ";; literal r6")
(comment . ";;448: b r6")
chunklet-i: 452; chunklet-start-i: 452; chunklet-end-i: 472
i: 452
end-i: 472
i: 452
end-i: 472
i: 456
end-i: 472
i: 468
end-i: 472
i: 472
end-i: 472
i:472 HIT CHUNK END
(comment . ";;452: r9 <- r1, 0x10\n")
(comment . ";; literal r6")
(comment . ";;468: b r6")
chunklet-i: 472; chunklet-start-i: 472; chunklet-end-i: 504
i: 472
end-i: 504
i: 472
end-i: 504
i: 476
end-i: 504
i: 480
end-i: 504
i: 484
end-i: 504
i: 488
end-i: 504
i: 500
end-i: 504
i: 504
end-i: 504
at header: 504
(comment . ";;472: r15 <- r1, 0x18\n")
(comment . ";;476: r1 <- r1, r0")
(comment . ";; adr r15")
(comment . ";;484: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;500: b r6")
chunklet-i: 504; chunklet-start-i: 520; chunklet-end-i: 532
i: 504
end-i: 532
at header: 504
i: 520
end-i: 532
i: 524
end-i: 532
i: 528
end-i: 532
i: 532
end-i: 532
i:532 HIT CHUNK END
(comment . ";;520: r1 <- r1, r0")
(comment . ";;524: r15 <- r1, 0x18\n")
(comment . ";;528 b -464")
chunklet-i: 532; chunklet-start-i: 532; chunklet-end-i: 548
i: 532
end-i: 548
i: 532
end-i: 548
i: 536
end-i: 548
i: 540
end-i: 548
i: 544
end-i: 548
i: 548
end-i: 548
i:548 HIT CHUNK END
(comment . ";;532: r15 <- r1, 0x10\n")
(comment . ";;536: r15 <- r15, r7")
(comment . ";;540: r15 <- 0x1")
(comment . ";;544 b 12")
chunklet-i: 548; chunklet-start-i: 548; chunklet-end-i: 560
i: 548
end-i: 560
i: 552
end-i: 560
i: 556
end-i: 560
i: 560
end-i: 560
i:560 HIT CHUNK END
(comment . ";;548: r15 <- r1, 0x10\n")
(comment . ";;552: r9 <- r15, 0xF\n")
(comment . ";;556 b -536")
chunklet-i: 560; chunklet-start-i: 560; chunklet-end-i: 580
i: 560
end-i: 580
i: 560
end-i: 580
i: 564
end-i: 580
i: 576
end-i: 580
i: 580
end-i: 580
i:580 HIT CHUNK END
(comment . ";;560: r9 <- r1, 0x10\n")
(comment . ";; literal r6")
(comment . ";;576: b r6")
chunklet-i: 580; chunklet-start-i: 580; chunklet-end-i: 608
i: 580
end-i: 608
i: 580
end-i: 608
i: 584
end-i: 608
i: 588
end-i: 608
i: 592
end-i: 608
i: 604
end-i: 608
i: 608
end-i: 608
at header: 608
(comment . ";;580: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;588: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;604: b r6")
chunklet-i: 608; chunklet-start-i: 624; chunklet-end-i: 632
i: 608
end-i: 632
at header: 608
i: 624
end-i: 632
i: 628
end-i: 632
i: 632
end-i: 632
i:632 HIT CHUNK END
(comment . ";;624: r1 <- r1, r8")
(comment . ";;628 b -584")
chunklet-i: 632; chunklet-start-i: 632; chunklet-end-i: 640
i: 632
end-i: 640
i: 632
end-i: 640
i: 636
end-i: 640
i: 640
end-i: 640
i:640 HIT CHUNK END
(comment . ";;632: r4 <- 0x2E")
(comment . ";;636: b r1, 0")
chunklet-i: 640; chunklet-start-i: 640; chunklet-end-i: 652
i: 640
end-i: 652
i: 640
end-i: 652
i: 652
end-i: 652
i:652 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 652; chunklet-start-i: 656; chunklet-end-i: 660
i: 652
end-i: 660
i: 656
end-i: 660
i: 660
end-i: 660
i:660 HIT CHUNK END
(comment . ";; instruction 652 not included")
(comment . ";;656 b -636")
chunklet-i: 660; chunklet-start-i: 660; chunklet-end-i: 676
i: 660
end-i: 676
i: 660
end-i: 676
i: 672
end-i: 676
i: 676
end-i: 676
i:676 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;672: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 44
instruction range for chunk: 44 60
instruction range for chunk: 60 76
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 52")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x1")
(comment . ";;12 b 28")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 44
i: 16
end-i: 44
i: 20
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";;16: r10 <- r8, 0xB\n")
(comment . ";; literal r5")
(comment . ";;32: r8 <- r5, 0x5\n")
(comment . ";;36: r4 <- 0x2")
(comment . ";;40: b r5, 13")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 60
i: 44
end-i: 60
i: 44
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;56: b r6")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 76
i: 60
end-i: 76
i: 60
end-i: 76
i: 72
end-i: 76
i: 76
end-i: 76
i:76 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;72: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 28
instruction range for chunk: 28 72
instruction range for chunk: 88 120
instruction range for chunk: 120 132
instruction range for chunk: 136 140
instruction range for chunk: 140 156
instruction range for chunk: 156 172
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 148")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x0")
(comment . ";;12 b 124")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 28
i: 16
end-i: 28
i: 20
end-i: 28
i: 24
end-i: 28
i: 28
end-i: 28
i:28 HIT CHUNK END
(comment . ";;16: r15 <- r0, 0x58\n")
(comment . ";;20: r1 <- r15")
(comment . ";;24 b 92")
chunklet-i: 28; chunklet-start-i: 28; chunklet-end-i: 72
i: 28
end-i: 72
i: 28
end-i: 72
i: 32
end-i: 72
i: 36
end-i: 72
i: 40
end-i: 72
i: 52
end-i: 72
i: 56
end-i: 72
i: 60
end-i: 72
i: 64
end-i: 72
i: 68
end-i: 72
i: 72
end-i: 72
at header: 72
(comment . ";;28: r9 <- r8, 0x13\n")
(comment . ";;32: r10 <- r8, 0xB\n")
(comment . ";;36: r1 <- r1, r8")
(comment . ";; literal r5")
(comment . ";;52: r8 <- r5, 0x5\n")
(comment . ";; adr r15")
(comment . ";;60: r15 <- r1, 0x0\n")
(comment . ";;64: r4 <- 0x2")
(comment . ";;68: b r5, 13")
chunklet-i: 72; chunklet-start-i: 88; chunklet-end-i: 120
i: 72
end-i: 120
at header: 72
i: 88
end-i: 120
i: 92
end-i: 120
i: 96
end-i: 120
i: 108
end-i: 120
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;88: r1 <- r1, r8")
(comment . ";;92: r9 <- 0x4")
(comment . ";; literal r5")
(comment . ";;108: r8 <- r5, 0x5\n")
(comment . ";;112: r4 <- 0x1")
(comment . ";;116: b r5, 13")
chunklet-i: 120; chunklet-start-i: 120; chunklet-end-i: 132
i: 120
end-i: 132
i: 120
end-i: 132
i: 132
end-i: 132
i:132 HIT CHUNK END
(comment . ";; literal r15")
chunklet-i: 132; chunklet-start-i: 136; chunklet-end-i: 140
i: 132
end-i: 140
i: 136
end-i: 140
i: 140
end-i: 140
i:140 HIT CHUNK END
(comment . ";; instruction 132 not included")
(comment . ";;136 b -112")
chunklet-i: 140; chunklet-start-i: 140; chunklet-end-i: 156
i: 140
end-i: 156
i: 140
end-i: 156
i: 152
end-i: 156
i: 156
end-i: 156
i:156 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;152: b r6")
chunklet-i: 156; chunklet-start-i: 156; chunklet-end-i: 172
i: 156
end-i: 172
i: 156
end-i: 172
i: 168
end-i: 172
i: 172
end-i: 172
i:172 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;168: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 16
instruction range for chunk: 16 32
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r4 <- 0x1")
(comment . ";;4 b 8")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 16
i: 8
end-i: 16
i: 12
end-i: 16
i: 16
end-i: 16
i:16 HIT CHUNK END
(comment . ";;8: r4 <- 0x9")
(comment . ";;12: b r1, 0")
chunklet-i: 16; chunklet-start-i: 16; chunklet-end-i: 32
i: 16
end-i: 32
i: 16
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r6")
(comment . ";;28: b r6")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 44
instruction range for chunk: 44 80
instruction range for chunk: 80 92
instruction range for chunk: 96 104
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 44
i: 0
end-i: 44
i: 12
end-i: 44
i: 16
end-i: 44
i: 28
end-i: 44
i: 32
end-i: 44
i: 36
end-i: 44
i: 40
end-i: 44
i: 44
end-i: 44
i:44 HIT CHUNK END
(comment . ";; literal r15")
(comment . ";;12: r14 <- r15, r5")
(comment . ";; literal r13")
(comment . ";;28: r13 <- r14, 0x0\n")
(comment . ";;32: r7 <- r0, 0x68\n")
(comment . ";;36: r2 <- r7")
(comment . ";;40 b 36")
chunklet-i: 44; chunklet-start-i: 44; chunklet-end-i: 80
i: 44
end-i: 80
i: 44
end-i: 80
i: 48
end-i: 80
i: 52
end-i: 80
i: 56
end-i: 80
i: 68
end-i: 80
i: 72
end-i: 80
i: 76
end-i: 80
i: 80
end-i: 80
i:80 HIT CHUNK END
(comment . ";;44: r7 <- r7, r8")
(comment . ";;48: r7 <- r0, 0x68\n")
(comment . ";;52: r14 <- r7, 0x0\n")
(comment . ";; literal r14")
(comment . ";;68: r14 <- r15, 0xD\n")
(comment . ";;72: r4 <- 0x2E")
(comment . ";;76: b r1, 0")
chunklet-i: 80; chunklet-start-i: 80; chunklet-end-i: 92
i: 80
end-i: 92
i: 80
end-i: 92
i: 92
end-i: 92
i:92 HIT CHUNK END
(comment . ";; literal r13")
chunklet-i: 92; chunklet-start-i: 96; chunklet-end-i: 104
i: 92
end-i: 104
i: 96
end-i: 104
i: 100
end-i: 104
i: 104
end-i: 104
i:104 HIT CHUNK END
(comment . ";; instruction 92 not included")
(comment . ";;96: r7 <- r0, 0x68\n")
(comment . ";;100 b -60")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 68
instruction range for chunk: 68 96
instruction range for chunk: 112 120
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 60")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 68
i: 8
end-i: 68
i: 8
end-i: 68
i: 20
end-i: 68
i: 32
end-i: 68
i: 44
end-i: 68
i: 56
end-i: 68
i: 60
end-i: 68
i: 64
end-i: 68
i: 68
end-i: 68
i:68 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";; literal r10")
(comment . ";; literal r11")
(comment . ";; literal r5")
(comment . ";;56: r8 <- r5, 0x5\n")
(comment . ";;60: r4 <- 0x3")
(comment . ";;64: b r5, 13")
chunklet-i: 68; chunklet-start-i: 68; chunklet-end-i: 96
i: 68
end-i: 96
i: 68
end-i: 96
i: 72
end-i: 96
i: 76
end-i: 96
i: 80
end-i: 96
i: 92
end-i: 96
i: 96
end-i: 96
at header: 96
(comment . ";;68: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;76: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;92: b r6")
chunklet-i: 96; chunklet-start-i: 112; chunklet-end-i: 120
i: 96
end-i: 120
at header: 96
i: 112
end-i: 120
i: 116
end-i: 120
i: 120
end-i: 120
i:120 HIT CHUNK END
(comment . ";;112: r1 <- r1, r8")
(comment . ";;116 b -112")
name: ???
instruction range for chunk: 0 8
instruction range for chunk: 8 32
instruction range for chunk: 32 36
instruction range for chunk: 36 60
instruction range for chunk: 60 88
instruction range for chunk: 104 116
instruction range for chunk: 116 144
instruction range for chunk: 160 168
chunklet-i: 0; chunklet-start-i: 0; chunklet-end-i: 8
i: 0
end-i: 8
i: 4
end-i: 8
i: 8
end-i: 8
i:8 HIT CHUNK END
(comment . ";;0: r3 <- r3, 0x1\n")
(comment . ";;4 b 108")
chunklet-i: 8; chunklet-start-i: 8; chunklet-end-i: 32
i: 8
end-i: 32
i: 8
end-i: 32
i: 20
end-i: 32
i: 24
end-i: 32
i: 28
end-i: 32
i: 32
end-i: 32
i:32 HIT CHUNK END
(comment . ";; literal r9")
(comment . ";;20: r15 <- r9, 0x5\n")
(comment . ";;24: r15 <- 0x1E")
(comment . ";;28 b 28")
chunklet-i: 32; chunklet-start-i: 32; chunklet-end-i: 36
i: 32
end-i: 36
i: 36
end-i: 36
i:36 HIT CHUNK END
(comment . ";;32: r9 <- 0xF")
chunklet-i: 36; chunklet-start-i: 36; chunklet-end-i: 60
i: 36
end-i: 60
i: 36
end-i: 60
i: 48
end-i: 60
i: 52
end-i: 60
i: 56
end-i: 60
i: 60
end-i: 60
i:60 HIT CHUNK END
(comment . ";; literal r5")
(comment . ";;48: r8 <- r5, 0x5\n")
(comment . ";;52: r4 <- 0x1")
(comment . ";;56: b r5, 13")
chunklet-i: 60; chunklet-start-i: 60; chunklet-end-i: 88
i: 60
end-i: 88
i: 60
end-i: 88
i: 64
end-i: 88
i: 68
end-i: 88
i: 72
end-i: 88
i: 84
end-i: 88
i: 88
end-i: 88
at header: 88
(comment . ";;60: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;68: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;84: b r6")
chunklet-i: 88; chunklet-start-i: 104; chunklet-end-i: 116
i: 88
end-i: 116
at header: 88
i: 104
end-i: 116
i: 108
end-i: 116
i: 112
end-i: 116
i: 116
end-i: 116
i:116 HIT CHUNK END
(comment . ";;104: r1 <- r1, r8")
(comment . ";;108: r9 <- 0x4")
(comment . ";;112 b -80")
chunklet-i: 116; chunklet-start-i: 116; chunklet-end-i: 144
i: 116
end-i: 144
i: 116
end-i: 144
i: 120
end-i: 144
i: 124
end-i: 144
i: 128
end-i: 144
i: 140
end-i: 144
i: 144
end-i: 144
at header: 144
(comment . ";;116: r1 <- r1, r8")
(comment . ";; adr r15")
(comment . ";;124: r15 <- r1, 0x0\n")
(comment . ";; literal r6")
(comment . ";;140: b r6")
chunklet-i: 144; chunklet-start-i: 160; chunklet-end-i: 168
i: 144
end-i: 168
at header: 144
i: 160
end-i: 168
i: 164
end-i: 168
i: 168
end-i: 168
i:168 HIT CHUNK END
(comment . ";;160: r1 <- r1, r8")
(comment . ";;164 b -160")
config file 2: boot/pb64l/Mf-config
(pbchunk-out/pbchunk_browse0.wat)
config-file: boot/pb64l/Mf-config
(c/statics.c c/segment.c c/alloc.c c/symbol.c c/intern.c c/gcwrapper.c c/gc-011.c c/gc-par.c c/gc-ocd.c c/gc-oce.c c/number.c c/schsig.c c/io.c c/new-io.c c/print.c c/fasl.c c/vfasl.c c/stats.c c/foreign.c c/prim.c c/prim5.c c/flushcache.c c/schlib.c c/thread.c c/expeditor.c c/scheme.c c/compress-io.c c/random.c c/ffi.c c/pb.c)
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/statics.o -c c/statics.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/segment.o -c c/segment.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/alloc.o -c c/alloc.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/symbol.o -c c/symbol.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/intern.o -c c/intern.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gcwrapper.o -c c/gcwrapper.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-011.o -c c/gc-011.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-par.o -c c/gc-par.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-ocd.o -c c/gc-ocd.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/gc-oce.o -c c/gc-oce.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/number.o -c c/number.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schsig.o -c c/schsig.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/io.o -c c/io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/new-io.o -c c/new-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/print.o -c c/print.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/fasl.o -c c/fasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/vfasl.o -c c/vfasl.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/stats.o -c c/stats.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/foreign.o -c c/foreign.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim.o -c c/prim.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/prim5.o -c c/prim5.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/flushcache.o -c c/flushcache.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/schlib.o -c c/schlib.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/thread.o -c c/thread.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/expeditor.o -c c/expeditor.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/scheme.o -c c/scheme.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/compress-io.o -c c/compress-io.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/random.o -c c/random.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/ffi.o -c c/ffi.c
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/c/pb.o -c c/pb.c
wat2wasm -r -o em-pb64l/c/pbchunk_browse0.wasm pbchunk-out/pbchunk_browse0.wat
emar rc em-pb64l/boot/pb64l/libkernel.a em-pb64l/c/statics.o em-pb64l/c/segment.o em-pb64l/c/alloc.o em-pb64l/c/symbol.o em-pb64l/c/intern.o em-pb64l/c/gcwrapper.o em-pb64l/c/gc-011.o em-pb64l/c/gc-par.o em-pb64l/c/gc-ocd.o em-pb64l/c/gc-oce.o em-pb64l/c/number.o em-pb64l/c/schsig.o em-pb64l/c/io.o em-pb64l/c/new-io.o em-pb64l/c/print.o em-pb64l/c/fasl.o em-pb64l/c/vfasl.o em-pb64l/c/stats.o em-pb64l/c/foreign.o em-pb64l/c/prim.o em-pb64l/c/prim5.o em-pb64l/c/flushcache.o em-pb64l/c/schlib.o em-pb64l/c/thread.o em-pb64l/c/expeditor.o em-pb64l/c/scheme.o em-pb64l/c/compress-io.o em-pb64l/c/random.o em-pb64l/c/ffi.o em-pb64l/c/pb.o em-pb64l/c/pbchunk_browse0.wasm
emcc -DPORTABLE_BYTECODE -Iem-pb64l/boot/pb64l -Iem-pb64l/c/ -Ic/ -Iem-pb64l/lz4/lib -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -Wpointer-arith -Wall -Wextra -Wno-implicit-fallthrough -o em-pb64l/boot/pb64l/main.o -c c/main.c
emcc -O0 -g -DWASM_PBCHUNK -DCALL_WASM_PBCHUNK_REGISTER -s USE_ZLIB=1 -o em-pb64l/bin/pb64l/scheme.html em-pb64l/boot/pb64l/main.o em-pb64l/boot/pb64l/libkernel.a em-pb64l/lz4/lib/liblz4.a --preload-file em-pb64l/boot/pb64l/petite.boot'@'petite.boot --preload-file em-pb64l/boot/pb64l/scheme.boot'@'scheme.boot --preload-file pbchunk-out/browse.boot'@'browse.boot -s EXIT_RUNTIME=1 -s ALLOW_MEMORY_GROWTH=1 -s USE_ZLIB=1
: em-pb64l/bin/pb64l/scheme.html
em-pb64l/bin/pb64l/petite.html is up to date
Running...
trying ./browse.boot...opened
version and machine type check
trying ./petite.boot...opened
version and machine type check
Petite Chez Scheme Version 9.9.9-pre-release.16
Copyright 1984-2022 Cisco Systems, Inc.

Running browse:1000

real	0m28.324s
user	0m28.435s
sys	0m0.348s
